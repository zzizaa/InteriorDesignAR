#include "pch-cpp.hpp"

#ifndef _MSC_VER
# include <alloca.h>
#else
# include <malloc.h>
#endif


#include <limits>


struct VirtualActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1>
struct VirtualActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1, typename T2>
struct VirtualActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct VirtualActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename R>
struct VirtualFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename R, typename T1>
struct VirtualFuncInvoker1
{
	typedef R (*Func)(void*, T1, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1>
struct InterfaceActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R>
struct InterfaceFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};

// System.Action`1<System.Boolean>
struct Action_1_t10DCB0C07D0D3C565CEACADC80D1152B35A45F6C;
// System.Action`1<OVRCameraRig>
struct Action_1_t88CC03E8C305DA991BBBCEBE79519B58D52F577F;
// System.Action`1<UnityEngine.Transform>
struct Action_1_t10D7C827ADC73ED438E0CA8F04465BA6F2BAED7D;
// System.Action`1<System.UInt64>
struct Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C;
// System.Action`1<UnityEngine.XR.XRInputSubsystem>
struct Action_1_tC867D66471C553CFFF8707FF2C59FB7AAB03086A;
// System.Action`2<System.Single,System.Single>
struct Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132;
// System.Action`2<System.UInt64,System.Boolean>
struct Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71;
// System.Action`2<System.UInt64,System.Int32Enum>
struct Action_2_tA06B2B457987AFF44FCC9825F4E5B8AB831D9C5D;
// System.Action`2<System.UInt64,OVRSpatialAnchor/OperationResult>
struct Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9;
// System.Action`4<System.UInt64,System.Boolean,System.Guid,System.Int32Enum>
struct Action_4_tDB193A5F94ADF5AFFE07E8A99813727D58BD9CBF;
// System.Action`4<System.UInt64,System.Boolean,System.Guid,OVRPlugin/SpaceStorageLocation>
struct Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC;
// System.Action`4<System.UInt64,System.Boolean,OVRSpace,System.Guid>
struct Action_4_t540B344FD589096100128D9A1B39946413ED9AAE;
// System.Action`4<System.UInt64,OVRSpace,System.Boolean,System.Guid>
struct Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A;
// System.Action`6<System.UInt64,System.Boolean,OVRSpace,System.Guid,System.Int32Enum,System.Boolean>
struct Action_6_t275E8A8CA2AB323A9CF973B1A1BDD4C0D44F4F11;
// System.Action`6<System.UInt64,System.Boolean,OVRSpace,System.Guid,OVRPlugin/SpaceComponentType,System.Boolean>
struct Action_6_tD8B17612932122F2ABF5C8545327C8F527403625;
// System.Comparison`1<UnityEngine.Camera>
struct Comparison_1_t49BE56523BDD8BC22EF3396960546FE16DE7B11A;
// System.Comparison`1<System.Object>
struct Comparison_1_t62E531E7B8260E2C6C2718C3BDB8CF8655139645;
// System.Collections.Generic.Dictionary`2<OVRGLTFInputNode,OVRGLTFAnimatinonNode>
struct Dictionary_2_t0881BD89A39D2B1E5AEF17AF2312993FA3EF23FE;
// System.Collections.Generic.Dictionary`2<System.String,OVRGLTFInputNode>
struct Dictionary_2_t982EF0B82EE26457A315A6EA587C4B3222105F1A;
// System.Func`2<System.Single,System.Object>
struct Func_2_tAD879F71BAB11408CC38B8BF81F979D9205C1CC4;
// System.Func`2<System.Single,System.String>
struct Func_2_t5ACB813DEA6873041E3CE5A28AE88A73E01E6EF8;
// System.Collections.Generic.HashSet`1<System.Int32Enum>
struct HashSet_1_t2EC13BE6E93BB0C99D5CF97A25799B40FD6CBAF4;
// System.Collections.Generic.HashSet`1<OVRPermissionsRequester/Permission>
struct HashSet_1_t8CCE4B1A7C21C55C1F50A4850C846D17B4943076;
// System.Collections.Generic.IEnumerable`1<UnityEngine.Camera>
struct IEnumerable_1_tED602875C5D5C7BECAD2C641945DF5416536FA7B;
// System.Collections.Generic.IEnumerable`1<System.Object>
struct IEnumerable_1_tF95C9E01A913DD50575531C8305932628663D9E9;
// System.Collections.Generic.IEnumerable`1<System.Single>
struct IEnumerable_1_t352FDDEA001ABE8E1D67849D2E2F3D1D75B03D41;
// System.Collections.Generic.IEnumerable`1<System.String>
struct IEnumerable_1_t349E66EC5F09B881A8E52EE40A1AB9EC60E08E44;
// System.Collections.Generic.IEnumerable`1<OVRPermissionsRequester/Permission>
struct IEnumerable_1_t84363D3E69811EF84D8A310397ACF018A3D40005;
// System.Collections.Generic.IEqualityComparer`1<OVRPermissionsRequester/Permission>
struct IEqualityComparer_1_tEBB118B4E24D38A7D7837E769988CA7B948596F2;
// System.Collections.Generic.List`1<UnityEngine.Camera>
struct List_1_tD2FA3273746E404D72561E8324608D18B52B533E;
// System.Collections.Generic.List`1<UnityEngine.GameObject>
struct List_1_tB951CE80B58D1BF9650862451D8DAD8C231F207B;
// System.Collections.Generic.List`1<System.Object>
struct List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D;
// System.Collections.Generic.List`1<System.UInt64>
struct List_1_tB88E7361EE76DFB3EBB7FCD60CC59ACC3E48C284;
// System.Collections.Generic.List`1<UnityEngine.Vector3>
struct List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B;
// System.Collections.Generic.List`1<UnityEngine.XR.XRDisplaySubsystem>
struct List_1_tA7666C6690CE2AEE97571615AD3AFCE2BB020597;
// System.Collections.Generic.List`1<UnityEngine.XR.XRDisplaySubsystemDescriptor>
struct List_1_tC3F021D09EFA4F3516555517B5E0D39308C9C1B4;
// System.Collections.Generic.List`1<UnityEngine.XR.XRInputSubsystem>
struct List_1_t90832B88D7207769654164CC28440CF594CC397D;
// System.Collections.Generic.List`1<OVRInput/OVRControllerBase>
struct List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577;
// System.Collections.Generic.List`1<OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker>
struct List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6;
// System.WeakReference`1<UnityEngine.Camera>
struct WeakReference_1_t08942AAA5C58B24D75314BD9594E2DE409CB9C93;
// System.WeakReference`1<System.Object>
struct WeakReference_1_tED795563AD26F795CED3BBCD488AB1694E385BCE;
// System.Collections.Generic.HashSet`1/Slot<OVRPermissionsRequester/Permission>[]
struct SlotU5BU5D_t2B0A43178890FA5D909D3C8CA2AC1DE5EFDDC976;
// System.Byte[]
struct ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031;
// UnityEngine.Camera[]
struct CameraU5BU5D_t1506EBA524A07AD1066D6DD4D7DFC6721F1AC26B;
// System.Char[]
struct CharU5BU5D_t799905CF001DD5F13F7DBB310181FC4D8B7D0AAB;
// System.Delegate[]
struct DelegateU5BU5D_tC5AB7E8F745616680F337909D3A8E6C722CDF771;
// UnityEngine.GameObject[]
struct GameObjectU5BU5D_tFF67550DFCE87096D7A3734EA15B75896B2722CF;
// System.Int32[]
struct Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C;
// System.IntPtr[]
struct IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832;
// UnityEngine.KeyCode[]
struct KeyCodeU5BU5D_tE5EF2F42327664A9138C613B265BEE8524672B85;
// System.Object[]
struct ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918;
// System.Single[]
struct SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C;
// System.Diagnostics.StackTrace[]
struct StackTraceU5BU5D_t32FBCB20930EAF5BAE3F450FF75228E5450DA0DF;
// System.String[]
struct StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248;
// System.Type[]
struct TypeU5BU5D_t97234E1129B564EB38B8D85CAC2AD8B5B9522FFB;
// System.UInt32[]
struct UInt32U5BU5D_t02FBD658AD156A17574ECE6106CF1FBFCC9807FA;
// UnityEngine.XR.XRDisplaySubsystem[]
struct XRDisplaySubsystemU5BU5D_t741124D80DCCCF62F2AF47431354B7387672F264;
// UnityEngine.XR.XRDisplaySubsystemDescriptor[]
struct XRDisplaySubsystemDescriptorU5BU5D_t80B6AEA854B63F06CAE27E51662BBC06D752BFF0;
// UnityEngine.XR.XRInputSubsystem[]
struct XRInputSubsystemU5BU5D_t224A541B4C0D2E3253E4D68ADF4F824AC587B11C;
// OVRDisplay/EyeRenderDesc[]
struct EyeRenderDescU5BU5D_tB048865C1A81E8F904CC0EE2F949AC71D6CF728F;
// OVRHaptics/OVRHapticsChannel[]
struct OVRHapticsChannelU5BU5D_t5CFD3CC0AE2D7AF472EADAE43D25D00EA71AF3C8;
// OVRHaptics/OVRHapticsOutput[]
struct OVRHapticsOutputU5BU5D_tF2F7D8627C25B56A905E3C8574260767FB659BA7;
// OVRInput/HapticInfo[]
struct HapticInfoU5BU5D_tD7F089695199232CD57B8C3C73F549036B5BC2CB;
// OVRInput/OVRControllerBase[]
struct OVRControllerBaseU5BU5D_t01C1CD9B17ED250028217971566A01F5DE00CF39;
// OVRInput/OpenVRControllerDetails[]
struct OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4;
// OVRPlugin/Bone[]
struct BoneU5BU5D_t71824F0E389C7A0C2B4986FF8CFB94C76081B784;
// OVRPlugin/BoneCapsule[]
struct BoneCapsuleU5BU5D_t672686845F44330C5D4B27EE19A8557BFE657B44;
// OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker[]
struct ClipPlaybackTrackerU5BU5D_t581D1A52408639F1B70182122A456B2D5A6C8D4F;
// System.Action
struct Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07;
// System.AsyncCallback
struct AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C;
// UnityEngine.AudioClip
struct AudioClip_t5D272C4EB4F2D3ED49F1C346DEA373CF6D585F20;
// UnityEngine.Behaviour
struct Behaviour_t01970CFBBA658497AE30F311C447DB0440BAB7FA;
// System.Reflection.Binder
struct Binder_t91BFCE95A7057FADF4D8A1A342AFE52872246235;
// OVR.OpenVR.CVRSystem
struct CVRSystem_tD199D16B8A7CC7F19E6E0B5D9AE59156C2312B1A;
// UnityEngine.Camera
struct Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184;
// UnityEngine.Component
struct Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3;
// System.Delegate
struct Delegate_t;
// System.DelegateData
struct DelegateData_t9B286B493293CD2D23A5B2B5EF0E5B1324C2B77E;
// System.Enum
struct Enum_t2A1A94B24E3B776EEF4E5E485E290BB9D4D072E2;
// UnityEngine.GameObject
struct GameObject_t76FEDD663AB33C991A9C9A23129337651094216F;
// System.IAsyncResult
struct IAsyncResult_t7B9B5A0ECB35DCEC31B8A8122C37D687369253B5;
// System.Collections.IDictionary
struct IDictionary_t6D03155AF1FA9083817AA5B6AD7DEEACC26AB220;
// UnityEngine.ISubsystemDescriptor
struct ISubsystemDescriptor_tEF29944D579CC7D70F52CB883150735991D54E6E;
// UnityEngine.IntegratedSubsystem
struct IntegratedSubsystem_t990160A89854D87C0836DC589B720231C02D4CE3;
// UnityEngine.IntegratedSubsystemDescriptor
struct IntegratedSubsystemDescriptor_t9232963B842E01748A8E032928DC8E35DF00C10D;
// OVRSimpleJSON.JSONNode
struct JSONNode_t09FA149506F31AC2019A0E463804342305FA71A6;
// System.Reflection.MemberFilter
struct MemberFilter_tF644F1AE82F611B677CE1964D5A3277DDA21D553;
// System.Reflection.MethodInfo
struct MethodInfo_t;
// UnityEngine.MonoBehaviour
struct MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71;
// OVRBoundary
struct OVRBoundary_t56DFE91F758A740A34575D748FEC61959A106DAE;
// OVRCameraRig
struct OVRCameraRig_t7FC2BB0D30DED2B7F0C8914AF2B66E9F4CF891A9;
// OVRDisplay
struct OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27;
// OVRGLTFLoader
struct OVRGLTFLoader_t2E5E39D416422D0459916F5D1FA9C83CA2C92CD1;
// OVRHapticsClip
struct OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C;
// OVRHeadsetEmulator
struct OVRHeadsetEmulator_t962B146D3C4075E460069BC2ED5B5943DA1B8553;
// OVRKtxTexture
struct OVRKtxTexture_tCBA95D23D3966F783B772DEFC7D54FFE84B744C1;
// OVRLayerAttribute
struct OVRLayerAttribute_tD0FCB636847094CE881C27A03DACFD8B21D32ABB;
// OVRManager
struct OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4;
// OVRMixedRealityCaptureConfiguration
struct OVRMixedRealityCaptureConfiguration_t5B5BC56D5A188D91FCB815055D9E9D2393E90926;
// OVRMixedRealityCaptureSettings
struct OVRMixedRealityCaptureSettings_tF6078D6B59F16A0EE3DEE4144FCED347444B9198;
// OVRNativeBuffer
struct OVRNativeBuffer_tEBEDDBFD193B5EE2FE1E0C1B22AA823FB3703915;
// OVRProfile
struct OVRProfile_tCFDDDA5EE82F0ED94671EB741B8954603D98AFC0;
// OVRRuntimeSettings
struct OVRRuntimeSettings_tC85E84DCFBF4DB2D4C3311CA39C96DEE89220EE1;
// OVRTracker
struct OVRTracker_t5E60EE08D82308F2F8206AD43AE8CC4925938154;
// UnityEngine.Object
struct Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C;
// UnityEngine.PropertyAttribute
struct PropertyAttribute_t5E0CB5A6CDA6E24CBD4FF26DE3B0C29D8BB54BF0;
// System.Runtime.Serialization.SafeSerializationManager
struct SafeSerializationManager_tCBB85B95DFD1634237140CD892E82D06ECB3F5E6;
// System.Runtime.Serialization.SerializationInfo
struct SerializationInfo_t3C47F63E24BEB9FCE2DC6309E027F238DC5C5E37;
// UnityEngine.Shader
struct Shader_tADC867D36B7876EE22427FAA2CE485105F4EE692;
// System.IO.Stream
struct Stream_tF844051B786E8F7F4244DBD218D74E8617B9A2DE;
// System.String
struct String_t;
// System.Text.StringBuilder
struct StringBuilder_t;
// UnityEngine.Transform
struct Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1;
// System.Type
struct Type_t;
// System.Version
struct Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7;
// System.Void
struct Void_t4861ACF8F4594C3437BB48B6E56783494B843915;
// UnityEngine.XR.XRDisplaySubsystem
struct XRDisplaySubsystem_t4B00B0BF1894A039ACFA8DDC2C2EB9301118C1F1;
// UnityEngine.XR.XRDisplaySubsystemDescriptor
struct XRDisplaySubsystemDescriptor_t72DD88EE9094488AE723A495F48884BA4EA8311A;
// UnityEngine.XR.XRInputSubsystem
struct XRInputSubsystem_tFECE6683FCAEBF05BAD05E5D612690095D8BAD34;
// UnityEngine.AudioClip/PCMReaderCallback
struct PCMReaderCallback_t3396D9613664F0AFF65FB91018FD0F901CC16F1E;
// UnityEngine.AudioClip/PCMSetPositionCallback
struct PCMSetPositionCallback_t8D7135A2FB40647CAEC93F5254AD59E18DEB6072;
// UnityEngine.Camera/CameraCallback
struct CameraCallback_t844E527BFE37BC0495E7F67993E43C07642DA9DD;
// OVR.OpenVR.IVRSystem/_AcknowledgeQuit_Exiting
struct _AcknowledgeQuit_Exiting_tEF47D178982F69800F0863A0556AA537BE44047D;
// OVR.OpenVR.IVRSystem/_AcknowledgeQuit_UserPrompt
struct _AcknowledgeQuit_UserPrompt_t39607F7E8E1F30F7A3286CC18C60010E7568AF37;
// OVR.OpenVR.IVRSystem/_ApplyTransform
struct _ApplyTransform_t1D87B7AC1195BDAAA4CB3A0BC58BADBA6E134082;
// OVR.OpenVR.IVRSystem/_ComputeDistortion
struct _ComputeDistortion_tD147426B3B0270DAA7EB1C32043EBEF527870407;
// OVR.OpenVR.IVRSystem/_DriverDebugRequest
struct _DriverDebugRequest_t3418F0E739483EDFBDB2AB22D7AF53CFA2EAE313;
// OVR.OpenVR.IVRSystem/_GetArrayTrackedDeviceProperty
struct _GetArrayTrackedDeviceProperty_t36E75990577ED75C9F44C743E8E27396AF36240C;
// OVR.OpenVR.IVRSystem/_GetBoolTrackedDeviceProperty
struct _GetBoolTrackedDeviceProperty_t8F0763D4AAD303DA0DD843E9A8336C7B3E098A63;
// OVR.OpenVR.IVRSystem/_GetButtonIdNameFromEnum
struct _GetButtonIdNameFromEnum_t723788274FE11A4D7D6CD49D95D14266B392E65F;
// OVR.OpenVR.IVRSystem/_GetControllerAxisTypeNameFromEnum
struct _GetControllerAxisTypeNameFromEnum_t7FD5B5167CB91A7866C19AA6D30A175467EC2CAF;
// OVR.OpenVR.IVRSystem/_GetControllerRoleForTrackedDeviceIndex
struct _GetControllerRoleForTrackedDeviceIndex_t04E0EBF506A4CA91A1F9F1E4528AD1BC9738C5EC;
// OVR.OpenVR.IVRSystem/_GetControllerState
struct _GetControllerState_tA53B014959406294ECAB190EBC86F3A1EFF49E00;
// OVR.OpenVR.IVRSystem/_GetControllerStateWithPose
struct _GetControllerStateWithPose_t64510A0EF68D6CB2CAFDC50BA60A66729637DB56;
// OVR.OpenVR.IVRSystem/_GetD3D9AdapterIndex
struct _GetD3D9AdapterIndex_t6EEF3293C1B40E937D92113B8A3F96DED8415791;
// OVR.OpenVR.IVRSystem/_GetDXGIOutputInfo
struct _GetDXGIOutputInfo_t73FA51E5AB534DC0A3A6FDFD0C2D67177090E66C;
// OVR.OpenVR.IVRSystem/_GetDeviceToAbsoluteTrackingPose
struct _GetDeviceToAbsoluteTrackingPose_tBB4998801BAFE6FFD6003002E6948AABD08D081C;
// OVR.OpenVR.IVRSystem/_GetEventTypeNameFromEnum
struct _GetEventTypeNameFromEnum_tBCFA4CF8CD31A63BCE5C028F86023D5B3F56C4C5;
// OVR.OpenVR.IVRSystem/_GetEyeToHeadTransform
struct _GetEyeToHeadTransform_t85F575C6B4387A61016410FF9B7F670D25973926;
// OVR.OpenVR.IVRSystem/_GetFloatTrackedDeviceProperty
struct _GetFloatTrackedDeviceProperty_t819CE8B33EBD3DB70A2F691EC0EA87F3B9E9F117;
// OVR.OpenVR.IVRSystem/_GetHiddenAreaMesh
struct _GetHiddenAreaMesh_t426F5CEB93D8D3593835185EA732C11AB30E2A43;
// OVR.OpenVR.IVRSystem/_GetInt32TrackedDeviceProperty
struct _GetInt32TrackedDeviceProperty_t90F760BFCB8EFA6DE76F7DC6B6ADDB9E7A82AB86;
// OVR.OpenVR.IVRSystem/_GetMatrix34TrackedDeviceProperty
struct _GetMatrix34TrackedDeviceProperty_t2CF43EAD342BBD7FDE42D16D697091316658494B;
// OVR.OpenVR.IVRSystem/_GetOutputDevice
struct _GetOutputDevice_t83D6AE0AB6B1F21E5D87ECBB559E60D183610222;
// OVR.OpenVR.IVRSystem/_GetProjectionMatrix
struct _GetProjectionMatrix_t9B0D0C3225387862FA516D50DB79579834EF0DD0;
// OVR.OpenVR.IVRSystem/_GetProjectionRaw
struct _GetProjectionRaw_t6867187AE3A0151807D995F184BC67408FFA7496;
// OVR.OpenVR.IVRSystem/_GetPropErrorNameFromEnum
struct _GetPropErrorNameFromEnum_t89F1CBA1871CB900043DA4EA17B5C59A44A19EF5;
// OVR.OpenVR.IVRSystem/_GetRawZeroPoseToStandingAbsoluteTrackingPose
struct _GetRawZeroPoseToStandingAbsoluteTrackingPose_t4CA0DDBB2D4969509146BAE587278F7C5DD922B2;
// OVR.OpenVR.IVRSystem/_GetRecommendedRenderTargetSize
struct _GetRecommendedRenderTargetSize_tE5DCCAA3C127070265E730E834989CD71122B1EF;
// OVR.OpenVR.IVRSystem/_GetSeatedZeroPoseToStandingAbsoluteTrackingPose
struct _GetSeatedZeroPoseToStandingAbsoluteTrackingPose_tBCAF710571F3E9B304E65DB1A7EC953392A29CF8;
// OVR.OpenVR.IVRSystem/_GetSortedTrackedDeviceIndicesOfClass
struct _GetSortedTrackedDeviceIndicesOfClass_t883B6DB2CE87516A965060EE45B5451AA01541E5;
// OVR.OpenVR.IVRSystem/_GetStringTrackedDeviceProperty
struct _GetStringTrackedDeviceProperty_t76FD9D8448083C12ED3BE15AE73D5C38E4ADECC5;
// OVR.OpenVR.IVRSystem/_GetTimeSinceLastVsync
struct _GetTimeSinceLastVsync_tCC442F5CDBF0A619CD0CD84A061FEA9DB1774D33;
// OVR.OpenVR.IVRSystem/_GetTrackedDeviceActivityLevel
struct _GetTrackedDeviceActivityLevel_t18F25E592E9F23E1B42CE3FC8BBCDA9991877F73;
// OVR.OpenVR.IVRSystem/_GetTrackedDeviceClass
struct _GetTrackedDeviceClass_t7347331DDB1CBA2ED64A115A3F67805DACFB92F9;
// OVR.OpenVR.IVRSystem/_GetTrackedDeviceIndexForControllerRole
struct _GetTrackedDeviceIndexForControllerRole_tDC374474D4B923D02CF3907E7C7F19B0E01CE418;
// OVR.OpenVR.IVRSystem/_GetUint64TrackedDeviceProperty
struct _GetUint64TrackedDeviceProperty_tF9AAE5FDB16FE39CDF74EA82D87D05C9A58D6A8A;
// OVR.OpenVR.IVRSystem/_IsDisplayOnDesktop
struct _IsDisplayOnDesktop_tB1D86880DF7E8EEFEA7D0DA7B46695B38688FDF3;
// OVR.OpenVR.IVRSystem/_IsInputAvailable
struct _IsInputAvailable_t432F7CFC272FE7E8A2D8C57AC0F6A9AD55BF759B;
// OVR.OpenVR.IVRSystem/_IsSteamVRDrawingControllers
struct _IsSteamVRDrawingControllers_t2BBCA30078A8E13FA361F46562662C6B4DEB0223;
// OVR.OpenVR.IVRSystem/_IsTrackedDeviceConnected
struct _IsTrackedDeviceConnected_t9AA842DF79300B59CA9D06D4BB080D34F2A8BE55;
// OVR.OpenVR.IVRSystem/_PerformFirmwareUpdate
struct _PerformFirmwareUpdate_t26607D5B0AFAB7AFE81A453EC1749DC43FAB3E98;
// OVR.OpenVR.IVRSystem/_PollNextEvent
struct _PollNextEvent_t7661E5AF679D8C0B4F9959F46724FAB9AD4658DD;
// OVR.OpenVR.IVRSystem/_PollNextEventWithPose
struct _PollNextEventWithPose_tAC36873017089F9D283AFA6D22503AFD8ACFA96F;
// OVR.OpenVR.IVRSystem/_ResetSeatedZeroPose
struct _ResetSeatedZeroPose_t5DA7EB83B5BC1CC765227E8BA0B5AAA63D14F009;
// OVR.OpenVR.IVRSystem/_SetDisplayVisibility
struct _SetDisplayVisibility_tF1714A7C8CF32C530DF3BFEBA6F217AD02250F26;
// OVR.OpenVR.IVRSystem/_ShouldApplicationPause
struct _ShouldApplicationPause_t363B2CBD8131B77FADAF11D24071E94B3A15FA37;
// OVR.OpenVR.IVRSystem/_ShouldApplicationReduceRenderingWork
struct _ShouldApplicationReduceRenderingWork_t49429140C48F7CFAFDD2EAFBEB0FE31BA6FBFA29;
// OVR.OpenVR.IVRSystem/_TriggerHapticPulse
struct _TriggerHapticPulse_tEDD2E25EA770F3D7341ECEA5409A692C8BCCE773;
// OVRGLTFLoader/<>c__DisplayClass27_0
struct U3CU3Ec__DisplayClass27_0_tE26F78A56AA4B7B70818EB50BF1D6AF8D0415010;
// OVRHaptics/OVRHapticsChannel
struct OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853;
// OVRHaptics/OVRHapticsOutput
struct OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE;
// OVRInput/HapticInfo
struct HapticInfo_t614DAC0509051DC76FD4D48A1D591505E22DE950;
// OVRInput/OVRControllerBase
struct OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83;
// OVRInput/OVRControllerGamepadAndroid
struct OVRControllerGamepadAndroid_t744FA8E4FD2A606498498663467C1271A46F1AB9;
// OVRInput/OVRControllerGamepadPC
struct OVRControllerGamepadPC_t8E0D3F7E7CE14C766A57CC4543E9A7CFFB5B4336;
// OVRInput/OVRControllerHands
struct OVRControllerHands_t12594A1327521ECA38B53C166676B845C1D621CA;
// OVRInput/OVRControllerLHand
struct OVRControllerLHand_t05FFDA0A0B722315B47BFEDFFF701B425563DDB8;
// OVRInput/OVRControllerLTouch
struct OVRControllerLTouch_tAB910B5D7369AA3104AD40C8AE5458C254D225C6;
// OVRInput/OVRControllerRHand
struct OVRControllerRHand_t9AF4805EAECF3275B7E861B1A3E4CF7555C989B4;
// OVRInput/OVRControllerRTouch
struct OVRControllerRTouch_t05E309647F46A925D9C970B8636ADD34E6533A01;
// OVRInput/OVRControllerRemote
struct OVRControllerRemote_tFAC79902D239980E05EB245E84764EB95FC42C08;
// OVRInput/OVRControllerTouch
struct OVRControllerTouch_t3242C19AECEE9D167D937CF1288465415D554A37;
// OVRManager/InstantiateMrcCameraDelegate
struct InstantiateMrcCameraDelegate_t26D39C3003CADD2CBA4E7C5EB75333089B2F03C8;
// OVRManager/PassthroughCapabilities
struct PassthroughCapabilities_t3B338539A7E4125FE79381628715BDC608471F9F;
// OVRNetwork/OVRNetworkTcpServer
struct OVRNetworkTcpServer_t8ED20F58D0A2F70B6A84AA3B06787D540A5964C0;
// OVRPlugin/GUID
struct GUID_t7B0B550D78EA6D8B265CC38E3D47A5E5DA539BB7;
// OVRSystemPerfMetrics/OVRSystemPerfMetricsTcpServer
struct OVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86;
// OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker
struct ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B;
// OVRInput/OVRControllerBase/VirtualAxis1DMap
struct VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD;
// OVRInput/OVRControllerBase/VirtualAxis2DMap
struct VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10;
// OVRInput/OVRControllerBase/VirtualButtonMap
struct VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6;
// OVRInput/OVRControllerBase/VirtualNearTouchMap
struct VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3;
// OVRInput/OVRControllerBase/VirtualTouchMap
struct VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169;

IL2CPP_EXTERN_C Il2CppSequencePoint g_sequencePointsOculus_VR[];
IL2CPP_EXTERN_C Il2CppSequencePoint g_sequencePointsUnityEngine_CoreModule[];
IL2CPP_EXTERN_C RuntimeClass* Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Action_4_t540B344FD589096100128D9A1B39946413ED9AAE_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Action_6_tD8B17612932122F2ABF5C8545327C8F527403625_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Comparison_1_t49BE56523BDD8BC22EF3396960546FE16DE7B11A_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ETrackedPropertyError_t17E4B05987C118B2E50C09947BD2B8E1695B2501_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Exception_t_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Func_2_t5ACB813DEA6873041E3CE5A28AE88A73E01E6EF8_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* HapticInfoU5BU5D_tD7F089695199232CD57B8C3C73F549036B5BC2CB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* HapticInfo_t614DAC0509051DC76FD4D48A1D591505E22DE950_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* HashSet_1_t8CCE4B1A7C21C55C1F50A4850C846D17B4943076_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* InputVideoBufferType_t21A3A9D97E3B2B70531C438F39748C68E4C7112F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* KeyCodeU5BU5D_tE5EF2F42327664A9138C613B265BEE8524672B85_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* List_1_t90832B88D7207769654164CC28440CF594CC397D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* List_1_tA7666C6690CE2AEE97571615AD3AFCE2BB020597_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* List_1_tC3F021D09EFA4F3516555517B5E0D39308C9C1B4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* List_1_tD2FA3273746E404D72561E8324608D18B52B533E_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Marshal_tD976A56A90263C3CE2B780D4B1CADADE2E70B4A7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Math_tEB65DE7CA8B083C412C969C92981C030865486CE_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* OVRBoundary_t56DFE91F758A740A34575D748FEC61959A106DAE_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* OVRControllerGamepadAndroid_t744FA8E4FD2A606498498663467C1271A46F1AB9_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* OVRControllerHands_t12594A1327521ECA38B53C166676B845C1D621CA_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* OVRControllerLHand_t05FFDA0A0B722315B47BFEDFFF701B425563DDB8_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* OVRControllerLTouch_tAB910B5D7369AA3104AD40C8AE5458C254D225C6_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* OVRControllerRHand_t9AF4805EAECF3275B7E861B1A3E4CF7555C989B4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* OVRControllerRTouch_t05E309647F46A925D9C970B8636ADD34E6533A01_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* OVRControllerTouch_t3242C19AECEE9D167D937CF1288465415D554A37_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* OVRHapticsChannelU5BU5D_t5CFD3CC0AE2D7AF472EADAE43D25D00EA71AF3C8_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* OVRHapticsOutputU5BU5D_tF2F7D8627C25B56A905E3C8574260767FB659BA7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* OVRMixedRealityCaptureConfiguration_t5B5BC56D5A188D91FCB815055D9E9D2393E90926_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* OVRMixedReality_t41B157DC32D6A1711F387302ED6B67916A0ADBAF_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* OVRNativeBuffer_tEBEDDBFD193B5EE2FE1E0C1B22AA823FB3703915_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* OVRNodeStateProperties_tE41A5F7393D4FB967D6062A0A2DBE4F3A24350BC_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* OVRProfile_tCFDDDA5EE82F0ED94671EB741B8954603D98AFC0_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* OVRTracker_t5E60EE08D82308F2F8206AD43AE8CC4925938154_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* PassthroughCapabilities_t3B338539A7E4125FE79381628715BDC608471F9F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Result_t65718B00CEF7A5D1E84402EA2DDCF5BF3D3E6797_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StringBuilder_t_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* String_t_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SubsystemManager_t9A7261E4D0B53B996F04B8707D8E1C33AB65E824_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SystemHeadsetType_t94DE1BD46794DAB8066568DC0C1A901262286C7D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Type_t_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* U3CU3Ec_t428B95F22B12C42F05233DE02507635B55BBBF98_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UInt32U5BU5D_t02FBD658AD156A17574ECE6106CF1FBFCC9807FA_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UInt64_t8F12534CC8FC4B5860F2A2CD1EE79D322E7A41AF_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* WeakReference_1_t08942AAA5C58B24D75314BD9594E2DE409CB9C93_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* XrApi_t93353E1C02725FC81E579B450694FDA6B04C2A34_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C String_t* _stringLiteral079DC68BE14B766AB4C8AFD677260C4674A20D17;
IL2CPP_EXTERN_C String_t* _stringLiteral09EA119D22C0C9448E5735ECDFECFC827AB7BC38;
IL2CPP_EXTERN_C String_t* _stringLiteral0DF60DA144F2DEC005C204360F407754E8977C74;
IL2CPP_EXTERN_C String_t* _stringLiteral132736885745103CD69579127F82ED683A3408CD;
IL2CPP_EXTERN_C String_t* _stringLiteral15627DE07324E44D9B2C6CB10DB8743C8D90E486;
IL2CPP_EXTERN_C String_t* _stringLiteral15DF2734ECF23DFF69DE8832DEC083E2B599CFD2;
IL2CPP_EXTERN_C String_t* _stringLiteral18C7C7FB21DC692A41C00EE08CF64D467B91D63B;
IL2CPP_EXTERN_C String_t* _stringLiteral1B93063888CB397E248C563775874CC5BFE82F70;
IL2CPP_EXTERN_C String_t* _stringLiteral1C74E9B5FE8F0722B82BEB4223EB6429598E8CFC;
IL2CPP_EXTERN_C String_t* _stringLiteral22E64C5C2E5C9469358FAC77CC2150EA7E71C3D0;
IL2CPP_EXTERN_C String_t* _stringLiteral2499E045B1B3619FF6FB77C788E0D2E8134BC96D;
IL2CPP_EXTERN_C String_t* _stringLiteral2D7A8563F8863399BEE53651854D779097538730;
IL2CPP_EXTERN_C String_t* _stringLiteral2EF7DEC74A60941E8EA4D312EA0C3FD9C14303FA;
IL2CPP_EXTERN_C String_t* _stringLiteral38D2CF180BAEA5AC39A051E431530C030665C5EE;
IL2CPP_EXTERN_C String_t* _stringLiteral40457678CE607C8ACB74508CC74E43DBC9E7CFAC;
IL2CPP_EXTERN_C String_t* _stringLiteral422CE50B3F71A8EB315B423F59FF11B9D0313D22;
IL2CPP_EXTERN_C String_t* _stringLiteral42AA32717042087706ACA1EEC2EB3C2A03C44C34;
IL2CPP_EXTERN_C String_t* _stringLiteral4481EB4F8B6BEF5D863C23DACE5D92E1C6603258;
IL2CPP_EXTERN_C String_t* _stringLiteral4D4229E0C147BE8C7321C97D16DA6567C7CC7385;
IL2CPP_EXTERN_C String_t* _stringLiteral588B8CAF579C3071462D21957C92A405CE7A5FA1;
IL2CPP_EXTERN_C String_t* _stringLiteral5AC0D3D4D36181576B50E4AA23AD0D9503DC7809;
IL2CPP_EXTERN_C String_t* _stringLiteral5E48FB0EE174BD6AAFEB32AF96DDA6901B776752;
IL2CPP_EXTERN_C String_t* _stringLiteral6093CF95875C05DE3109742296262213D3EFB135;
IL2CPP_EXTERN_C String_t* _stringLiteral61890C9111848030046E81DB6B67572678ADB6E8;
IL2CPP_EXTERN_C String_t* _stringLiteral6503A75D629CFD74F546E668BB2CBDE428F3F005;
IL2CPP_EXTERN_C String_t* _stringLiteral65BA6F36CA5545B7E629658C538A01881A452707;
IL2CPP_EXTERN_C String_t* _stringLiteral6E963C65411215C46408D382E76B9FBD74276531;
IL2CPP_EXTERN_C String_t* _stringLiteral70F9E42282D72751016572E0F4C30E3E87FCCF57;
IL2CPP_EXTERN_C String_t* _stringLiteral73CCF7683B641F8EA9A657A16C33A801DA0B08E4;
IL2CPP_EXTERN_C String_t* _stringLiteral748BF62203C02574364580AC54FC5F1ECBBF69B9;
IL2CPP_EXTERN_C String_t* _stringLiteral758733BDBED83CBFF4F635AC26CA92AAE477F75D;
IL2CPP_EXTERN_C String_t* _stringLiteral7992BFECF5974FADC77C4F7228AB51E602D14069;
IL2CPP_EXTERN_C String_t* _stringLiteral7D612383984721A96F4EC02A755EEDF86152260F;
IL2CPP_EXTERN_C String_t* _stringLiteral8056EF217D555787C1F04ECE7927A2323D1D2AEA;
IL2CPP_EXTERN_C String_t* _stringLiteral812FAFBBC880731B5FC0ABD9009768693FE806C9;
IL2CPP_EXTERN_C String_t* _stringLiteral81CAC178337D7DB2DE46BA16AA1C0CBA34FA4277;
IL2CPP_EXTERN_C String_t* _stringLiteral90976408DD45FD6617A1CA11E8C4DBBA408E7456;
IL2CPP_EXTERN_C String_t* _stringLiteral961EF7AEB27DE3B713816701CD90839814BE303D;
IL2CPP_EXTERN_C String_t* _stringLiteral964A9CCA3F4767F77B60F58900751CDFFED0CD47;
IL2CPP_EXTERN_C String_t* _stringLiteral9850DCBE605BE40A6552ED957189897CB7458FCB;
IL2CPP_EXTERN_C String_t* _stringLiteral9A685D6B17E0D2747366B0981B83DF994CA889AB;
IL2CPP_EXTERN_C String_t* _stringLiteral9F7053AC26B072D564E9CA83016E143B6B83A080;
IL2CPP_EXTERN_C String_t* _stringLiteralA73F4360C56103ED788368C9769D9E67B8857E15;
IL2CPP_EXTERN_C String_t* _stringLiteralA93EFBE291021F6392FA786CA65FA0EDA009932C;
IL2CPP_EXTERN_C String_t* _stringLiteralAADC3A78399958DFAAF766820038D6E8008F9C7D;
IL2CPP_EXTERN_C String_t* _stringLiteralABBA190802F8B84B59F054138988E434665EA0AE;
IL2CPP_EXTERN_C String_t* _stringLiteralADD1C97D3AF13B5CFC64D65FE92330FEF6E91BCF;
IL2CPP_EXTERN_C String_t* _stringLiteralAF2769F4E48FE7AA8276CF918D2F6D4BB73DC8C3;
IL2CPP_EXTERN_C String_t* _stringLiteralB1FDFE26F1AD8C68C7B05A4FFA0D4B3AC3C883AB;
IL2CPP_EXTERN_C String_t* _stringLiteralB50A1C8D166F6D83589906FA241D44631109E56A;
IL2CPP_EXTERN_C String_t* _stringLiteralB69C3A590722A5F2BAB48472AE0E01A6C5110047;
IL2CPP_EXTERN_C String_t* _stringLiteralB7FC51A7DFB1613CA1A1E0106AB71FB1B70EAFB8;
IL2CPP_EXTERN_C String_t* _stringLiteralBD94399E0619C965CABF2407718DB5777B461E55;
IL2CPP_EXTERN_C String_t* _stringLiteralBE272FFA63D1FAD6231FBC13B50A1C7B811409E1;
IL2CPP_EXTERN_C String_t* _stringLiteralCA22BF385D12932E2D82C1C109AF5394C879FEA3;
IL2CPP_EXTERN_C String_t* _stringLiteralD51A5F81179392C785765556663B36E28DBF8E5F;
IL2CPP_EXTERN_C String_t* _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709;
IL2CPP_EXTERN_C String_t* _stringLiteralDA480199DC2D7E93700F1B1FE80DED08B369ABB3;
IL2CPP_EXTERN_C String_t* _stringLiteralDED689386F73A7C43A44AAE858DB1A6629E49B63;
IL2CPP_EXTERN_C String_t* _stringLiteralE302AA9BECF9F1CB69CF2A3E5B33E0716BEA97F6;
IL2CPP_EXTERN_C String_t* _stringLiteralEB4165285C60D41020FC1659B2ABB1D5BF5252BE;
IL2CPP_EXTERN_C String_t* _stringLiteralEE25EB25AA74DA323C4A0C2C18E0921705443848;
IL2CPP_EXTERN_C String_t* _stringLiteralEEC9061235D18ABA19D23FEB9715D246FB781D8E;
IL2CPP_EXTERN_C String_t* _stringLiteralF3E84B722399601AD7E281754E917478AA9AD48D;
IL2CPP_EXTERN_C String_t* _stringLiteralF5A3962735819AF9C1D00988DC53C00ED4339C24;
IL2CPP_EXTERN_C String_t* _stringLiteralF7BFD261E6576752064F5F2D59002F160C5DCA7B;
IL2CPP_EXTERN_C String_t* _stringLiteralF9FB922D7C6D288D060882C7F364C5B6CEADFFA8;
IL2CPP_EXTERN_C String_t* _stringLiteralFB17F2D69628DC0AD22BCE013F94B0B54F610326;
IL2CPP_EXTERN_C String_t* _stringLiteralFC6C450D2D3F7D72B53FEA8716C1E1123266F5BD;
IL2CPP_EXTERN_C const RuntimeMethod* Array_Empty_TisRuntimeObject_mFB8A63D602BB6974D31E20300D9EB89C6FE7C278_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ClipPlaybackTracker__ctor_m9CAEE1DF7DAD9B70E9CA91652CA67C9A19425F9F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ClipPlaybackTracker_get_Clip_m5F7BF9A75928114403808D29DCF2E00243A5D87A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ClipPlaybackTracker_get_ReadCount_m5CB89D120FC361680A8450515CA02357D2879191_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ClipPlaybackTracker_set_Clip_mA7D1F4B5FBE77EFC6F6FD27C4ED45DC65B8CD5ED_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ClipPlaybackTracker_set_ReadCount_m5BA54F5A69408488A59C5FFA2DE454E199469671_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Color__ctor_m3786F0D6E510D9CFA544523A955870BD2A514C8C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Color_get_clear_m02E023A7D396B973288B3915F6F24FBF7E0DC81D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Color_get_green_mEB001F2CD8C68C6BBAEF9101990B779D3AA2A6EF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponentInParent_TisOVRCameraRig_t7FC2BB0D30DED2B7F0C8914AF2B66E9F4CF891A9_m132CAE22DC4B18ACA26D293EE1D3799068ADAA5D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponent_TisOVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86_mF0B4099235709D379979102F6053FD6042D8A77C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Config_Load_m37407D28EF74FBA74FEDBFD78695E65CD859A330_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Config__cctor_m1E562E3C40232AC081DE7CCC55A917623D792DF0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Config_get_MaximumBufferSamplesCount_mFA9670050A7B57A5778B588CB400DBEB413DE4C0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Config_get_MinimumBufferSamplesCount_m27DBFB9FEA1CB7EF08AC8C62B2F7B99CF1B9457C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Config_get_MinimumSafeSamplesQueued_m479D3DEBCD5251637DC7FDE141FBECAC70DE5A1C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Config_get_OptimalBufferSamplesCount_mBC971D5C4CF6F34A8A3925DC8103A09E3E8BF4F7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Config_get_SampleRateHz_m2D1B79A8EC0A19BA0EA97E6B3039D15788BB9F47_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Config_get_SampleSizeInBytes_m8A59438CA870B1DEDA2DDE836BBF513D4DA6C209_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Config_set_MaximumBufferSamplesCount_m9D324EE5E616DCD4DA7F6563973A3B430B6D1C0A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Config_set_MinimumBufferSamplesCount_m866A99335F02A0402AEE83DA6BDD06BEB7FEA7A3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Config_set_MinimumSafeSamplesQueued_m08F042C5BB8DCCBEE448EAD12412D3336ABAEFC5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Config_set_OptimalBufferSamplesCount_m5B583871BC4784C547969664A7DCC45343792E7F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Config_set_SampleRateHz_mDCD3C6D84B82FAEE86652D00EB57F6D1C52692B5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Config_set_SampleSizeInBytes_mFD9B00CDEDFDB3C01D5958A9ECEEF22C80651A22_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerable_Select_TisSingle_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_TisString_t_m3D07AA7226DDD2E4D23FF4442D7A928D78DA1B17_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerable_ToArray_TisString_t_m3B23EE2DD15B2996E7D2ECA6E74696DA892AA194_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_AddComponent_TisOVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86_m9801277350485D9C445EC7E0035EFCF0579BC30E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_GetComponent_TisCamera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184_m3B3C11550E48AA36AFF82788636EB163CC51FEE6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HapticInfo__ctor_m386E367D1A8EB72F22817794BDD0E4EAD8210F0F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HashSet_1_Add_m4DBD371950A207F1A5A02780C893698D95AE38CA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HashSet_1__ctor_mBF244C9F5A32AFAC08C7E26F547F642E66B3A293_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Add_m666634559A1DC2E23A975D510716DF60BF7B3DA3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Add_m9BE0CD6DB63BFCBCBD5619618748924143F1AFAD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Add_mDB779AD07F59193F6BBFA7819A6E3F152C712450_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Add_mEBCF994CC3814631017F46A387B1A192ED6C85C7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Clear_m16C1F2C61FED5955F10EB36BC1CB2DF34B128994_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Clear_m3C38C7FE9F143B773DBEB2AB00D023E99D54342D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_RemoveAt_m7C70CF4778FAA1C22586E0F909585AD0F1A9172C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Sort_mF0042CBA61BB32CBA4FFE1CD1286329131635B85_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1__ctor_m3E15C72C5BBB246B014CD4F0B141BD78A648B773_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1__ctor_m47318792E32D53A0CE4C2670BAEDA77A7ACB3706_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1__ctor_m62FFCB8D441FA0A3D3002703967951B70D8475F1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1__ctor_m8A0FEDCD4360E80E51A1E6E839F94C725FFDB633_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1__ctor_mBE7647ECE0B8ABB952EDC379472F9E541D41D6DF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1__ctor_mC249FC827BC3BE999A938F8B5BD884F8AA0CB7FA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Count_m4407E4C389F22B8CEC282C15D56516658746C383_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Count_m56AACF0D9683BE0A6929A5B9DE131EE44C5DC9C1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Count_mDCDDC4E9E15CD83C00D4CC32F79830261769F65C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Count_mDFAC96AD60DE7FED9378059AEE6864673962A7B8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Count_mE580FBE05EB71FB41AAE62A9AD4C5A7594C8D27C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Count_mF8DDB0BDC273D655115D5E62307ADF657EC28DE5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Item_m1C04F2A2E6107833BE00F3C7EAE72DAF048AC643_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Item_m1DF20120684518D1E70C0DC8F9D80031B06744F3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Item_m69C3B0FCDB85116A8F7AB368DC33EBCC27556F0E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Item_m7CEE3A6E144C8D86DE6490620206FAB13432ACF6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Item_mBE983C6BF89F37B1D3390A1F3CF1B689D080701E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_set_Item_mFE544BC47A6353F6876FD8CB7468508875584F10_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Marshal_SizeOf_TisByte_t94D9231AC217BE4D2E004C4CD32DF6D099EA41A3_m7AB12E9316F73FF78004C146AEF4D4616F3A7DEC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Mathf_Clamp01_mA7E048DBDA832D399A581BE4D6DED9FA44CE0F14_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Mathf_Clamp_m4DC36EEFDBE5F07C16249DA568023C5ECCFF0E7B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Mathf_Max_mF5379E63D2BBAC76D090748695D833934F8AD051_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRCameraRig_get_trackingSpace_m76339871C7804C1BD14283FBF3D91268D4D87550_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerBase_GetBatteryPercentRemaining_m35AEC716C3B0153E1A8A83306C85DF4697A86CAE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerBase_GetControllerSampleRateHz_mE0279CC1B6ABAAA4DC60595A9C2CC6CC5DE13B62_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerBase_GetOpenVRControllerState_mF56623CE6E48517ACE0CF8862C0B6377669DEE03_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerBase_ResolveToRawMask_m2FA1E268711274A7F9F63F1FC0D614272B8F953E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerBase_ResolveToRawMask_m574A6F44565F5D22BF8728447C82AA0A55DC4911_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerBase_ResolveToRawMask_m65F6690080656E738842AC913EF7A7B92A666F07_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerBase_ResolveToRawMask_m86055AF4DE44D6FB48EC67A0C7E69F6A9744750B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerBase_ResolveToRawMask_m8D04C93448D2D3438F972AE9796714F134E6BD39_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerBase_SetControllerHapticsAmplitudeEnvelope_m7399FA64FE3420F868C609805821CCC27AFB58F0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerBase_SetControllerHapticsPcm_mBA1C090F8AEBE93E707EB31535042EDF35E54A19_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerBase_SetControllerLocalizedVibration_m0973B2DD0C688614EF802445615A01EE4EB32F25_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerBase_SetControllerVibration_mA65313D1C9D3B164DFA6DE58ACBD134FAF6B834C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerBase_Update_m83F4E43964468AD8FA7FCD721B62297D8A8E18B9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerBase__ctor_m19E323A6D3242829EDFA1879B8B8C0525806A124_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerGamepadAndroid_ConfigureAxis1DMap_mA102C673C1A726B08549A017CC38B69761C33161_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerGamepadAndroid_ConfigureAxis2DMap_m82F40C8233710052ED92FE8BCC1BCAD2FACD5B9F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerGamepadAndroid_ConfigureButtonMap_mAE93B89F65CA326E2709857955EDBFB4D0126D5A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerGamepadAndroid_ConfigureNearTouchMap_m03FFAB848F83D4CAE8F166F58B2514F7989C9FBD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerGamepadAndroid_ConfigureTouchMap_mE2E4C8DF6B8086F8B508F1F327A88106E44717DE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerGamepadAndroid__ctor_m2B20446135A5F6216BBF57ADB65A8E55264F991B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerGamepadPC_ConfigureAxis1DMap_m4074971C0ECB34FD3601D272F0C2F6BE99DC0FA4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerGamepadPC_ConfigureAxis2DMap_m50486E0ECA8EC458AD2C3D53423CE9C6846AAE5C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerGamepadPC_ConfigureButtonMap_m358405CBC632EFEC8A88B247778B617CFE98D280_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerGamepadPC_ConfigureNearTouchMap_m27CF3EE4739AA21CAF3B5B48E4D7800C426B6514_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerGamepadPC_ConfigureTouchMap_m89883E889004F74CC07F67F94C6E5C899D3A4435_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerGamepadPC__ctor_mA262F7088F3F7F2CF16CF993E7611F1815302F1E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerHands_ConfigureAxis1DMap_m098CC8096341FECEED5646AAF07D32A2BF65E451_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerHands_ConfigureAxis2DMap_mB675D451FAEEC1844E42A89E18B7DFC2A8B23B5A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerHands_ConfigureButtonMap_m7920F9AF7AAB15057EE5F40670AFBFC736E4D8C1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerHands_ConfigureNearTouchMap_m36C302DA4270D536FC1EA5C0835A5101B73DB631_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerHands_ConfigureTouchMap_m8BB447AD82F512490DDD3282577A437E945B4A5C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerHands_GetBatteryPercentRemaining_m141B8DD462379CAE389CE95CB6A18501819524C4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerHands__ctor_mCE96EBF14E42471CFFAC54E43B5B9F79DC75C51C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerLHand_ConfigureAxis1DMap_m9AEB0794E0ED5348D1867264518F25CD38AD5CF0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerLHand_ConfigureAxis2DMap_m656EBB006F316F81B869AB3BEAB92E101C934D2F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerLHand_ConfigureButtonMap_m5AFB6ED52AC1B6766BA38120B16DE257BE73809E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerLHand_ConfigureNearTouchMap_mC967969ED93CBC5071AC4CC04FAC9D1668B90DE3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerLHand_ConfigureTouchMap_mAF9164EF71C346E045655B6BE894F08108B81B43_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerLHand_GetBatteryPercentRemaining_m22E237DC4DA42A334D9951065D9EEBE6D1EDDFF1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerLHand__ctor_m18D0440C8FFB9816CBFD4FCCC22DDF295F5B30A7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerLTouch_ConfigureAxis1DMap_mAABFB5FAA98D0B37152700DBFE5C89E28C8945A8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerLTouch_ConfigureAxis2DMap_m7BEB3B0140CC9BB47DC108A708F0B1568CED0BD1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerLTouch_ConfigureButtonMap_m9413242DE6585C709A64369A77F3C33EA4D8C682_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerLTouch_ConfigureNearTouchMap_m4A5B3B61760B4D3A714880DC119238004F83AED1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerLTouch_ConfigureTouchMap_mD14A0EE3394CCDF4C7ABAD5F1E3DCF26452CBF2B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerLTouch_GetBatteryPercentRemaining_mDB85D6A5C60A825972429F330905206217A01CF5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerLTouch__ctor_m91BB861EC10E9882AB10768F0454FC24950C7101_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerRHand_ConfigureAxis1DMap_m03FB4CFC9ADCC7782E23E7865CE6B9C1A1F58809_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerRHand_ConfigureAxis2DMap_mD38B3A08A7EE7D4D01BDFF59C1C31E73E9D78866_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerRHand_ConfigureButtonMap_mFF3BBB93FDACB5967FA57F66A053C01115AC7965_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerRHand_ConfigureNearTouchMap_m26113F1479774B172E9878A366E7539CE6619420_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerRHand_ConfigureTouchMap_m96FBAF741BCF5979ED0D8DDDBC00A787B63BEB08_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerRHand_GetBatteryPercentRemaining_m08D704A54FCE90FEEAEE42574EE8EFC59DDAAA77_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerRHand__ctor_m0A5012B434B5D3D4EDC8DAEF913D09AADAA81327_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerRTouch_ConfigureAxis1DMap_mDEEFE8F2B9319A78CFF12C75B3F7DCDC6583B218_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerRTouch_ConfigureAxis2DMap_m0DE6AD033E914588B658F7F491D62015FF6C983A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerRTouch_ConfigureButtonMap_mE41F2F13D647A6715102311417B3503BCA8FDD60_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerRTouch_ConfigureNearTouchMap_mE5B11F9F0A8BD53EC7B991347566429337B578B0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerRTouch_ConfigureTouchMap_m1F7B7C2F6C894D4985869259BB66E01A71E4C682_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerRTouch_GetBatteryPercentRemaining_mA8A0D215C7A068CE90E6E623440A4F3E04EFF84E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerRTouch__ctor_mACBBB5CD6558549FC7D1707D4DE6F92A3469B184_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerRemote_ConfigureAxis1DMap_m45C7343351940FD7BB1AB8214364358C1FB1467B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerRemote_ConfigureAxis2DMap_mDA4307A5C3BD949F823F95207608A874B3114432_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerRemote_ConfigureButtonMap_m875A217E24245CCED67F8B059780568020A9CDBA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerRemote_ConfigureNearTouchMap_m47B1FBA3E75CC78E80C06EDA2FB20FEB18659EFC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerRemote_ConfigureTouchMap_mFA57F5B779AF4D56217C5172E6CF05737C63329F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerRemote__ctor_mB837DA51B56C63642C1C809CBE3A76B2139B8C2E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerTouch_ConfigureAxis1DMap_mA7C294FB81EF4B94456EB3278B963E61854FBB95_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerTouch_ConfigureAxis2DMap_m0EF45F041D062888DB8382CCC5B9131A309272CB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerTouch_ConfigureButtonMap_mACDB2CCC5BDBA806408371D07B1C24D285031FAF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerTouch_ConfigureNearTouchMap_m51B0B6A5579135C8065182047980BE5BE5F1F2E3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerTouch_ConfigureTouchMap_m65253BF99B5E88B3E0EBD2AF339653BE3D35E545_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerTouch_GetBatteryPercentRemaining_m5C35D85D70C9DC963708501AE7007D026D5DD5DF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRControllerTouch__ctor_m91BC2C7183CE4A5BC5C88F5853AD8861707099EB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRDeserialize_ByteArrayToStructure_TisDisplayRefreshRateChangedData_t8412C04FE31982A8D071487EC6E25215EEEFD5AE_mC8D55BBFFFFF997ED1224E48615618B2DA4E21AD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRDeserialize_ByteArrayToStructure_TisSceneCaptureCompleteData_t309B8671164A38CEA71FDAC002DB145FFAECA033_mE2D9B1669B28BA064E53A833B1B3E35844DDD783_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRDeserialize_ByteArrayToStructure_TisSpaceEraseCompleteData_t29938D1C6E218C23257DF9F75C64AD57B1786AC3_mF47A0B55259937E10C4A967BCE2AE71377F6E3C3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRDeserialize_ByteArrayToStructure_TisSpaceListSaveResultData_tCFC8B45EABB98F65FE80A9D7659D7E898383970D_m01BA59E421B63F6D1EC9103E6591F209FD67B541_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRDeserialize_ByteArrayToStructure_TisSpaceQueryCompleteData_tF177ABA884999611B5EC3DC2944FCE143E9F749F_mE1A49ABB1A9E3E72C77E37D97432AE54F4407732_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRDeserialize_ByteArrayToStructure_TisSpaceQueryResultsData_tED5DAE5E8BDB324E88D3A492B94ECEACA6BA907A_m50F3066158A963BA10DF164DF2CA6E5B57375951_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRDeserialize_ByteArrayToStructure_TisSpaceSaveCompleteData_t86F76FAD997B29F8C01EECC13D8BC18477D398F4_mB0692BA462E26A86BCFA96B6876BA6C11118B48B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRDeserialize_ByteArrayToStructure_TisSpaceSetComponentStatusCompleteData_tEB0171988C9E109E4F9C41A77D6738DB9D0CE58E_mC25C743F5A37DACFA5EDEFC9F70D6773281581AD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRDeserialize_ByteArrayToStructure_TisSpaceShareResultData_t1BE431DF2FC60FBBB1F6BA5ECFB140117CFF044F_m6FD88F86C774971F10124906FDEB4709734D471C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRDeserialize_ByteArrayToStructure_TisSpatialAnchorCreateCompleteData_t8A1C0554B63901CBACE1DC0CAB8103C1487A0A5C_m90A95D5AA1BE04AA0D0D165AFAC92821D5F38522_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRHapticsChannel_Clear_m3C6819C8769264B5CF6A160234CD57D6036E3FE7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRHapticsChannel_Mix_m5FBD6E1C1C9CBCDA0C8227E755B18FC252034D47_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRHapticsChannel_Preempt_m631918450856E9AF177CE3893792CB93663A89E6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRHapticsChannel_Queue_mE80EB13C876985FE530F96E93E3D3F839BA3040C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRHapticsChannel__ctor_m79C872D3637A1862B08A58D00A21F413D3B1CA96_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRHapticsClip_InitializeFromAudioFloatTrack_m2DC0897BCB868A4D9B3E5C409390746CF1CAC844_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRHapticsClip_Reset_mC5875B21BD94FB65995B881CB90E4A11C8D26403_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRHapticsClip_WriteSample_m5C7A13E38F525E2C58DF5A09E1EC9493FCF262ED_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRHapticsClip__ctor_m42DBDF3ECFAD1D75A8C835F65532743278009A08_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRHapticsClip__ctor_m44F7B4BB7AB1980712BF6399320B737AD86D96E7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRHapticsClip__ctor_m73C1C39F8313D599A215707410A4940361F6C32A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRHapticsClip__ctor_mE6D5F60EB90776445CB433C5433D82A9870F915E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRHapticsClip__ctor_mF7432BA73E368C7B7EF3D2D03FCA54E632734181_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRHapticsClip_get_Capacity_mB9F5A181D3C9F8208F229AE0A8734C9E18F22A7C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRHapticsClip_get_Count_mF6DCD041E169A35A5B208FE92AEE5D47269F107E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRHapticsClip_get_Samples_m433E8160F5A8874E4AC7972406FB0CC146AC74BE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRHapticsClip_set_Capacity_m0648341A0AFFFE4D146AE0A3EFAC23B70AA739B0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRHapticsClip_set_Count_m174C326E1966E50541CE7774619B508BC732B810_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRHapticsClip_set_Samples_mE62A59340D856612957FB1381FCACDE676702A70_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRHapticsOutput_Clear_m9AB99B742ACA194E3345109759C065E0EC12DACA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRHapticsOutput_Mix_m495B3113A50775D379257E2DFE8BE61ACDEDA2DB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRHapticsOutput_Preempt_m61A86B9122AB9DD061EE376161F1F8FF3CD4C92D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRHapticsOutput_Process_mD508D5EA14E13D5D1395D5A958770A9158A8912D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRHapticsOutput_Queue_m171B7A50C5470F5F17E89E80C963CE5F688F0DA7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRHapticsOutput__ctor_mA154790252DB03E79E6BCF543F05390AE10CD934_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRHaptics_Process_m4C06440CFE490FDE9213449D6DF094E68E55C4CB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRHaptics__cctor_mA37F799C36EEE23EBA0E65CD8D730008A01BDE57_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRHeadsetEmulator_IsEmulationActivated_m24021986D6736C750D9EFB6FA756F4526FA757B2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRHeadsetEmulator_IsTweakingPitch_m996A63E4DE8EEE3BC82947D7AE8F56667A72947F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRHeadsetEmulator_Start_m86C29FC1374CA984D1C5ADE766F7B9AF4C7FEB1A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRHeadsetEmulator_Update_mC1E72FB42AB15CD95FBED7256B60FFEABAD505C5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRHeadsetEmulator__ctor_m468B5EF0EA89C3133B2F07D99E4E61DC8CEE77E1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_CalculateAbsMax_m01D62F439662772B8DFACA54195A979A2E151F19_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_CalculateAbsMax_mC5712340231F606B82E84C5E7BC769E5A4EBA008_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_CalculateDeadzone_m62E502D296247D79A188319599508836C0B88D9C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_CalculateDeadzone_m6BA8FADBF3D06FE95AD5264B167531F78C4AB3C4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_FixedUpdate_m0B2BA5C8485902E1A0EE19A1F7066E671D8ECCB5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetActiveController_m1F0234F8333A98DC3F2BF49A9ECA6530139B6A65_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetConnectedControllers_m70645A9B001F6880D104D779341958174139332D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetControllerBatteryPercentRemaining_m71749CA732247A262C0274C88BCE39BE6F48FF08_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetControllerOrientationTracked_m29C61E840A641F6639492E4AD2A852A786E6EC7F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetControllerOrientationValid_m9EE0634367BCEAF60C6DDBA9CF527F2CEC8327C1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetControllerPositionTracked_mA3D8C4DFC17FB1808C78A865556E394BF565CF0A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetControllerPositionValid_m3ACDABE2BD5335A8DE615A2F9A5C9D63CE329E94_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetControllerSampleRateHz_m16BB642442086EAECDC611A1E404A1356D308E59_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetCurrentInteractionProfile_m8630585A560EB956CDEC8EA3355C3A4584E6734A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetDominantHand_m19E38B4B4C4B246B2ABE605F1ED7F0041B88E6F0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetDown_m154A3DF72CA4730638205848FA0818BBC8E7C341_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetDown_m486EC70E23DEE19E6AB8364AC09CE97AD4EA4AA7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetDown_m4ACA316A238725299B4330463494315FDF2A9133_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetDown_m5491C09889270B683C537503A0C6BF872504AAA8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetDown_mEC4F71AEC93D3AF1A041934CA4C61680C6DB9AC7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetDown_mEF663E99B6E5FABB41B86716C6D04C788C979139_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetLocalControllerAcceleration_m89D4A94FC2E1282CED140A6BC5D54527B1E98ECD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetLocalControllerAngularAcceleration_mEF0691E48437D9A49899E17BA2F5501DDDF9E762_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetLocalControllerAngularVelocity_m4A05C6F3F878F119AEB2E5222154B773C3FE8F24_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetLocalControllerPosition_mD8A4504C441B477AB11C92CB7FBD561ECF15E253_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetLocalControllerRotation_mF2ECF5F8BBB3EF1CF9D4B5E0A1BEC6CA9036515F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetLocalControllerStatesWithoutPrediction_m103D67215F6473717F5FA7747FD6B835070248C2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetLocalControllerVelocity_m2E8ED9F38FCB0E781C796E72917D27F65A3EFF14_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetOpenVRStringProperty_m98D9EFA2CF5CB4A3D5B1FBF211792C9BF3694211_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetResolvedAxis1D_mF5209B0321AE338095757D7353B262549E274EA1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetResolvedAxis2D_m906A84A42FEF829D334263869BE8B73F67DBE2BC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetResolvedButtonDown_m7AAC44E0388502D43F5A6887AE2ACEEE69642C9F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetResolvedButtonUp_m270DD35F9328AA02FD57704B03BD9C48439290FE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetResolvedButton_mBB31573503E0C243CFCF461E9D8ABACA3B9C1DEE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetResolvedNearTouchDown_m6FD16DD559D5DF8B54918EE7C11D43CCF6345FC1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetResolvedNearTouchUp_mF91233ABD8E1D6CC43D2D6929B5EC95D584D3941_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetResolvedNearTouch_mED99EAB619BBCBC6C3A1D39EFFE67D1D2882C1A7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetResolvedTouchDown_m66E8EEDD8A035AB53C72094860E4B470B383B6BA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetResolvedTouchUp_m209C2025FE3912C6A88EBEEC418D28E49CB48C35_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetResolvedTouch_m73FE92C1ADB5D80A899E286D292ED84071FE8CFE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetUp_m31EB27909F84F5A072599C2198E542436692A8F6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetUp_m3E4D89CF77514121520D52DBA85E0376826875D8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetUp_m66B13613FF16CBAB8B0A77A5ADCFD1A3A68F3898_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetUp_mA6D9A9EF681EE249F1128D2EDB8A64492D6088E9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetUp_mC566682F46106E82E01F6FF3F58B55F4293CF9D3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_GetUp_mFBB66C8829A20CBA56AB5A01B27B9B656AB8E385_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_Get_m012EDBD26DA72A28E233C6067036C4DB52ECB515_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_Get_m1FD85568F358C43019E09E48A7BEBD6CD7F7E5D8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_Get_m3231F0E900AB4B2AF1BCBCB2045C6D2AF125C0C7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_Get_m537C5F53DCBD027936460E4183648F5EEBA6A654_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_Get_m6C2E703E080DE2688C40ACA3F68F83F906E625A2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_Get_m8CF227684F49E1C26239D78F826E11A956E909C1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_Get_mB457003E7F3A6A8901B7A1D6CB6A167A5829E304_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_Get_mBEB70324F4BE01D02BE80C0A871A096F1D28D598_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_Get_mF4EA350D5898449529C641C72B7D440DF81180C8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_Get_mFE6AE2B8D10329B84EDD4D3A6BA08617F5323A87_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_InitHapticInfo_mAF5586A61678F7D8D7BA986F970A21226E4FC06F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_IsControllerConnected_mC3BA5BE3D3A5642D36965D4CD82525C989F85E9A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_IsValidOpenVRDevice_m7ADD9AC581CBA6737A77731FEB481BD1E9D75B64_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_PlayHapticImpulse_m1361B3A6FDE69152D291A4AAC0C0D3537926F77B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_SetControllerHapticsAmplitudeEnvelope_m43A590CEBE1656CEA89BFFFA12EB4E10C8E54C0E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_SetControllerHapticsPcm_m31725A99F6F5CD2BCC2FF64696F70BB805C70556_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_SetControllerLocalizedVibration_mF1846D6CABEE3F890D7D2E6F25F0E3A7CBF75F99_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_SetControllerVibration_m7DE7256047DAAB0F6F5E327250A23B9D7074871E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_SetOpenVRLocalPose_m27E4294B7780884FF0BC1A8605403289A12C8894_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_ShouldResolveController_m28BB36AA2D586B8F1C75071D26654B77285AA952_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_StartVibration_mC60F6AD7169146CCCC1EE049A1BA447F06E67EBD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_UpdateXRControllerHaptics_m9E0932C8F3F7602C10857A4B6AA0CEFF52F1CC78_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_UpdateXRControllerNodeIds_mBADEA537A0EE550060596054C9FE13B8B041E8CA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_Update_m46BEA0A1B8C6592A25FBA12F61D471770EC72076_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput__cctor_m8795EFB9DA9E021E059009CB980EB0608FBCD540_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRInput_get_pluginSupportsActiveController_m273F22B55C9B8197B8B372827D45933173F51C05_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRKtxTexture_Load_m6544AE7B274113799991C2C0231C5F68185DB9FD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRKtxTexture__ctor_m94563268E7228EDB9B48E3CCF53DC27D0D9A3AE2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRLayerAttribute__ctor_mD6EC6EF2AC708B6CA90913C30A09093C1199BD74_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_Awake_mA05D8839D3601DAB90A8782566C092B01B462F9C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_CreateMixedRealityCaptureConfigurationFileFromCmd_m41504DC04CEF4A9D01DD0A02BC5958AB36AE6D28_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_FindMainCamera_mCCD7BE229B2DA34FFCB009A527BBE8F40F57EB49_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_FixedUpdate_m066F982228F4B8A03EC67AADFE2DACCAB028D06D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_GetCurrentDisplaySubsystemDescriptor_m774D6D4F85D85E72BCF228C576EAAF55E3CD978E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_GetCurrentDisplaySubsystem_m9DF732778B060759D2E11E04E49A39A43451CAA8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_GetCurrentInputSubsystem_m6343BBB6BBB22C59B70C2502CCFF5D0073B7272D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_GetOpenVRControllerOffset_mCA3A47777AA4F15B22B35DF6732091990E8CC9B4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_GetPassthroughCapabilities_m843A43C3748FF0EA151020DFEA978B85B11D645B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_GetSpaceWarp_m2A01D15434181512E30B0CD641115D51B3E080C6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_HasInsightPassthroughInitFailed_m1C8BCFB02BFFE5C02B93C37682092AFBB2EE9A11_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_InitOVRManager_m70F462CB3521560EDE92D4C54EF0FAD199386053_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_InitPermissionRequest_m119AB6ECF8AC0DF7B5165493E5F285A734ABCEB5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_InitializeInsightPassthrough_m016E6C16576A1E4F6B7871E7FDE7D2671119F67E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_Initialize_m339CEB2C05C31DCDA1C4390EE2635DC90D538821_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_IsAdaptiveResSupportedByEngine_m0DDF3D6F04942A7B1A3B08F930D3847B90D6577D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_IsInsightPassthroughInitPending_m395E00ABC60591E79946909FD5674AF052EA6132_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_IsInsightPassthroughInitialized_m7752AC4A37C80B772E4E66527F3401A6D31D1A1B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_IsInsightPassthroughSupported_m7DF8A3280003DDF6DDEC9D69A23E89332751C72A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_IsUnityAlphaOrBetaVersion_m3281FEF5765FFD207B8BDBB627CC6EDDF18688E0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_LateUpdate_m7566A09FB00BB74D47B200FC0C755AB05AA5D554_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_LoadMixedRealityCaptureConfigurationFileFromCmd_m855C9154778F7C85531A28C62437FC541F4A767B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_MixedRealityEnabledFromCmd_m787D2EDFB851604BAB34C6BF6DB63E939C5EAF19_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_get_capturingCameraDevice_m1F4ADEA5D046A5549FBA3262C2715A6A046722CB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_get_chromaKeyColor_mB4078686B458261DCFBF117DF85715F34F7DA666_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_get_chromaKeySimilarity_m6D620970CEC7AA8726A325ECC8967313497260E4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_get_chromaKeySmoothRange_m3A8E7BD49272C3014DDB4ED567BE673B8AA08783_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_get_chromaKeySpillRange_mF289F37B2FD9F2971F9DCFEE8D7B6877BD13B180_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_get_compositionMethod_mA5B416BC8EBD44FE2E07A654CE3F9C64A442BCED_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_get_depthQuality_m7F69CDF1721F52852A4BE7A069A8F54588C34A56_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_get_dynamicCullingMask_m68966547F3B8C69626043909B35B5E077AFC265D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_get_dynamicLightingDepthVariationClampingValue_mE1DD41D40FA9E25B34082FA099CA96E4F60C0921_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_get_dynamicLightingSmoothFactor_m4E4CF92CC46E43CBE3B03F7112362F85AE46F762_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_get_enableMixedReality_mD185DB1E7D51D6620623A2B7AFD6E61DD8C81D80_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_get_externalCompositionBackdropColorQuest_m6E3B7ABA2EA38F451029D1F9554023B70C6B9BFE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_get_externalCompositionBackdropColorRift_m3D134FDEFD8C23063983A485A0F90CC368D5BA62_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_get_extraHiddenLayers_m8853E35EBE1C52727786EBCFAEC60005AEE6FB84_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_get_extraVisibleLayers_mD54E4795E3939201FC6892AB945B5B169E6BB4B5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_get_flipCameraFrameHorizontally_mA5664AE16B22340E43B701750FACD794AE01792F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_get_flipCameraFrameVertically_m048AFB3D0D48CE5C9D196AFB27A746CACCA4C58C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_get_handPoseStateLatency_mF057BE68C1367F2F912B564B202B09ACD5C28B43_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_get_instantiateMixedRealityCameraGameObject_m7AA1712A2CC77D2FCA4DD6C60F847078F0C21C51_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_get_mrcActivationMode_mA84CCE1675C40D80C49BCCE1E6230B2DC9C93D6A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_get_sandwichCompositionBufferedFrames_m580270F2D022C20BB0B6DFFE9153E62A5978075A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_get_sandwichCompositionRenderLatency_m14B52B5DC7E6D7CDE25E110B19C10589B410BA84_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_get_useDynamicLighting_m77DA0553AC2CB910629A5D0B6AB5483E6A77D10C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_get_virtualGreenScreenApplyDepthCulling_m7EFD76DE22430B508B4F757E3CE47ACF2E1E033C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_get_virtualGreenScreenBottomY_mB6DE18B4535102560FB4E9BF1625C680344FDC29_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_get_virtualGreenScreenDepthTolerance_m4ABFCFE422FC45D7E255A825C6EE90B5BDCCE6B0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_get_virtualGreenScreenTopY_m432E7DFDD926C423D018F1ACC57E1C96EABC5A0B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_get_virtualGreenScreenType_m83A183EA2B31181380FD36536BB1817B22A76286_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_set_capturingCameraDevice_m58F42C86E8CC8E7D0532B5A786E2D296D36BA632_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_set_chromaKeyColor_mFB4EBAC621EC13F9BC6FAC5589DC50EBDAAA051A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_set_chromaKeySimilarity_m2A2B031660C1F9E13CA1F1F12228ED3F2596A698_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_set_chromaKeySmoothRange_mE962BED881E5977465ADFEE2E5EF3C05F456AB55_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_set_chromaKeySpillRange_m7E6D14D3F760C16DC9113A6A2C7B1EA28509137D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_set_compositionMethod_mDF1E6C681FF6B45FF9B7D16CCF7387861451733C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_set_depthQuality_mDB5444DD1DC400F6E79AFF26979B4DEBD3FF5152_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_set_dynamicCullingMask_m6B2BA539079372D888FFEB33576C2E8470289EA2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_set_dynamicLightingDepthVariationClampingValue_mDBF3FFD176BFD9C85DFAB67881E840F57AD086E7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_set_dynamicLightingSmoothFactor_m15DD378E15375AEEE0455CA89CADD4BD5A9E8F77_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_set_enableMixedReality_mCC673620A7C083E0561BA8E33AC21CD0F3E6E0B6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_set_externalCompositionBackdropColorQuest_mF703396A2BE5720636014363AF89FAF69BAB23AE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_set_externalCompositionBackdropColorRift_mD5885EA54D29B7F8ED94EA27412749690D46944A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_set_extraHiddenLayers_m03963451BF108F65761B73A75471CC5254FAE0DF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_set_extraVisibleLayers_mE4A32525C59126A8AAE65D5A408E5693001ED9C4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_set_flipCameraFrameHorizontally_mD94FA071C4539AE6EC5DD9D496C7DEC398C573E9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_set_flipCameraFrameVertically_m768F1EA9115FACD655562C9F24AEAC24F9BC5A52_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_set_handPoseStateLatency_m9E791F17E821EC7A286C655EBDBE7EB6F6A49535_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_set_instantiateMixedRealityCameraGameObject_mAC63BF5AF27747B367C445FAA788D6AC9BC2699E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_set_mrcActivationMode_mC99FC8484C8C0DD97E82E6D67396FD78831E1A11_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_set_sandwichCompositionBufferedFrames_m6C86EEDA4FD982B5060F2F49CCC3072C90E0A767_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_set_sandwichCompositionRenderLatency_mAD767D4FDAEBFC016C27A160A844EB085114730F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_set_useDynamicLighting_mA548F3893624BA5D4694347181D57334D3DE2F1D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_set_virtualGreenScreenApplyDepthCulling_m85BB9D84BB960696A33D3D668A2D6D7C94FBC634_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_set_virtualGreenScreenBottomY_m08C97E0AE23B2023A0C233A6AC83F741FC378D91_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_set_virtualGreenScreenDepthTolerance_mB569727203DE5B7F2EBE63E8778A05D4A96B43DC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_set_virtualGreenScreenTopY_mECFA840A3499F23E09B3FB6F45FEFC465CAA8366_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OVRMixedRealityCaptureConfiguration_set_virtualGreenScreenType_m3751DA0D7A9CFB17B0AD883A12D1CCB99059FAAA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OnApplicationFocus_m8D482CEEA83B62B44FFBBF0DBFFF98E1F4E9F33D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OnApplicationPause_m28497314F1581EEC20923FDB0A946FBA5FF9D347_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OnApplicationQuit_mFE6276AD538E13AF339753F5CD7C9D4E6623BB0F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OnDestroy_m2D1ABDF09DFE8617DFE1E7E7E2E4736DE1957CD4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_OnDisable_m0A146074A2646C9AB36FD309C987545F26593BC2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_PassthroughInitializedOrPending_m7B360381FEDC2014AFB1ABB74E907B62B0D14348_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_PlatformUIConfirmQuit_m535F93DC2CAE215773CB4B8A10F47E921086FBC3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_ReturnToLauncher_m64B09A054CC401504D8BE35DADBD86E272959D2B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_SetColorScaleAndOffset_m3756CA99B3CF9E00D72A00EC70DBEA8CCF4CA03E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_SetCurrentXRDevice_m28B26EC00E7F673A3AF5DEE7D732EDFA987E427F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_SetOpenVRLocalPose_m249ED4C08F44B43E368E9F1B235430493041CBF5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_SetSpaceWarp_m389627B35A017F0C4F16A1225EA730EA54E0BB99_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_ShutdownInsightPassthrough_mBBB77D5EB2CE95920737C34F1A0A5E6C14A6E576_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_StaticInitializeMixedRealityCapture_mECD5892929515DFF005276CD46C2B270F0F7A533_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_StaticShutdownMixedRealityCapture_mA2C3B9797235B17834EA372AB99D1024EB81F0F7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_StaticUpdateMixedRealityCapture_m68D3A9F860CCE3910D11D4C80FE04E984D863810_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_UpdateHMDEvents_m2B05C0DAB70C5325A95E4B7AC01F9CE17CD647B4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_UpdateInsightPassthrough_mB261855F40DB798505F3B863C29E7ED598546A4F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_Update_mD885028FB6C03BA477FAE5757EB706ACB632CAB7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_UseDirectCompositionFromCmd_m9E607F41C058A2B0EA0B100A41AAE1BC340ABAB6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_UseExternalCompositionFromCmd_mF210F9E9E6B124AC97E68BB0883D6B7DEBC83FFC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager__cctor_mF1E19AAD77D4814E8B25D6BC99781E284D145226_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager__ctor_mDC0740CE9C6AE096D5776DE2563D037A9674CEEE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_add_AudioInChanged_m0DD4932B838687CCD3B813CAE3A6EAFDA177208B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_add_AudioOutChanged_m03C919B466E4D30B688D95972D7999E6FE69E284_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_add_DisplayRefreshRateChanged_m2E17B5AD96C76D2DDF81B8113DAE278D0B530D94_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_add_HMDAcquired_mFE57FD76987A5EEB1B03660911CA3B67BCE3F345_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_add_HMDLost_m987CB5028BB5E42DCB77716A0DD24F83A46D9B28_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_add_HMDMounted_m8F0D43C1A18DEF38FF1F22F49CB90D652F58C3AE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_add_HMDUnmounted_mAF5F0B3B0F77CA5888B1ADE89E1006590C656691_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_add_HSWDismissed_m5DABEA5F11521738B24AA16736D15AFBF678D325_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_add_InputFocusAcquired_m303EF833FD42193E22AFA2851C1E80861B53F41B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_add_InputFocusLost_mB75E6525CCFD54E827174479582C861448199E44_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_add_SceneCaptureComplete_m26AE5F4B81DDEA72B3466AC811BE62C3E70ECEF4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_add_ShareSpacesComplete_m83540402ADBF0F7F79ED9ED77EDD3C44DE494565_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_add_SpaceEraseComplete_m41A630D65B0835AB54F59C4B2D62EA3CD26085C5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_add_SpaceListSaveComplete_m1BBD9DDCB0341C4C217DD213402A08938C233F29_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_add_SpaceQueryComplete_m551A184F8F9E0CE981B6802960442163B2E14E37_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_add_SpaceQueryResults_m49193AA310D5B5F802B0442167C4DD7B5F278093_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_add_SpaceSaveComplete_m127A86DF05C5544D94F99125A783BBC825095C3F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_add_SpaceSetComponentStatusComplete_mE0147432E451B15768EB752A9091967A4129F7A0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_add_SpatialAnchorCreateComplete_mA0D4C04B6FE291E992ECDE7577253EEE5B1EF9D0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_add_TrackingAcquired_m46AFE598ACA4041D6D092254D5112A871C8CC134_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_add_TrackingLost_m07C8584949DA169F9D9206E49E6DE61D82254E8D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_add_VrFocusAcquired_m5463761A27A4D48A803583B059557E53DBBAB88F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_add_VrFocusLost_m5143F087674161119B4D970BF8497AA8D60CAAB1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_audioInId_m7D6CF9485C5019C86715CAED3AD18F9DD6BFE093_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_audioOutId_m651EBD87C90304B389EE161C3CF7C34B871A8C14_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_batteryLevel_mFC31D7E00026FF53AE50F88CB34B920FE94BC7A1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_batteryStatus_m2635DB26851BCF82E01EAF7CE1380148B576731E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_batteryTemperature_m9CBB0FCF7221B75BA7C32C2E070672274F374E05_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_boundary_m7495B93002198ABB5346F3F696712133AF7EA943_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_chromatic_m66422D4D596EAEC0F2FFD0952FBDD900E667964A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_colorGamut_m5C61F2AB170363F2D8FB6D4771EC7AEB55E7258C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_cpuLevel_m989D92F71D3A4ACC406B8B85D9DD315661D7E542_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_display_m1D17D6867547AC786E00A4CF60B863275AC1AF3D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_eyeFovPremultipliedAlphaModeEnabled_mEC89DD999B94EE52F17D6E7AF5352C9EA74C8145_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_eyeTextureFormat_mB0841EE941F0A85BC73E3C54B7958A6240946F3B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_eyeTrackedFoveatedRenderingEnabled_m67565B9D927FB91847CF8290678D81B57040273A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_eyeTrackedFoveatedRenderingSupported_mDA31E46BA6B2DACE4DE3691200DD98F5E6BBAB9A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_fixedFoveatedRenderingLevel_m50C462362955957310B24040F150D573CD565EAB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_fixedFoveatedRenderingSupported_m39647A33AEFE5A6129DE3290038E3F4D9F9BC6C1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_foveatedRenderingLevel_mC0439F24303091C23FB87FFCF3ECA01A8C07F60D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_gpuLevel_mF6DD3FBD45FC1A6D4C5E38CFF2454B71F2D36E06_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_gpuUtilLevel_m0ACF6D4407F663F5BC99C8496118665EDEC29FFF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_gpuUtilSupported_m8DD9BD0B0A2FB610F7A9B7394B5FA06106A87845_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_hasInputFocus_m253B15D1BC6272BF1ECA54344D7EF3AEF3B9A0A0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_hasVrFocus_mF029C34D16F6733BC210CAA447C39629FB107D90_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_headPoseRelativeOffsetRotation_m24093D9748A541A44618C282B5858BD49C83F3C9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_headPoseRelativeOffsetTranslation_m699900022730F69357C46494506381ED7647BC0C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_instance_m642500A467C7D7B5B1C2763F2BA90C52BBF5381C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_isHmdPresent_m098F56E4E9C2ECAC87EAB61C7680F0FBD2A2C445_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_isPowerSavingActive_mA12EADC12279FA3B9AA781D8490A5E6BE742FCA2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_isSupportedPlatform_m6AE0B37666BB1660CCFC7F9EAD30E550C5D7FBFA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_isUserPresent_m1E7754523C4912B5EFADE6950DC9D7AA5072699D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_monoscopic_m0DE754F28B483E52474ECA234A1E3DD1D2BA7218_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_nativeColorGamut_mF692E6191E57771EBA2012882E723366718F910F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_pluginVersion_m533197D0A28BF0A6E16E911DC1124C9C65D4D980_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_profile_m7BD564E8E26977B10A35BBB1E639FEDDB1357D6D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_runtimeSettings_m6DFAF39BFB4B75B251235D43B02696D70BFA897A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_sdkVersion_m18413A4E8DECFD0862E7F5A496491B07566CB786_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_suggestedCpuPerfLevel_m243AB9A106880E1768C273A81EE0B4AEA453A307_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_suggestedGpuPerfLevel_mA6653F19E71E42A263E69FD2C4F4CB4B0DB5DF47_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_systemHeadsetType_mCF5CFA237F93EC8DE90C8F9241846C505C7388B1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_tiledMultiResLevel_m50854DFB8ECD18C7E7C3D387F319F36CB1E7161A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_tiledMultiResSupported_mD4174BEC4D5F947320A84A7E19453D3CBFF7B507_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_tracker_mA945BED7BDB670E0F82A7EAD0A401651C8605259_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_trackingOriginType_m352B753617F98DC58AD3F8E4324E23C7CF3A47E0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_useDynamicFixedFoveatedRendering_m57B77674E15DB93717951E23515E8C28D13871D5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_useDynamicFoveatedRendering_m18349DF2686AD7CD1FA5A01783CED4AECBDB896A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_utilitiesVersion_mA14867182039A0B84E83EC82DFDD6DC4D7E79582_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_volumeLevel_mBB5AC2A247DA26358425288C17CFF8E1998575B1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_vsyncCount_m1BBE8D04E02C2431A29E2F1A98AB685293B4A8E5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_xrApi_m727D2444A42B1D7E2D1EF3C3ECC493FDDA647712_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_xrInstance_m337F7A5B861DC2EA9D7FCB585ED53B1BE4D21547_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_get_xrSession_mF16F24B7F737FC50D705676638DD85179ABB9679_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_remove_AudioInChanged_m1DF19AEB75AAF33FC631CC885168AA1F3D64C146_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_remove_AudioOutChanged_m0FEF1697BE6E7FCAB62EC858A1C185EF4ED8B84A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_remove_DisplayRefreshRateChanged_m86971E2283734F2364AACA47B15CC8695DC2CF7E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_remove_HMDAcquired_m7F955D650B4E8D7BAA276F87F9EE42E344874049_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_remove_HMDLost_m8EA17A97037A9624D6466C44C781C7E7CBFCEE12_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_remove_HMDMounted_mE3ACD3FCCFAC0AF372978085E2950B5B872685A8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_remove_HMDUnmounted_mF0EC72A064E8A4598DC5720CEAB9793F80ABBD36_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_remove_HSWDismissed_m596F0A139EA7AA7ABDEED3C29DE4E69C4E4CC94B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_remove_InputFocusAcquired_m739A9413A8A163181FB382725F8B9B1975368283_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_remove_InputFocusLost_m331F5CDD3BACD07943A5A3380702145A744E7172_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_remove_SceneCaptureComplete_mB1C40810BBC411BE7B21C74704F120E7661BD58F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_remove_ShareSpacesComplete_mAE2C236C9085FAD60459A8F944F28528CA9A2D5E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_remove_SpaceEraseComplete_m4B92FBCCC4DAC94F9C6CCB058C17BBB66DEDBF91_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_remove_SpaceListSaveComplete_m9E940BD2D38E3A1EA5A7FDBFE02458F248D7ABC4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_remove_SpaceQueryComplete_m885B3CD1B32BE4F4FCD58AC94D5D6B831D7144EF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_remove_SpaceQueryResults_m19C1446D9F244FA3A8A596D309466C085F513910_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_remove_SpaceSaveComplete_mA3D0E92A5518AD713A7B5262AE4EC6ECE529F703_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_remove_SpaceSetComponentStatusComplete_mF641750E9DD27E2FDD787FA7D67739D21040150C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_remove_SpatialAnchorCreateComplete_m62EC453F5F0A2BB2AFF0BD577E68F5281EEAF7A7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_remove_TrackingAcquired_mC90F8B7B98CA62B8AD346042D00AB6285D85FC5A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_remove_TrackingLost_mC974B10AB7A7BB55E79FE3C258A7E7565E564620_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_remove_VrFocusAcquired_mD5CBD147F95529A4538FC2FD21D70456D9D9949C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_remove_VrFocusLost_m4F0A4DDB3D5C5C18019BA47661C69CE935B1AC5B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_set_boundary_mCEFC4DA00ED1094A5758AC15FF744BDC4B6091E4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_set_chromatic_mC1109A775529EF48476D51176DEC780678AAE0EF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_set_colorGamut_m12885C55A4AF562CF4DA969CE3DFE90B2905509F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_set_cpuLevel_mA5EC637A6AE162348E0592894D798911F2DF8420_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_set_display_mAD68A004132C01084A443254AC164FD31BCDFE6B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_set_eyeFovPremultipliedAlphaModeEnabled_m14DD45453E82E21D899542D37BA0BB52B03A2FBB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_set_eyeTextureFormat_m0B690B20957C9EB17E648899080E4EBBBA87CCED_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_set_eyeTrackedFoveatedRenderingEnabled_m5E0F71B6638527B600B45DD21F185E1E9C56B659_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_set_fixedFoveatedRenderingLevel_m8903AC90BC000FD46ED4E26673BAB531BA615929_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_set_foveatedRenderingLevel_m595F382F5C8D157A7A85C1F3DB50C105D00F6D93_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_set_gpuLevel_mB46AE04D1CC806405EEA2EBDC69D0A2301F5D89D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_set_hasVrFocus_m85C981DA02ECC6A7829D348FCBC2149040CD5321_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_set_headPoseRelativeOffsetRotation_m607DFB21F99CE3107ECA6BD9E1C0A2B6AC4242FC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_set_headPoseRelativeOffsetTranslation_m8B70891033EA3A0A28D9C1986E7B5D58016CCBA6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_set_instance_m268BE0B7206FEB81BA8B8EB5221AB2BA10E91E0E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_set_isHmdPresent_m4879663A8AA591EE662CEF9F18686D6B89789B7E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_set_isSupportedPlatform_mE8A33FC72544A424CC63ACAF84F71CEC1EC9CE6F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_set_isUserPresent_mAC629CEC482B5627A507D4FB93DE81ADA0366703_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_set_monoscopic_m1EAAB3C2A3CDB7D72B1700D635AAA6C2AE41893D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_set_runtimeSettings_m66D09D518E906F1A50738B3BFA760EE8B117C469_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_set_suggestedCpuPerfLevel_m8ADF8B1F94FB15461A329C77483D57C31E28E765_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_set_suggestedGpuPerfLevel_mF73FCC236503028B36D67F2553228E0ED7432662_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_set_tiledMultiResLevel_mA2B8AA96F86CE73B3976A4D56D22740E5AB39EFA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_set_tracker_m50D4C4C76BA97D4775D75620D4CC033398E72433_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_set_trackingOriginType_mDDB79B878E8BF7FD66AD925A4EB0DAE77980F0F3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_set_useDynamicFixedFoveatedRendering_m2BBB38EA8596D5006096F25E2EDE0465713D9CEA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_set_useDynamicFoveatedRendering_m3CAE5328B0CDF0A53F88BC404741540F223559A1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OVRManager_set_vsyncCount_m60B468D8FC499D98DADE378D3860E3EFDCC2A6AD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Quaternion_Euler_m5BCCC19216CFAD2426F15BC51A30421880D27B73_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Quaternion_Euler_m9262AB29E3E9CE94EF71051F38A28E82AEC73F90_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Quaternion_get_identity_m7E701AE095ED10FD5EA0B50ABCFDE2EEFF2173A5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ScriptableObject_CreateInstance_TisOVRMixedRealityCaptureSettings_tF6078D6B59F16A0EE3DEE4144FCED347444B9198_mA2CD02C40A4B9D05C1DF3C42710BC05670FFA61E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* String_get_Length_m42625D67623FA5CC7A44D47425CE86FB946542D2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SubsystemManager_GetInstances_TisXRDisplaySubsystem_t4B00B0BF1894A039ACFA8DDC2C2EB9301118C1F1_mCDFAF63EF2A2778CA3677E75360BC7961FCB3370_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SubsystemManager_GetInstances_TisXRInputSubsystem_tFECE6683FCAEBF05BAD05E5D612690095D8BAD34_mE4E3C5739928E93E572D92105A4D3BAC7FC877AF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SubsystemManager_GetSubsystemDescriptors_TisXRDisplaySubsystemDescriptor_t72DD88EE9094488AE723A495F48884BA4EA8311A_mE88F154272DC98DD50249B29599ABD64EA6DDC55_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CU3Ec_U3CFindMainCameraU3Eb__413_0_mB17F87C547891E2EF3D5FB13D630EBE419674A2F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CU3Ec_U3CInitOVRManagerU3Eb__397_0_mA9C542074579D3180287A9E735E5FC689726D533_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CU3Ec__DisplayClass27_0_U3CProcessMeshU3Eb__0_m998C738F6C4AB24E0AE93FC5AAD2910A88E229D5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CU3Ec__DisplayClass27_0__ctor_mAA33415A6334C948D5FB6FF0676C5FAB37792F1B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Vector2_Normalize_m56DABCAB5967DF37A6B96710477D3660D800C652_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Vector2_get_magnitude_m5C59B4056420AEFDB291AD0914A3F675330A75CE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Vector2_get_normalized_mF6722883AEFB5027690A778DF8ACC20F0FA65297_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Vector2_get_sqrMagnitude_mA16336720C14EEF8BA9B55AE33B98C9EE2082BDC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Vector2_get_zero_m32506C40EC2EE7D5D4410BF40D3EE683A3D5F32C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Vector2_op_Division_m57A2DCD71E0CE7420851D705D1951F9238902AAB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Vector2_op_Multiply_m2D984B613020089BF5165BA4CA10988E2DC771FE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Vector3_get_zero_m0C1249C3F25B1C70EAD3CC8B31259975A457AE39_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Vector3_op_Equality_mCDCBB8D2EDC3D3BF20F31A25ACB34705D352B479_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Vector3_op_Inequality_m9F170CDFBF1E490E559DA5D06D6547501A402BBF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* VirtualAxis1DMap_ToRawMask_m977A6C4A989DD010BC7C844700E7CF2A2E35AA51_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* VirtualAxis1DMap__ctor_m7AF1E2FD0D217CE37E1C60CE9F873E253CB7ADFB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* VirtualAxis2DMap_ToRawMask_m9C9827F9F56AF946108A8A9A8504299BAC8BCC44_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* VirtualAxis2DMap__ctor_m53A66F09A2A2B816DEDE021C7781DA2422E64C92_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* VirtualButtonMap_ToRawMask_m0B0D32BAC0DBFD08BD5E575A3676C9430C60D5AA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* VirtualButtonMap__ctor_m84849058BF5B2AE16FBEA486FC58B59641A134D5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* VirtualNearTouchMap_ToRawMask_mE743414574E2B9D84BD84B2B4E9156973F2A57EA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* VirtualNearTouchMap__ctor_m29091026E28CD564A8098B5BB557397C2B8A4B86_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* VirtualTouchMap_ToRawMask_mCF2939C4B09B3FE0367B3F73003D4D3EC7F78EB7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* VirtualTouchMap__ctor_mF8C09D67EE6EF2B426DFE0AF08FE81B9CD38CDCA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* WeakReference_1_TryGetTarget_m554CBAC52CB26900F9D0E24648D3482A43AB67B6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* WeakReference_1__ctor_m12E7503DDFC128E1736C08DF717D975A0B2BB6E7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeType* AudioConfiguration_t4C8585EA98B6559B306B6FAD6A68088555394A5D_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Byte_t94D9231AC217BE4D2E004C4CD32DF6D099EA41A3_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* CVRSystem_tD199D16B8A7CC7F19E6E0B5D9AE59156C2312B1A_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* CameraDevice_t081F9854C1B62EECCA3DE979BA982652042B60F6_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ColorSpace_t7351D379D27098BE44BB70202C671C9B8A08CF7B_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Color_tD001788D726C3A7F1379BEED0260B9591F440C1F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* CompositionMethod_t6D3B3BE595D15686ECBAF583A082C0F316737952_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Controller_tBCAA59EAD9BFE2381E974A48B203D044B6CE1ECB_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* DepthQuality_t98717AD4F4A8BEFCFE10A4EB45C478EC057946B8_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* DisplayRefreshRateChangedData_t8412C04FE31982A8D071487EC6E25215EEEFD5AE_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Double_tE150EF3D1D43DEE85D533810AB4C742307EEDE5F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ETrackedControllerRole_tDC120308D40FAB9B68F915EA2BF407348AC96109_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ETrackedDeviceClass_tDF5758A6180875876C3754A2868F67487A259571_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ETrackedPropertyError_t17E4B05987C118B2E50C09947BD2B8E1695B2501_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* EventType_t51A504495C404B904AFBCF27C6268D87802C12E1_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Exception_t_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* EyeTextureFormat_t251B953539CD5C68C64478A89DE9259545E6D665_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* FixedFoveatedRenderingLevel_t4CF79AA5048B4967FA6084F4B7CE7B8CF42E56F6_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* FoveatedRenderingLevel_t84DD37663055C483C8D66F0CF3F0ECAC87E458C8_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* GCHandle_tC44F6F72EE68BD4CFABA24309DA7A179D41127DC_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* GameObjectU5BU5D_tFF67550DFCE87096D7A3734EA15B75896B2722CF_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* GameObject_t76FEDD663AB33C991A9C9A23129337651094216F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Handedness_t7EF8D60FA75C1E15025FA0C3BF839533072C3A6E_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* HapticsAmplitudeEnvelopeVibration_t72F2EFB43EF23B078F28C324C8D12EBD9B84A00A_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* HapticsBuffer_t05090BEFD2D209883C588225318CD620E29EF181_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* HapticsDesc_tA499A18F90CA6E72D680CBF94F1B189E31F8844A_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* HapticsPcmVibration_tE63FF2450048F8B5C0EF36A26C0E61346CAE8CBB_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* HapticsState_tF1FED426B2261FB06D69988945D47B96DC067ABD_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* HashSet_1_t8CCE4B1A7C21C55C1F50A4850C846D17B4943076_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* InstantiateMrcCameraDelegate_t26D39C3003CADD2CBA4E7C5EB75333089B2F03C8_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IntPtr_t_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* InteractionProfile_tE7ABF6508471099A925103D86BCDD892269F74D2_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* KeyCodeU5BU5D_tE5EF2F42327664A9138C613B265BEE8524672B85_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* KeyCode_t75B9ECCC26D858F55040DDFF9523681E996D17E9_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* LayerMask_t97CB6BDADEDC3D6423C7BCFEA7F86DA2EC6241DB_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* List_1_tD2FA3273746E404D72561E8324608D18B52B533E_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MrcActivationMode_t1782022B05CD6F45AE8DEAA9E8359BA365FD5E45_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* OVRCameraRig_t7FC2BB0D30DED2B7F0C8914AF2B66E9F4CF891A9_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* OVRControllerGamepadAndroid_t744FA8E4FD2A606498498663467C1271A46F1AB9_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* OVRControllerGamepadPC_t8E0D3F7E7CE14C766A57CC4543E9A7CFFB5B4336_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* OVRControllerHands_t12594A1327521ECA38B53C166676B845C1D621CA_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* OVRControllerLHand_t05FFDA0A0B722315B47BFEDFFF701B425563DDB8_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* OVRControllerLTouch_tAB910B5D7369AA3104AD40C8AE5458C254D225C6_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* OVRControllerRHand_t9AF4805EAECF3275B7E861B1A3E4CF7555C989B4_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* OVRControllerRTouch_t05E309647F46A925D9C970B8636ADD34E6533A01_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* OVRControllerRemote_tFAC79902D239980E05EB245E84764EB95FC42C08_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* OVRControllerTouch_t3242C19AECEE9D167D937CF1288465415D554A37_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* OVRHeadsetEmulator_t962B146D3C4075E460069BC2ED5B5943DA1B8553_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* OVRPose_t8054769FD4517C10D2ECD2C14C823723D675EEFB_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* OVRProfile_tCFDDDA5EE82F0ED94671EB741B8954603D98AFC0_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* OVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* OpenVRController_tA0556936238710C55C0736A0B10D37C8FA0BD9E2_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* PassthroughCapabilities_t3B338539A7E4125FE79381628715BDC608471F9F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* PassthroughCapabilityFlags_t2485F5160C4F7455ECA91216E050E30FF06A8F47_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* PoseStatef_tC6A564A6E163790E7DE8D1CF4EBDE089D09B053E_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ProcessorPerformanceLevel_t16F33568B865A567B76E19FA8235C180225C0A46_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* RawAxis1D_tAE65BD6B0EB61DDB15F3B28E5D114F8979221BD5_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* RawAxis2D_t882F928A0CB13BA12DBC6402B64ECA76202DFBA1_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* RawButton_tCD95D496C88D49C316A04BE1354D128EF7DB23AF_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* RawNearTouch_t462F7BF4D7758A6C7CCA8DC98652716CF7796ACB_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* RawTouch_t7D17A388D30D8E3B4FD34FBDAA322D5023CF8BE3_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Result_t65718B00CEF7A5D1E84402EA2DDCF5BF3D3E6797_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* RuntimePlatform_t9A8AAF204603076FCAAECCCC05DA386AEE7BF66E_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SceneCaptureCompleteData_t309B8671164A38CEA71FDAC002DB145FFAECA033_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SpaceEraseCompleteData_t29938D1C6E218C23257DF9F75C64AD57B1786AC3_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SpaceListSaveResultData_tCFC8B45EABB98F65FE80A9D7659D7E898383970D_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SpaceQueryCompleteData_tF177ABA884999611B5EC3DC2944FCE143E9F749F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SpaceQueryResultsData_tED5DAE5E8BDB324E88D3A492B94ECEACA6BA907A_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SpaceSaveCompleteData_t86F76FAD997B29F8C01EECC13D8BC18477D398F4_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SpaceSetComponentStatusCompleteData_tEB0171988C9E109E4F9C41A77D6738DB9D0CE58E_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SpaceShareResultData_t1BE431DF2FC60FBBB1F6BA5ECFB140117CFF044F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SpatialAnchorCreateCompleteData_t8A1C0554B63901CBACE1DC0CAB8103C1487A0A5C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* StringBuilder_t_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* String_t_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SystemHeadsetType_t94DE1BD46794DAB8066568DC0C1A901262286C7D_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* TiledMultiResLevel_t80DF4E7EB905CF5FF7529E88959C1C86B91E65E0_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* TrackingOrigin_t70DDF38D879461EA2FCA43C81B5560A1558FFF8B_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* TrackingOrigin_t727E8CAE2E705B4954BFB419FD60EF30D544FA37_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* U3CU3Ec__DisplayClass27_0_tE26F78A56AA4B7B70818EB50BF1D6AF8D0415010_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* UInt32_t1833D51FFA667B18A5AA4B8D34DE284F8495D29B_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* UInt64_t8F12534CC8FC4B5860F2A2CD1EE79D322E7A41AF_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* VRControllerState_t_t50475AF703AB39117DE2C6CE266154309CD9BD4D_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Vector3f_t232AF83B4642C67BE8EFF85D8E1599D3B06BD562_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* VirtualGreenScreenType_tBE7E1C8F361841113DC44D9E3AC4C9C13AAAC5EF_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* XRDisplaySubsystemDescriptor_t72DD88EE9094488AE723A495F48884BA4EA8311A_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* XRDisplaySubsystem_t4B00B0BF1894A039ACFA8DDC2C2EB9301118C1F1_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* XRInputSubsystem_tFECE6683FCAEBF05BAD05E5D612690095D8BAD34_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* XRNode_t41F4B2F0EDD99DB33C49EC731C8C7F9DF142B5FF_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* XrApi_t93353E1C02725FC81E579B450694FDA6B04C2A34_0_0_0_var;
struct BoneCapsule_tF1A2277B943643BF2B8969910821CBAE47B3DD74;
struct Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D;
struct Delegate_t_marshaled_com;
struct Delegate_t_marshaled_pinvoke;
struct Exception_t_marshaled_com;
struct Exception_t_marshaled_pinvoke;

struct ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031;
struct GameObjectU5BU5D_tFF67550DFCE87096D7A3734EA15B75896B2722CF;
struct KeyCodeU5BU5D_tE5EF2F42327664A9138C613B265BEE8524672B85;
struct ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918;
struct SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C;
struct StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248;
struct UInt32U5BU5D_t02FBD658AD156A17574ECE6106CF1FBFCC9807FA;
struct OVRHapticsChannelU5BU5D_t5CFD3CC0AE2D7AF472EADAE43D25D00EA71AF3C8;
struct OVRHapticsOutputU5BU5D_tF2F7D8627C25B56A905E3C8574260767FB659BA7;
struct HapticInfoU5BU5D_tD7F089695199232CD57B8C3C73F549036B5BC2CB;
struct OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4;

IL2CPP_EXTERN_C_BEGIN
IL2CPP_EXTERN_C_END

#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.EmptyArray`1<System.Object>
struct EmptyArray_1_tDF0DD7256B115243AA6BD5558417387A734240EE  : public RuntimeObject
{
};

// System.Collections.Generic.HashSet`1<OVRPermissionsRequester/Permission>
struct HashSet_1_t8CCE4B1A7C21C55C1F50A4850C846D17B4943076  : public RuntimeObject
{
	// System.Int32[] System.Collections.Generic.HashSet`1::_buckets
	Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ____buckets_7;
	// System.Collections.Generic.HashSet`1/Slot<T>[] System.Collections.Generic.HashSet`1::_slots
	SlotU5BU5D_t2B0A43178890FA5D909D3C8CA2AC1DE5EFDDC976* ____slots_8;
	// System.Int32 System.Collections.Generic.HashSet`1::_count
	int32_t ____count_9;
	// System.Int32 System.Collections.Generic.HashSet`1::_lastIndex
	int32_t ____lastIndex_10;
	// System.Int32 System.Collections.Generic.HashSet`1::_freeList
	int32_t ____freeList_11;
	// System.Collections.Generic.IEqualityComparer`1<T> System.Collections.Generic.HashSet`1::_comparer
	RuntimeObject* ____comparer_12;
	// System.Int32 System.Collections.Generic.HashSet`1::_version
	int32_t ____version_13;
	// System.Runtime.Serialization.SerializationInfo System.Collections.Generic.HashSet`1::_siInfo
	SerializationInfo_t3C47F63E24BEB9FCE2DC6309E027F238DC5C5E37* ____siInfo_14;
};

// System.Collections.Generic.List`1<UnityEngine.Camera>
struct List_1_tD2FA3273746E404D72561E8324608D18B52B533E  : public RuntimeObject
{
	// T[] System.Collections.Generic.List`1::_items
	CameraU5BU5D_t1506EBA524A07AD1066D6DD4D7DFC6721F1AC26B* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject* ____syncRoot_4;
};

// System.Collections.Generic.List`1<System.Object>
struct List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D  : public RuntimeObject
{
	// T[] System.Collections.Generic.List`1::_items
	ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject* ____syncRoot_4;
};

// System.Collections.Generic.List`1<UnityEngine.XR.XRDisplaySubsystem>
struct List_1_tA7666C6690CE2AEE97571615AD3AFCE2BB020597  : public RuntimeObject
{
	// T[] System.Collections.Generic.List`1::_items
	XRDisplaySubsystemU5BU5D_t741124D80DCCCF62F2AF47431354B7387672F264* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject* ____syncRoot_4;
};

// System.Collections.Generic.List`1<UnityEngine.XR.XRDisplaySubsystemDescriptor>
struct List_1_tC3F021D09EFA4F3516555517B5E0D39308C9C1B4  : public RuntimeObject
{
	// T[] System.Collections.Generic.List`1::_items
	XRDisplaySubsystemDescriptorU5BU5D_t80B6AEA854B63F06CAE27E51662BBC06D752BFF0* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject* ____syncRoot_4;
};

// System.Collections.Generic.List`1<UnityEngine.XR.XRInputSubsystem>
struct List_1_t90832B88D7207769654164CC28440CF594CC397D  : public RuntimeObject
{
	// T[] System.Collections.Generic.List`1::_items
	XRInputSubsystemU5BU5D_t224A541B4C0D2E3253E4D68ADF4F824AC587B11C* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject* ____syncRoot_4;
};

// System.Collections.Generic.List`1<OVRInput/OVRControllerBase>
struct List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577  : public RuntimeObject
{
	// T[] System.Collections.Generic.List`1::_items
	OVRControllerBaseU5BU5D_t01C1CD9B17ED250028217971566A01F5DE00CF39* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject* ____syncRoot_4;
};

// System.Collections.Generic.List`1<OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker>
struct List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6  : public RuntimeObject
{
	// T[] System.Collections.Generic.List`1::_items
	ClipPlaybackTrackerU5BU5D_t581D1A52408639F1B70182122A456B2D5A6C8D4F* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject* ____syncRoot_4;
};

// System.Attribute
struct Attribute_tFDA8EFEFB0711976D22474794576DAF28F7440AA  : public RuntimeObject
{
};

// System.Reflection.MemberInfo
struct MemberInfo_t  : public RuntimeObject
{
};

// OVRBoundary
struct OVRBoundary_t56DFE91F758A740A34575D748FEC61959A106DAE  : public RuntimeObject
{
	// System.Collections.Generic.List`1<UnityEngine.Vector3> OVRBoundary::cachedGeometryList
	List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* ___cachedGeometryList_3;
};

// OVRDisplay
struct OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27  : public RuntimeObject
{
	// System.Boolean OVRDisplay::needsConfigureTexture
	bool ___needsConfigureTexture_0;
	// OVRDisplay/EyeRenderDesc[] OVRDisplay::eyeDescs
	EyeRenderDescU5BU5D_tB048865C1A81E8F904CC0EE2F949AC71D6CF728F* ___eyeDescs_1;
	// System.Boolean OVRDisplay::recenterRequested
	bool ___recenterRequested_2;
	// System.Int32 OVRDisplay::recenterRequestedFrameCount
	int32_t ___recenterRequestedFrameCount_3;
	// System.Int32 OVRDisplay::localTrackingSpaceRecenterCount
	int32_t ___localTrackingSpaceRecenterCount_4;
	// System.Action OVRDisplay::RecenteredPose
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___RecenteredPose_5;
};

// OVRHaptics
struct OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C  : public RuntimeObject
{
};

// OVRHapticsClip
struct OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C  : public RuntimeObject
{
	// System.Int32 OVRHapticsClip::<Count>k__BackingField
	int32_t ___U3CCountU3Ek__BackingField_0;
	// System.Int32 OVRHapticsClip::<Capacity>k__BackingField
	int32_t ___U3CCapacityU3Ek__BackingField_1;
	// System.Byte[] OVRHapticsClip::<Samples>k__BackingField
	ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___U3CSamplesU3Ek__BackingField_2;
};

// OVRInput
struct OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A  : public RuntimeObject
{
};

// OVRKtxTexture
struct OVRKtxTexture_tCBA95D23D3966F783B772DEFC7D54FFE84B744C1  : public RuntimeObject
{
};

// OVRTracker
struct OVRTracker_t5E60EE08D82308F2F8206AD43AE8CC4925938154  : public RuntimeObject
{
};

// System.String
struct String_t  : public RuntimeObject
{
	// System.Int32 System.String::_stringLength
	int32_t ____stringLength_4;
	// System.Char System.String::_firstChar
	Il2CppChar ____firstChar_5;
};

// System.Text.StringBuilder
struct StringBuilder_t  : public RuntimeObject
{
	// System.Char[] System.Text.StringBuilder::m_ChunkChars
	CharU5BU5D_t799905CF001DD5F13F7DBB310181FC4D8B7D0AAB* ___m_ChunkChars_0;
	// System.Text.StringBuilder System.Text.StringBuilder::m_ChunkPrevious
	StringBuilder_t* ___m_ChunkPrevious_1;
	// System.Int32 System.Text.StringBuilder::m_ChunkLength
	int32_t ___m_ChunkLength_2;
	// System.Int32 System.Text.StringBuilder::m_ChunkOffset
	int32_t ___m_ChunkOffset_3;
	// System.Int32 System.Text.StringBuilder::m_MaxCapacity
	int32_t ___m_MaxCapacity_4;
};

// System.ValueType
struct ValueType_t6D9B272BD21782F0A9A14F2E41F85A50E97A986F  : public RuntimeObject
{
};
// Native definition for P/Invoke marshalling of System.ValueType
struct ValueType_t6D9B272BD21782F0A9A14F2E41F85A50E97A986F_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.ValueType
struct ValueType_t6D9B272BD21782F0A9A14F2E41F85A50E97A986F_marshaled_com
{
};

// System.Version
struct Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7  : public RuntimeObject
{
	// System.Int32 System.Version::_Major
	int32_t ____Major_0;
	// System.Int32 System.Version::_Minor
	int32_t ____Minor_1;
	// System.Int32 System.Version::_Build
	int32_t ____Build_2;
	// System.Int32 System.Version::_Revision
	int32_t ____Revision_3;
};

// OVRHaptics/Config
struct Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2  : public RuntimeObject
{
};

// OVRHaptics/OVRHapticsChannel
struct OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853  : public RuntimeObject
{
	// OVRHaptics/OVRHapticsOutput OVRHaptics/OVRHapticsChannel::m_output
	OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE* ___m_output_0;
};

// OVRHaptics/OVRHapticsOutput
struct OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE  : public RuntimeObject
{
	// System.Boolean OVRHaptics/OVRHapticsOutput::m_lowLatencyMode
	bool ___m_lowLatencyMode_0;
	// System.Boolean OVRHaptics/OVRHapticsOutput::m_paddingEnabled
	bool ___m_paddingEnabled_1;
	// System.Int32 OVRHaptics/OVRHapticsOutput::m_prevSamplesQueued
	int32_t ___m_prevSamplesQueued_2;
	// System.Single OVRHaptics/OVRHapticsOutput::m_prevSamplesQueuedTime
	float ___m_prevSamplesQueuedTime_3;
	// System.Int32 OVRHaptics/OVRHapticsOutput::m_numPredictionHits
	int32_t ___m_numPredictionHits_4;
	// System.Int32 OVRHaptics/OVRHapticsOutput::m_numPredictionMisses
	int32_t ___m_numPredictionMisses_5;
	// System.Int32 OVRHaptics/OVRHapticsOutput::m_numUnderruns
	int32_t ___m_numUnderruns_6;
	// System.Collections.Generic.List`1<OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker> OVRHaptics/OVRHapticsOutput::m_pendingClips
	List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6* ___m_pendingClips_7;
	// System.UInt32 OVRHaptics/OVRHapticsOutput::m_controller
	uint32_t ___m_controller_8;
	// OVRNativeBuffer OVRHaptics/OVRHapticsOutput::m_nativeBuffer
	OVRNativeBuffer_tEBEDDBFD193B5EE2FE1E0C1B22AA823FB3703915* ___m_nativeBuffer_9;
	// OVRHapticsClip OVRHaptics/OVRHapticsOutput::m_paddingClip
	OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* ___m_paddingClip_10;
	// System.Int32 OVRHaptics/OVRHapticsOutput::PrevSampleRateHz
	int32_t ___PrevSampleRateHz_11;
};

// OVRInput/HapticInfo
struct HapticInfo_t614DAC0509051DC76FD4D48A1D591505E22DE950  : public RuntimeObject
{
	// System.Boolean OVRInput/HapticInfo::playingHaptics
	bool ___playingHaptics_0;
	// System.Single OVRInput/HapticInfo::hapticsDurationPlayed
	float ___hapticsDurationPlayed_1;
	// System.Single OVRInput/HapticInfo::hapticsDuration
	float ___hapticsDuration_2;
	// System.Single OVRInput/HapticInfo::hapticAmplitude
	float ___hapticAmplitude_3;
	// UnityEngine.XR.XRNode OVRInput/HapticInfo::node
	int32_t ___node_4;
};

// OVRManager/<>c
struct U3CU3Ec_t428B95F22B12C42F05233DE02507635B55BBBF98  : public RuntimeObject
{
};

// OVRManager/PassthroughCapabilities
struct PassthroughCapabilities_t3B338539A7E4125FE79381628715BDC608471F9F  : public RuntimeObject
{
	// System.Boolean OVRManager/PassthroughCapabilities::<SupportsPassthrough>k__BackingField
	bool ___U3CSupportsPassthroughU3Ek__BackingField_0;
	// System.Boolean OVRManager/PassthroughCapabilities::<SupportsColorPassthrough>k__BackingField
	bool ___U3CSupportsColorPassthroughU3Ek__BackingField_1;
};

// OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker
struct ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B  : public RuntimeObject
{
	// System.Int32 OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker::<ReadCount>k__BackingField
	int32_t ___U3CReadCountU3Ek__BackingField_0;
	// OVRHapticsClip OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker::<Clip>k__BackingField
	OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* ___U3CClipU3Ek__BackingField_1;
};

// OVRInput/OVRControllerBase/VirtualAxis1DMap
struct VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD  : public RuntimeObject
{
	// OVRInput/RawAxis1D OVRInput/OVRControllerBase/VirtualAxis1DMap::None
	int32_t ___None_0;
	// OVRInput/RawAxis1D OVRInput/OVRControllerBase/VirtualAxis1DMap::PrimaryIndexTrigger
	int32_t ___PrimaryIndexTrigger_1;
	// OVRInput/RawAxis1D OVRInput/OVRControllerBase/VirtualAxis1DMap::PrimaryHandTrigger
	int32_t ___PrimaryHandTrigger_2;
	// OVRInput/RawAxis1D OVRInput/OVRControllerBase/VirtualAxis1DMap::SecondaryIndexTrigger
	int32_t ___SecondaryIndexTrigger_3;
	// OVRInput/RawAxis1D OVRInput/OVRControllerBase/VirtualAxis1DMap::SecondaryHandTrigger
	int32_t ___SecondaryHandTrigger_4;
	// OVRInput/RawAxis1D OVRInput/OVRControllerBase/VirtualAxis1DMap::PrimaryIndexTriggerCurl
	int32_t ___PrimaryIndexTriggerCurl_5;
	// OVRInput/RawAxis1D OVRInput/OVRControllerBase/VirtualAxis1DMap::PrimaryIndexTriggerSlide
	int32_t ___PrimaryIndexTriggerSlide_6;
	// OVRInput/RawAxis1D OVRInput/OVRControllerBase/VirtualAxis1DMap::PrimaryThumbRestForce
	int32_t ___PrimaryThumbRestForce_7;
	// OVRInput/RawAxis1D OVRInput/OVRControllerBase/VirtualAxis1DMap::PrimaryStylusForce
	int32_t ___PrimaryStylusForce_8;
	// OVRInput/RawAxis1D OVRInput/OVRControllerBase/VirtualAxis1DMap::SecondaryIndexTriggerCurl
	int32_t ___SecondaryIndexTriggerCurl_9;
	// OVRInput/RawAxis1D OVRInput/OVRControllerBase/VirtualAxis1DMap::SecondaryIndexTriggerSlide
	int32_t ___SecondaryIndexTriggerSlide_10;
	// OVRInput/RawAxis1D OVRInput/OVRControllerBase/VirtualAxis1DMap::SecondaryThumbRestForce
	int32_t ___SecondaryThumbRestForce_11;
	// OVRInput/RawAxis1D OVRInput/OVRControllerBase/VirtualAxis1DMap::SecondaryStylusForce
	int32_t ___SecondaryStylusForce_12;
};

// OVRInput/OVRControllerBase/VirtualAxis2DMap
struct VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10  : public RuntimeObject
{
	// OVRInput/RawAxis2D OVRInput/OVRControllerBase/VirtualAxis2DMap::None
	int32_t ___None_0;
	// OVRInput/RawAxis2D OVRInput/OVRControllerBase/VirtualAxis2DMap::PrimaryThumbstick
	int32_t ___PrimaryThumbstick_1;
	// OVRInput/RawAxis2D OVRInput/OVRControllerBase/VirtualAxis2DMap::PrimaryTouchpad
	int32_t ___PrimaryTouchpad_2;
	// OVRInput/RawAxis2D OVRInput/OVRControllerBase/VirtualAxis2DMap::SecondaryThumbstick
	int32_t ___SecondaryThumbstick_3;
	// OVRInput/RawAxis2D OVRInput/OVRControllerBase/VirtualAxis2DMap::SecondaryTouchpad
	int32_t ___SecondaryTouchpad_4;
};

// OVRInput/OVRControllerBase/VirtualButtonMap
struct VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6  : public RuntimeObject
{
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::None
	int32_t ___None_0;
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::One
	int32_t ___One_1;
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::Two
	int32_t ___Two_2;
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::Three
	int32_t ___Three_3;
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::Four
	int32_t ___Four_4;
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::Start
	int32_t ___Start_5;
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::Back
	int32_t ___Back_6;
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::PrimaryShoulder
	int32_t ___PrimaryShoulder_7;
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::PrimaryIndexTrigger
	int32_t ___PrimaryIndexTrigger_8;
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::PrimaryHandTrigger
	int32_t ___PrimaryHandTrigger_9;
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::PrimaryThumbstick
	int32_t ___PrimaryThumbstick_10;
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::PrimaryThumbstickUp
	int32_t ___PrimaryThumbstickUp_11;
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::PrimaryThumbstickDown
	int32_t ___PrimaryThumbstickDown_12;
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::PrimaryThumbstickLeft
	int32_t ___PrimaryThumbstickLeft_13;
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::PrimaryThumbstickRight
	int32_t ___PrimaryThumbstickRight_14;
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::PrimaryTouchpad
	int32_t ___PrimaryTouchpad_15;
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::SecondaryShoulder
	int32_t ___SecondaryShoulder_16;
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::SecondaryIndexTrigger
	int32_t ___SecondaryIndexTrigger_17;
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::SecondaryHandTrigger
	int32_t ___SecondaryHandTrigger_18;
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::SecondaryThumbstick
	int32_t ___SecondaryThumbstick_19;
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::SecondaryThumbstickUp
	int32_t ___SecondaryThumbstickUp_20;
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::SecondaryThumbstickDown
	int32_t ___SecondaryThumbstickDown_21;
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::SecondaryThumbstickLeft
	int32_t ___SecondaryThumbstickLeft_22;
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::SecondaryThumbstickRight
	int32_t ___SecondaryThumbstickRight_23;
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::SecondaryTouchpad
	int32_t ___SecondaryTouchpad_24;
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::DpadUp
	int32_t ___DpadUp_25;
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::DpadDown
	int32_t ___DpadDown_26;
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::DpadLeft
	int32_t ___DpadLeft_27;
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::DpadRight
	int32_t ___DpadRight_28;
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::Up
	int32_t ___Up_29;
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::Down
	int32_t ___Down_30;
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::Left
	int32_t ___Left_31;
	// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::Right
	int32_t ___Right_32;
};

// OVRInput/OVRControllerBase/VirtualNearTouchMap
struct VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3  : public RuntimeObject
{
	// OVRInput/RawNearTouch OVRInput/OVRControllerBase/VirtualNearTouchMap::None
	int32_t ___None_0;
	// OVRInput/RawNearTouch OVRInput/OVRControllerBase/VirtualNearTouchMap::PrimaryIndexTrigger
	int32_t ___PrimaryIndexTrigger_1;
	// OVRInput/RawNearTouch OVRInput/OVRControllerBase/VirtualNearTouchMap::PrimaryThumbButtons
	int32_t ___PrimaryThumbButtons_2;
	// OVRInput/RawNearTouch OVRInput/OVRControllerBase/VirtualNearTouchMap::SecondaryIndexTrigger
	int32_t ___SecondaryIndexTrigger_3;
	// OVRInput/RawNearTouch OVRInput/OVRControllerBase/VirtualNearTouchMap::SecondaryThumbButtons
	int32_t ___SecondaryThumbButtons_4;
};

// OVRInput/OVRControllerBase/VirtualTouchMap
struct VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169  : public RuntimeObject
{
	// OVRInput/RawTouch OVRInput/OVRControllerBase/VirtualTouchMap::None
	int32_t ___None_0;
	// OVRInput/RawTouch OVRInput/OVRControllerBase/VirtualTouchMap::One
	int32_t ___One_1;
	// OVRInput/RawTouch OVRInput/OVRControllerBase/VirtualTouchMap::Two
	int32_t ___Two_2;
	// OVRInput/RawTouch OVRInput/OVRControllerBase/VirtualTouchMap::Three
	int32_t ___Three_3;
	// OVRInput/RawTouch OVRInput/OVRControllerBase/VirtualTouchMap::Four
	int32_t ___Four_4;
	// OVRInput/RawTouch OVRInput/OVRControllerBase/VirtualTouchMap::PrimaryIndexTrigger
	int32_t ___PrimaryIndexTrigger_5;
	// OVRInput/RawTouch OVRInput/OVRControllerBase/VirtualTouchMap::PrimaryThumbstick
	int32_t ___PrimaryThumbstick_6;
	// OVRInput/RawTouch OVRInput/OVRControllerBase/VirtualTouchMap::PrimaryThumbRest
	int32_t ___PrimaryThumbRest_7;
	// OVRInput/RawTouch OVRInput/OVRControllerBase/VirtualTouchMap::PrimaryTouchpad
	int32_t ___PrimaryTouchpad_8;
	// OVRInput/RawTouch OVRInput/OVRControllerBase/VirtualTouchMap::SecondaryIndexTrigger
	int32_t ___SecondaryIndexTrigger_9;
	// OVRInput/RawTouch OVRInput/OVRControllerBase/VirtualTouchMap::SecondaryThumbstick
	int32_t ___SecondaryThumbstick_10;
	// OVRInput/RawTouch OVRInput/OVRControllerBase/VirtualTouchMap::SecondaryThumbRest
	int32_t ___SecondaryThumbRest_11;
	// OVRInput/RawTouch OVRInput/OVRControllerBase/VirtualTouchMap::SecondaryTouchpad
	int32_t ___SecondaryTouchpad_12;
};

// System.Nullable`1<OVRPlugin/XrApi>
struct Nullable_1_tC438FE0466EF1565EE278C732EE7C3053C1053C4 
{
	// System.Boolean System.Nullable`1::hasValue
	bool ___hasValue_0;
	// T System.Nullable`1::value
	int32_t ___value_1;
};

// UnityEngine.AudioConfiguration
struct AudioConfiguration_t4C8585EA98B6559B306B6FAD6A68088555394A5D 
{
	// UnityEngine.AudioSpeakerMode UnityEngine.AudioConfiguration::speakerMode
	int32_t ___speakerMode_0;
	// System.Int32 UnityEngine.AudioConfiguration::dspBufferSize
	int32_t ___dspBufferSize_1;
	// System.Int32 UnityEngine.AudioConfiguration::sampleRate
	int32_t ___sampleRate_2;
	// System.Int32 UnityEngine.AudioConfiguration::numRealVoices
	int32_t ___numRealVoices_3;
	// System.Int32 UnityEngine.AudioConfiguration::numVirtualVoices
	int32_t ___numVirtualVoices_4;
};

// System.Boolean
struct Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22 
{
	// System.Boolean System.Boolean::m_value
	bool ___m_value_0;
};

// System.Byte
struct Byte_t94D9231AC217BE4D2E004C4CD32DF6D099EA41A3 
{
	// System.Byte System.Byte::m_value
	uint8_t ___m_value_0;
};

// System.Char
struct Char_t521A6F19B456D956AF452D926C32709DC03D6B17 
{
	// System.Char System.Char::m_value
	Il2CppChar ___m_value_0;
};

// UnityEngine.Color
struct Color_tD001788D726C3A7F1379BEED0260B9591F440C1F 
{
	// System.Single UnityEngine.Color::r
	float ___r_0;
	// System.Single UnityEngine.Color::g
	float ___g_1;
	// System.Single UnityEngine.Color::b
	float ___b_2;
	// System.Single UnityEngine.Color::a
	float ___a_3;
};

// System.Double
struct Double_tE150EF3D1D43DEE85D533810AB4C742307EEDE5F 
{
	// System.Double System.Double::m_value
	double ___m_value_0;
};

// System.Enum
struct Enum_t2A1A94B24E3B776EEF4E5E485E290BB9D4D072E2  : public ValueType_t6D9B272BD21782F0A9A14F2E41F85A50E97A986F
{
};
// Native definition for P/Invoke marshalling of System.Enum
struct Enum_t2A1A94B24E3B776EEF4E5E485E290BB9D4D072E2_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.Enum
struct Enum_t2A1A94B24E3B776EEF4E5E485E290BB9D4D072E2_marshaled_com
{
};

// System.Guid
struct Guid_t 
{
	// System.Int32 System.Guid::_a
	int32_t ____a_1;
	// System.Int16 System.Guid::_b
	int16_t ____b_2;
	// System.Int16 System.Guid::_c
	int16_t ____c_3;
	// System.Byte System.Guid::_d
	uint8_t ____d_4;
	// System.Byte System.Guid::_e
	uint8_t ____e_5;
	// System.Byte System.Guid::_f
	uint8_t ____f_6;
	// System.Byte System.Guid::_g
	uint8_t ____g_7;
	// System.Byte System.Guid::_h
	uint8_t ____h_8;
	// System.Byte System.Guid::_i
	uint8_t ____i_9;
	// System.Byte System.Guid::_j
	uint8_t ____j_10;
	// System.Byte System.Guid::_k
	uint8_t ____k_11;
};

// OVR.OpenVR.IVRSystem
struct IVRSystem_t6B77F1167E7DA3724D1593D1046A529EDB2A5F58 
{
	// OVR.OpenVR.IVRSystem/_GetRecommendedRenderTargetSize OVR.OpenVR.IVRSystem::GetRecommendedRenderTargetSize
	_GetRecommendedRenderTargetSize_tE5DCCAA3C127070265E730E834989CD71122B1EF* ___GetRecommendedRenderTargetSize_0;
	// OVR.OpenVR.IVRSystem/_GetProjectionMatrix OVR.OpenVR.IVRSystem::GetProjectionMatrix
	_GetProjectionMatrix_t9B0D0C3225387862FA516D50DB79579834EF0DD0* ___GetProjectionMatrix_1;
	// OVR.OpenVR.IVRSystem/_GetProjectionRaw OVR.OpenVR.IVRSystem::GetProjectionRaw
	_GetProjectionRaw_t6867187AE3A0151807D995F184BC67408FFA7496* ___GetProjectionRaw_2;
	// OVR.OpenVR.IVRSystem/_ComputeDistortion OVR.OpenVR.IVRSystem::ComputeDistortion
	_ComputeDistortion_tD147426B3B0270DAA7EB1C32043EBEF527870407* ___ComputeDistortion_3;
	// OVR.OpenVR.IVRSystem/_GetEyeToHeadTransform OVR.OpenVR.IVRSystem::GetEyeToHeadTransform
	_GetEyeToHeadTransform_t85F575C6B4387A61016410FF9B7F670D25973926* ___GetEyeToHeadTransform_4;
	// OVR.OpenVR.IVRSystem/_GetTimeSinceLastVsync OVR.OpenVR.IVRSystem::GetTimeSinceLastVsync
	_GetTimeSinceLastVsync_tCC442F5CDBF0A619CD0CD84A061FEA9DB1774D33* ___GetTimeSinceLastVsync_5;
	// OVR.OpenVR.IVRSystem/_GetD3D9AdapterIndex OVR.OpenVR.IVRSystem::GetD3D9AdapterIndex
	_GetD3D9AdapterIndex_t6EEF3293C1B40E937D92113B8A3F96DED8415791* ___GetD3D9AdapterIndex_6;
	// OVR.OpenVR.IVRSystem/_GetDXGIOutputInfo OVR.OpenVR.IVRSystem::GetDXGIOutputInfo
	_GetDXGIOutputInfo_t73FA51E5AB534DC0A3A6FDFD0C2D67177090E66C* ___GetDXGIOutputInfo_7;
	// OVR.OpenVR.IVRSystem/_GetOutputDevice OVR.OpenVR.IVRSystem::GetOutputDevice
	_GetOutputDevice_t83D6AE0AB6B1F21E5D87ECBB559E60D183610222* ___GetOutputDevice_8;
	// OVR.OpenVR.IVRSystem/_IsDisplayOnDesktop OVR.OpenVR.IVRSystem::IsDisplayOnDesktop
	_IsDisplayOnDesktop_tB1D86880DF7E8EEFEA7D0DA7B46695B38688FDF3* ___IsDisplayOnDesktop_9;
	// OVR.OpenVR.IVRSystem/_SetDisplayVisibility OVR.OpenVR.IVRSystem::SetDisplayVisibility
	_SetDisplayVisibility_tF1714A7C8CF32C530DF3BFEBA6F217AD02250F26* ___SetDisplayVisibility_10;
	// OVR.OpenVR.IVRSystem/_GetDeviceToAbsoluteTrackingPose OVR.OpenVR.IVRSystem::GetDeviceToAbsoluteTrackingPose
	_GetDeviceToAbsoluteTrackingPose_tBB4998801BAFE6FFD6003002E6948AABD08D081C* ___GetDeviceToAbsoluteTrackingPose_11;
	// OVR.OpenVR.IVRSystem/_ResetSeatedZeroPose OVR.OpenVR.IVRSystem::ResetSeatedZeroPose
	_ResetSeatedZeroPose_t5DA7EB83B5BC1CC765227E8BA0B5AAA63D14F009* ___ResetSeatedZeroPose_12;
	// OVR.OpenVR.IVRSystem/_GetSeatedZeroPoseToStandingAbsoluteTrackingPose OVR.OpenVR.IVRSystem::GetSeatedZeroPoseToStandingAbsoluteTrackingPose
	_GetSeatedZeroPoseToStandingAbsoluteTrackingPose_tBCAF710571F3E9B304E65DB1A7EC953392A29CF8* ___GetSeatedZeroPoseToStandingAbsoluteTrackingPose_13;
	// OVR.OpenVR.IVRSystem/_GetRawZeroPoseToStandingAbsoluteTrackingPose OVR.OpenVR.IVRSystem::GetRawZeroPoseToStandingAbsoluteTrackingPose
	_GetRawZeroPoseToStandingAbsoluteTrackingPose_t4CA0DDBB2D4969509146BAE587278F7C5DD922B2* ___GetRawZeroPoseToStandingAbsoluteTrackingPose_14;
	// OVR.OpenVR.IVRSystem/_GetSortedTrackedDeviceIndicesOfClass OVR.OpenVR.IVRSystem::GetSortedTrackedDeviceIndicesOfClass
	_GetSortedTrackedDeviceIndicesOfClass_t883B6DB2CE87516A965060EE45B5451AA01541E5* ___GetSortedTrackedDeviceIndicesOfClass_15;
	// OVR.OpenVR.IVRSystem/_GetTrackedDeviceActivityLevel OVR.OpenVR.IVRSystem::GetTrackedDeviceActivityLevel
	_GetTrackedDeviceActivityLevel_t18F25E592E9F23E1B42CE3FC8BBCDA9991877F73* ___GetTrackedDeviceActivityLevel_16;
	// OVR.OpenVR.IVRSystem/_ApplyTransform OVR.OpenVR.IVRSystem::ApplyTransform
	_ApplyTransform_t1D87B7AC1195BDAAA4CB3A0BC58BADBA6E134082* ___ApplyTransform_17;
	// OVR.OpenVR.IVRSystem/_GetTrackedDeviceIndexForControllerRole OVR.OpenVR.IVRSystem::GetTrackedDeviceIndexForControllerRole
	_GetTrackedDeviceIndexForControllerRole_tDC374474D4B923D02CF3907E7C7F19B0E01CE418* ___GetTrackedDeviceIndexForControllerRole_18;
	// OVR.OpenVR.IVRSystem/_GetControllerRoleForTrackedDeviceIndex OVR.OpenVR.IVRSystem::GetControllerRoleForTrackedDeviceIndex
	_GetControllerRoleForTrackedDeviceIndex_t04E0EBF506A4CA91A1F9F1E4528AD1BC9738C5EC* ___GetControllerRoleForTrackedDeviceIndex_19;
	// OVR.OpenVR.IVRSystem/_GetTrackedDeviceClass OVR.OpenVR.IVRSystem::GetTrackedDeviceClass
	_GetTrackedDeviceClass_t7347331DDB1CBA2ED64A115A3F67805DACFB92F9* ___GetTrackedDeviceClass_20;
	// OVR.OpenVR.IVRSystem/_IsTrackedDeviceConnected OVR.OpenVR.IVRSystem::IsTrackedDeviceConnected
	_IsTrackedDeviceConnected_t9AA842DF79300B59CA9D06D4BB080D34F2A8BE55* ___IsTrackedDeviceConnected_21;
	// OVR.OpenVR.IVRSystem/_GetBoolTrackedDeviceProperty OVR.OpenVR.IVRSystem::GetBoolTrackedDeviceProperty
	_GetBoolTrackedDeviceProperty_t8F0763D4AAD303DA0DD843E9A8336C7B3E098A63* ___GetBoolTrackedDeviceProperty_22;
	// OVR.OpenVR.IVRSystem/_GetFloatTrackedDeviceProperty OVR.OpenVR.IVRSystem::GetFloatTrackedDeviceProperty
	_GetFloatTrackedDeviceProperty_t819CE8B33EBD3DB70A2F691EC0EA87F3B9E9F117* ___GetFloatTrackedDeviceProperty_23;
	// OVR.OpenVR.IVRSystem/_GetInt32TrackedDeviceProperty OVR.OpenVR.IVRSystem::GetInt32TrackedDeviceProperty
	_GetInt32TrackedDeviceProperty_t90F760BFCB8EFA6DE76F7DC6B6ADDB9E7A82AB86* ___GetInt32TrackedDeviceProperty_24;
	// OVR.OpenVR.IVRSystem/_GetUint64TrackedDeviceProperty OVR.OpenVR.IVRSystem::GetUint64TrackedDeviceProperty
	_GetUint64TrackedDeviceProperty_tF9AAE5FDB16FE39CDF74EA82D87D05C9A58D6A8A* ___GetUint64TrackedDeviceProperty_25;
	// OVR.OpenVR.IVRSystem/_GetMatrix34TrackedDeviceProperty OVR.OpenVR.IVRSystem::GetMatrix34TrackedDeviceProperty
	_GetMatrix34TrackedDeviceProperty_t2CF43EAD342BBD7FDE42D16D697091316658494B* ___GetMatrix34TrackedDeviceProperty_26;
	// OVR.OpenVR.IVRSystem/_GetArrayTrackedDeviceProperty OVR.OpenVR.IVRSystem::GetArrayTrackedDeviceProperty
	_GetArrayTrackedDeviceProperty_t36E75990577ED75C9F44C743E8E27396AF36240C* ___GetArrayTrackedDeviceProperty_27;
	// OVR.OpenVR.IVRSystem/_GetStringTrackedDeviceProperty OVR.OpenVR.IVRSystem::GetStringTrackedDeviceProperty
	_GetStringTrackedDeviceProperty_t76FD9D8448083C12ED3BE15AE73D5C38E4ADECC5* ___GetStringTrackedDeviceProperty_28;
	// OVR.OpenVR.IVRSystem/_GetPropErrorNameFromEnum OVR.OpenVR.IVRSystem::GetPropErrorNameFromEnum
	_GetPropErrorNameFromEnum_t89F1CBA1871CB900043DA4EA17B5C59A44A19EF5* ___GetPropErrorNameFromEnum_29;
	// OVR.OpenVR.IVRSystem/_PollNextEvent OVR.OpenVR.IVRSystem::PollNextEvent
	_PollNextEvent_t7661E5AF679D8C0B4F9959F46724FAB9AD4658DD* ___PollNextEvent_30;
	// OVR.OpenVR.IVRSystem/_PollNextEventWithPose OVR.OpenVR.IVRSystem::PollNextEventWithPose
	_PollNextEventWithPose_tAC36873017089F9D283AFA6D22503AFD8ACFA96F* ___PollNextEventWithPose_31;
	// OVR.OpenVR.IVRSystem/_GetEventTypeNameFromEnum OVR.OpenVR.IVRSystem::GetEventTypeNameFromEnum
	_GetEventTypeNameFromEnum_tBCFA4CF8CD31A63BCE5C028F86023D5B3F56C4C5* ___GetEventTypeNameFromEnum_32;
	// OVR.OpenVR.IVRSystem/_GetHiddenAreaMesh OVR.OpenVR.IVRSystem::GetHiddenAreaMesh
	_GetHiddenAreaMesh_t426F5CEB93D8D3593835185EA732C11AB30E2A43* ___GetHiddenAreaMesh_33;
	// OVR.OpenVR.IVRSystem/_GetControllerState OVR.OpenVR.IVRSystem::GetControllerState
	_GetControllerState_tA53B014959406294ECAB190EBC86F3A1EFF49E00* ___GetControllerState_34;
	// OVR.OpenVR.IVRSystem/_GetControllerStateWithPose OVR.OpenVR.IVRSystem::GetControllerStateWithPose
	_GetControllerStateWithPose_t64510A0EF68D6CB2CAFDC50BA60A66729637DB56* ___GetControllerStateWithPose_35;
	// OVR.OpenVR.IVRSystem/_TriggerHapticPulse OVR.OpenVR.IVRSystem::TriggerHapticPulse
	_TriggerHapticPulse_tEDD2E25EA770F3D7341ECEA5409A692C8BCCE773* ___TriggerHapticPulse_36;
	// OVR.OpenVR.IVRSystem/_GetButtonIdNameFromEnum OVR.OpenVR.IVRSystem::GetButtonIdNameFromEnum
	_GetButtonIdNameFromEnum_t723788274FE11A4D7D6CD49D95D14266B392E65F* ___GetButtonIdNameFromEnum_37;
	// OVR.OpenVR.IVRSystem/_GetControllerAxisTypeNameFromEnum OVR.OpenVR.IVRSystem::GetControllerAxisTypeNameFromEnum
	_GetControllerAxisTypeNameFromEnum_t7FD5B5167CB91A7866C19AA6D30A175467EC2CAF* ___GetControllerAxisTypeNameFromEnum_38;
	// OVR.OpenVR.IVRSystem/_IsInputAvailable OVR.OpenVR.IVRSystem::IsInputAvailable
	_IsInputAvailable_t432F7CFC272FE7E8A2D8C57AC0F6A9AD55BF759B* ___IsInputAvailable_39;
	// OVR.OpenVR.IVRSystem/_IsSteamVRDrawingControllers OVR.OpenVR.IVRSystem::IsSteamVRDrawingControllers
	_IsSteamVRDrawingControllers_t2BBCA30078A8E13FA361F46562662C6B4DEB0223* ___IsSteamVRDrawingControllers_40;
	// OVR.OpenVR.IVRSystem/_ShouldApplicationPause OVR.OpenVR.IVRSystem::ShouldApplicationPause
	_ShouldApplicationPause_t363B2CBD8131B77FADAF11D24071E94B3A15FA37* ___ShouldApplicationPause_41;
	// OVR.OpenVR.IVRSystem/_ShouldApplicationReduceRenderingWork OVR.OpenVR.IVRSystem::ShouldApplicationReduceRenderingWork
	_ShouldApplicationReduceRenderingWork_t49429140C48F7CFAFDD2EAFBEB0FE31BA6FBFA29* ___ShouldApplicationReduceRenderingWork_42;
	// OVR.OpenVR.IVRSystem/_DriverDebugRequest OVR.OpenVR.IVRSystem::DriverDebugRequest
	_DriverDebugRequest_t3418F0E739483EDFBDB2AB22D7AF53CFA2EAE313* ___DriverDebugRequest_43;
	// OVR.OpenVR.IVRSystem/_PerformFirmwareUpdate OVR.OpenVR.IVRSystem::PerformFirmwareUpdate
	_PerformFirmwareUpdate_t26607D5B0AFAB7AFE81A453EC1749DC43FAB3E98* ___PerformFirmwareUpdate_44;
	// OVR.OpenVR.IVRSystem/_AcknowledgeQuit_Exiting OVR.OpenVR.IVRSystem::AcknowledgeQuit_Exiting
	_AcknowledgeQuit_Exiting_tEF47D178982F69800F0863A0556AA537BE44047D* ___AcknowledgeQuit_Exiting_45;
	// OVR.OpenVR.IVRSystem/_AcknowledgeQuit_UserPrompt OVR.OpenVR.IVRSystem::AcknowledgeQuit_UserPrompt
	_AcknowledgeQuit_UserPrompt_t39607F7E8E1F30F7A3286CC18C60010E7568AF37* ___AcknowledgeQuit_UserPrompt_46;
};
// Native definition for P/Invoke marshalling of OVR.OpenVR.IVRSystem
struct IVRSystem_t6B77F1167E7DA3724D1593D1046A529EDB2A5F58_marshaled_pinvoke
{
	Il2CppMethodPointer ___GetRecommendedRenderTargetSize_0;
	Il2CppMethodPointer ___GetProjectionMatrix_1;
	Il2CppMethodPointer ___GetProjectionRaw_2;
	Il2CppMethodPointer ___ComputeDistortion_3;
	Il2CppMethodPointer ___GetEyeToHeadTransform_4;
	Il2CppMethodPointer ___GetTimeSinceLastVsync_5;
	Il2CppMethodPointer ___GetD3D9AdapterIndex_6;
	Il2CppMethodPointer ___GetDXGIOutputInfo_7;
	Il2CppMethodPointer ___GetOutputDevice_8;
	Il2CppMethodPointer ___IsDisplayOnDesktop_9;
	Il2CppMethodPointer ___SetDisplayVisibility_10;
	Il2CppMethodPointer ___GetDeviceToAbsoluteTrackingPose_11;
	Il2CppMethodPointer ___ResetSeatedZeroPose_12;
	Il2CppMethodPointer ___GetSeatedZeroPoseToStandingAbsoluteTrackingPose_13;
	Il2CppMethodPointer ___GetRawZeroPoseToStandingAbsoluteTrackingPose_14;
	Il2CppMethodPointer ___GetSortedTrackedDeviceIndicesOfClass_15;
	Il2CppMethodPointer ___GetTrackedDeviceActivityLevel_16;
	Il2CppMethodPointer ___ApplyTransform_17;
	Il2CppMethodPointer ___GetTrackedDeviceIndexForControllerRole_18;
	Il2CppMethodPointer ___GetControllerRoleForTrackedDeviceIndex_19;
	Il2CppMethodPointer ___GetTrackedDeviceClass_20;
	Il2CppMethodPointer ___IsTrackedDeviceConnected_21;
	Il2CppMethodPointer ___GetBoolTrackedDeviceProperty_22;
	Il2CppMethodPointer ___GetFloatTrackedDeviceProperty_23;
	Il2CppMethodPointer ___GetInt32TrackedDeviceProperty_24;
	Il2CppMethodPointer ___GetUint64TrackedDeviceProperty_25;
	Il2CppMethodPointer ___GetMatrix34TrackedDeviceProperty_26;
	Il2CppMethodPointer ___GetArrayTrackedDeviceProperty_27;
	Il2CppMethodPointer ___GetStringTrackedDeviceProperty_28;
	Il2CppMethodPointer ___GetPropErrorNameFromEnum_29;
	Il2CppMethodPointer ___PollNextEvent_30;
	Il2CppMethodPointer ___PollNextEventWithPose_31;
	Il2CppMethodPointer ___GetEventTypeNameFromEnum_32;
	Il2CppMethodPointer ___GetHiddenAreaMesh_33;
	Il2CppMethodPointer ___GetControllerState_34;
	Il2CppMethodPointer ___GetControllerStateWithPose_35;
	Il2CppMethodPointer ___TriggerHapticPulse_36;
	Il2CppMethodPointer ___GetButtonIdNameFromEnum_37;
	Il2CppMethodPointer ___GetControllerAxisTypeNameFromEnum_38;
	Il2CppMethodPointer ___IsInputAvailable_39;
	Il2CppMethodPointer ___IsSteamVRDrawingControllers_40;
	Il2CppMethodPointer ___ShouldApplicationPause_41;
	Il2CppMethodPointer ___ShouldApplicationReduceRenderingWork_42;
	Il2CppMethodPointer ___DriverDebugRequest_43;
	Il2CppMethodPointer ___PerformFirmwareUpdate_44;
	Il2CppMethodPointer ___AcknowledgeQuit_Exiting_45;
	Il2CppMethodPointer ___AcknowledgeQuit_UserPrompt_46;
};
// Native definition for COM marshalling of OVR.OpenVR.IVRSystem
struct IVRSystem_t6B77F1167E7DA3724D1593D1046A529EDB2A5F58_marshaled_com
{
	Il2CppMethodPointer ___GetRecommendedRenderTargetSize_0;
	Il2CppMethodPointer ___GetProjectionMatrix_1;
	Il2CppMethodPointer ___GetProjectionRaw_2;
	Il2CppMethodPointer ___ComputeDistortion_3;
	Il2CppMethodPointer ___GetEyeToHeadTransform_4;
	Il2CppMethodPointer ___GetTimeSinceLastVsync_5;
	Il2CppMethodPointer ___GetD3D9AdapterIndex_6;
	Il2CppMethodPointer ___GetDXGIOutputInfo_7;
	Il2CppMethodPointer ___GetOutputDevice_8;
	Il2CppMethodPointer ___IsDisplayOnDesktop_9;
	Il2CppMethodPointer ___SetDisplayVisibility_10;
	Il2CppMethodPointer ___GetDeviceToAbsoluteTrackingPose_11;
	Il2CppMethodPointer ___ResetSeatedZeroPose_12;
	Il2CppMethodPointer ___GetSeatedZeroPoseToStandingAbsoluteTrackingPose_13;
	Il2CppMethodPointer ___GetRawZeroPoseToStandingAbsoluteTrackingPose_14;
	Il2CppMethodPointer ___GetSortedTrackedDeviceIndicesOfClass_15;
	Il2CppMethodPointer ___GetTrackedDeviceActivityLevel_16;
	Il2CppMethodPointer ___ApplyTransform_17;
	Il2CppMethodPointer ___GetTrackedDeviceIndexForControllerRole_18;
	Il2CppMethodPointer ___GetControllerRoleForTrackedDeviceIndex_19;
	Il2CppMethodPointer ___GetTrackedDeviceClass_20;
	Il2CppMethodPointer ___IsTrackedDeviceConnected_21;
	Il2CppMethodPointer ___GetBoolTrackedDeviceProperty_22;
	Il2CppMethodPointer ___GetFloatTrackedDeviceProperty_23;
	Il2CppMethodPointer ___GetInt32TrackedDeviceProperty_24;
	Il2CppMethodPointer ___GetUint64TrackedDeviceProperty_25;
	Il2CppMethodPointer ___GetMatrix34TrackedDeviceProperty_26;
	Il2CppMethodPointer ___GetArrayTrackedDeviceProperty_27;
	Il2CppMethodPointer ___GetStringTrackedDeviceProperty_28;
	Il2CppMethodPointer ___GetPropErrorNameFromEnum_29;
	Il2CppMethodPointer ___PollNextEvent_30;
	Il2CppMethodPointer ___PollNextEventWithPose_31;
	Il2CppMethodPointer ___GetEventTypeNameFromEnum_32;
	Il2CppMethodPointer ___GetHiddenAreaMesh_33;
	Il2CppMethodPointer ___GetControllerState_34;
	Il2CppMethodPointer ___GetControllerStateWithPose_35;
	Il2CppMethodPointer ___TriggerHapticPulse_36;
	Il2CppMethodPointer ___GetButtonIdNameFromEnum_37;
	Il2CppMethodPointer ___GetControllerAxisTypeNameFromEnum_38;
	Il2CppMethodPointer ___IsInputAvailable_39;
	Il2CppMethodPointer ___IsSteamVRDrawingControllers_40;
	Il2CppMethodPointer ___ShouldApplicationPause_41;
	Il2CppMethodPointer ___ShouldApplicationReduceRenderingWork_42;
	Il2CppMethodPointer ___DriverDebugRequest_43;
	Il2CppMethodPointer ___PerformFirmwareUpdate_44;
	Il2CppMethodPointer ___AcknowledgeQuit_Exiting_45;
	Il2CppMethodPointer ___AcknowledgeQuit_UserPrompt_46;
};

// System.Int32
struct Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C 
{
	// System.Int32 System.Int32::m_value
	int32_t ___m_value_0;
};

// System.IntPtr
struct IntPtr_t 
{
	// System.Void* System.IntPtr::m_value
	void* ___m_value_0;
};

// UnityEngine.LayerMask
struct LayerMask_t97CB6BDADEDC3D6423C7BCFEA7F86DA2EC6241DB 
{
	// System.Int32 UnityEngine.LayerMask::m_Mask
	int32_t ___m_Mask_0;
};

// UnityEngine.Matrix4x4
struct Matrix4x4_tDB70CF134A14BA38190C59AA700BCE10E2AED3E6 
{
	// System.Single UnityEngine.Matrix4x4::m00
	float ___m00_0;
	// System.Single UnityEngine.Matrix4x4::m10
	float ___m10_1;
	// System.Single UnityEngine.Matrix4x4::m20
	float ___m20_2;
	// System.Single UnityEngine.Matrix4x4::m30
	float ___m30_3;
	// System.Single UnityEngine.Matrix4x4::m01
	float ___m01_4;
	// System.Single UnityEngine.Matrix4x4::m11
	float ___m11_5;
	// System.Single UnityEngine.Matrix4x4::m21
	float ___m21_6;
	// System.Single UnityEngine.Matrix4x4::m31
	float ___m31_7;
	// System.Single UnityEngine.Matrix4x4::m02
	float ___m02_8;
	// System.Single UnityEngine.Matrix4x4::m12
	float ___m12_9;
	// System.Single UnityEngine.Matrix4x4::m22
	float ___m22_10;
	// System.Single UnityEngine.Matrix4x4::m32
	float ___m32_11;
	// System.Single UnityEngine.Matrix4x4::m03
	float ___m03_12;
	// System.Single UnityEngine.Matrix4x4::m13
	float ___m13_13;
	// System.Single UnityEngine.Matrix4x4::m23
	float ___m23_14;
	// System.Single UnityEngine.Matrix4x4::m33
	float ___m33_15;
};

// OVRBinaryChunk
struct OVRBinaryChunk_tE9B4C14312DD8DDC3FCF193FB3354692886D8925 
{
	// System.IO.Stream OVRBinaryChunk::chunkStream
	Stream_tF844051B786E8F7F4244DBD218D74E8617B9A2DE* ___chunkStream_0;
	// System.UInt32 OVRBinaryChunk::chunkLength
	uint32_t ___chunkLength_1;
	// System.Int64 OVRBinaryChunk::chunkStart
	int64_t ___chunkStart_2;
};
// Native definition for P/Invoke marshalling of OVRBinaryChunk
struct OVRBinaryChunk_tE9B4C14312DD8DDC3FCF193FB3354692886D8925_marshaled_pinvoke
{
	Stream_tF844051B786E8F7F4244DBD218D74E8617B9A2DE* ___chunkStream_0;
	uint32_t ___chunkLength_1;
	int64_t ___chunkStart_2;
};
// Native definition for COM marshalling of OVRBinaryChunk
struct OVRBinaryChunk_tE9B4C14312DD8DDC3FCF193FB3354692886D8925_marshaled_com
{
	Stream_tF844051B786E8F7F4244DBD218D74E8617B9A2DE* ___chunkStream_0;
	uint32_t ___chunkLength_1;
	int64_t ___chunkStart_2;
};

// OVRSpace
struct OVRSpace_tDA5A6DB241624CD5712AC4A71E565BA171985B4D 
{
	// System.UInt64 OVRSpace::<Handle>k__BackingField
	uint64_t ___U3CHandleU3Ek__BackingField_0;
};

// OVRTextureData
struct OVRTextureData_t357BF09E78929C6C4BC7C3039D461E73D58064A3 
{
	// System.Byte[] OVRTextureData::data
	ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___data_0;
	// System.Int32 OVRTextureData::width
	int32_t ___width_1;
	// System.Int32 OVRTextureData::height
	int32_t ___height_2;
	// OVRTextureFormat OVRTextureData::format
	int32_t ___format_3;
	// UnityEngine.TextureFormat OVRTextureData::transcodedFormat
	int32_t ___transcodedFormat_4;
};
// Native definition for P/Invoke marshalling of OVRTextureData
struct OVRTextureData_t357BF09E78929C6C4BC7C3039D461E73D58064A3_marshaled_pinvoke
{
	Il2CppSafeArray/*NONE*/* ___data_0;
	int32_t ___width_1;
	int32_t ___height_2;
	int32_t ___format_3;
	int32_t ___transcodedFormat_4;
};
// Native definition for COM marshalling of OVRTextureData
struct OVRTextureData_t357BF09E78929C6C4BC7C3039D461E73D58064A3_marshaled_com
{
	Il2CppSafeArray/*NONE*/* ___data_0;
	int32_t ___width_1;
	int32_t ___height_2;
	int32_t ___format_3;
	int32_t ___transcodedFormat_4;
};

// UnityEngine.PropertyAttribute
struct PropertyAttribute_t5E0CB5A6CDA6E24CBD4FF26DE3B0C29D8BB54BF0  : public Attribute_tFDA8EFEFB0711976D22474794576DAF28F7440AA
{
	// System.Int32 UnityEngine.PropertyAttribute::<order>k__BackingField
	int32_t ___U3CorderU3Ek__BackingField_0;
};

// UnityEngine.Quaternion
struct Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 
{
	// System.Single UnityEngine.Quaternion::x
	float ___x_0;
	// System.Single UnityEngine.Quaternion::y
	float ___y_1;
	// System.Single UnityEngine.Quaternion::z
	float ___z_2;
	// System.Single UnityEngine.Quaternion::w
	float ___w_3;
};

// System.Single
struct Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C 
{
	// System.Single System.Single::m_value
	float ___m_value_0;
};

// System.UInt16
struct UInt16_tF4C148C876015C212FD72652D0B6ED8CC247A455 
{
	// System.UInt16 System.UInt16::m_value
	uint16_t ___m_value_0;
};

// System.UInt32
struct UInt32_t1833D51FFA667B18A5AA4B8D34DE284F8495D29B 
{
	// System.UInt32 System.UInt32::m_value
	uint32_t ___m_value_0;
};

// System.UInt64
struct UInt64_t8F12534CC8FC4B5860F2A2CD1EE79D322E7A41AF 
{
	// System.UInt64 System.UInt64::m_value
	uint64_t ___m_value_0;
};

// OVR.OpenVR.VRControllerAxis_t
struct VRControllerAxis_t_t7A458D676363300CD993C97644DD786720A9C7E4 
{
	// System.Single OVR.OpenVR.VRControllerAxis_t::x
	float ___x_0;
	// System.Single OVR.OpenVR.VRControllerAxis_t::y
	float ___y_1;
};

// UnityEngine.Vector2
struct Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 
{
	// System.Single UnityEngine.Vector2::x
	float ___x_0;
	// System.Single UnityEngine.Vector2::y
	float ___y_1;
};

// UnityEngine.Vector3
struct Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 
{
	// System.Single UnityEngine.Vector3::x
	float ___x_2;
	// System.Single UnityEngine.Vector3::y
	float ___y_3;
	// System.Single UnityEngine.Vector3::z
	float ___z_4;
};

// UnityEngine.Vector4
struct Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3 
{
	// System.Single UnityEngine.Vector4::x
	float ___x_1;
	// System.Single UnityEngine.Vector4::y
	float ___y_2;
	// System.Single UnityEngine.Vector4::z
	float ___z_3;
	// System.Single UnityEngine.Vector4::w
	float ___w_4;
};

// System.Void
struct Void_t4861ACF8F4594C3437BB48B6E56783494B843915 
{
	union
	{
		struct
		{
		};
		uint8_t Void_t4861ACF8F4594C3437BB48B6E56783494B843915__padding[1];
	};
};

// OVRDeserialize/DisplayRefreshRateChangedData
struct DisplayRefreshRateChangedData_t8412C04FE31982A8D071487EC6E25215EEEFD5AE 
{
	// System.Single OVRDeserialize/DisplayRefreshRateChangedData::FromRefreshRate
	float ___FromRefreshRate_0;
	// System.Single OVRDeserialize/DisplayRefreshRateChangedData::ToRefreshRate
	float ___ToRefreshRate_1;
};

// OVRDeserialize/SceneCaptureCompleteData
struct SceneCaptureCompleteData_t309B8671164A38CEA71FDAC002DB145FFAECA033 
{
	// System.UInt64 OVRDeserialize/SceneCaptureCompleteData::RequestId
	uint64_t ___RequestId_0;
	// System.Int32 OVRDeserialize/SceneCaptureCompleteData::Result
	int32_t ___Result_1;
};

// OVRDeserialize/SpaceListSaveResultData
struct SpaceListSaveResultData_tCFC8B45EABB98F65FE80A9D7659D7E898383970D 
{
	// System.UInt64 OVRDeserialize/SpaceListSaveResultData::RequestId
	uint64_t ___RequestId_0;
	// System.Int32 OVRDeserialize/SpaceListSaveResultData::Result
	int32_t ___Result_1;
};

// OVRDeserialize/SpaceQueryCompleteData
struct SpaceQueryCompleteData_tF177ABA884999611B5EC3DC2944FCE143E9F749F 
{
	// System.UInt64 OVRDeserialize/SpaceQueryCompleteData::RequestId
	uint64_t ___RequestId_0;
	// System.Int32 OVRDeserialize/SpaceQueryCompleteData::Result
	int32_t ___Result_1;
};

// OVRDeserialize/SpaceQueryResultsData
struct SpaceQueryResultsData_tED5DAE5E8BDB324E88D3A492B94ECEACA6BA907A 
{
	// System.UInt64 OVRDeserialize/SpaceQueryResultsData::RequestId
	uint64_t ___RequestId_0;
};

// OVRDeserialize/SpaceShareResultData
struct SpaceShareResultData_t1BE431DF2FC60FBBB1F6BA5ECFB140117CFF044F 
{
	// System.UInt64 OVRDeserialize/SpaceShareResultData::RequestId
	uint64_t ___RequestId_0;
	// System.Int32 OVRDeserialize/SpaceShareResultData::Result
	int32_t ___Result_1;
};

// OVRInput/HapticsAmplitudeEnvelopeVibration
struct HapticsAmplitudeEnvelopeVibration_t2EDF01B96CFAC2D09DDCAACEDEA5C2F534F252C9 
{
	// System.Int32 OVRInput/HapticsAmplitudeEnvelopeVibration::SamplesCount
	int32_t ___SamplesCount_0;
	// System.Single[] OVRInput/HapticsAmplitudeEnvelopeVibration::Samples
	SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___Samples_1;
	// System.Single OVRInput/HapticsAmplitudeEnvelopeVibration::Duration
	float ___Duration_2;
};
// Native definition for P/Invoke marshalling of OVRInput/HapticsAmplitudeEnvelopeVibration
struct HapticsAmplitudeEnvelopeVibration_t2EDF01B96CFAC2D09DDCAACEDEA5C2F534F252C9_marshaled_pinvoke
{
	int32_t ___SamplesCount_0;
	Il2CppSafeArray/*NONE*/* ___Samples_1;
	float ___Duration_2;
};
// Native definition for COM marshalling of OVRInput/HapticsAmplitudeEnvelopeVibration
struct HapticsAmplitudeEnvelopeVibration_t2EDF01B96CFAC2D09DDCAACEDEA5C2F534F252C9_marshaled_com
{
	int32_t ___SamplesCount_0;
	Il2CppSafeArray/*NONE*/* ___Samples_1;
	float ___Duration_2;
};

// OVRInput/HapticsPcmVibration
struct HapticsPcmVibration_tA67530C77AF893E2DAE4AC825EB6477B76251781 
{
	// System.Int32 OVRInput/HapticsPcmVibration::SamplesCount
	int32_t ___SamplesCount_0;
	// System.Single[] OVRInput/HapticsPcmVibration::Samples
	SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___Samples_1;
	// System.Single OVRInput/HapticsPcmVibration::SampleRateHz
	float ___SampleRateHz_2;
	// System.Boolean OVRInput/HapticsPcmVibration::Append
	bool ___Append_3;
};
// Native definition for P/Invoke marshalling of OVRInput/HapticsPcmVibration
struct HapticsPcmVibration_tA67530C77AF893E2DAE4AC825EB6477B76251781_marshaled_pinvoke
{
	int32_t ___SamplesCount_0;
	Il2CppSafeArray/*NONE*/* ___Samples_1;
	float ___SampleRateHz_2;
	int32_t ___Append_3;
};
// Native definition for COM marshalling of OVRInput/HapticsPcmVibration
struct HapticsPcmVibration_tA67530C77AF893E2DAE4AC825EB6477B76251781_marshaled_com
{
	int32_t ___SamplesCount_0;
	Il2CppSafeArray/*NONE*/* ___Samples_1;
	float ___SampleRateHz_2;
	int32_t ___Append_3;
};

// OVRPlugin/FaceExpressionStatusInternal
struct FaceExpressionStatusInternal_t0592CB9F5E98E76C7E4CC595F498CA50FBE8DC7F 
{
	// OVRPlugin/Bool OVRPlugin/FaceExpressionStatusInternal::IsValid
	int32_t ___IsValid_0;
	// OVRPlugin/Bool OVRPlugin/FaceExpressionStatusInternal::IsEyeFollowingBlendshapesValid
	int32_t ___IsEyeFollowingBlendshapesValid_1;
};

// OVRPlugin/HapticsDesc
struct HapticsDesc_tA499A18F90CA6E72D680CBF94F1B189E31F8844A 
{
	// System.Int32 OVRPlugin/HapticsDesc::SampleRateHz
	int32_t ___SampleRateHz_0;
	// System.Int32 OVRPlugin/HapticsDesc::SampleSizeInBytes
	int32_t ___SampleSizeInBytes_1;
	// System.Int32 OVRPlugin/HapticsDesc::MinimumSafeSamplesQueued
	int32_t ___MinimumSafeSamplesQueued_2;
	// System.Int32 OVRPlugin/HapticsDesc::MinimumBufferSamplesCount
	int32_t ___MinimumBufferSamplesCount_3;
	// System.Int32 OVRPlugin/HapticsDesc::OptimalBufferSamplesCount
	int32_t ___OptimalBufferSamplesCount_4;
	// System.Int32 OVRPlugin/HapticsDesc::MaximumBufferSamplesCount
	int32_t ___MaximumBufferSamplesCount_5;
};

// OVRPlugin/HapticsState
struct HapticsState_tF1FED426B2261FB06D69988945D47B96DC067ABD 
{
	// System.Int32 OVRPlugin/HapticsState::SamplesAvailable
	int32_t ___SamplesAvailable_0;
	// System.Int32 OVRPlugin/HapticsState::SamplesQueued
	int32_t ___SamplesQueued_1;
};

// OVRPlugin/Quatf
struct Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A 
{
	// System.Single OVRPlugin/Quatf::x
	float ___x_0;
	// System.Single OVRPlugin/Quatf::y
	float ___y_1;
	// System.Single OVRPlugin/Quatf::z
	float ___z_2;
	// System.Single OVRPlugin/Quatf::w
	float ___w_3;
};

// OVRPlugin/Vector2f
struct Vector2f_tB2A7770F503276F90D359B6933F0A86D51BA3186 
{
	// System.Single OVRPlugin/Vector2f::x
	float ___x_0;
	// System.Single OVRPlugin/Vector2f::y
	float ___y_1;
};

// OVRPlugin/Vector3f
struct Vector3f_t232AF83B4642C67BE8EFF85D8E1599D3B06BD562 
{
	// System.Single OVRPlugin/Vector3f::x
	float ___x_0;
	// System.Single OVRPlugin/Vector3f::y
	float ___y_1;
	// System.Single OVRPlugin/Vector3f::z
	float ___z_2;
};

// OVR.OpenVR.CVRSystem
struct CVRSystem_tD199D16B8A7CC7F19E6E0B5D9AE59156C2312B1A  : public RuntimeObject
{
	// OVR.OpenVR.IVRSystem OVR.OpenVR.CVRSystem::FnTable
	IVRSystem_t6B77F1167E7DA3724D1593D1046A529EDB2A5F58 ___FnTable_0;
};

// System.Delegate
struct Delegate_t  : public RuntimeObject
{
	// System.IntPtr System.Delegate::method_ptr
	Il2CppMethodPointer ___method_ptr_0;
	// System.IntPtr System.Delegate::invoke_impl
	intptr_t ___invoke_impl_1;
	// System.Object System.Delegate::m_target
	RuntimeObject* ___m_target_2;
	// System.IntPtr System.Delegate::method
	intptr_t ___method_3;
	// System.IntPtr System.Delegate::delegate_trampoline
	intptr_t ___delegate_trampoline_4;
	// System.IntPtr System.Delegate::extra_arg
	intptr_t ___extra_arg_5;
	// System.IntPtr System.Delegate::method_code
	intptr_t ___method_code_6;
	// System.IntPtr System.Delegate::interp_method
	intptr_t ___interp_method_7;
	// System.IntPtr System.Delegate::interp_invoke_impl
	intptr_t ___interp_invoke_impl_8;
	// System.Reflection.MethodInfo System.Delegate::method_info
	MethodInfo_t* ___method_info_9;
	// System.Reflection.MethodInfo System.Delegate::original_method_info
	MethodInfo_t* ___original_method_info_10;
	// System.DelegateData System.Delegate::data
	DelegateData_t9B286B493293CD2D23A5B2B5EF0E5B1324C2B77E* ___data_11;
	// System.Boolean System.Delegate::method_is_virtual
	bool ___method_is_virtual_12;
};
// Native definition for P/Invoke marshalling of System.Delegate
struct Delegate_t_marshaled_pinvoke
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	intptr_t ___interp_method_7;
	intptr_t ___interp_invoke_impl_8;
	MethodInfo_t* ___method_info_9;
	MethodInfo_t* ___original_method_info_10;
	DelegateData_t9B286B493293CD2D23A5B2B5EF0E5B1324C2B77E* ___data_11;
	int32_t ___method_is_virtual_12;
};
// Native definition for COM marshalling of System.Delegate
struct Delegate_t_marshaled_com
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	intptr_t ___interp_method_7;
	intptr_t ___interp_invoke_impl_8;
	MethodInfo_t* ___method_info_9;
	MethodInfo_t* ___original_method_info_10;
	DelegateData_t9B286B493293CD2D23A5B2B5EF0E5B1324C2B77E* ___data_11;
	int32_t ___method_is_virtual_12;
};

// System.Exception
struct Exception_t  : public RuntimeObject
{
	// System.String System.Exception::_className
	String_t* ____className_1;
	// System.String System.Exception::_message
	String_t* ____message_2;
	// System.Collections.IDictionary System.Exception::_data
	RuntimeObject* ____data_3;
	// System.Exception System.Exception::_innerException
	Exception_t* ____innerException_4;
	// System.String System.Exception::_helpURL
	String_t* ____helpURL_5;
	// System.Object System.Exception::_stackTrace
	RuntimeObject* ____stackTrace_6;
	// System.String System.Exception::_stackTraceString
	String_t* ____stackTraceString_7;
	// System.String System.Exception::_remoteStackTraceString
	String_t* ____remoteStackTraceString_8;
	// System.Int32 System.Exception::_remoteStackIndex
	int32_t ____remoteStackIndex_9;
	// System.Object System.Exception::_dynamicMethods
	RuntimeObject* ____dynamicMethods_10;
	// System.Int32 System.Exception::_HResult
	int32_t ____HResult_11;
	// System.String System.Exception::_source
	String_t* ____source_12;
	// System.Runtime.Serialization.SafeSerializationManager System.Exception::_safeSerializationManager
	SafeSerializationManager_tCBB85B95DFD1634237140CD892E82D06ECB3F5E6* ____safeSerializationManager_13;
	// System.Diagnostics.StackTrace[] System.Exception::captured_traces
	StackTraceU5BU5D_t32FBCB20930EAF5BAE3F450FF75228E5450DA0DF* ___captured_traces_14;
	// System.IntPtr[] System.Exception::native_trace_ips
	IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___native_trace_ips_15;
	// System.Int32 System.Exception::caught_in_unmanaged
	int32_t ___caught_in_unmanaged_16;
};
// Native definition for P/Invoke marshalling of System.Exception
struct Exception_t_marshaled_pinvoke
{
	char* ____className_1;
	char* ____message_2;
	RuntimeObject* ____data_3;
	Exception_t_marshaled_pinvoke* ____innerException_4;
	char* ____helpURL_5;
	Il2CppIUnknown* ____stackTrace_6;
	char* ____stackTraceString_7;
	char* ____remoteStackTraceString_8;
	int32_t ____remoteStackIndex_9;
	Il2CppIUnknown* ____dynamicMethods_10;
	int32_t ____HResult_11;
	char* ____source_12;
	SafeSerializationManager_tCBB85B95DFD1634237140CD892E82D06ECB3F5E6* ____safeSerializationManager_13;
	StackTraceU5BU5D_t32FBCB20930EAF5BAE3F450FF75228E5450DA0DF* ___captured_traces_14;
	Il2CppSafeArray/*NONE*/* ___native_trace_ips_15;
	int32_t ___caught_in_unmanaged_16;
};
// Native definition for COM marshalling of System.Exception
struct Exception_t_marshaled_com
{
	Il2CppChar* ____className_1;
	Il2CppChar* ____message_2;
	RuntimeObject* ____data_3;
	Exception_t_marshaled_com* ____innerException_4;
	Il2CppChar* ____helpURL_5;
	Il2CppIUnknown* ____stackTrace_6;
	Il2CppChar* ____stackTraceString_7;
	Il2CppChar* ____remoteStackTraceString_8;
	int32_t ____remoteStackIndex_9;
	Il2CppIUnknown* ____dynamicMethods_10;
	int32_t ____HResult_11;
	Il2CppChar* ____source_12;
	SafeSerializationManager_tCBB85B95DFD1634237140CD892E82D06ECB3F5E6* ____safeSerializationManager_13;
	StackTraceU5BU5D_t32FBCB20930EAF5BAE3F450FF75228E5450DA0DF* ___captured_traces_14;
	Il2CppSafeArray/*NONE*/* ___native_trace_ips_15;
	int32_t ___caught_in_unmanaged_16;
};

// System.Runtime.InteropServices.GCHandle
struct GCHandle_tC44F6F72EE68BD4CFABA24309DA7A179D41127DC 
{
	// System.IntPtr System.Runtime.InteropServices.GCHandle::handle
	intptr_t ___handle_0;
};

// UnityEngine.IntegratedSubsystem
struct IntegratedSubsystem_t990160A89854D87C0836DC589B720231C02D4CE3  : public RuntimeObject
{
	// System.IntPtr UnityEngine.IntegratedSubsystem::m_Ptr
	intptr_t ___m_Ptr_0;
	// UnityEngine.ISubsystemDescriptor UnityEngine.IntegratedSubsystem::m_SubsystemDescriptor
	RuntimeObject* ___m_SubsystemDescriptor_1;
};
// Native definition for P/Invoke marshalling of UnityEngine.IntegratedSubsystem
struct IntegratedSubsystem_t990160A89854D87C0836DC589B720231C02D4CE3_marshaled_pinvoke
{
	intptr_t ___m_Ptr_0;
	RuntimeObject* ___m_SubsystemDescriptor_1;
};
// Native definition for COM marshalling of UnityEngine.IntegratedSubsystem
struct IntegratedSubsystem_t990160A89854D87C0836DC589B720231C02D4CE3_marshaled_com
{
	intptr_t ___m_Ptr_0;
	RuntimeObject* ___m_SubsystemDescriptor_1;
};

// UnityEngine.IntegratedSubsystemDescriptor
struct IntegratedSubsystemDescriptor_t9232963B842E01748A8E032928DC8E35DF00C10D  : public RuntimeObject
{
	// System.IntPtr UnityEngine.IntegratedSubsystemDescriptor::m_Ptr
	intptr_t ___m_Ptr_0;
};
// Native definition for P/Invoke marshalling of UnityEngine.IntegratedSubsystemDescriptor
struct IntegratedSubsystemDescriptor_t9232963B842E01748A8E032928DC8E35DF00C10D_marshaled_pinvoke
{
	intptr_t ___m_Ptr_0;
};
// Native definition for COM marshalling of UnityEngine.IntegratedSubsystemDescriptor
struct IntegratedSubsystemDescriptor_t9232963B842E01748A8E032928DC8E35DF00C10D_marshaled_com
{
	intptr_t ___m_Ptr_0;
};

// UnityEngine.KeyCode
struct KeyCode_t75B9ECCC26D858F55040DDFF9523681E996D17E9 
{
	// System.Int32 UnityEngine.KeyCode::value__
	int32_t ___value___2;
};

// OVRGLTFLoader
struct OVRGLTFLoader_t2E5E39D416422D0459916F5D1FA9C83CA2C92CD1  : public RuntimeObject
{
	// OVRSimpleJSON.JSONNode OVRGLTFLoader::m_jsonData
	JSONNode_t09FA149506F31AC2019A0E463804342305FA71A6* ___m_jsonData_0;
	// System.IO.Stream OVRGLTFLoader::m_glbStream
	Stream_tF844051B786E8F7F4244DBD218D74E8617B9A2DE* ___m_glbStream_1;
	// OVRBinaryChunk OVRGLTFLoader::m_binaryChunk
	OVRBinaryChunk_tE9B4C14312DD8DDC3FCF193FB3354692886D8925 ___m_binaryChunk_2;
	// System.Collections.Generic.List`1<UnityEngine.GameObject> OVRGLTFLoader::m_Nodes
	List_1_tB951CE80B58D1BF9650862451D8DAD8C231F207B* ___m_Nodes_3;
	// System.Collections.Generic.Dictionary`2<OVRGLTFInputNode,OVRGLTFAnimatinonNode> OVRGLTFLoader::m_AnimationNodes
	Dictionary_2_t0881BD89A39D2B1E5AEF17AF2312993FA3EF23FE* ___m_AnimationNodes_4;
	// UnityEngine.Shader OVRGLTFLoader::m_Shader
	Shader_tADC867D36B7876EE22427FAA2CE485105F4EE692* ___m_Shader_5;
	// UnityEngine.Shader OVRGLTFLoader::m_AlphaBlendShader
	Shader_tADC867D36B7876EE22427FAA2CE485105F4EE692* ___m_AlphaBlendShader_6;
	// OVRTextureQualityFiltering OVRGLTFLoader::m_TextureQuality
	int32_t ___m_TextureQuality_7;
	// System.Single OVRGLTFLoader::m_TextureMipmapBias
	float ___m_TextureMipmapBias_8;
};

// OVRLayerAttribute
struct OVRLayerAttribute_tD0FCB636847094CE881C27A03DACFD8B21D32ABB  : public PropertyAttribute_t5E0CB5A6CDA6E24CBD4FF26DE3B0C29D8BB54BF0
{
};

// OVRMaterialData
struct OVRMaterialData_tD4DEFD6FD5DCEE802F11DEBB7FECA677B52CA581 
{
	// UnityEngine.Shader OVRMaterialData::shader
	Shader_tADC867D36B7876EE22427FAA2CE485105F4EE692* ___shader_0;
	// System.Int32 OVRMaterialData::textureId
	int32_t ___textureId_1;
	// OVRTextureData OVRMaterialData::texture
	OVRTextureData_t357BF09E78929C6C4BC7C3039D461E73D58064A3 ___texture_2;
};
// Native definition for P/Invoke marshalling of OVRMaterialData
struct OVRMaterialData_tD4DEFD6FD5DCEE802F11DEBB7FECA677B52CA581_marshaled_pinvoke
{
	Shader_tADC867D36B7876EE22427FAA2CE485105F4EE692* ___shader_0;
	int32_t ___textureId_1;
	OVRTextureData_t357BF09E78929C6C4BC7C3039D461E73D58064A3_marshaled_pinvoke ___texture_2;
};
// Native definition for COM marshalling of OVRMaterialData
struct OVRMaterialData_tD4DEFD6FD5DCEE802F11DEBB7FECA677B52CA581_marshaled_com
{
	Shader_tADC867D36B7876EE22427FAA2CE485105F4EE692* ___shader_0;
	int32_t ___textureId_1;
	OVRTextureData_t357BF09E78929C6C4BC7C3039D461E73D58064A3_marshaled_com ___texture_2;
};

// OVRNativeBuffer
struct OVRNativeBuffer_tEBEDDBFD193B5EE2FE1E0C1B22AA823FB3703915  : public RuntimeObject
{
	// System.Boolean OVRNativeBuffer::disposed
	bool ___disposed_0;
	// System.Int32 OVRNativeBuffer::m_numBytes
	int32_t ___m_numBytes_1;
	// System.IntPtr OVRNativeBuffer::m_ptr
	intptr_t ___m_ptr_2;
};

// OVRPose
struct OVRPose_t8054769FD4517C10D2ECD2C14C823723D675EEFB 
{
	// UnityEngine.Vector3 OVRPose::position
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___position_0;
	// UnityEngine.Quaternion OVRPose::orientation
	Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 ___orientation_1;
};

// UnityEngine.Object
struct Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C  : public RuntimeObject
{
	// System.IntPtr UnityEngine.Object::m_CachedPtr
	intptr_t ___m_CachedPtr_0;
};
// Native definition for P/Invoke marshalling of UnityEngine.Object
struct Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_marshaled_pinvoke
{
	intptr_t ___m_CachedPtr_0;
};
// Native definition for COM marshalling of UnityEngine.Object
struct Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_marshaled_com
{
	intptr_t ___m_CachedPtr_0;
};

// System.RuntimeTypeHandle
struct RuntimeTypeHandle_t332A452B8B6179E4469B69525D0FE82A88030F7B 
{
	// System.IntPtr System.RuntimeTypeHandle::value
	intptr_t ___value_0;
};

// OVR.OpenVR.VRControllerState_t
struct VRControllerState_t_t50475AF703AB39117DE2C6CE266154309CD9BD4D 
{
	// System.UInt32 OVR.OpenVR.VRControllerState_t::unPacketNum
	uint32_t ___unPacketNum_0;
	// System.UInt64 OVR.OpenVR.VRControllerState_t::ulButtonPressed
	uint64_t ___ulButtonPressed_1;
	// System.UInt64 OVR.OpenVR.VRControllerState_t::ulButtonTouched
	uint64_t ___ulButtonTouched_2;
	// OVR.OpenVR.VRControllerAxis_t OVR.OpenVR.VRControllerState_t::rAxis0
	VRControllerAxis_t_t7A458D676363300CD993C97644DD786720A9C7E4 ___rAxis0_3;
	// OVR.OpenVR.VRControllerAxis_t OVR.OpenVR.VRControllerState_t::rAxis1
	VRControllerAxis_t_t7A458D676363300CD993C97644DD786720A9C7E4 ___rAxis1_4;
	// OVR.OpenVR.VRControllerAxis_t OVR.OpenVR.VRControllerState_t::rAxis2
	VRControllerAxis_t_t7A458D676363300CD993C97644DD786720A9C7E4 ___rAxis2_5;
	// OVR.OpenVR.VRControllerAxis_t OVR.OpenVR.VRControllerState_t::rAxis3
	VRControllerAxis_t_t7A458D676363300CD993C97644DD786720A9C7E4 ___rAxis3_6;
	// OVR.OpenVR.VRControllerAxis_t OVR.OpenVR.VRControllerState_t::rAxis4
	VRControllerAxis_t_t7A458D676363300CD993C97644DD786720A9C7E4 ___rAxis4_7;
};

// OVRDeserialize/SpaceEraseCompleteData
struct SpaceEraseCompleteData_t29938D1C6E218C23257DF9F75C64AD57B1786AC3 
{
	// System.UInt64 OVRDeserialize/SpaceEraseCompleteData::RequestId
	uint64_t ___RequestId_0;
	// System.Int32 OVRDeserialize/SpaceEraseCompleteData::Result
	int32_t ___Result_1;
	// System.Guid OVRDeserialize/SpaceEraseCompleteData::Uuid
	Guid_t ___Uuid_2;
	// OVRPlugin/SpaceStorageLocation OVRDeserialize/SpaceEraseCompleteData::Location
	int32_t ___Location_3;
};

// OVRDeserialize/SpaceSaveCompleteData
struct SpaceSaveCompleteData_t86F76FAD997B29F8C01EECC13D8BC18477D398F4 
{
	// System.UInt64 OVRDeserialize/SpaceSaveCompleteData::RequestId
	uint64_t ___RequestId_0;
	// System.UInt64 OVRDeserialize/SpaceSaveCompleteData::Space
	uint64_t ___Space_1;
	// System.Int32 OVRDeserialize/SpaceSaveCompleteData::Result
	int32_t ___Result_2;
	// System.Guid OVRDeserialize/SpaceSaveCompleteData::Uuid
	Guid_t ___Uuid_3;
};

// OVRDeserialize/SpaceSetComponentStatusCompleteData
struct SpaceSetComponentStatusCompleteData_tEB0171988C9E109E4F9C41A77D6738DB9D0CE58E 
{
	// System.UInt64 OVRDeserialize/SpaceSetComponentStatusCompleteData::RequestId
	uint64_t ___RequestId_0;
	// System.Int32 OVRDeserialize/SpaceSetComponentStatusCompleteData::Result
	int32_t ___Result_1;
	// System.UInt64 OVRDeserialize/SpaceSetComponentStatusCompleteData::Space
	uint64_t ___Space_2;
	// System.Guid OVRDeserialize/SpaceSetComponentStatusCompleteData::Uuid
	Guid_t ___Uuid_3;
	// OVRPlugin/SpaceComponentType OVRDeserialize/SpaceSetComponentStatusCompleteData::ComponentType
	int32_t ___ComponentType_4;
	// System.Int32 OVRDeserialize/SpaceSetComponentStatusCompleteData::Enabled
	int32_t ___Enabled_5;
};

// OVRDeserialize/SpatialAnchorCreateCompleteData
struct SpatialAnchorCreateCompleteData_t8A1C0554B63901CBACE1DC0CAB8103C1487A0A5C 
{
	// System.UInt64 OVRDeserialize/SpatialAnchorCreateCompleteData::RequestId
	uint64_t ___RequestId_0;
	// System.Int32 OVRDeserialize/SpatialAnchorCreateCompleteData::Result
	int32_t ___Result_1;
	// System.UInt64 OVRDeserialize/SpatialAnchorCreateCompleteData::Space
	uint64_t ___Space_2;
	// System.Guid OVRDeserialize/SpatialAnchorCreateCompleteData::Uuid
	Guid_t ___Uuid_3;
};

// OVRPlugin/BoneCapsule
struct BoneCapsule_tF1A2277B943643BF2B8969910821CBAE47B3DD74 
{
	// System.Int16 OVRPlugin/BoneCapsule::BoneIndex
	int16_t ___BoneIndex_0;
	// OVRPlugin/Vector3f OVRPlugin/BoneCapsule::StartPoint
	Vector3f_t232AF83B4642C67BE8EFF85D8E1599D3B06BD562 ___StartPoint_1;
	// OVRPlugin/Vector3f OVRPlugin/BoneCapsule::EndPoint
	Vector3f_t232AF83B4642C67BE8EFF85D8E1599D3B06BD562 ___EndPoint_2;
	// System.Single OVRPlugin/BoneCapsule::Radius
	float ___Radius_3;
};

// OVRPlugin/ControllerState5
struct ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA 
{
	// System.UInt32 OVRPlugin/ControllerState5::ConnectedControllers
	uint32_t ___ConnectedControllers_0;
	// System.UInt32 OVRPlugin/ControllerState5::Buttons
	uint32_t ___Buttons_1;
	// System.UInt32 OVRPlugin/ControllerState5::Touches
	uint32_t ___Touches_2;
	// System.UInt32 OVRPlugin/ControllerState5::NearTouches
	uint32_t ___NearTouches_3;
	// System.Single OVRPlugin/ControllerState5::LIndexTrigger
	float ___LIndexTrigger_4;
	// System.Single OVRPlugin/ControllerState5::RIndexTrigger
	float ___RIndexTrigger_5;
	// System.Single OVRPlugin/ControllerState5::LHandTrigger
	float ___LHandTrigger_6;
	// System.Single OVRPlugin/ControllerState5::RHandTrigger
	float ___RHandTrigger_7;
	// OVRPlugin/Vector2f OVRPlugin/ControllerState5::LThumbstick
	Vector2f_tB2A7770F503276F90D359B6933F0A86D51BA3186 ___LThumbstick_8;
	// OVRPlugin/Vector2f OVRPlugin/ControllerState5::RThumbstick
	Vector2f_tB2A7770F503276F90D359B6933F0A86D51BA3186 ___RThumbstick_9;
	// OVRPlugin/Vector2f OVRPlugin/ControllerState5::LTouchpad
	Vector2f_tB2A7770F503276F90D359B6933F0A86D51BA3186 ___LTouchpad_10;
	// OVRPlugin/Vector2f OVRPlugin/ControllerState5::RTouchpad
	Vector2f_tB2A7770F503276F90D359B6933F0A86D51BA3186 ___RTouchpad_11;
	// System.Byte OVRPlugin/ControllerState5::LBatteryPercentRemaining
	uint8_t ___LBatteryPercentRemaining_12;
	// System.Byte OVRPlugin/ControllerState5::RBatteryPercentRemaining
	uint8_t ___RBatteryPercentRemaining_13;
	// System.Byte OVRPlugin/ControllerState5::LRecenterCount
	uint8_t ___LRecenterCount_14;
	// System.Byte OVRPlugin/ControllerState5::RRecenterCount
	uint8_t ___RRecenterCount_15;
	// System.Single OVRPlugin/ControllerState5::LThumbRestForce
	float ___LThumbRestForce_16;
	// System.Single OVRPlugin/ControllerState5::RThumbRestForce
	float ___RThumbRestForce_17;
	// System.Single OVRPlugin/ControllerState5::LStylusForce
	float ___LStylusForce_18;
	// System.Single OVRPlugin/ControllerState5::RStylusForce
	float ___RStylusForce_19;
	// System.Single OVRPlugin/ControllerState5::LIndexTriggerCurl
	float ___LIndexTriggerCurl_20;
	// System.Single OVRPlugin/ControllerState5::RIndexTriggerCurl
	float ___RIndexTriggerCurl_21;
	// System.Single OVRPlugin/ControllerState5::LIndexTriggerSlide
	float ___LIndexTriggerSlide_22;
	// System.Single OVRPlugin/ControllerState5::RIndexTriggerSlide
	float ___RIndexTriggerSlide_23;
};

// OVRPlugin/EventDataBuffer
struct EventDataBuffer_t5836E8ECE1E094863DEDCC92818AEF39C2F646E8 
{
	// OVRPlugin/EventType OVRPlugin/EventDataBuffer::EventType
	int32_t ___EventType_0;
	// System.Byte[] OVRPlugin/EventDataBuffer::EventData
	ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___EventData_1;
};
// Native definition for P/Invoke marshalling of OVRPlugin/EventDataBuffer
struct EventDataBuffer_t5836E8ECE1E094863DEDCC92818AEF39C2F646E8_marshaled_pinvoke
{
	int32_t ___EventType_0;
	uint8_t ___EventData_1[4000];
};
// Native definition for COM marshalling of OVRPlugin/EventDataBuffer
struct EventDataBuffer_t5836E8ECE1E094863DEDCC92818AEF39C2F646E8_marshaled_com
{
	int32_t ___EventType_0;
	uint8_t ___EventData_1[4000];
};

// OVRPlugin/FaceStateInternal
struct FaceStateInternal_t0C7FBA46B3EFEDDFF67EA74919D07A7EDA1532EC 
{
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_0
	float ___ExpressionWeights_0_0;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_1
	float ___ExpressionWeights_1_1;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_2
	float ___ExpressionWeights_2_2;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_3
	float ___ExpressionWeights_3_3;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_4
	float ___ExpressionWeights_4_4;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_5
	float ___ExpressionWeights_5_5;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_6
	float ___ExpressionWeights_6_6;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_7
	float ___ExpressionWeights_7_7;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_8
	float ___ExpressionWeights_8_8;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_9
	float ___ExpressionWeights_9_9;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_10
	float ___ExpressionWeights_10_10;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_11
	float ___ExpressionWeights_11_11;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_12
	float ___ExpressionWeights_12_12;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_13
	float ___ExpressionWeights_13_13;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_14
	float ___ExpressionWeights_14_14;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_15
	float ___ExpressionWeights_15_15;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_16
	float ___ExpressionWeights_16_16;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_17
	float ___ExpressionWeights_17_17;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_18
	float ___ExpressionWeights_18_18;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_19
	float ___ExpressionWeights_19_19;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_20
	float ___ExpressionWeights_20_20;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_21
	float ___ExpressionWeights_21_21;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_22
	float ___ExpressionWeights_22_22;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_23
	float ___ExpressionWeights_23_23;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_24
	float ___ExpressionWeights_24_24;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_25
	float ___ExpressionWeights_25_25;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_26
	float ___ExpressionWeights_26_26;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_27
	float ___ExpressionWeights_27_27;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_28
	float ___ExpressionWeights_28_28;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_29
	float ___ExpressionWeights_29_29;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_30
	float ___ExpressionWeights_30_30;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_31
	float ___ExpressionWeights_31_31;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_32
	float ___ExpressionWeights_32_32;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_33
	float ___ExpressionWeights_33_33;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_34
	float ___ExpressionWeights_34_34;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_35
	float ___ExpressionWeights_35_35;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_36
	float ___ExpressionWeights_36_36;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_37
	float ___ExpressionWeights_37_37;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_38
	float ___ExpressionWeights_38_38;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_39
	float ___ExpressionWeights_39_39;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_40
	float ___ExpressionWeights_40_40;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_41
	float ___ExpressionWeights_41_41;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_42
	float ___ExpressionWeights_42_42;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_43
	float ___ExpressionWeights_43_43;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_44
	float ___ExpressionWeights_44_44;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_45
	float ___ExpressionWeights_45_45;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_46
	float ___ExpressionWeights_46_46;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_47
	float ___ExpressionWeights_47_47;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_48
	float ___ExpressionWeights_48_48;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_49
	float ___ExpressionWeights_49_49;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_50
	float ___ExpressionWeights_50_50;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_51
	float ___ExpressionWeights_51_51;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_52
	float ___ExpressionWeights_52_52;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_53
	float ___ExpressionWeights_53_53;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_54
	float ___ExpressionWeights_54_54;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_55
	float ___ExpressionWeights_55_55;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_56
	float ___ExpressionWeights_56_56;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_57
	float ___ExpressionWeights_57_57;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_58
	float ___ExpressionWeights_58_58;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_59
	float ___ExpressionWeights_59_59;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_60
	float ___ExpressionWeights_60_60;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_61
	float ___ExpressionWeights_61_61;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeights_62
	float ___ExpressionWeights_62_62;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeightConfidences_0
	float ___ExpressionWeightConfidences_0_63;
	// System.Single OVRPlugin/FaceStateInternal::ExpressionWeightConfidences_1
	float ___ExpressionWeightConfidences_1_64;
	// OVRPlugin/FaceExpressionStatusInternal OVRPlugin/FaceStateInternal::Status
	FaceExpressionStatusInternal_t0592CB9F5E98E76C7E4CC595F498CA50FBE8DC7F ___Status_65;
	// System.Double OVRPlugin/FaceStateInternal::Time
	double ___Time_66;
};

// OVRPlugin/HapticsAmplitudeEnvelopeVibration
struct HapticsAmplitudeEnvelopeVibration_t72F2EFB43EF23B078F28C324C8D12EBD9B84A00A 
{
	// System.Single OVRPlugin/HapticsAmplitudeEnvelopeVibration::Duration
	float ___Duration_0;
	// System.UInt32 OVRPlugin/HapticsAmplitudeEnvelopeVibration::AmplitudeCount
	uint32_t ___AmplitudeCount_1;
	// System.IntPtr OVRPlugin/HapticsAmplitudeEnvelopeVibration::Amplitudes
	intptr_t ___Amplitudes_2;
};

// OVRPlugin/HapticsBuffer
struct HapticsBuffer_t05090BEFD2D209883C588225318CD620E29EF181 
{
	// System.IntPtr OVRPlugin/HapticsBuffer::Samples
	intptr_t ___Samples_0;
	// System.Int32 OVRPlugin/HapticsBuffer::SamplesCount
	int32_t ___SamplesCount_1;
};

// OVRPlugin/HapticsPcmVibration
struct HapticsPcmVibration_tE63FF2450048F8B5C0EF36A26C0E61346CAE8CBB 
{
	// System.UInt32 OVRPlugin/HapticsPcmVibration::BufferSize
	uint32_t ___BufferSize_0;
	// System.IntPtr OVRPlugin/HapticsPcmVibration::Buffer
	intptr_t ___Buffer_1;
	// System.Single OVRPlugin/HapticsPcmVibration::SampleRateHz
	float ___SampleRateHz_2;
	// OVRPlugin/Bool OVRPlugin/HapticsPcmVibration::Append
	int32_t ___Append_3;
	// System.IntPtr OVRPlugin/HapticsPcmVibration::SamplesConsumed
	intptr_t ___SamplesConsumed_4;
};

// OVRPlugin/Posef
struct Posef_t51A2C10B4094B44A8D3C1913292B839172887B61 
{
	// OVRPlugin/Quatf OVRPlugin/Posef::Orientation
	Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A ___Orientation_0;
	// OVRPlugin/Vector3f OVRPlugin/Posef::Position
	Vector3f_t232AF83B4642C67BE8EFF85D8E1599D3B06BD562 ___Position_1;
};

// UnityEngine.IntegratedSubsystemDescriptor`1<UnityEngine.XR.XRDisplaySubsystem>
struct IntegratedSubsystemDescriptor_1_t7261AA0914165CB589AD41C4F9B463D44E333D7C  : public IntegratedSubsystemDescriptor_t9232963B842E01748A8E032928DC8E35DF00C10D
{
};
// Native definition for P/Invoke marshalling of UnityEngine.IntegratedSubsystemDescriptor`1
#ifndef IntegratedSubsystemDescriptor_1_tC541D17A8306FA1C3A608A1328A6DBFDA3264671_marshaled_pinvoke_define
#define IntegratedSubsystemDescriptor_1_tC541D17A8306FA1C3A608A1328A6DBFDA3264671_marshaled_pinvoke_define
struct IntegratedSubsystemDescriptor_1_tC541D17A8306FA1C3A608A1328A6DBFDA3264671_marshaled_pinvoke : public IntegratedSubsystemDescriptor_t9232963B842E01748A8E032928DC8E35DF00C10D_marshaled_pinvoke
{
};
#endif
// Native definition for COM marshalling of UnityEngine.IntegratedSubsystemDescriptor`1
#ifndef IntegratedSubsystemDescriptor_1_tC541D17A8306FA1C3A608A1328A6DBFDA3264671_marshaled_com_define
#define IntegratedSubsystemDescriptor_1_tC541D17A8306FA1C3A608A1328A6DBFDA3264671_marshaled_com_define
struct IntegratedSubsystemDescriptor_1_tC541D17A8306FA1C3A608A1328A6DBFDA3264671_marshaled_com : public IntegratedSubsystemDescriptor_t9232963B842E01748A8E032928DC8E35DF00C10D_marshaled_com
{
};
#endif

// UnityEngine.IntegratedSubsystem`1<UnityEngine.XR.XRDisplaySubsystemDescriptor>
struct IntegratedSubsystem_1_t8312865F01EEA1EDE4B24A973E47ADD526616848  : public IntegratedSubsystem_t990160A89854D87C0836DC589B720231C02D4CE3
{
};

// UnityEngine.IntegratedSubsystem`1<UnityEngine.XR.XRInputSubsystemDescriptor>
struct IntegratedSubsystem_1_tF93BC76362E85BDD215312162457BE510FC76D3B  : public IntegratedSubsystem_t990160A89854D87C0836DC589B720231C02D4CE3
{
};

// System.WeakReference`1<UnityEngine.Camera>
struct WeakReference_1_t08942AAA5C58B24D75314BD9594E2DE409CB9C93  : public RuntimeObject
{
	// System.Runtime.InteropServices.GCHandle System.WeakReference`1::handle
	GCHandle_tC44F6F72EE68BD4CFABA24309DA7A179D41127DC ___handle_0;
	// System.Boolean System.WeakReference`1::trackResurrection
	bool ___trackResurrection_1;
};

// UnityEngine.AudioClip
struct AudioClip_t5D272C4EB4F2D3ED49F1C346DEA373CF6D585F20  : public Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C
{
	// UnityEngine.AudioClip/PCMReaderCallback UnityEngine.AudioClip::m_PCMReaderCallback
	PCMReaderCallback_t3396D9613664F0AFF65FB91018FD0F901CC16F1E* ___m_PCMReaderCallback_4;
	// UnityEngine.AudioClip/PCMSetPositionCallback UnityEngine.AudioClip::m_PCMSetPositionCallback
	PCMSetPositionCallback_t8D7135A2FB40647CAEC93F5254AD59E18DEB6072* ___m_PCMSetPositionCallback_5;
};

// UnityEngine.Component
struct Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3  : public Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C
{
};

// UnityEngine.GameObject
struct GameObject_t76FEDD663AB33C991A9C9A23129337651094216F  : public Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C
{
};

// System.MulticastDelegate
struct MulticastDelegate_t  : public Delegate_t
{
	// System.Delegate[] System.MulticastDelegate::delegates
	DelegateU5BU5D_tC5AB7E8F745616680F337909D3A8E6C722CDF771* ___delegates_13;
};
// Native definition for P/Invoke marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_pinvoke : public Delegate_t_marshaled_pinvoke
{
	Delegate_t_marshaled_pinvoke** ___delegates_13;
};
// Native definition for COM marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_com : public Delegate_t_marshaled_com
{
	Delegate_t_marshaled_com** ___delegates_13;
};

// OVRProfile
struct OVRProfile_tCFDDDA5EE82F0ED94671EB741B8954603D98AFC0  : public Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C
{
};

// UnityEngine.ScriptableObject
struct ScriptableObject_tB3BFDB921A1B1795B38A5417D3B97A89A140436A  : public Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C
{
};
// Native definition for P/Invoke marshalling of UnityEngine.ScriptableObject
struct ScriptableObject_tB3BFDB921A1B1795B38A5417D3B97A89A140436A_marshaled_pinvoke : public Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_marshaled_pinvoke
{
};
// Native definition for COM marshalling of UnityEngine.ScriptableObject
struct ScriptableObject_tB3BFDB921A1B1795B38A5417D3B97A89A140436A_marshaled_com : public Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_marshaled_com
{
};

// System.Type
struct Type_t  : public MemberInfo_t
{
	// System.RuntimeTypeHandle System.Type::_impl
	RuntimeTypeHandle_t332A452B8B6179E4469B69525D0FE82A88030F7B ____impl_8;
};

// OVRGLTFLoader/<>c__DisplayClass27_0
struct U3CU3Ec__DisplayClass27_0_tE26F78A56AA4B7B70818EB50BF1D6AF8D0415010  : public RuntimeObject
{
	// OVRGLTFLoader OVRGLTFLoader/<>c__DisplayClass27_0::<>4__this
	OVRGLTFLoader_t2E5E39D416422D0459916F5D1FA9C83CA2C92CD1* ___U3CU3E4__this_0;
	// OVRMaterialData OVRGLTFLoader/<>c__DisplayClass27_0::matData
	OVRMaterialData_tD4DEFD6FD5DCEE802F11DEBB7FECA677B52CA581 ___matData_1;
};

// OVRInput/OVRControllerBase
struct OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83  : public RuntimeObject
{
	// OVRInput/Controller OVRInput/OVRControllerBase::controllerType
	int32_t ___controllerType_0;
	// OVRInput/OVRControllerBase/VirtualButtonMap OVRInput/OVRControllerBase::buttonMap
	VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* ___buttonMap_1;
	// OVRInput/OVRControllerBase/VirtualTouchMap OVRInput/OVRControllerBase::touchMap
	VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* ___touchMap_2;
	// OVRInput/OVRControllerBase/VirtualNearTouchMap OVRInput/OVRControllerBase::nearTouchMap
	VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* ___nearTouchMap_3;
	// OVRInput/OVRControllerBase/VirtualAxis1DMap OVRInput/OVRControllerBase::axis1DMap
	VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* ___axis1DMap_4;
	// OVRInput/OVRControllerBase/VirtualAxis2DMap OVRInput/OVRControllerBase::axis2DMap
	VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* ___axis2DMap_5;
	// OVRPlugin/ControllerState5 OVRInput/OVRControllerBase::previousState
	ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA ___previousState_6;
	// OVRPlugin/ControllerState5 OVRInput/OVRControllerBase::currentState
	ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA ___currentState_7;
	// System.Boolean OVRInput/OVRControllerBase::shouldApplyDeadzone
	bool ___shouldApplyDeadzone_8;
	// System.UInt32[] OVRInput/OVRControllerBase::HapticsPcmSamplesConsumedCache
	UInt32U5BU5D_t02FBD658AD156A17574ECE6106CF1FBFCC9807FA* ___HapticsPcmSamplesConsumedCache_9;
};

// OVRInput/OpenVRControllerDetails
struct OpenVRControllerDetails_t4828A712824373E205C1770EF9779F43484DBF0E 
{
	// OVR.OpenVR.VRControllerState_t OVRInput/OpenVRControllerDetails::state
	VRControllerState_t_t50475AF703AB39117DE2C6CE266154309CD9BD4D ___state_0;
	// OVRInput/OpenVRController OVRInput/OpenVRControllerDetails::controllerType
	uint64_t ___controllerType_1;
	// System.UInt32 OVRInput/OpenVRControllerDetails::deviceID
	uint32_t ___deviceID_2;
	// UnityEngine.Vector3 OVRInput/OpenVRControllerDetails::localPosition
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___localPosition_3;
	// UnityEngine.Quaternion OVRInput/OpenVRControllerDetails::localOrientation
	Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 ___localOrientation_4;
};

// OVRPlugin/Bone
struct Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D 
{
	// OVRPlugin/BoneId OVRPlugin/Bone::Id
	int32_t ___Id_0;
	// System.Int16 OVRPlugin/Bone::ParentBoneIndex
	int16_t ___ParentBoneIndex_1;
	// OVRPlugin/Posef OVRPlugin/Bone::Pose
	Posef_t51A2C10B4094B44A8D3C1913292B839172887B61 ___Pose_2;
};

// OVRPlugin/EyeGazeState
struct EyeGazeState_t153E4D1AFFFEB96639D94D67C265E63D84DE9976 
{
	// OVRPlugin/Posef OVRPlugin/EyeGazeState::Pose
	Posef_t51A2C10B4094B44A8D3C1913292B839172887B61 ___Pose_0;
	// System.Single OVRPlugin/EyeGazeState::Confidence
	float ___Confidence_1;
	// OVRPlugin/Bool OVRPlugin/EyeGazeState::_isValid
	int32_t ____isValid_2;
};

// OVRPlugin/HandStateInternal
struct HandStateInternal_tADD472E69CDB0B051EFD5EAAFB69D16BA364BE37 
{
	// OVRPlugin/HandStatus OVRPlugin/HandStateInternal::Status
	int32_t ___Status_0;
	// OVRPlugin/Posef OVRPlugin/HandStateInternal::RootPose
	Posef_t51A2C10B4094B44A8D3C1913292B839172887B61 ___RootPose_1;
	// OVRPlugin/Quatf OVRPlugin/HandStateInternal::BoneRotations_0
	Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A ___BoneRotations_0_2;
	// OVRPlugin/Quatf OVRPlugin/HandStateInternal::BoneRotations_1
	Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A ___BoneRotations_1_3;
	// OVRPlugin/Quatf OVRPlugin/HandStateInternal::BoneRotations_2
	Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A ___BoneRotations_2_4;
	// OVRPlugin/Quatf OVRPlugin/HandStateInternal::BoneRotations_3
	Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A ___BoneRotations_3_5;
	// OVRPlugin/Quatf OVRPlugin/HandStateInternal::BoneRotations_4
	Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A ___BoneRotations_4_6;
	// OVRPlugin/Quatf OVRPlugin/HandStateInternal::BoneRotations_5
	Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A ___BoneRotations_5_7;
	// OVRPlugin/Quatf OVRPlugin/HandStateInternal::BoneRotations_6
	Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A ___BoneRotations_6_8;
	// OVRPlugin/Quatf OVRPlugin/HandStateInternal::BoneRotations_7
	Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A ___BoneRotations_7_9;
	// OVRPlugin/Quatf OVRPlugin/HandStateInternal::BoneRotations_8
	Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A ___BoneRotations_8_10;
	// OVRPlugin/Quatf OVRPlugin/HandStateInternal::BoneRotations_9
	Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A ___BoneRotations_9_11;
	// OVRPlugin/Quatf OVRPlugin/HandStateInternal::BoneRotations_10
	Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A ___BoneRotations_10_12;
	// OVRPlugin/Quatf OVRPlugin/HandStateInternal::BoneRotations_11
	Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A ___BoneRotations_11_13;
	// OVRPlugin/Quatf OVRPlugin/HandStateInternal::BoneRotations_12
	Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A ___BoneRotations_12_14;
	// OVRPlugin/Quatf OVRPlugin/HandStateInternal::BoneRotations_13
	Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A ___BoneRotations_13_15;
	// OVRPlugin/Quatf OVRPlugin/HandStateInternal::BoneRotations_14
	Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A ___BoneRotations_14_16;
	// OVRPlugin/Quatf OVRPlugin/HandStateInternal::BoneRotations_15
	Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A ___BoneRotations_15_17;
	// OVRPlugin/Quatf OVRPlugin/HandStateInternal::BoneRotations_16
	Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A ___BoneRotations_16_18;
	// OVRPlugin/Quatf OVRPlugin/HandStateInternal::BoneRotations_17
	Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A ___BoneRotations_17_19;
	// OVRPlugin/Quatf OVRPlugin/HandStateInternal::BoneRotations_18
	Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A ___BoneRotations_18_20;
	// OVRPlugin/Quatf OVRPlugin/HandStateInternal::BoneRotations_19
	Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A ___BoneRotations_19_21;
	// OVRPlugin/Quatf OVRPlugin/HandStateInternal::BoneRotations_20
	Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A ___BoneRotations_20_22;
	// OVRPlugin/Quatf OVRPlugin/HandStateInternal::BoneRotations_21
	Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A ___BoneRotations_21_23;
	// OVRPlugin/Quatf OVRPlugin/HandStateInternal::BoneRotations_22
	Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A ___BoneRotations_22_24;
	// OVRPlugin/Quatf OVRPlugin/HandStateInternal::BoneRotations_23
	Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A ___BoneRotations_23_25;
	// OVRPlugin/HandFingerPinch OVRPlugin/HandStateInternal::Pinches
	int32_t ___Pinches_26;
	// System.Single OVRPlugin/HandStateInternal::PinchStrength_0
	float ___PinchStrength_0_27;
	// System.Single OVRPlugin/HandStateInternal::PinchStrength_1
	float ___PinchStrength_1_28;
	// System.Single OVRPlugin/HandStateInternal::PinchStrength_2
	float ___PinchStrength_2_29;
	// System.Single OVRPlugin/HandStateInternal::PinchStrength_3
	float ___PinchStrength_3_30;
	// System.Single OVRPlugin/HandStateInternal::PinchStrength_4
	float ___PinchStrength_4_31;
	// OVRPlugin/Posef OVRPlugin/HandStateInternal::PointerPose
	Posef_t51A2C10B4094B44A8D3C1913292B839172887B61 ___PointerPose_32;
	// System.Single OVRPlugin/HandStateInternal::HandScale
	float ___HandScale_33;
	// OVRPlugin/TrackingConfidence OVRPlugin/HandStateInternal::HandConfidence
	int32_t ___HandConfidence_34;
	// OVRPlugin/TrackingConfidence OVRPlugin/HandStateInternal::FingerConfidences_0
	int32_t ___FingerConfidences_0_35;
	// OVRPlugin/TrackingConfidence OVRPlugin/HandStateInternal::FingerConfidences_1
	int32_t ___FingerConfidences_1_36;
	// OVRPlugin/TrackingConfidence OVRPlugin/HandStateInternal::FingerConfidences_2
	int32_t ___FingerConfidences_2_37;
	// OVRPlugin/TrackingConfidence OVRPlugin/HandStateInternal::FingerConfidences_3
	int32_t ___FingerConfidences_3_38;
	// OVRPlugin/TrackingConfidence OVRPlugin/HandStateInternal::FingerConfidences_4
	int32_t ___FingerConfidences_4_39;
	// System.Double OVRPlugin/HandStateInternal::RequestedTimeStamp
	double ___RequestedTimeStamp_40;
	// System.Double OVRPlugin/HandStateInternal::SampleTimeStamp
	double ___SampleTimeStamp_41;
};

// OVRPlugin/PoseStatef
struct PoseStatef_tC6A564A6E163790E7DE8D1CF4EBDE089D09B053E 
{
	// OVRPlugin/Posef OVRPlugin/PoseStatef::Pose
	Posef_t51A2C10B4094B44A8D3C1913292B839172887B61 ___Pose_0;
	// OVRPlugin/Vector3f OVRPlugin/PoseStatef::Velocity
	Vector3f_t232AF83B4642C67BE8EFF85D8E1599D3B06BD562 ___Velocity_1;
	// OVRPlugin/Vector3f OVRPlugin/PoseStatef::Acceleration
	Vector3f_t232AF83B4642C67BE8EFF85D8E1599D3B06BD562 ___Acceleration_2;
	// OVRPlugin/Vector3f OVRPlugin/PoseStatef::AngularVelocity
	Vector3f_t232AF83B4642C67BE8EFF85D8E1599D3B06BD562 ___AngularVelocity_3;
	// OVRPlugin/Vector3f OVRPlugin/PoseStatef::AngularAcceleration
	Vector3f_t232AF83B4642C67BE8EFF85D8E1599D3B06BD562 ___AngularAcceleration_4;
	// System.Double OVRPlugin/PoseStatef::Time
	double ___Time_5;
};

// System.Action`1<System.UInt64>
struct Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C  : public MulticastDelegate_t
{
};

// System.Action`2<System.Single,System.Single>
struct Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132  : public MulticastDelegate_t
{
};

// System.Action`2<System.UInt64,System.Boolean>
struct Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71  : public MulticastDelegate_t
{
};

// System.Action`2<System.UInt64,System.Int32Enum>
struct Action_2_tA06B2B457987AFF44FCC9825F4E5B8AB831D9C5D  : public MulticastDelegate_t
{
};

// System.Action`2<System.UInt64,OVRSpatialAnchor/OperationResult>
struct Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9  : public MulticastDelegate_t
{
};

// System.Action`4<System.UInt64,System.Boolean,System.Guid,System.Int32Enum>
struct Action_4_tDB193A5F94ADF5AFFE07E8A99813727D58BD9CBF  : public MulticastDelegate_t
{
};

// System.Action`4<System.UInt64,System.Boolean,System.Guid,OVRPlugin/SpaceStorageLocation>
struct Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC  : public MulticastDelegate_t
{
};

// System.Action`4<System.UInt64,System.Boolean,OVRSpace,System.Guid>
struct Action_4_t540B344FD589096100128D9A1B39946413ED9AAE  : public MulticastDelegate_t
{
};

// System.Action`4<System.UInt64,OVRSpace,System.Boolean,System.Guid>
struct Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A  : public MulticastDelegate_t
{
};

// System.Action`6<System.UInt64,System.Boolean,OVRSpace,System.Guid,System.Int32Enum,System.Boolean>
struct Action_6_t275E8A8CA2AB323A9CF973B1A1BDD4C0D44F4F11  : public MulticastDelegate_t
{
};

// System.Action`6<System.UInt64,System.Boolean,OVRSpace,System.Guid,OVRPlugin/SpaceComponentType,System.Boolean>
struct Action_6_tD8B17612932122F2ABF5C8545327C8F527403625  : public MulticastDelegate_t
{
};

// System.Comparison`1<UnityEngine.Camera>
struct Comparison_1_t49BE56523BDD8BC22EF3396960546FE16DE7B11A  : public MulticastDelegate_t
{
};

// System.Func`2<System.Single,System.String>
struct Func_2_t5ACB813DEA6873041E3CE5A28AE88A73E01E6EF8  : public MulticastDelegate_t
{
};

// System.Action
struct Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07  : public MulticastDelegate_t
{
};

// UnityEngine.Behaviour
struct Behaviour_t01970CFBBA658497AE30F311C447DB0440BAB7FA  : public Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3
{
};

// OVRMixedRealityCaptureSettings
struct OVRMixedRealityCaptureSettings_tF6078D6B59F16A0EE3DEE4144FCED347444B9198  : public ScriptableObject_tB3BFDB921A1B1795B38A5417D3B97A89A140436A
{
	// System.Boolean OVRMixedRealityCaptureSettings::enableMixedReality
	bool ___enableMixedReality_4;
	// UnityEngine.LayerMask OVRMixedRealityCaptureSettings::extraHiddenLayers
	LayerMask_t97CB6BDADEDC3D6423C7BCFEA7F86DA2EC6241DB ___extraHiddenLayers_5;
	// UnityEngine.LayerMask OVRMixedRealityCaptureSettings::extraVisibleLayers
	LayerMask_t97CB6BDADEDC3D6423C7BCFEA7F86DA2EC6241DB ___extraVisibleLayers_6;
	// System.Boolean OVRMixedRealityCaptureSettings::dynamicCullingMask
	bool ___dynamicCullingMask_7;
	// OVRManager/CompositionMethod OVRMixedRealityCaptureSettings::compositionMethod
	int32_t ___compositionMethod_8;
	// UnityEngine.Color OVRMixedRealityCaptureSettings::externalCompositionBackdropColorRift
	Color_tD001788D726C3A7F1379BEED0260B9591F440C1F ___externalCompositionBackdropColorRift_9;
	// UnityEngine.Color OVRMixedRealityCaptureSettings::externalCompositionBackdropColorQuest
	Color_tD001788D726C3A7F1379BEED0260B9591F440C1F ___externalCompositionBackdropColorQuest_10;
	// OVRManager/CameraDevice OVRMixedRealityCaptureSettings::capturingCameraDevice
	int32_t ___capturingCameraDevice_11;
	// System.Boolean OVRMixedRealityCaptureSettings::flipCameraFrameHorizontally
	bool ___flipCameraFrameHorizontally_12;
	// System.Boolean OVRMixedRealityCaptureSettings::flipCameraFrameVertically
	bool ___flipCameraFrameVertically_13;
	// System.Single OVRMixedRealityCaptureSettings::handPoseStateLatency
	float ___handPoseStateLatency_14;
	// System.Single OVRMixedRealityCaptureSettings::sandwichCompositionRenderLatency
	float ___sandwichCompositionRenderLatency_15;
	// System.Int32 OVRMixedRealityCaptureSettings::sandwichCompositionBufferedFrames
	int32_t ___sandwichCompositionBufferedFrames_16;
	// UnityEngine.Color OVRMixedRealityCaptureSettings::chromaKeyColor
	Color_tD001788D726C3A7F1379BEED0260B9591F440C1F ___chromaKeyColor_17;
	// System.Single OVRMixedRealityCaptureSettings::chromaKeySimilarity
	float ___chromaKeySimilarity_18;
	// System.Single OVRMixedRealityCaptureSettings::chromaKeySmoothRange
	float ___chromaKeySmoothRange_19;
	// System.Single OVRMixedRealityCaptureSettings::chromaKeySpillRange
	float ___chromaKeySpillRange_20;
	// System.Boolean OVRMixedRealityCaptureSettings::useDynamicLighting
	bool ___useDynamicLighting_21;
	// OVRManager/DepthQuality OVRMixedRealityCaptureSettings::depthQuality
	int32_t ___depthQuality_22;
	// System.Single OVRMixedRealityCaptureSettings::dynamicLightingSmoothFactor
	float ___dynamicLightingSmoothFactor_23;
	// System.Single OVRMixedRealityCaptureSettings::dynamicLightingDepthVariationClampingValue
	float ___dynamicLightingDepthVariationClampingValue_24;
	// OVRManager/VirtualGreenScreenType OVRMixedRealityCaptureSettings::virtualGreenScreenType
	int32_t ___virtualGreenScreenType_25;
	// System.Single OVRMixedRealityCaptureSettings::virtualGreenScreenTopY
	float ___virtualGreenScreenTopY_26;
	// System.Single OVRMixedRealityCaptureSettings::virtualGreenScreenBottomY
	float ___virtualGreenScreenBottomY_27;
	// System.Boolean OVRMixedRealityCaptureSettings::virtualGreenScreenApplyDepthCulling
	bool ___virtualGreenScreenApplyDepthCulling_28;
	// System.Single OVRMixedRealityCaptureSettings::virtualGreenScreenDepthTolerance
	float ___virtualGreenScreenDepthTolerance_29;
	// OVRManager/MrcActivationMode OVRMixedRealityCaptureSettings::mrcActivationMode
	int32_t ___mrcActivationMode_30;
	// OVRManager/InstantiateMrcCameraDelegate OVRMixedRealityCaptureSettings::<OVRMixedRealityCaptureConfiguration.instantiateMixedRealityCameraGameObject>k__BackingField
	InstantiateMrcCameraDelegate_t26D39C3003CADD2CBA4E7C5EB75333089B2F03C8* ___U3COVRMixedRealityCaptureConfiguration_instantiateMixedRealityCameraGameObjectU3Ek__BackingField_31;
};

// OVRRuntimeSettings
struct OVRRuntimeSettings_tC85E84DCFBF4DB2D4C3311CA39C96DEE89220EE1  : public ScriptableObject_tB3BFDB921A1B1795B38A5417D3B97A89A140436A
{
	// OVRManager/ColorSpace OVRRuntimeSettings::colorSpace
	int32_t ___colorSpace_4;
};

// UnityEngine.Transform
struct Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1  : public Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3
{
};

// UnityEngine.XR.XRDisplaySubsystem
struct XRDisplaySubsystem_t4B00B0BF1894A039ACFA8DDC2C2EB9301118C1F1  : public IntegratedSubsystem_1_t8312865F01EEA1EDE4B24A973E47ADD526616848
{
	// System.Action`1<System.Boolean> UnityEngine.XR.XRDisplaySubsystem::displayFocusChanged
	Action_1_t10DCB0C07D0D3C565CEACADC80D1152B35A45F6C* ___displayFocusChanged_2;
};

// UnityEngine.XR.XRDisplaySubsystemDescriptor
struct XRDisplaySubsystemDescriptor_t72DD88EE9094488AE723A495F48884BA4EA8311A  : public IntegratedSubsystemDescriptor_1_t7261AA0914165CB589AD41C4F9B463D44E333D7C
{
};

// UnityEngine.XR.XRInputSubsystem
struct XRInputSubsystem_tFECE6683FCAEBF05BAD05E5D612690095D8BAD34  : public IntegratedSubsystem_1_tF93BC76362E85BDD215312162457BE510FC76D3B
{
	// System.Action`1<UnityEngine.XR.XRInputSubsystem> UnityEngine.XR.XRInputSubsystem::trackingOriginUpdated
	Action_1_tC867D66471C553CFFF8707FF2C59FB7AAB03086A* ___trackingOriginUpdated_2;
	// System.Action`1<UnityEngine.XR.XRInputSubsystem> UnityEngine.XR.XRInputSubsystem::boundaryChanged
	Action_1_tC867D66471C553CFFF8707FF2C59FB7AAB03086A* ___boundaryChanged_3;
	// System.Collections.Generic.List`1<System.UInt64> UnityEngine.XR.XRInputSubsystem::m_DeviceIdsCache
	List_1_tB88E7361EE76DFB3EBB7FCD60CC59ACC3E48C284* ___m_DeviceIdsCache_4;
};

// OVRInput/OVRControllerGamepadAndroid
struct OVRControllerGamepadAndroid_t744FA8E4FD2A606498498663467C1271A46F1AB9  : public OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83
{
};

// OVRInput/OVRControllerGamepadPC
struct OVRControllerGamepadPC_t8E0D3F7E7CE14C766A57CC4543E9A7CFFB5B4336  : public OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83
{
};

// OVRInput/OVRControllerHands
struct OVRControllerHands_t12594A1327521ECA38B53C166676B845C1D621CA  : public OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83
{
};

// OVRInput/OVRControllerLHand
struct OVRControllerLHand_t05FFDA0A0B722315B47BFEDFFF701B425563DDB8  : public OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83
{
};

// OVRInput/OVRControllerLTouch
struct OVRControllerLTouch_tAB910B5D7369AA3104AD40C8AE5458C254D225C6  : public OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83
{
};

// OVRInput/OVRControllerRHand
struct OVRControllerRHand_t9AF4805EAECF3275B7E861B1A3E4CF7555C989B4  : public OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83
{
};

// OVRInput/OVRControllerRTouch
struct OVRControllerRTouch_t05E309647F46A925D9C970B8636ADD34E6533A01  : public OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83
{
};

// OVRInput/OVRControllerRemote
struct OVRControllerRemote_tFAC79902D239980E05EB245E84764EB95FC42C08  : public OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83
{
};

// OVRInput/OVRControllerTouch
struct OVRControllerTouch_t3242C19AECEE9D167D937CF1288465415D554A37  : public OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83
{
};

// OVRManager/InstantiateMrcCameraDelegate
struct InstantiateMrcCameraDelegate_t26D39C3003CADD2CBA4E7C5EB75333089B2F03C8  : public MulticastDelegate_t
{
};

// OVRPlugin/EyeGazesStateInternal
struct EyeGazesStateInternal_tBF79AEE2A05EA3315FA4B97D5C758FA977BD39BF 
{
	// OVRPlugin/EyeGazeState OVRPlugin/EyeGazesStateInternal::EyeGazes_0
	EyeGazeState_t153E4D1AFFFEB96639D94D67C265E63D84DE9976 ___EyeGazes_0_0;
	// OVRPlugin/EyeGazeState OVRPlugin/EyeGazesStateInternal::EyeGazes_1
	EyeGazeState_t153E4D1AFFFEB96639D94D67C265E63D84DE9976 ___EyeGazes_1_1;
	// System.Double OVRPlugin/EyeGazesStateInternal::Time
	double ___Time_2;
};

// OVRPlugin/Skeleton
struct Skeleton_tB4F8C22D03DF1FD94CF2389561489C573C84FF0E 
{
	// OVRPlugin/SkeletonType OVRPlugin/Skeleton::Type
	int32_t ___Type_0;
	// System.UInt32 OVRPlugin/Skeleton::NumBones
	uint32_t ___NumBones_1;
	// System.UInt32 OVRPlugin/Skeleton::NumBoneCapsules
	uint32_t ___NumBoneCapsules_2;
	// OVRPlugin/Bone[] OVRPlugin/Skeleton::Bones
	BoneU5BU5D_t71824F0E389C7A0C2B4986FF8CFB94C76081B784* ___Bones_3;
	// OVRPlugin/BoneCapsule[] OVRPlugin/Skeleton::BoneCapsules
	BoneCapsuleU5BU5D_t672686845F44330C5D4B27EE19A8557BFE657B44* ___BoneCapsules_4;
};
// Native definition for P/Invoke marshalling of OVRPlugin/Skeleton
struct Skeleton_tB4F8C22D03DF1FD94CF2389561489C573C84FF0E_marshaled_pinvoke
{
	int32_t ___Type_0;
	uint32_t ___NumBones_1;
	uint32_t ___NumBoneCapsules_2;
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_3[24];
	BoneCapsule_tF1A2277B943643BF2B8969910821CBAE47B3DD74 ___BoneCapsules_4[19];
};
// Native definition for COM marshalling of OVRPlugin/Skeleton
struct Skeleton_tB4F8C22D03DF1FD94CF2389561489C573C84FF0E_marshaled_com
{
	int32_t ___Type_0;
	uint32_t ___NumBones_1;
	uint32_t ___NumBoneCapsules_2;
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_3[24];
	BoneCapsule_tF1A2277B943643BF2B8969910821CBAE47B3DD74 ___BoneCapsules_4[19];
};

// OVRPlugin/Skeleton2Internal
struct Skeleton2Internal_tF8531C814EC7E128C6EE97A4547497AE2042E432 
{
	// OVRPlugin/SkeletonType OVRPlugin/Skeleton2Internal::Type
	int32_t ___Type_0;
	// System.UInt32 OVRPlugin/Skeleton2Internal::NumBones
	uint32_t ___NumBones_1;
	// System.UInt32 OVRPlugin/Skeleton2Internal::NumBoneCapsules
	uint32_t ___NumBoneCapsules_2;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_0
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_0_3;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_1
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_1_4;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_2
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_2_5;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_3
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_3_6;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_4
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_4_7;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_5
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_5_8;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_6
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_6_9;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_7
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_7_10;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_8
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_8_11;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_9
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_9_12;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_10
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_10_13;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_11
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_11_14;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_12
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_12_15;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_13
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_13_16;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_14
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_14_17;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_15
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_15_18;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_16
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_16_19;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_17
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_17_20;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_18
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_18_21;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_19
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_19_22;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_20
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_20_23;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_21
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_21_24;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_22
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_22_25;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_23
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_23_26;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_24
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_24_27;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_25
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_25_28;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_26
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_26_29;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_27
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_27_30;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_28
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_28_31;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_29
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_29_32;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_30
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_30_33;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_31
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_31_34;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_32
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_32_35;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_33
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_33_36;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_34
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_34_37;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_35
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_35_38;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_36
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_36_39;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_37
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_37_40;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_38
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_38_41;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_39
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_39_42;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_40
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_40_43;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_41
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_41_44;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_42
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_42_45;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_43
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_43_46;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_44
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_44_47;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_45
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_45_48;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_46
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_46_49;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_47
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_47_50;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_48
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_48_51;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_49
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_49_52;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_50
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_50_53;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_51
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_51_54;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_52
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_52_55;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_53
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_53_56;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_54
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_54_57;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_55
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_55_58;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_56
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_56_59;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_57
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_57_60;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_58
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_58_61;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_59
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_59_62;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_60
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_60_63;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_61
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_61_64;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_62
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_62_65;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_63
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_63_66;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_64
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_64_67;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_65
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_65_68;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_66
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_66_69;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_67
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_67_70;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_68
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_68_71;
	// OVRPlugin/Bone OVRPlugin/Skeleton2Internal::Bones_69
	Bone_tC5A0FC2629B8200D2FAA3C6E4DA8AF048617E43D ___Bones_69_72;
	// OVRPlugin/BoneCapsule OVRPlugin/Skeleton2Internal::BoneCapsules_0
	BoneCapsule_tF1A2277B943643BF2B8969910821CBAE47B3DD74 ___BoneCapsules_0_73;
	// OVRPlugin/BoneCapsule OVRPlugin/Skeleton2Internal::BoneCapsules_1
	BoneCapsule_tF1A2277B943643BF2B8969910821CBAE47B3DD74 ___BoneCapsules_1_74;
	// OVRPlugin/BoneCapsule OVRPlugin/Skeleton2Internal::BoneCapsules_2
	BoneCapsule_tF1A2277B943643BF2B8969910821CBAE47B3DD74 ___BoneCapsules_2_75;
	// OVRPlugin/BoneCapsule OVRPlugin/Skeleton2Internal::BoneCapsules_3
	BoneCapsule_tF1A2277B943643BF2B8969910821CBAE47B3DD74 ___BoneCapsules_3_76;
	// OVRPlugin/BoneCapsule OVRPlugin/Skeleton2Internal::BoneCapsules_4
	BoneCapsule_tF1A2277B943643BF2B8969910821CBAE47B3DD74 ___BoneCapsules_4_77;
	// OVRPlugin/BoneCapsule OVRPlugin/Skeleton2Internal::BoneCapsules_5
	BoneCapsule_tF1A2277B943643BF2B8969910821CBAE47B3DD74 ___BoneCapsules_5_78;
	// OVRPlugin/BoneCapsule OVRPlugin/Skeleton2Internal::BoneCapsules_6
	BoneCapsule_tF1A2277B943643BF2B8969910821CBAE47B3DD74 ___BoneCapsules_6_79;
	// OVRPlugin/BoneCapsule OVRPlugin/Skeleton2Internal::BoneCapsules_7
	BoneCapsule_tF1A2277B943643BF2B8969910821CBAE47B3DD74 ___BoneCapsules_7_80;
	// OVRPlugin/BoneCapsule OVRPlugin/Skeleton2Internal::BoneCapsules_8
	BoneCapsule_tF1A2277B943643BF2B8969910821CBAE47B3DD74 ___BoneCapsules_8_81;
	// OVRPlugin/BoneCapsule OVRPlugin/Skeleton2Internal::BoneCapsules_9
	BoneCapsule_tF1A2277B943643BF2B8969910821CBAE47B3DD74 ___BoneCapsules_9_82;
	// OVRPlugin/BoneCapsule OVRPlugin/Skeleton2Internal::BoneCapsules_10
	BoneCapsule_tF1A2277B943643BF2B8969910821CBAE47B3DD74 ___BoneCapsules_10_83;
	// OVRPlugin/BoneCapsule OVRPlugin/Skeleton2Internal::BoneCapsules_11
	BoneCapsule_tF1A2277B943643BF2B8969910821CBAE47B3DD74 ___BoneCapsules_11_84;
	// OVRPlugin/BoneCapsule OVRPlugin/Skeleton2Internal::BoneCapsules_12
	BoneCapsule_tF1A2277B943643BF2B8969910821CBAE47B3DD74 ___BoneCapsules_12_85;
	// OVRPlugin/BoneCapsule OVRPlugin/Skeleton2Internal::BoneCapsules_13
	BoneCapsule_tF1A2277B943643BF2B8969910821CBAE47B3DD74 ___BoneCapsules_13_86;
	// OVRPlugin/BoneCapsule OVRPlugin/Skeleton2Internal::BoneCapsules_14
	BoneCapsule_tF1A2277B943643BF2B8969910821CBAE47B3DD74 ___BoneCapsules_14_87;
	// OVRPlugin/BoneCapsule OVRPlugin/Skeleton2Internal::BoneCapsules_15
	BoneCapsule_tF1A2277B943643BF2B8969910821CBAE47B3DD74 ___BoneCapsules_15_88;
	// OVRPlugin/BoneCapsule OVRPlugin/Skeleton2Internal::BoneCapsules_16
	BoneCapsule_tF1A2277B943643BF2B8969910821CBAE47B3DD74 ___BoneCapsules_16_89;
	// OVRPlugin/BoneCapsule OVRPlugin/Skeleton2Internal::BoneCapsules_17
	BoneCapsule_tF1A2277B943643BF2B8969910821CBAE47B3DD74 ___BoneCapsules_17_90;
	// OVRPlugin/BoneCapsule OVRPlugin/Skeleton2Internal::BoneCapsules_18
	BoneCapsule_tF1A2277B943643BF2B8969910821CBAE47B3DD74 ___BoneCapsules_18_91;
};

// UnityEngine.Camera
struct Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184  : public Behaviour_t01970CFBBA658497AE30F311C447DB0440BAB7FA
{
};

// UnityEngine.MonoBehaviour
struct MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71  : public Behaviour_t01970CFBBA658497AE30F311C447DB0440BAB7FA
{
};

// OVRPlugin
struct OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B  : public RuntimeObject
{
};

// OVRCameraRig
struct OVRCameraRig_t7FC2BB0D30DED2B7F0C8914AF2B66E9F4CF891A9  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// UnityEngine.Transform OVRCameraRig::<trackingSpace>k__BackingField
	Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* ___U3CtrackingSpaceU3Ek__BackingField_4;
	// UnityEngine.Transform OVRCameraRig::<leftEyeAnchor>k__BackingField
	Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* ___U3CleftEyeAnchorU3Ek__BackingField_5;
	// UnityEngine.Transform OVRCameraRig::<centerEyeAnchor>k__BackingField
	Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* ___U3CcenterEyeAnchorU3Ek__BackingField_6;
	// UnityEngine.Transform OVRCameraRig::<rightEyeAnchor>k__BackingField
	Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* ___U3CrightEyeAnchorU3Ek__BackingField_7;
	// UnityEngine.Transform OVRCameraRig::<leftHandAnchor>k__BackingField
	Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* ___U3CleftHandAnchorU3Ek__BackingField_8;
	// UnityEngine.Transform OVRCameraRig::<rightHandAnchor>k__BackingField
	Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* ___U3CrightHandAnchorU3Ek__BackingField_9;
	// UnityEngine.Transform OVRCameraRig::<leftControllerAnchor>k__BackingField
	Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* ___U3CleftControllerAnchorU3Ek__BackingField_10;
	// UnityEngine.Transform OVRCameraRig::<rightControllerAnchor>k__BackingField
	Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* ___U3CrightControllerAnchorU3Ek__BackingField_11;
	// UnityEngine.Transform OVRCameraRig::<trackerAnchor>k__BackingField
	Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* ___U3CtrackerAnchorU3Ek__BackingField_12;
	// System.Action`1<OVRCameraRig> OVRCameraRig::UpdatedAnchors
	Action_1_t88CC03E8C305DA991BBBCEBE79519B58D52F577F* ___UpdatedAnchors_13;
	// System.Action`1<UnityEngine.Transform> OVRCameraRig::TrackingSpaceChanged
	Action_1_t10D7C827ADC73ED438E0CA8F04465BA6F2BAED7D* ___TrackingSpaceChanged_14;
	// System.Boolean OVRCameraRig::usePerEyeCameras
	bool ___usePerEyeCameras_15;
	// System.Boolean OVRCameraRig::useFixedUpdateForTracking
	bool ___useFixedUpdateForTracking_16;
	// System.Boolean OVRCameraRig::disableEyeAnchorCameras
	bool ___disableEyeAnchorCameras_17;
	// System.Boolean OVRCameraRig::_skipUpdate
	bool ____skipUpdate_18;
	// System.String OVRCameraRig::trackingSpaceName
	String_t* ___trackingSpaceName_19;
	// System.String OVRCameraRig::trackerAnchorName
	String_t* ___trackerAnchorName_20;
	// System.String OVRCameraRig::leftEyeAnchorName
	String_t* ___leftEyeAnchorName_21;
	// System.String OVRCameraRig::centerEyeAnchorName
	String_t* ___centerEyeAnchorName_22;
	// System.String OVRCameraRig::rightEyeAnchorName
	String_t* ___rightEyeAnchorName_23;
	// System.String OVRCameraRig::leftHandAnchorName
	String_t* ___leftHandAnchorName_24;
	// System.String OVRCameraRig::rightHandAnchorName
	String_t* ___rightHandAnchorName_25;
	// System.String OVRCameraRig::leftControllerAnchorName
	String_t* ___leftControllerAnchorName_26;
	// System.String OVRCameraRig::rightControllerAnchorName
	String_t* ___rightControllerAnchorName_27;
	// UnityEngine.Camera OVRCameraRig::_centerEyeCamera
	Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* ____centerEyeCamera_28;
	// UnityEngine.Camera OVRCameraRig::_leftEyeCamera
	Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* ____leftEyeCamera_29;
	// UnityEngine.Camera OVRCameraRig::_rightEyeCamera
	Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* ____rightEyeCamera_30;
	// UnityEngine.Matrix4x4 OVRCameraRig::_previousTrackingSpaceTransform
	Matrix4x4_tDB70CF134A14BA38190C59AA700BCE10E2AED3E6 ____previousTrackingSpaceTransform_31;
};

// OVRHeadsetEmulator
struct OVRHeadsetEmulator_t962B146D3C4075E460069BC2ED5B5943DA1B8553  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// OVRHeadsetEmulator/OpMode OVRHeadsetEmulator::opMode
	int32_t ___opMode_4;
	// System.Boolean OVRHeadsetEmulator::resetHmdPoseOnRelease
	bool ___resetHmdPoseOnRelease_5;
	// System.Boolean OVRHeadsetEmulator::resetHmdPoseByMiddleMouseButton
	bool ___resetHmdPoseByMiddleMouseButton_6;
	// UnityEngine.KeyCode[] OVRHeadsetEmulator::activateKeys
	KeyCodeU5BU5D_tE5EF2F42327664A9138C613B265BEE8524672B85* ___activateKeys_7;
	// UnityEngine.KeyCode[] OVRHeadsetEmulator::pitchKeys
	KeyCodeU5BU5D_tE5EF2F42327664A9138C613B265BEE8524672B85* ___pitchKeys_8;
	// OVRManager OVRHeadsetEmulator::manager
	OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* ___manager_9;
	// System.Boolean OVRHeadsetEmulator::lastFrameEmulationActivated
	bool ___lastFrameEmulationActivated_15;
	// UnityEngine.Vector3 OVRHeadsetEmulator::recordedHeadPoseRelativeOffsetTranslation
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___recordedHeadPoseRelativeOffsetTranslation_16;
	// UnityEngine.Vector3 OVRHeadsetEmulator::recordedHeadPoseRelativeOffsetRotation
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___recordedHeadPoseRelativeOffsetRotation_17;
	// System.Boolean OVRHeadsetEmulator::hasSentEvent
	bool ___hasSentEvent_18;
	// System.Boolean OVRHeadsetEmulator::emulatorHasInitialized
	bool ___emulatorHasInitialized_19;
	// UnityEngine.CursorLockMode OVRHeadsetEmulator::previousCursorLockMode
	int32_t ___previousCursorLockMode_20;
};

// OVRManager
struct OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// System.Collections.Generic.IEnumerable`1<UnityEngine.Camera> OVRManager::disabledCameras
	RuntimeObject* ___disabledCameras_10;
	// System.Single OVRManager::prevTimeScale
	float ___prevTimeScale_11;
	// System.Boolean OVRManager::useRecommendedMSAALevel
	bool ___useRecommendedMSAALevel_42;
	// System.Boolean OVRManager::_monoscopic
	bool ____monoscopic_43;
	// OVRManager/ColorSpace OVRManager::_colorGamut
	int32_t ____colorGamut_44;
	// System.Single OVRManager::minRenderScale
	float ___minRenderScale_45;
	// System.Single OVRManager::maxRenderScale
	float ___maxRenderScale_46;
	// UnityEngine.Vector3 OVRManager::_headPoseRelativeOffsetRotation
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ____headPoseRelativeOffsetRotation_47;
	// UnityEngine.Vector3 OVRManager::_headPoseRelativeOffsetTranslation
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ____headPoseRelativeOffsetTranslation_48;
	// System.Int32 OVRManager::profilerTcpPort
	int32_t ___profilerTcpPort_49;
	// System.Boolean OVRManager::expandMixedRealityCapturePropertySheet
	bool ___expandMixedRealityCapturePropertySheet_50;
	// System.Boolean OVRManager::enableMixedReality
	bool ___enableMixedReality_51;
	// OVRManager/CompositionMethod OVRManager::compositionMethod
	int32_t ___compositionMethod_52;
	// UnityEngine.LayerMask OVRManager::extraHiddenLayers
	LayerMask_t97CB6BDADEDC3D6423C7BCFEA7F86DA2EC6241DB ___extraHiddenLayers_53;
	// UnityEngine.LayerMask OVRManager::extraVisibleLayers
	LayerMask_t97CB6BDADEDC3D6423C7BCFEA7F86DA2EC6241DB ___extraVisibleLayers_54;
	// System.Boolean OVRManager::dynamicCullingMask
	bool ___dynamicCullingMask_55;
	// UnityEngine.Color OVRManager::externalCompositionBackdropColorRift
	Color_tD001788D726C3A7F1379BEED0260B9591F440C1F ___externalCompositionBackdropColorRift_56;
	// UnityEngine.Color OVRManager::externalCompositionBackdropColorQuest
	Color_tD001788D726C3A7F1379BEED0260B9591F440C1F ___externalCompositionBackdropColorQuest_57;
	// OVRManager/CameraDevice OVRManager::capturingCameraDevice
	int32_t ___capturingCameraDevice_58;
	// System.Boolean OVRManager::flipCameraFrameHorizontally
	bool ___flipCameraFrameHorizontally_59;
	// System.Boolean OVRManager::flipCameraFrameVertically
	bool ___flipCameraFrameVertically_60;
	// System.Single OVRManager::handPoseStateLatency
	float ___handPoseStateLatency_61;
	// System.Single OVRManager::sandwichCompositionRenderLatency
	float ___sandwichCompositionRenderLatency_62;
	// System.Int32 OVRManager::sandwichCompositionBufferedFrames
	int32_t ___sandwichCompositionBufferedFrames_63;
	// UnityEngine.Color OVRManager::chromaKeyColor
	Color_tD001788D726C3A7F1379BEED0260B9591F440C1F ___chromaKeyColor_64;
	// System.Single OVRManager::chromaKeySimilarity
	float ___chromaKeySimilarity_65;
	// System.Single OVRManager::chromaKeySmoothRange
	float ___chromaKeySmoothRange_66;
	// System.Single OVRManager::chromaKeySpillRange
	float ___chromaKeySpillRange_67;
	// System.Boolean OVRManager::useDynamicLighting
	bool ___useDynamicLighting_68;
	// OVRManager/DepthQuality OVRManager::depthQuality
	int32_t ___depthQuality_69;
	// System.Single OVRManager::dynamicLightingSmoothFactor
	float ___dynamicLightingSmoothFactor_70;
	// System.Single OVRManager::dynamicLightingDepthVariationClampingValue
	float ___dynamicLightingDepthVariationClampingValue_71;
	// OVRManager/VirtualGreenScreenType OVRManager::virtualGreenScreenType
	int32_t ___virtualGreenScreenType_72;
	// System.Single OVRManager::virtualGreenScreenTopY
	float ___virtualGreenScreenTopY_73;
	// System.Single OVRManager::virtualGreenScreenBottomY
	float ___virtualGreenScreenBottomY_74;
	// System.Boolean OVRManager::virtualGreenScreenApplyDepthCulling
	bool ___virtualGreenScreenApplyDepthCulling_75;
	// System.Single OVRManager::virtualGreenScreenDepthTolerance
	float ___virtualGreenScreenDepthTolerance_76;
	// OVRManager/MrcActivationMode OVRManager::mrcActivationMode
	int32_t ___mrcActivationMode_77;
	// OVRManager/InstantiateMrcCameraDelegate OVRManager::instantiateMixedRealityCameraGameObject
	InstantiateMrcCameraDelegate_t26D39C3003CADD2CBA4E7C5EB75333089B2F03C8* ___instantiateMixedRealityCameraGameObject_78;
	// System.Boolean OVRManager::isInsightPassthroughEnabled
	bool ___isInsightPassthroughEnabled_79;
	// System.Boolean OVRManager::requestBodyTrackingPermissionOnStartup
	bool ___requestBodyTrackingPermissionOnStartup_80;
	// System.Boolean OVRManager::requestFaceTrackingPermissionOnStartup
	bool ___requestFaceTrackingPermissionOnStartup_81;
	// System.Boolean OVRManager::requestEyeTrackingPermissionOnStartup
	bool ___requestEyeTrackingPermissionOnStartup_82;
	// System.Boolean OVRManager::_localDimming
	bool ____localDimming_93;
	// OVRManager/TrackingOrigin OVRManager::_trackingOriginType
	int32_t ____trackingOriginType_94;
	// System.Boolean OVRManager::usePositionTracking
	bool ___usePositionTracking_95;
	// System.Boolean OVRManager::useRotationTracking
	bool ___useRotationTracking_96;
	// System.Boolean OVRManager::useIPDInPositionTracking
	bool ___useIPDInPositionTracking_97;
	// System.Boolean OVRManager::resetTrackerOnLoad
	bool ___resetTrackerOnLoad_98;
	// System.Boolean OVRManager::AllowRecenter
	bool ___AllowRecenter_99;
	// System.Boolean OVRManager::LateControllerUpdate
	bool ___LateControllerUpdate_100;
	// System.Boolean OVRManager::LateLatching
	bool ___LateLatching_101;
	// System.Boolean OVRManager::<isSupportedPlatform>k__BackingField
	bool ___U3CisSupportedPlatformU3Ek__BackingField_102;
};

// OVRSystemPerfMetrics/OVRSystemPerfMetricsTcpServer
struct OVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// OVRNetwork/OVRNetworkTcpServer OVRSystemPerfMetrics/OVRSystemPerfMetricsTcpServer::tcpServer
	OVRNetworkTcpServer_t8ED20F58D0A2F70B6A84AA3B06787D540A5964C0* ___tcpServer_5;
	// System.Int32 OVRSystemPerfMetrics/OVRSystemPerfMetricsTcpServer::listeningPort
	int32_t ___listeningPort_6;
};

// System.EmptyArray`1<System.Object>
struct EmptyArray_1_tDF0DD7256B115243AA6BD5558417387A734240EE_StaticFields
{
	// T[] System.EmptyArray`1::Value
	ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* ___Value_0;
};

// System.EmptyArray`1<System.Object>

// System.Collections.Generic.HashSet`1<OVRPermissionsRequester/Permission>

// System.Collections.Generic.HashSet`1<OVRPermissionsRequester/Permission>

// System.Collections.Generic.List`1<UnityEngine.Camera>
struct List_1_tD2FA3273746E404D72561E8324608D18B52B533E_StaticFields
{
	// T[] System.Collections.Generic.List`1::s_emptyArray
	CameraU5BU5D_t1506EBA524A07AD1066D6DD4D7DFC6721F1AC26B* ___s_emptyArray_5;
};

// System.Collections.Generic.List`1<UnityEngine.Camera>

// System.Collections.Generic.List`1<System.Object>
struct List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D_StaticFields
{
	// T[] System.Collections.Generic.List`1::s_emptyArray
	ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* ___s_emptyArray_5;
};

// System.Collections.Generic.List`1<System.Object>

// System.Collections.Generic.List`1<UnityEngine.XR.XRDisplaySubsystem>
struct List_1_tA7666C6690CE2AEE97571615AD3AFCE2BB020597_StaticFields
{
	// T[] System.Collections.Generic.List`1::s_emptyArray
	XRDisplaySubsystemU5BU5D_t741124D80DCCCF62F2AF47431354B7387672F264* ___s_emptyArray_5;
};

// System.Collections.Generic.List`1<UnityEngine.XR.XRDisplaySubsystem>

// System.Collections.Generic.List`1<UnityEngine.XR.XRDisplaySubsystemDescriptor>
struct List_1_tC3F021D09EFA4F3516555517B5E0D39308C9C1B4_StaticFields
{
	// T[] System.Collections.Generic.List`1::s_emptyArray
	XRDisplaySubsystemDescriptorU5BU5D_t80B6AEA854B63F06CAE27E51662BBC06D752BFF0* ___s_emptyArray_5;
};

// System.Collections.Generic.List`1<UnityEngine.XR.XRDisplaySubsystemDescriptor>

// System.Collections.Generic.List`1<UnityEngine.XR.XRInputSubsystem>
struct List_1_t90832B88D7207769654164CC28440CF594CC397D_StaticFields
{
	// T[] System.Collections.Generic.List`1::s_emptyArray
	XRInputSubsystemU5BU5D_t224A541B4C0D2E3253E4D68ADF4F824AC587B11C* ___s_emptyArray_5;
};

// System.Collections.Generic.List`1<UnityEngine.XR.XRInputSubsystem>

// System.Collections.Generic.List`1<OVRInput/OVRControllerBase>
struct List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577_StaticFields
{
	// T[] System.Collections.Generic.List`1::s_emptyArray
	OVRControllerBaseU5BU5D_t01C1CD9B17ED250028217971566A01F5DE00CF39* ___s_emptyArray_5;
};

// System.Collections.Generic.List`1<OVRInput/OVRControllerBase>

// System.Collections.Generic.List`1<OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker>
struct List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6_StaticFields
{
	// T[] System.Collections.Generic.List`1::s_emptyArray
	ClipPlaybackTrackerU5BU5D_t581D1A52408639F1B70182122A456B2D5A6C8D4F* ___s_emptyArray_5;
};

// System.Collections.Generic.List`1<OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker>

// OVRBoundary
struct OVRBoundary_t56DFE91F758A740A34575D748FEC61959A106DAE_StaticFields
{
	// System.Int32 OVRBoundary::cachedVector3fSize
	int32_t ___cachedVector3fSize_0;
	// OVRNativeBuffer OVRBoundary::cachedGeometryNativeBuffer
	OVRNativeBuffer_tEBEDDBFD193B5EE2FE1E0C1B22AA823FB3703915* ___cachedGeometryNativeBuffer_1;
	// System.Single[] OVRBoundary::cachedGeometryManagedBuffer
	SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___cachedGeometryManagedBuffer_2;
};

// OVRBoundary

// OVRDisplay

// OVRDisplay

// OVRHaptics
struct OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C_StaticFields
{
	// OVRHaptics/OVRHapticsChannel[] OVRHaptics::Channels
	OVRHapticsChannelU5BU5D_t5CFD3CC0AE2D7AF472EADAE43D25D00EA71AF3C8* ___Channels_0;
	// OVRHaptics/OVRHapticsChannel OVRHaptics::LeftChannel
	OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853* ___LeftChannel_1;
	// OVRHaptics/OVRHapticsChannel OVRHaptics::RightChannel
	OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853* ___RightChannel_2;
	// OVRHaptics/OVRHapticsOutput[] OVRHaptics::m_outputs
	OVRHapticsOutputU5BU5D_tF2F7D8627C25B56A905E3C8574260767FB659BA7* ___m_outputs_3;
};

// OVRHaptics

// OVRHapticsClip

// OVRHapticsClip

// OVRInput
struct OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields
{
	// System.Single OVRInput::AXIS_AS_BUTTON_THRESHOLD
	float ___AXIS_AS_BUTTON_THRESHOLD_0;
	// System.Single OVRInput::AXIS_DEADZONE_THRESHOLD
	float ___AXIS_DEADZONE_THRESHOLD_1;
	// System.Collections.Generic.List`1<OVRInput/OVRControllerBase> OVRInput::controllers
	List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* ___controllers_2;
	// OVRInput/Controller OVRInput::activeControllerType
	int32_t ___activeControllerType_3;
	// OVRInput/Controller OVRInput::connectedControllerTypes
	int32_t ___connectedControllerTypes_4;
	// OVRPlugin/Step OVRInput::stepType
	int32_t ___stepType_5;
	// System.Int32 OVRInput::fixedUpdateCount
	int32_t ___fixedUpdateCount_6;
	// System.Boolean OVRInput::_pluginSupportsActiveController
	bool ____pluginSupportsActiveController_7;
	// System.Boolean OVRInput::_pluginSupportsActiveControllerCached
	bool ____pluginSupportsActiveControllerCached_8;
	// System.Version OVRInput::_pluginSupportsActiveControllerMinVersion
	Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* ____pluginSupportsActiveControllerMinVersion_9;
	// System.Int32 OVRInput::NUM_HAPTIC_CHANNELS
	int32_t ___NUM_HAPTIC_CHANNELS_10;
	// OVRInput/HapticInfo[] OVRInput::hapticInfos
	HapticInfoU5BU5D_tD7F089695199232CD57B8C3C73F549036B5BC2CB* ___hapticInfos_11;
	// System.Single OVRInput::OPENVR_MAX_HAPTIC_AMPLITUDE
	float ___OPENVR_MAX_HAPTIC_AMPLITUDE_12;
	// System.Single OVRInput::HAPTIC_VIBRATION_DURATION_SECONDS
	float ___HAPTIC_VIBRATION_DURATION_SECONDS_13;
	// System.String OVRInput::OPENVR_TOUCH_NAME
	String_t* ___OPENVR_TOUCH_NAME_14;
	// System.String OVRInput::OPENVR_VIVE_CONTROLLER_NAME
	String_t* ___OPENVR_VIVE_CONTROLLER_NAME_15;
	// System.String OVRInput::OPENVR_WINDOWSMR_CONTROLLER_NAME
	String_t* ___OPENVR_WINDOWSMR_CONTROLLER_NAME_16;
	// OVRInput/OpenVRControllerDetails[] OVRInput::openVRControllerDetails
	OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* ___openVRControllerDetails_17;
};

// OVRInput

// OVRKtxTexture

// OVRKtxTexture

// OVRTracker

// OVRTracker

// System.String
struct String_t_StaticFields
{
	// System.String System.String::Empty
	String_t* ___Empty_6;
};

// System.String

// System.Text.StringBuilder

// System.Text.StringBuilder

// System.Version

// System.Version

// OVRHaptics/Config
struct Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_StaticFields
{
	// System.Int32 OVRHaptics/Config::<SampleRateHz>k__BackingField
	int32_t ___U3CSampleRateHzU3Ek__BackingField_0;
	// System.Int32 OVRHaptics/Config::<SampleSizeInBytes>k__BackingField
	int32_t ___U3CSampleSizeInBytesU3Ek__BackingField_1;
	// System.Int32 OVRHaptics/Config::<MinimumSafeSamplesQueued>k__BackingField
	int32_t ___U3CMinimumSafeSamplesQueuedU3Ek__BackingField_2;
	// System.Int32 OVRHaptics/Config::<MinimumBufferSamplesCount>k__BackingField
	int32_t ___U3CMinimumBufferSamplesCountU3Ek__BackingField_3;
	// System.Int32 OVRHaptics/Config::<OptimalBufferSamplesCount>k__BackingField
	int32_t ___U3COptimalBufferSamplesCountU3Ek__BackingField_4;
	// System.Int32 OVRHaptics/Config::<MaximumBufferSamplesCount>k__BackingField
	int32_t ___U3CMaximumBufferSamplesCountU3Ek__BackingField_5;
};

// OVRHaptics/Config

// OVRHaptics/OVRHapticsChannel

// OVRHaptics/OVRHapticsChannel

// OVRHaptics/OVRHapticsOutput

// OVRHaptics/OVRHapticsOutput

// OVRInput/HapticInfo

// OVRInput/HapticInfo

// OVRManager/<>c
struct U3CU3Ec_t428B95F22B12C42F05233DE02507635B55BBBF98_StaticFields
{
	// OVRManager/<>c OVRManager/<>c::<>9
	U3CU3Ec_t428B95F22B12C42F05233DE02507635B55BBBF98* ___U3CU3E9_0;
	// System.Func`2<System.Single,System.String> OVRManager/<>c::<>9__397_0
	Func_2_t5ACB813DEA6873041E3CE5A28AE88A73E01E6EF8* ___U3CU3E9__397_0_1;
	// System.Comparison`1<UnityEngine.Camera> OVRManager/<>c::<>9__413_0
	Comparison_1_t49BE56523BDD8BC22EF3396960546FE16DE7B11A* ___U3CU3E9__413_0_2;
};

// OVRManager/<>c

// OVRManager/PassthroughCapabilities

// OVRManager/PassthroughCapabilities

// OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker

// OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker

// OVRInput/OVRControllerBase/VirtualAxis1DMap

// OVRInput/OVRControllerBase/VirtualAxis1DMap

// OVRInput/OVRControllerBase/VirtualAxis2DMap

// OVRInput/OVRControllerBase/VirtualAxis2DMap

// OVRInput/OVRControllerBase/VirtualButtonMap

// OVRInput/OVRControllerBase/VirtualButtonMap

// OVRInput/OVRControllerBase/VirtualNearTouchMap

// OVRInput/OVRControllerBase/VirtualNearTouchMap

// OVRInput/OVRControllerBase/VirtualTouchMap

// OVRInput/OVRControllerBase/VirtualTouchMap

// UnityEngine.AudioConfiguration

// UnityEngine.AudioConfiguration

// System.Boolean
struct Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_StaticFields
{
	// System.String System.Boolean::TrueString
	String_t* ___TrueString_5;
	// System.String System.Boolean::FalseString
	String_t* ___FalseString_6;
};

// System.Boolean

// System.Byte

// System.Byte

// System.Char
struct Char_t521A6F19B456D956AF452D926C32709DC03D6B17_StaticFields
{
	// System.Byte[] System.Char::s_categoryForLatin1
	ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___s_categoryForLatin1_3;
};

// System.Char

// UnityEngine.Color

// UnityEngine.Color

// System.Double

// System.Double

// System.Enum
struct Enum_t2A1A94B24E3B776EEF4E5E485E290BB9D4D072E2_StaticFields
{
	// System.Char[] System.Enum::enumSeperatorCharArray
	CharU5BU5D_t799905CF001DD5F13F7DBB310181FC4D8B7D0AAB* ___enumSeperatorCharArray_0;
};

// System.Enum

// System.Guid
struct Guid_t_StaticFields
{
	// System.Guid System.Guid::Empty
	Guid_t ___Empty_0;
};

// System.Guid

// System.Int32

// System.Int32

// System.IntPtr
struct IntPtr_t_StaticFields
{
	// System.IntPtr System.IntPtr::Zero
	intptr_t ___Zero_1;
};

// System.IntPtr

// UnityEngine.LayerMask

// UnityEngine.LayerMask

// OVRSpace

// OVRSpace

// OVRTextureData

// OVRTextureData

// UnityEngine.PropertyAttribute

// UnityEngine.PropertyAttribute

// UnityEngine.Quaternion
struct Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974_StaticFields
{
	// UnityEngine.Quaternion UnityEngine.Quaternion::identityQuaternion
	Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 ___identityQuaternion_4;
};

// UnityEngine.Quaternion

// System.Single

// System.Single

// System.UInt16

// System.UInt16

// System.UInt32

// System.UInt32

// System.UInt64

// System.UInt64

// OVR.OpenVR.VRControllerAxis_t

// OVR.OpenVR.VRControllerAxis_t

// UnityEngine.Vector2
struct Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7_StaticFields
{
	// UnityEngine.Vector2 UnityEngine.Vector2::zeroVector
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___zeroVector_2;
	// UnityEngine.Vector2 UnityEngine.Vector2::oneVector
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___oneVector_3;
	// UnityEngine.Vector2 UnityEngine.Vector2::upVector
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___upVector_4;
	// UnityEngine.Vector2 UnityEngine.Vector2::downVector
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___downVector_5;
	// UnityEngine.Vector2 UnityEngine.Vector2::leftVector
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___leftVector_6;
	// UnityEngine.Vector2 UnityEngine.Vector2::rightVector
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___rightVector_7;
	// UnityEngine.Vector2 UnityEngine.Vector2::positiveInfinityVector
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___positiveInfinityVector_8;
	// UnityEngine.Vector2 UnityEngine.Vector2::negativeInfinityVector
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___negativeInfinityVector_9;
};

// UnityEngine.Vector2

// UnityEngine.Vector3
struct Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2_StaticFields
{
	// UnityEngine.Vector3 UnityEngine.Vector3::zeroVector
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___zeroVector_5;
	// UnityEngine.Vector3 UnityEngine.Vector3::oneVector
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___oneVector_6;
	// UnityEngine.Vector3 UnityEngine.Vector3::upVector
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___upVector_7;
	// UnityEngine.Vector3 UnityEngine.Vector3::downVector
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___downVector_8;
	// UnityEngine.Vector3 UnityEngine.Vector3::leftVector
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___leftVector_9;
	// UnityEngine.Vector3 UnityEngine.Vector3::rightVector
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___rightVector_10;
	// UnityEngine.Vector3 UnityEngine.Vector3::forwardVector
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___forwardVector_11;
	// UnityEngine.Vector3 UnityEngine.Vector3::backVector
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___backVector_12;
	// UnityEngine.Vector3 UnityEngine.Vector3::positiveInfinityVector
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___positiveInfinityVector_13;
	// UnityEngine.Vector3 UnityEngine.Vector3::negativeInfinityVector
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___negativeInfinityVector_14;
};

// UnityEngine.Vector3

// UnityEngine.Vector4
struct Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3_StaticFields
{
	// UnityEngine.Vector4 UnityEngine.Vector4::zeroVector
	Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3 ___zeroVector_5;
	// UnityEngine.Vector4 UnityEngine.Vector4::oneVector
	Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3 ___oneVector_6;
	// UnityEngine.Vector4 UnityEngine.Vector4::positiveInfinityVector
	Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3 ___positiveInfinityVector_7;
	// UnityEngine.Vector4 UnityEngine.Vector4::negativeInfinityVector
	Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3 ___negativeInfinityVector_8;
};

// UnityEngine.Vector4

// System.Void

// System.Void

// OVRDeserialize/DisplayRefreshRateChangedData

// OVRDeserialize/DisplayRefreshRateChangedData

// OVRDeserialize/SceneCaptureCompleteData

// OVRDeserialize/SceneCaptureCompleteData

// OVRDeserialize/SpaceListSaveResultData

// OVRDeserialize/SpaceListSaveResultData

// OVRDeserialize/SpaceQueryCompleteData

// OVRDeserialize/SpaceQueryCompleteData

// OVRDeserialize/SpaceQueryResultsData

// OVRDeserialize/SpaceQueryResultsData

// OVRDeserialize/SpaceShareResultData

// OVRDeserialize/SpaceShareResultData

// OVRInput/HapticsAmplitudeEnvelopeVibration

// OVRInput/HapticsAmplitudeEnvelopeVibration

// OVRInput/HapticsPcmVibration

// OVRInput/HapticsPcmVibration

// OVRPlugin/HapticsDesc

// OVRPlugin/HapticsDesc

// OVRPlugin/HapticsState

// OVRPlugin/HapticsState

// OVRPlugin/Quatf
struct Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A_StaticFields
{
	// OVRPlugin/Quatf OVRPlugin/Quatf::identity
	Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A ___identity_4;
};

// OVRPlugin/Quatf

// OVRPlugin/Vector2f

// OVRPlugin/Vector2f

// OVRPlugin/Vector3f
struct Vector3f_t232AF83B4642C67BE8EFF85D8E1599D3B06BD562_StaticFields
{
	// OVRPlugin/Vector3f OVRPlugin/Vector3f::zero
	Vector3f_t232AF83B4642C67BE8EFF85D8E1599D3B06BD562 ___zero_3;
};

// OVRPlugin/Vector3f

// OVR.OpenVR.CVRSystem

// OVR.OpenVR.CVRSystem

// System.Delegate

// System.Delegate

// System.Exception
struct Exception_t_StaticFields
{
	// System.Object System.Exception::s_EDILock
	RuntimeObject* ___s_EDILock_0;
};

// System.Exception

// System.Runtime.InteropServices.GCHandle

// System.Runtime.InteropServices.GCHandle

// UnityEngine.IntegratedSubsystem

// UnityEngine.IntegratedSubsystem

// UnityEngine.IntegratedSubsystemDescriptor

// UnityEngine.IntegratedSubsystemDescriptor

// UnityEngine.KeyCode

// UnityEngine.KeyCode

// OVRGLTFLoader
struct OVRGLTFLoader_t2E5E39D416422D0459916F5D1FA9C83CA2C92CD1_StaticFields
{
	// UnityEngine.Vector3 OVRGLTFLoader::GLTFToUnitySpace
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___GLTFToUnitySpace_9;
	// UnityEngine.Vector3 OVRGLTFLoader::GLTFToUnityTangent
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___GLTFToUnityTangent_10;
	// UnityEngine.Vector4 OVRGLTFLoader::GLTFToUnitySpace_Rotation
	Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3 ___GLTFToUnitySpace_Rotation_11;
	// System.Collections.Generic.Dictionary`2<System.String,OVRGLTFInputNode> OVRGLTFLoader::InputNodeNameMap
	Dictionary_2_t982EF0B82EE26457A315A6EA587C4B3222105F1A* ___InputNodeNameMap_12;
};

// OVRGLTFLoader

// OVRLayerAttribute

// OVRLayerAttribute

// OVRMaterialData

// OVRMaterialData

// OVRNativeBuffer

// OVRNativeBuffer

// OVRPose

// OVRPose

// UnityEngine.Object
struct Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_StaticFields
{
	// System.Int32 UnityEngine.Object::OffsetOfInstanceIDInCPlusPlusObject
	int32_t ___OffsetOfInstanceIDInCPlusPlusObject_1;
};

// UnityEngine.Object

// System.RuntimeTypeHandle

// System.RuntimeTypeHandle

// OVR.OpenVR.VRControllerState_t

// OVR.OpenVR.VRControllerState_t

// OVRDeserialize/SpaceEraseCompleteData

// OVRDeserialize/SpaceEraseCompleteData

// OVRDeserialize/SpaceSaveCompleteData

// OVRDeserialize/SpaceSaveCompleteData

// OVRDeserialize/SpaceSetComponentStatusCompleteData

// OVRDeserialize/SpaceSetComponentStatusCompleteData

// OVRDeserialize/SpatialAnchorCreateCompleteData

// OVRDeserialize/SpatialAnchorCreateCompleteData

// OVRPlugin/ControllerState5

// OVRPlugin/ControllerState5

// OVRPlugin/EventDataBuffer

// OVRPlugin/EventDataBuffer

// OVRPlugin/HapticsAmplitudeEnvelopeVibration

// OVRPlugin/HapticsAmplitudeEnvelopeVibration

// OVRPlugin/HapticsBuffer

// OVRPlugin/HapticsBuffer

// OVRPlugin/HapticsPcmVibration

// OVRPlugin/HapticsPcmVibration

// OVRPlugin/Posef
struct Posef_t51A2C10B4094B44A8D3C1913292B839172887B61_StaticFields
{
	// OVRPlugin/Posef OVRPlugin/Posef::identity
	Posef_t51A2C10B4094B44A8D3C1913292B839172887B61 ___identity_2;
};

// OVRPlugin/Posef

// System.WeakReference`1<UnityEngine.Camera>

// System.WeakReference`1<UnityEngine.Camera>

// UnityEngine.AudioClip

// UnityEngine.AudioClip

// UnityEngine.Component

// UnityEngine.Component

// UnityEngine.GameObject

// UnityEngine.GameObject

// OVRProfile

// OVRProfile

// System.Type
struct Type_t_StaticFields
{
	// System.Reflection.Binder modreq(System.Runtime.CompilerServices.IsVolatile) System.Type::s_defaultBinder
	Binder_t91BFCE95A7057FADF4D8A1A342AFE52872246235* ___s_defaultBinder_0;
	// System.Char System.Type::Delimiter
	Il2CppChar ___Delimiter_1;
	// System.Type[] System.Type::EmptyTypes
	TypeU5BU5D_t97234E1129B564EB38B8D85CAC2AD8B5B9522FFB* ___EmptyTypes_2;
	// System.Object System.Type::Missing
	RuntimeObject* ___Missing_3;
	// System.Reflection.MemberFilter System.Type::FilterAttribute
	MemberFilter_tF644F1AE82F611B677CE1964D5A3277DDA21D553* ___FilterAttribute_4;
	// System.Reflection.MemberFilter System.Type::FilterName
	MemberFilter_tF644F1AE82F611B677CE1964D5A3277DDA21D553* ___FilterName_5;
	// System.Reflection.MemberFilter System.Type::FilterNameIgnoreCase
	MemberFilter_tF644F1AE82F611B677CE1964D5A3277DDA21D553* ___FilterNameIgnoreCase_6;
};

// System.Type

// OVRGLTFLoader/<>c__DisplayClass27_0

// OVRGLTFLoader/<>c__DisplayClass27_0

// OVRInput/OVRControllerBase

// OVRInput/OVRControllerBase

// OVRInput/OpenVRControllerDetails

// OVRInput/OpenVRControllerDetails

// OVRPlugin/PoseStatef
struct PoseStatef_tC6A564A6E163790E7DE8D1CF4EBDE089D09B053E_StaticFields
{
	// OVRPlugin/PoseStatef OVRPlugin/PoseStatef::identity
	PoseStatef_tC6A564A6E163790E7DE8D1CF4EBDE089D09B053E ___identity_6;
};

// OVRPlugin/PoseStatef

// System.Action`1<System.UInt64>

// System.Action`1<System.UInt64>

// System.Action`2<System.Single,System.Single>

// System.Action`2<System.Single,System.Single>

// System.Action`2<System.UInt64,System.Boolean>

// System.Action`2<System.UInt64,System.Boolean>

// System.Action`2<System.UInt64,System.Int32Enum>

// System.Action`2<System.UInt64,System.Int32Enum>

// System.Action`2<System.UInt64,OVRSpatialAnchor/OperationResult>

// System.Action`2<System.UInt64,OVRSpatialAnchor/OperationResult>

// System.Action`4<System.UInt64,System.Boolean,System.Guid,System.Int32Enum>

// System.Action`4<System.UInt64,System.Boolean,System.Guid,System.Int32Enum>

// System.Action`4<System.UInt64,System.Boolean,System.Guid,OVRPlugin/SpaceStorageLocation>

// System.Action`4<System.UInt64,System.Boolean,System.Guid,OVRPlugin/SpaceStorageLocation>

// System.Action`4<System.UInt64,System.Boolean,OVRSpace,System.Guid>

// System.Action`4<System.UInt64,System.Boolean,OVRSpace,System.Guid>

// System.Action`4<System.UInt64,OVRSpace,System.Boolean,System.Guid>

// System.Action`4<System.UInt64,OVRSpace,System.Boolean,System.Guid>

// System.Action`6<System.UInt64,System.Boolean,OVRSpace,System.Guid,System.Int32Enum,System.Boolean>

// System.Action`6<System.UInt64,System.Boolean,OVRSpace,System.Guid,System.Int32Enum,System.Boolean>

// System.Action`6<System.UInt64,System.Boolean,OVRSpace,System.Guid,OVRPlugin/SpaceComponentType,System.Boolean>

// System.Action`6<System.UInt64,System.Boolean,OVRSpace,System.Guid,OVRPlugin/SpaceComponentType,System.Boolean>

// System.Comparison`1<UnityEngine.Camera>

// System.Comparison`1<UnityEngine.Camera>

// System.Func`2<System.Single,System.String>

// System.Func`2<System.Single,System.String>

// System.Action

// System.Action

// UnityEngine.Behaviour

// UnityEngine.Behaviour

// OVRMixedRealityCaptureSettings

// OVRMixedRealityCaptureSettings

// OVRRuntimeSettings

// OVRRuntimeSettings

// UnityEngine.Transform

// UnityEngine.Transform

// UnityEngine.XR.XRDisplaySubsystem

// UnityEngine.XR.XRDisplaySubsystem

// UnityEngine.XR.XRDisplaySubsystemDescriptor

// UnityEngine.XR.XRDisplaySubsystemDescriptor

// UnityEngine.XR.XRInputSubsystem

// UnityEngine.XR.XRInputSubsystem

// OVRInput/OVRControllerGamepadAndroid

// OVRInput/OVRControllerGamepadAndroid

// OVRInput/OVRControllerGamepadPC

// OVRInput/OVRControllerGamepadPC

// OVRInput/OVRControllerHands

// OVRInput/OVRControllerHands

// OVRInput/OVRControllerLHand

// OVRInput/OVRControllerLHand

// OVRInput/OVRControllerLTouch

// OVRInput/OVRControllerLTouch

// OVRInput/OVRControllerRHand

// OVRInput/OVRControllerRHand

// OVRInput/OVRControllerRTouch

// OVRInput/OVRControllerRTouch

// OVRInput/OVRControllerRemote

// OVRInput/OVRControllerRemote

// OVRInput/OVRControllerTouch

// OVRInput/OVRControllerTouch

// OVRManager/InstantiateMrcCameraDelegate

// OVRManager/InstantiateMrcCameraDelegate

// UnityEngine.Camera
struct Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184_StaticFields
{
	// UnityEngine.Camera/CameraCallback UnityEngine.Camera::onPreCull
	CameraCallback_t844E527BFE37BC0495E7F67993E43C07642DA9DD* ___onPreCull_4;
	// UnityEngine.Camera/CameraCallback UnityEngine.Camera::onPreRender
	CameraCallback_t844E527BFE37BC0495E7F67993E43C07642DA9DD* ___onPreRender_5;
	// UnityEngine.Camera/CameraCallback UnityEngine.Camera::onPostRender
	CameraCallback_t844E527BFE37BC0495E7F67993E43C07642DA9DD* ___onPostRender_6;
};

// UnityEngine.Camera

// UnityEngine.MonoBehaviour

// UnityEngine.MonoBehaviour

// OVRPlugin
struct OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_StaticFields
{
	// System.Version OVRPlugin::wrapperVersion
	Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* ___wrapperVersion_1;
	// System.Version OVRPlugin::_version
	Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* ____version_2;
	// System.Version OVRPlugin::_nativeSDKVersion
	Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* ____nativeSDKVersion_3;
	// System.Int32 OVRPlugin::MAX_CPU_CORES
	int32_t ___MAX_CPU_CORES_4;
	// System.Nullable`1<OVRPlugin/XrApi> OVRPlugin::_nativeXrApi
	Nullable_1_tC438FE0466EF1565EE278C732EE7C3053C1053C4 ____nativeXrApi_12;
	// OVRPlugin/GUID OVRPlugin::_nativeAudioOutGuid
	GUID_t7B0B550D78EA6D8B265CC38E3D47A5E5DA539BB7* ____nativeAudioOutGuid_13;
	// System.Guid OVRPlugin::_cachedAudioOutGuid
	Guid_t ____cachedAudioOutGuid_14;
	// System.String OVRPlugin::_cachedAudioOutString
	String_t* ____cachedAudioOutString_15;
	// OVRPlugin/GUID OVRPlugin::_nativeAudioInGuid
	GUID_t7B0B550D78EA6D8B265CC38E3D47A5E5DA539BB7* ____nativeAudioInGuid_16;
	// System.Guid OVRPlugin::_cachedAudioInGuid
	Guid_t ____cachedAudioInGuid_17;
	// System.String OVRPlugin::_cachedAudioInString
	String_t* ____cachedAudioInString_18;
	// System.Boolean OVRPlugin::perfStatWarningPrinted
	bool ___perfStatWarningPrinted_19;
	// System.Boolean OVRPlugin::resetPerfStatWarningPrinted
	bool ___resetPerfStatWarningPrinted_20;
	// OVRNativeBuffer OVRPlugin::_nativeSystemDisplayFrequenciesAvailable
	OVRNativeBuffer_tEBEDDBFD193B5EE2FE1E0C1B22AA823FB3703915* ____nativeSystemDisplayFrequenciesAvailable_21;
	// System.Single[] OVRPlugin::_cachedSystemDisplayFrequenciesAvailable
	SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ____cachedSystemDisplayFrequenciesAvailable_22;
	// OVRPlugin/HandStateInternal OVRPlugin::cachedHandState
	HandStateInternal_tADD472E69CDB0B051EFD5EAAFB69D16BA364BE37 ___cachedHandState_23;
	// OVRPlugin/Skeleton OVRPlugin::cachedSkeleton
	Skeleton_tB4F8C22D03DF1FD94CF2389561489C573C84FF0E ___cachedSkeleton_24;
	// OVRPlugin/Skeleton2Internal OVRPlugin::cachedSkeleton2
	Skeleton2Internal_tF8531C814EC7E128C6EE97A4547497AE2042E432 ___cachedSkeleton2_25;
	// OVRPlugin/FaceStateInternal OVRPlugin::cachedFaceState
	FaceStateInternal_t0C7FBA46B3EFEDDFF67EA74919D07A7EDA1532EC ___cachedFaceState_26;
	// OVRPlugin/EyeGazesStateInternal OVRPlugin::cachedEyeGazesState
	EyeGazesStateInternal_tBF79AEE2A05EA3315FA4B97D5C758FA977BD39BF ___cachedEyeGazesState_27;
	// System.Version OVRPlugin::_versionZero
	Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* ____versionZero_29;
};

// OVRPlugin

// OVRCameraRig

// OVRCameraRig

// OVRHeadsetEmulator

// OVRHeadsetEmulator

// OVRManager
struct OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields
{
	// OVRManager OVRManager::<instance>k__BackingField
	OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* ___U3CinstanceU3Ek__BackingField_4;
	// OVRDisplay OVRManager::<display>k__BackingField
	OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27* ___U3CdisplayU3Ek__BackingField_5;
	// OVRTracker OVRManager::<tracker>k__BackingField
	OVRTracker_t5E60EE08D82308F2F8206AD43AE8CC4925938154* ___U3CtrackerU3Ek__BackingField_6;
	// OVRBoundary OVRManager::<boundary>k__BackingField
	OVRBoundary_t56DFE91F758A740A34575D748FEC61959A106DAE* ___U3CboundaryU3Ek__BackingField_7;
	// OVRRuntimeSettings OVRManager::<runtimeSettings>k__BackingField
	OVRRuntimeSettings_tC85E84DCFBF4DB2D4C3311CA39C96DEE89220EE1* ___U3CruntimeSettingsU3Ek__BackingField_8;
	// OVRProfile OVRManager::_profile
	OVRProfile_tCFDDDA5EE82F0ED94671EB741B8954603D98AFC0* ____profile_9;
	// System.Action OVRManager::HMDAcquired
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___HMDAcquired_12;
	// System.Action OVRManager::HMDLost
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___HMDLost_13;
	// System.Action OVRManager::HMDMounted
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___HMDMounted_14;
	// System.Action OVRManager::HMDUnmounted
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___HMDUnmounted_15;
	// System.Action OVRManager::VrFocusAcquired
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___VrFocusAcquired_16;
	// System.Action OVRManager::VrFocusLost
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___VrFocusLost_17;
	// System.Action OVRManager::InputFocusAcquired
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___InputFocusAcquired_18;
	// System.Action OVRManager::InputFocusLost
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___InputFocusLost_19;
	// System.Action OVRManager::AudioOutChanged
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___AudioOutChanged_20;
	// System.Action OVRManager::AudioInChanged
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___AudioInChanged_21;
	// System.Action OVRManager::TrackingAcquired
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___TrackingAcquired_22;
	// System.Action OVRManager::TrackingLost
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___TrackingLost_23;
	// System.Action`2<System.Single,System.Single> OVRManager::DisplayRefreshRateChanged
	Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132* ___DisplayRefreshRateChanged_24;
	// System.Action`4<System.UInt64,System.Boolean,OVRSpace,System.Guid> OVRManager::SpatialAnchorCreateComplete
	Action_4_t540B344FD589096100128D9A1B39946413ED9AAE* ___SpatialAnchorCreateComplete_25;
	// System.Action`6<System.UInt64,System.Boolean,OVRSpace,System.Guid,OVRPlugin/SpaceComponentType,System.Boolean> OVRManager::SpaceSetComponentStatusComplete
	Action_6_tD8B17612932122F2ABF5C8545327C8F527403625* ___SpaceSetComponentStatusComplete_26;
	// System.Action`1<System.UInt64> OVRManager::SpaceQueryResults
	Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C* ___SpaceQueryResults_27;
	// System.Action`2<System.UInt64,System.Boolean> OVRManager::SpaceQueryComplete
	Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* ___SpaceQueryComplete_28;
	// System.Action`4<System.UInt64,OVRSpace,System.Boolean,System.Guid> OVRManager::SpaceSaveComplete
	Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A* ___SpaceSaveComplete_29;
	// System.Action`4<System.UInt64,System.Boolean,System.Guid,OVRPlugin/SpaceStorageLocation> OVRManager::SpaceEraseComplete
	Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC* ___SpaceEraseComplete_30;
	// System.Action`2<System.UInt64,OVRSpatialAnchor/OperationResult> OVRManager::ShareSpacesComplete
	Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* ___ShareSpacesComplete_31;
	// System.Action`2<System.UInt64,OVRSpatialAnchor/OperationResult> OVRManager::SpaceListSaveComplete
	Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* ___SpaceListSaveComplete_32;
	// System.Action`2<System.UInt64,System.Boolean> OVRManager::SceneCaptureComplete
	Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* ___SceneCaptureComplete_33;
	// System.Action OVRManager::HSWDismissed
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___HSWDismissed_34;
	// System.Boolean OVRManager::_isHmdPresentCached
	bool ____isHmdPresentCached_35;
	// System.Boolean OVRManager::_isHmdPresent
	bool ____isHmdPresent_36;
	// System.Boolean OVRManager::_wasHmdPresent
	bool ____wasHmdPresent_37;
	// System.Boolean OVRManager::_hasVrFocusCached
	bool ____hasVrFocusCached_38;
	// System.Boolean OVRManager::_hasVrFocus
	bool ____hasVrFocus_39;
	// System.Boolean OVRManager::_hadVrFocus
	bool ____hadVrFocus_40;
	// System.Boolean OVRManager::_hadInputFocus
	bool ____hadInputFocus_41;
	// System.String OVRManager::OCULUS_UNITY_NAME_STR
	String_t* ___OCULUS_UNITY_NAME_STR_83;
	// System.String OVRManager::OPENVR_UNITY_NAME_STR
	String_t* ___OPENVR_UNITY_NAME_STR_84;
	// OVRManager/XRDevice OVRManager::loadedXRDevice
	int32_t ___loadedXRDevice_85;
	// UnityEngine.Vector3 OVRManager::OpenVRTouchRotationOffsetEulerLeft
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___OpenVRTouchRotationOffsetEulerLeft_86;
	// UnityEngine.Vector3 OVRManager::OpenVRTouchRotationOffsetEulerRight
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___OpenVRTouchRotationOffsetEulerRight_87;
	// UnityEngine.Vector3 OVRManager::OpenVRTouchPositionOffsetLeft
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___OpenVRTouchPositionOffsetLeft_88;
	// UnityEngine.Vector3 OVRManager::OpenVRTouchPositionOffsetRight
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___OpenVRTouchPositionOffsetRight_89;
	// System.Boolean OVRManager::m_SpaceWarpEnabled
	bool ___m_SpaceWarpEnabled_90;
	// UnityEngine.Transform OVRManager::m_AppSpaceTransform
	Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* ___m_AppSpaceTransform_91;
	// UnityEngine.DepthTextureMode OVRManager::m_CachedDepthTextureMode
	int32_t ___m_CachedDepthTextureMode_92;
	// System.Boolean OVRManager::_isUserPresentCached
	bool ____isUserPresentCached_103;
	// System.Boolean OVRManager::_isUserPresent
	bool ____isUserPresent_104;
	// System.Boolean OVRManager::_wasUserPresent
	bool ____wasUserPresent_105;
	// System.Boolean OVRManager::prevAudioOutIdIsCached
	bool ___prevAudioOutIdIsCached_106;
	// System.Boolean OVRManager::prevAudioInIdIsCached
	bool ___prevAudioInIdIsCached_107;
	// System.String OVRManager::prevAudioOutId
	String_t* ___prevAudioOutId_108;
	// System.String OVRManager::prevAudioInId
	String_t* ___prevAudioInId_109;
	// System.Boolean OVRManager::wasPositionTracked
	bool ___wasPositionTracked_110;
	// OVRPlugin/EventDataBuffer OVRManager::eventDataBuffer
	EventDataBuffer_t5836E8ECE1E094863DEDCC92818AEF39C2F646E8 ___eventDataBuffer_111;
	// System.String OVRManager::UnityAlphaOrBetaVersionWarningMessage
	String_t* ___UnityAlphaOrBetaVersionWarningMessage_112;
	// System.Boolean OVRManager::OVRManagerinitialized
	bool ___OVRManagerinitialized_113;
	// System.Collections.Generic.List`1<UnityEngine.XR.XRDisplaySubsystem> OVRManager::s_displaySubsystems
	List_1_tA7666C6690CE2AEE97571615AD3AFCE2BB020597* ___s_displaySubsystems_114;
	// System.Collections.Generic.List`1<UnityEngine.XR.XRDisplaySubsystemDescriptor> OVRManager::s_displaySubsystemDescriptors
	List_1_tC3F021D09EFA4F3516555517B5E0D39308C9C1B4* ___s_displaySubsystemDescriptors_115;
	// System.Collections.Generic.List`1<UnityEngine.XR.XRInputSubsystem> OVRManager::s_inputSubsystems
	List_1_t90832B88D7207769654164CC28440CF594CC397D* ___s_inputSubsystems_116;
	// System.Boolean OVRManager::multipleMainCameraWarningPresented
	bool ___multipleMainCameraWarningPresented_117;
	// System.Boolean OVRManager::suppressUnableToFindMainCameraMessage
	bool ___suppressUnableToFindMainCameraMessage_118;
	// System.WeakReference`1<UnityEngine.Camera> OVRManager::lastFoundMainCamera
	WeakReference_1_t08942AAA5C58B24D75314BD9594E2DE409CB9C93* ___lastFoundMainCamera_119;
	// System.Boolean OVRManager::staticMixedRealityCaptureInitialized
	bool ___staticMixedRealityCaptureInitialized_120;
	// System.Boolean OVRManager::staticPrevEnableMixedRealityCapture
	bool ___staticPrevEnableMixedRealityCapture_121;
	// OVRMixedRealityCaptureSettings OVRManager::staticMrcSettings
	OVRMixedRealityCaptureSettings_tF6078D6B59F16A0EE3DEE4144FCED347444B9198* ___staticMrcSettings_122;
	// System.Boolean OVRManager::suppressDisableMixedRealityBecauseOfNoMainCameraWarning
	bool ___suppressDisableMixedRealityBecauseOfNoMainCameraWarning_123;
	// OVRManager/PassthroughInitializationState OVRManager::_passthroughInitializationState
	int32_t ____passthroughInitializationState_124;
	// OVRManager/PassthroughCapabilities OVRManager::_passthroughCapabilities
	PassthroughCapabilities_t3B338539A7E4125FE79381628715BDC608471F9F* ____passthroughCapabilities_125;
};

// OVRManager

// OVRSystemPerfMetrics/OVRSystemPerfMetricsTcpServer
struct OVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86_StaticFields
{
	// OVRSystemPerfMetrics/OVRSystemPerfMetricsTcpServer OVRSystemPerfMetrics/OVRSystemPerfMetricsTcpServer::singleton
	OVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86* ___singleton_4;
};

// OVRSystemPerfMetrics/OVRSystemPerfMetricsTcpServer
#ifdef __clang__
#pragma clang diagnostic pop
#endif
// OVRHaptics/OVRHapticsOutput[]
struct OVRHapticsOutputU5BU5D_tF2F7D8627C25B56A905E3C8574260767FB659BA7  : public RuntimeArray
{
	ALIGN_FIELD (8) OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE* m_Items[1];

	inline OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE* GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE* value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE* GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE* value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// OVRHaptics/OVRHapticsChannel[]
struct OVRHapticsChannelU5BU5D_t5CFD3CC0AE2D7AF472EADAE43D25D00EA71AF3C8  : public RuntimeArray
{
	ALIGN_FIELD (8) OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853* m_Items[1];

	inline OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853* GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853* value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853* GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853* value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// System.Byte[]
struct ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031  : public RuntimeArray
{
	ALIGN_FIELD (8) uint8_t m_Items[1];

	inline uint8_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline uint8_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, uint8_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline uint8_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline uint8_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, uint8_t value)
	{
		m_Items[index] = value;
	}
};
// System.Single[]
struct SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C  : public RuntimeArray
{
	ALIGN_FIELD (8) float m_Items[1];

	inline float GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline float* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, float value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline float GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline float* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, float value)
	{
		m_Items[index] = value;
	}
};
// UnityEngine.KeyCode[]
struct KeyCodeU5BU5D_tE5EF2F42327664A9138C613B265BEE8524672B85  : public RuntimeArray
{
	ALIGN_FIELD (8) int32_t m_Items[1];

	inline int32_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int32_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int32_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int32_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int32_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int32_t value)
	{
		m_Items[index] = value;
	}
};
// OVRInput/OpenVRControllerDetails[]
struct OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4  : public RuntimeArray
{
	ALIGN_FIELD (8) OpenVRControllerDetails_t4828A712824373E205C1770EF9779F43484DBF0E m_Items[1];

	inline OpenVRControllerDetails_t4828A712824373E205C1770EF9779F43484DBF0E GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline OpenVRControllerDetails_t4828A712824373E205C1770EF9779F43484DBF0E* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, OpenVRControllerDetails_t4828A712824373E205C1770EF9779F43484DBF0E value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline OpenVRControllerDetails_t4828A712824373E205C1770EF9779F43484DBF0E GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline OpenVRControllerDetails_t4828A712824373E205C1770EF9779F43484DBF0E* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, OpenVRControllerDetails_t4828A712824373E205C1770EF9779F43484DBF0E value)
	{
		m_Items[index] = value;
	}
};
// OVRInput/HapticInfo[]
struct HapticInfoU5BU5D_tD7F089695199232CD57B8C3C73F549036B5BC2CB  : public RuntimeArray
{
	ALIGN_FIELD (8) HapticInfo_t614DAC0509051DC76FD4D48A1D591505E22DE950* m_Items[1];

	inline HapticInfo_t614DAC0509051DC76FD4D48A1D591505E22DE950* GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline HapticInfo_t614DAC0509051DC76FD4D48A1D591505E22DE950** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, HapticInfo_t614DAC0509051DC76FD4D48A1D591505E22DE950* value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline HapticInfo_t614DAC0509051DC76FD4D48A1D591505E22DE950* GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline HapticInfo_t614DAC0509051DC76FD4D48A1D591505E22DE950** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, HapticInfo_t614DAC0509051DC76FD4D48A1D591505E22DE950* value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// System.UInt32[]
struct UInt32U5BU5D_t02FBD658AD156A17574ECE6106CF1FBFCC9807FA  : public RuntimeArray
{
	ALIGN_FIELD (8) uint32_t m_Items[1];

	inline uint32_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline uint32_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, uint32_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline uint32_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline uint32_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, uint32_t value)
	{
		m_Items[index] = value;
	}
};
// System.String[]
struct StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248  : public RuntimeArray
{
	ALIGN_FIELD (8) String_t* m_Items[1];

	inline String_t* GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline String_t** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, String_t* value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline String_t* GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline String_t** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, String_t* value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// System.Object[]
struct ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918  : public RuntimeArray
{
	ALIGN_FIELD (8) RuntimeObject* m_Items[1];

	inline RuntimeObject* GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline RuntimeObject** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, RuntimeObject* value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline RuntimeObject* GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline RuntimeObject** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, RuntimeObject* value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// UnityEngine.GameObject[]
struct GameObjectU5BU5D_tFF67550DFCE87096D7A3734EA15B75896B2722CF  : public RuntimeArray
{
	ALIGN_FIELD (8) GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* m_Items[1];

	inline GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline GameObject_t76FEDD663AB33C991A9C9A23129337651094216F** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline GameObject_t76FEDD663AB33C991A9C9A23129337651094216F** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};


// System.Void System.Collections.Generic.List`1<System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1__ctor_m7F078BB342729BDF11327FD89D7872265328F690_gshared (List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D* __this, const RuntimeMethod* method) ;
// T System.Collections.Generic.List`1<System.Object>::get_Item(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* List_1_get_Item_m33561245D64798C2AB07584C0EC4F240E4839A38_gshared (List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D* __this, int32_t ___0_index, const RuntimeMethod* method) ;
// System.Int32 System.Collections.Generic.List`1<System.Object>::get_Count()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int32_t List_1_get_Count_m4407E4C389F22B8CEC282C15D56516658746C383_gshared_inline (List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D* __this, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<System.Object>::RemoveAt(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1_RemoveAt_m54F62297ADEE4D4FDA697F49ED807BF901201B54_gshared (List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D* __this, int32_t ___0_index, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<System.Object>::Clear()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void List_1_Clear_m16C1F2C61FED5955F10EB36BC1CB2DF34B128994_gshared_inline (List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D* __this, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<System.Object>::Add(T)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void List_1_Add_mEBCF994CC3814631017F46A387B1A192ED6C85C7_gshared_inline (List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D* __this, RuntimeObject* ___0_item, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<System.Object>::set_Item(System.Int32,T)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1_set_Item_m3C58DBC69A321AF2826595584FF3E9F43C07EA56_gshared (List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D* __this, int32_t ___0_index, RuntimeObject* ___1_value, const RuntimeMethod* method) ;
// System.Int32 System.Runtime.InteropServices.Marshal::SizeOf<System.Byte>(T)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Marshal_SizeOf_TisByte_t94D9231AC217BE4D2E004C4CD32DF6D099EA41A3_m7AB12E9316F73FF78004C146AEF4D4616F3A7DEC_gshared (uint8_t ___0_structure, const RuntimeMethod* method) ;
// System.Void System.Func`2<System.Single,System.Object>::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Func_2__ctor_m689A131E18EAD3C15BDBF106D74D93DE1EFCD02C_gshared (Func_2_tAD879F71BAB11408CC38B8BF81F979D9205C1CC4* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) ;
// System.Collections.Generic.IEnumerable`1<TResult> System.Linq.Enumerable::Select<System.Single,System.Object>(System.Collections.Generic.IEnumerable`1<TSource>,System.Func`2<TSource,TResult>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* Enumerable_Select_TisSingle_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_TisRuntimeObject_mB37A07343D3D5B06D3252BF15B76CA539BCC5A4F_gshared (RuntimeObject* ___0_source, Func_2_tAD879F71BAB11408CC38B8BF81F979D9205C1CC4* ___1_selector, const RuntimeMethod* method) ;
// TSource[] System.Linq.Enumerable::ToArray<System.Object>(System.Collections.Generic.IEnumerable`1<TSource>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* Enumerable_ToArray_TisRuntimeObject_mA54265C2C8A0864929ECD300B75E4952D553D17D_gshared (RuntimeObject* ___0_source, const RuntimeMethod* method) ;
// T UnityEngine.Component::GetComponent<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* Component_GetComponent_TisRuntimeObject_m7181F81CAEC2CF53F5D2BC79B7425C16E1F80D33_gshared (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3* __this, const RuntimeMethod* method) ;
// T UnityEngine.GameObject::AddComponent<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* GameObject_AddComponent_TisRuntimeObject_m69B93700FACCF372F5753371C6E8FB780800B824_gshared (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* __this, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.HashSet`1<System.Int32Enum>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HashSet_1__ctor_mD2BBE225041537B7240E453D3E14991EB2169E2C_gshared (HashSet_1_t2EC13BE6E93BB0C99D5CF97A25799B40FD6CBAF4* __this, const RuntimeMethod* method) ;
// System.Boolean System.Collections.Generic.HashSet`1<System.Int32Enum>::Add(T)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool HashSet_1_Add_m4F8BBB0C65C72E41F10A7F83E2963B71A631153C_gshared (HashSet_1_t2EC13BE6E93BB0C99D5CF97A25799B40FD6CBAF4* __this, int32_t ___0_item, const RuntimeMethod* method) ;
// System.Void UnityEngine.SubsystemManager::GetInstances<System.Object>(System.Collections.Generic.List`1<T>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SubsystemManager_GetInstances_TisRuntimeObject_mCBA01F889BE624767358AB5494CD2D7F1B2FB064_gshared (List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D* ___0_subsystems, const RuntimeMethod* method) ;
// System.Void UnityEngine.SubsystemManager::GetSubsystemDescriptors<System.Object>(System.Collections.Generic.List`1<T>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SubsystemManager_GetSubsystemDescriptors_TisRuntimeObject_mE17654C43AF736B8A23F50FEBBD6657CB983907F_gshared (List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D* ___0_descriptors, const RuntimeMethod* method) ;
// T OVRDeserialize::ByteArrayToStructure<OVRDeserialize/DisplayRefreshRateChangedData>(System.Byte[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR DisplayRefreshRateChangedData_t8412C04FE31982A8D071487EC6E25215EEEFD5AE OVRDeserialize_ByteArrayToStructure_TisDisplayRefreshRateChangedData_t8412C04FE31982A8D071487EC6E25215EEEFD5AE_mC8D55BBFFFFF997ED1224E48615618B2DA4E21AD_gshared (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_bytes, const RuntimeMethod* method) ;
// System.Void System.Action`2<System.Single,System.Single>::Invoke(T1,T2)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Action_2_Invoke_m50A62593A87E11ED31B47FE46E633AB3B9A7666C_gshared_inline (Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132* __this, float ___0_arg1, float ___1_arg2, const RuntimeMethod* method) ;
// T OVRDeserialize::ByteArrayToStructure<OVRDeserialize/SpatialAnchorCreateCompleteData>(System.Byte[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SpatialAnchorCreateCompleteData_t8A1C0554B63901CBACE1DC0CAB8103C1487A0A5C OVRDeserialize_ByteArrayToStructure_TisSpatialAnchorCreateCompleteData_t8A1C0554B63901CBACE1DC0CAB8103C1487A0A5C_m90A95D5AA1BE04AA0D0D165AFAC92821D5F38522_gshared (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_bytes, const RuntimeMethod* method) ;
// System.Void System.Action`4<System.UInt64,System.Boolean,OVRSpace,System.Guid>::Invoke(T1,T2,T3,T4)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Action_4_Invoke_mF83AC81DE351FE293937C4B759B549D9A6B68A70_gshared_inline (Action_4_t540B344FD589096100128D9A1B39946413ED9AAE* __this, uint64_t ___0_arg1, bool ___1_arg2, OVRSpace_tDA5A6DB241624CD5712AC4A71E565BA171985B4D ___2_arg3, Guid_t ___3_arg4, const RuntimeMethod* method) ;
// T OVRDeserialize::ByteArrayToStructure<OVRDeserialize/SpaceSetComponentStatusCompleteData>(System.Byte[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SpaceSetComponentStatusCompleteData_tEB0171988C9E109E4F9C41A77D6738DB9D0CE58E OVRDeserialize_ByteArrayToStructure_TisSpaceSetComponentStatusCompleteData_tEB0171988C9E109E4F9C41A77D6738DB9D0CE58E_mC25C743F5A37DACFA5EDEFC9F70D6773281581AD_gshared (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_bytes, const RuntimeMethod* method) ;
// System.Void System.Action`6<System.UInt64,System.Boolean,OVRSpace,System.Guid,System.Int32Enum,System.Boolean>::Invoke(T1,T2,T3,T4,T5,T6)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Action_6_Invoke_mFF8F298606B3E177DF933AE1788928F36BC92D0F_gshared_inline (Action_6_t275E8A8CA2AB323A9CF973B1A1BDD4C0D44F4F11* __this, uint64_t ___0_arg1, bool ___1_arg2, OVRSpace_tDA5A6DB241624CD5712AC4A71E565BA171985B4D ___2_arg3, Guid_t ___3_arg4, int32_t ___4_arg5, bool ___5_arg6, const RuntimeMethod* method) ;
// T OVRDeserialize::ByteArrayToStructure<OVRDeserialize/SpaceQueryResultsData>(System.Byte[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SpaceQueryResultsData_tED5DAE5E8BDB324E88D3A492B94ECEACA6BA907A OVRDeserialize_ByteArrayToStructure_TisSpaceQueryResultsData_tED5DAE5E8BDB324E88D3A492B94ECEACA6BA907A_m50F3066158A963BA10DF164DF2CA6E5B57375951_gshared (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_bytes, const RuntimeMethod* method) ;
// System.Void System.Action`1<System.UInt64>::Invoke(T)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Action_1_Invoke_mD21E1BBC413B52214AE1643F8570EB10B0C004CF_gshared_inline (Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C* __this, uint64_t ___0_obj, const RuntimeMethod* method) ;
// T OVRDeserialize::ByteArrayToStructure<OVRDeserialize/SpaceQueryCompleteData>(System.Byte[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SpaceQueryCompleteData_tF177ABA884999611B5EC3DC2944FCE143E9F749F OVRDeserialize_ByteArrayToStructure_TisSpaceQueryCompleteData_tF177ABA884999611B5EC3DC2944FCE143E9F749F_mE1A49ABB1A9E3E72C77E37D97432AE54F4407732_gshared (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_bytes, const RuntimeMethod* method) ;
// System.Void System.Action`2<System.UInt64,System.Boolean>::Invoke(T1,T2)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Action_2_Invoke_m5C4507B6E0477EDD49165F507099C83A696B6B20_gshared_inline (Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* __this, uint64_t ___0_arg1, bool ___1_arg2, const RuntimeMethod* method) ;
// T OVRDeserialize::ByteArrayToStructure<OVRDeserialize/SpaceSaveCompleteData>(System.Byte[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SpaceSaveCompleteData_t86F76FAD997B29F8C01EECC13D8BC18477D398F4 OVRDeserialize_ByteArrayToStructure_TisSpaceSaveCompleteData_t86F76FAD997B29F8C01EECC13D8BC18477D398F4_mB0692BA462E26A86BCFA96B6876BA6C11118B48B_gshared (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_bytes, const RuntimeMethod* method) ;
// System.Void System.Action`4<System.UInt64,OVRSpace,System.Boolean,System.Guid>::Invoke(T1,T2,T3,T4)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Action_4_Invoke_mD49299FEC5EDAE647F844D50183E3832DB459D6F_gshared_inline (Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A* __this, uint64_t ___0_arg1, OVRSpace_tDA5A6DB241624CD5712AC4A71E565BA171985B4D ___1_arg2, bool ___2_arg3, Guid_t ___3_arg4, const RuntimeMethod* method) ;
// T OVRDeserialize::ByteArrayToStructure<OVRDeserialize/SpaceEraseCompleteData>(System.Byte[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SpaceEraseCompleteData_t29938D1C6E218C23257DF9F75C64AD57B1786AC3 OVRDeserialize_ByteArrayToStructure_TisSpaceEraseCompleteData_t29938D1C6E218C23257DF9F75C64AD57B1786AC3_mF47A0B55259937E10C4A967BCE2AE71377F6E3C3_gshared (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_bytes, const RuntimeMethod* method) ;
// System.Void System.Action`4<System.UInt64,System.Boolean,System.Guid,System.Int32Enum>::Invoke(T1,T2,T3,T4)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Action_4_Invoke_m6132B3D24664DAF3AD9A98C1C0311A8DA081927E_gshared_inline (Action_4_tDB193A5F94ADF5AFFE07E8A99813727D58BD9CBF* __this, uint64_t ___0_arg1, bool ___1_arg2, Guid_t ___2_arg3, int32_t ___3_arg4, const RuntimeMethod* method) ;
// T OVRDeserialize::ByteArrayToStructure<OVRDeserialize/SpaceShareResultData>(System.Byte[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SpaceShareResultData_t1BE431DF2FC60FBBB1F6BA5ECFB140117CFF044F OVRDeserialize_ByteArrayToStructure_TisSpaceShareResultData_t1BE431DF2FC60FBBB1F6BA5ECFB140117CFF044F_m6FD88F86C774971F10124906FDEB4709734D471C_gshared (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_bytes, const RuntimeMethod* method) ;
// System.Void System.Action`2<System.UInt64,System.Int32Enum>::Invoke(T1,T2)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Action_2_Invoke_m8E9819A2536DE97B15561CFC230E9492FFE345C6_gshared_inline (Action_2_tA06B2B457987AFF44FCC9825F4E5B8AB831D9C5D* __this, uint64_t ___0_arg1, int32_t ___1_arg2, const RuntimeMethod* method) ;
// T OVRDeserialize::ByteArrayToStructure<OVRDeserialize/SpaceListSaveResultData>(System.Byte[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SpaceListSaveResultData_tCFC8B45EABB98F65FE80A9D7659D7E898383970D OVRDeserialize_ByteArrayToStructure_TisSpaceListSaveResultData_tCFC8B45EABB98F65FE80A9D7659D7E898383970D_m01BA59E421B63F6D1EC9103E6591F209FD67B541_gshared (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_bytes, const RuntimeMethod* method) ;
// T OVRDeserialize::ByteArrayToStructure<OVRDeserialize/SceneCaptureCompleteData>(System.Byte[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SceneCaptureCompleteData_t309B8671164A38CEA71FDAC002DB145FFAECA033 OVRDeserialize_ByteArrayToStructure_TisSceneCaptureCompleteData_t309B8671164A38CEA71FDAC002DB145FFAECA033_mE2D9B1669B28BA064E53A833B1B3E35844DDD783_gshared (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_bytes, const RuntimeMethod* method) ;
// System.Boolean System.WeakReference`1<System.Object>::TryGetTarget(T&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool WeakReference_1_TryGetTarget_m4982797589731AB705E9C79FA4531331F40410AB_gshared (WeakReference_1_tED795563AD26F795CED3BBCD488AB1694E385BCE* __this, RuntimeObject** ___0_target, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<System.Object>::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1__ctor_m76CBBC3E2F0583F5AD30CE592CEA1225C06A0428_gshared (List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D* __this, int32_t ___0_capacity, const RuntimeMethod* method) ;
// T UnityEngine.GameObject::GetComponent<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* GameObject_GetComponent_TisRuntimeObject_m6EAED4AA356F0F48288F67899E5958792395563B_gshared (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* __this, const RuntimeMethod* method) ;
// T UnityEngine.Component::GetComponentInParent<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* Component_GetComponentInParent_TisRuntimeObject_m6746D6BB99912B1B509746C993906492F86CD119_gshared (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3* __this, const RuntimeMethod* method) ;
// System.Void System.Comparison`1<System.Object>::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Comparison_1__ctor_mC1E8799BBCE317B612875123C9C894BD470BFE6A_gshared (Comparison_1_t62E531E7B8260E2C6C2718C3BDB8CF8655139645* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<System.Object>::Sort(System.Comparison`1<T>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1_Sort_mEB3B61CB86B1419919338B0668DC4E568C2FFF93_gshared (List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D* __this, Comparison_1_t62E531E7B8260E2C6C2718C3BDB8CF8655139645* ___0_comparison, const RuntimeMethod* method) ;
// System.Void System.WeakReference`1<System.Object>::.ctor(T)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void WeakReference_1__ctor_m932665C8861A22B177DC1ACF1EDAA87E1624B5AC_gshared (WeakReference_1_tED795563AD26F795CED3BBCD488AB1694E385BCE* __this, RuntimeObject* ___0_target, const RuntimeMethod* method) ;
// T UnityEngine.ScriptableObject::CreateInstance<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ScriptableObject_CreateInstance_TisRuntimeObject_mC07BE383F5EF546F4191035A679930852BC19BDA_gshared (const RuntimeMethod* method) ;
// T[] System.Array::Empty<System.Object>()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* Array_Empty_TisRuntimeObject_mFB8A63D602BB6974D31E20300D9EB89C6FE7C278_gshared_inline (const RuntimeMethod* method) ;

// System.Void System.Object::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2 (RuntimeObject* __this, const RuntimeMethod* method) ;
// System.Void OVRGLTFLoader::TranscodeTexture(OVRTextureData&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRGLTFLoader_TranscodeTexture_mD9BF9AFCF83026B04837D015BF23EA69599B516F (OVRGLTFLoader_t2E5E39D416422D0459916F5D1FA9C83CA2C92CD1* __this, OVRTextureData_t357BF09E78929C6C4BC7C3039D461E73D58064A3* ___0_textureData, const RuntimeMethod* method) ;
// System.Void OVRHaptics/Config::Load()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Config_Load_m37407D28EF74FBA74FEDBFD78695E65CD859A330 (const RuntimeMethod* method) ;
// System.Void OVRHaptics/OVRHapticsOutput::.ctor(System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsOutput__ctor_mA154790252DB03E79E6BCF543F05390AE10CD934 (OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE* __this, uint32_t ___0_controller, const RuntimeMethod* method) ;
// System.Void OVRHaptics/OVRHapticsChannel::.ctor(System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsChannel__ctor_m79C872D3637A1862B08A58D00A21F413D3B1CA96 (OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853* __this, uint32_t ___0_outputIndex, const RuntimeMethod* method) ;
// System.Void OVRHaptics/OVRHapticsOutput::Process()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsOutput_Process_mD508D5EA14E13D5D1395D5A958770A9158A8912D (OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE* __this, const RuntimeMethod* method) ;
// OVRPlugin/HapticsDesc OVRPlugin::GetControllerHapticsDesc(System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR HapticsDesc_tA499A18F90CA6E72D680CBF94F1B189E31F8844A OVRPlugin_GetControllerHapticsDesc_m4F5B99D7454F62CAAB43656B5BEBAE3181405737 (uint32_t ___0_controllerMask, const RuntimeMethod* method) ;
// System.Void OVRHaptics/Config::set_SampleRateHz(System.Int32)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Config_set_SampleRateHz_mDCD3C6D84B82FAEE86652D00EB57F6D1C52692B5_inline (int32_t ___0_value, const RuntimeMethod* method) ;
// System.Void OVRHaptics/Config::set_SampleSizeInBytes(System.Int32)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Config_set_SampleSizeInBytes_mFD9B00CDEDFDB3C01D5958A9ECEEF22C80651A22_inline (int32_t ___0_value, const RuntimeMethod* method) ;
// System.Void OVRHaptics/Config::set_MinimumSafeSamplesQueued(System.Int32)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Config_set_MinimumSafeSamplesQueued_m08F042C5BB8DCCBEE448EAD12412D3336ABAEFC5_inline (int32_t ___0_value, const RuntimeMethod* method) ;
// System.Void OVRHaptics/Config::set_MinimumBufferSamplesCount(System.Int32)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Config_set_MinimumBufferSamplesCount_m866A99335F02A0402AEE83DA6BDD06BEB7FEA7A3_inline (int32_t ___0_value, const RuntimeMethod* method) ;
// System.Void OVRHaptics/Config::set_OptimalBufferSamplesCount(System.Int32)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Config_set_OptimalBufferSamplesCount_m5B583871BC4784C547969664A7DCC45343792E7F_inline (int32_t ___0_value, const RuntimeMethod* method) ;
// System.Void OVRHaptics/Config::set_MaximumBufferSamplesCount(System.Int32)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Config_set_MaximumBufferSamplesCount_m9D324EE5E616DCD4DA7F6563973A3B430B6D1C0A_inline (int32_t ___0_value, const RuntimeMethod* method) ;
// System.Void OVRHaptics/OVRHapticsOutput::Preempt(OVRHapticsClip)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsOutput_Preempt_m61A86B9122AB9DD061EE376161F1F8FF3CD4C92D (OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE* __this, OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* ___0_clip, const RuntimeMethod* method) ;
// System.Void OVRHaptics/OVRHapticsOutput::Queue(OVRHapticsClip)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsOutput_Queue_m171B7A50C5470F5F17E89E80C963CE5F688F0DA7 (OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE* __this, OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* ___0_clip, const RuntimeMethod* method) ;
// System.Void OVRHaptics/OVRHapticsOutput::Mix(OVRHapticsClip)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsOutput_Mix_m495B3113A50775D379257E2DFE8BE61ACDEDA2DB (OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE* __this, OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* ___0_clip, const RuntimeMethod* method) ;
// System.Void OVRHaptics/OVRHapticsOutput::Clear()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsOutput_Clear_m9AB99B742ACA194E3345109759C065E0EC12DACA (OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE* __this, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker>::.ctor()
inline void List_1__ctor_m8A0FEDCD4360E80E51A1E6E839F94C725FFDB633 (List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6* __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6*, const RuntimeMethod*))List_1__ctor_m7F078BB342729BDF11327FD89D7872265328F690_gshared)(__this, method);
}
// System.Int32 OVRHaptics/Config::get_MaximumBufferSamplesCount()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int32_t Config_get_MaximumBufferSamplesCount_mFA9670050A7B57A5778B588CB400DBEB413DE4C0_inline (const RuntimeMethod* method) ;
// System.Int32 OVRHaptics/Config::get_SampleSizeInBytes()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int32_t Config_get_SampleSizeInBytes_m8A59438CA870B1DEDA2DDE836BBF513D4DA6C209_inline (const RuntimeMethod* method) ;
// System.Void OVRNativeBuffer::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRNativeBuffer__ctor_m49B59D113EB19FB7AB2111CBCD8AC8D2D0EF4285 (OVRNativeBuffer_tEBEDDBFD193B5EE2FE1E0C1B22AA823FB3703915* __this, int32_t ___0_numBytes, const RuntimeMethod* method) ;
// System.Void OVRHapticsClip::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsClip__ctor_m42DBDF3ECFAD1D75A8C835F65532743278009A08 (OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* __this, const RuntimeMethod* method) ;
// System.Int32 OVRHaptics/Config::get_SampleRateHz()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int32_t Config_get_SampleRateHz_m2D1B79A8EC0A19BA0EA97E6B3039D15788BB9F47_inline (const RuntimeMethod* method) ;
// System.Void UnityEngine.Debug::Log(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_Log_m87A9A3C761FF5C43ED8A53B16190A53D08F818BB (RuntimeObject* ___0_message, const RuntimeMethod* method) ;
// System.Int32 OVRNativeBuffer::GetCapacity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRNativeBuffer_GetCapacity_m388215B1A6727C487815D040FE7DF9E91B2EA1AF (OVRNativeBuffer_tEBEDDBFD193B5EE2FE1E0C1B22AA823FB3703915* __this, const RuntimeMethod* method) ;
// System.Void OVRNativeBuffer::Reset(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRNativeBuffer_Reset_m65A403E428F766CF99119FFDDC3824A856F6B45A (OVRNativeBuffer_tEBEDDBFD193B5EE2FE1E0C1B22AA823FB3703915* __this, int32_t ___0_numBytes, const RuntimeMethod* method) ;
// OVRPlugin/HapticsState OVRPlugin::GetControllerHapticsState(System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR HapticsState_tF1FED426B2261FB06D69988945D47B96DC067ABD OVRPlugin_GetControllerHapticsState_mEEA959FE0B91F35368C4229D5423C70C448E03DE (uint32_t ___0_controllerMask, const RuntimeMethod* method) ;
// System.Single UnityEngine.Time::get_realtimeSinceStartup()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Time_get_realtimeSinceStartup_m73B3CB73175D79A44333D59BB70F9EDE55EC9510 (const RuntimeMethod* method) ;
// System.Int32 OVRHaptics/Config::get_OptimalBufferSamplesCount()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int32_t Config_get_OptimalBufferSamplesCount_mBC971D5C4CF6F34A8A3925DC8103A09E3E8BF4F7_inline (const RuntimeMethod* method) ;
// System.Int32 OVRHaptics/Config::get_MinimumSafeSamplesQueued()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int32_t Config_get_MinimumSafeSamplesQueued_m479D3DEBCD5251637DC7FDE141FBECAC70DE5A1C_inline (const RuntimeMethod* method) ;
// T System.Collections.Generic.List`1<OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker>::get_Item(System.Int32)
inline ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* List_1_get_Item_m1DF20120684518D1E70C0DC8F9D80031B06744F3 (List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6* __this, int32_t ___0_index, const RuntimeMethod* method)
{
	return ((  ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* (*) (List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6*, int32_t, const RuntimeMethod*))List_1_get_Item_m33561245D64798C2AB07584C0EC4F240E4839A38_gshared)(__this, ___0_index, method);
}
// OVRHapticsClip OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker::get_Clip()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* ClipPlaybackTracker_get_Clip_m5F7BF9A75928114403808D29DCF2E00243A5D87A_inline (ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* __this, const RuntimeMethod* method) ;
// System.Int32 OVRHapticsClip::get_Count()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int32_t OVRHapticsClip_get_Count_mF6DCD041E169A35A5B208FE92AEE5D47269F107E_inline (OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* __this, const RuntimeMethod* method) ;
// System.Int32 OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker::get_ReadCount()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int32_t ClipPlaybackTracker_get_ReadCount_m5CB89D120FC361680A8450515CA02357D2879191_inline (ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* __this, const RuntimeMethod* method) ;
// System.Byte[] OVRHapticsClip::get_Samples()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* OVRHapticsClip_get_Samples_m433E8160F5A8874E4AC7972406FB0CC146AC74BE_inline (OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* __this, const RuntimeMethod* method) ;
// System.IntPtr OVRNativeBuffer::GetPointer(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t OVRNativeBuffer_GetPointer_m0BDE8F3A317E948AA21A16BAF97CDF360C9C6AA7 (OVRNativeBuffer_tEBEDDBFD193B5EE2FE1E0C1B22AA823FB3703915* __this, int32_t ___0_byteOffset, const RuntimeMethod* method) ;
// System.Void System.Runtime.InteropServices.Marshal::Copy(System.Byte[],System.Int32,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Marshal_Copy_m0FD7BFE70EE28FC67B67A6225AD58F95FEE7EB85 (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_source, int32_t ___1_startIndex, intptr_t ___2_destination, int32_t ___3_length, const RuntimeMethod* method) ;
// System.Void OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker::set_ReadCount(System.Int32)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void ClipPlaybackTracker_set_ReadCount_m5BA54F5A69408488A59C5FFA2DE454E199469671_inline (ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* __this, int32_t ___0_value, const RuntimeMethod* method) ;
// System.Int32 System.Collections.Generic.List`1<OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker>::get_Count()
inline int32_t List_1_get_Count_m56AACF0D9683BE0A6929A5B9DE131EE44C5DC9C1_inline (List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6* __this, const RuntimeMethod* method)
{
	return ((  int32_t (*) (List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6*, const RuntimeMethod*))List_1_get_Count_m4407E4C389F22B8CEC282C15D56516658746C383_gshared_inline)(__this, method);
}
// System.Void System.Collections.Generic.List`1<OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker>::RemoveAt(System.Int32)
inline void List_1_RemoveAt_m7C70CF4778FAA1C22586E0F909585AD0F1A9172C (List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6* __this, int32_t ___0_index, const RuntimeMethod* method)
{
	((  void (*) (List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6*, int32_t, const RuntimeMethod*))List_1_RemoveAt_m54F62297ADEE4D4FDA697F49ED807BF901201B54_gshared)(__this, ___0_index, method);
}
// System.Int32 OVRHaptics/Config::get_MinimumBufferSamplesCount()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int32_t Config_get_MinimumBufferSamplesCount_m27DBFB9FEA1CB7EF08AC8C62B2F7B99CF1B9457C_inline (const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::SetControllerHaptics(System.UInt32,OVRPlugin/HapticsBuffer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_SetControllerHaptics_mF261D7841611D1A96353C34F471145D69A15A0DE (uint32_t ___0_controllerMask, HapticsBuffer_t05090BEFD2D209883C588225318CD620E29EF181 ___1_hapticsBuffer, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker>::Clear()
inline void List_1_Clear_m3C38C7FE9F143B773DBEB2AB00D023E99D54342D_inline (List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6* __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6*, const RuntimeMethod*))List_1_Clear_m16C1F2C61FED5955F10EB36BC1CB2DF34B128994_gshared_inline)(__this, method);
}
// System.Void OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker::.ctor(OVRHapticsClip)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ClipPlaybackTracker__ctor_m9CAEE1DF7DAD9B70E9CA91652CA67C9A19425F9F (ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* __this, OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* ___0_clip, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker>::Add(T)
inline void List_1_Add_m666634559A1DC2E23A975D510716DF60BF7B3DA3_inline (List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6* __this, ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* ___0_item, const RuntimeMethod* method)
{
	((  void (*) (List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6*, ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B*, const RuntimeMethod*))List_1_Add_mEBCF994CC3814631017F46A387B1A192ED6C85C7_gshared_inline)(__this, ___0_item, method);
}
// System.Void OVRHapticsClip::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsClip__ctor_m73C1C39F8313D599A215707410A4940361F6C32A (OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* __this, int32_t ___0_capacity, const RuntimeMethod* method) ;
// System.Int32 UnityEngine.Mathf::Clamp(System.Int32,System.Int32,System.Int32)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int32_t Mathf_Clamp_m4DC36EEFDBE5F07C16249DA568023C5ECCFF0E7B_inline (int32_t ___0_value, int32_t ___1_min, int32_t ___2_max, const RuntimeMethod* method) ;
// System.Void OVRHapticsClip::WriteSample(System.Byte)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsClip_WriteSample_m5C7A13E38F525E2C58DF5A09E1EC9493FCF262ED (OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* __this, uint8_t ___0_sample, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker>::set_Item(System.Int32,T)
inline void List_1_set_Item_mFE544BC47A6353F6876FD8CB7468508875584F10 (List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6* __this, int32_t ___0_index, ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* ___1_value, const RuntimeMethod* method)
{
	((  void (*) (List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6*, int32_t, ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B*, const RuntimeMethod*))List_1_set_Item_m3C58DBC69A321AF2826595584FF3E9F43C07EA56_gshared)(__this, ___0_index, ___1_value, method);
}
// System.Void OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker::set_Clip(OVRHapticsClip)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void ClipPlaybackTracker_set_Clip_mA7D1F4B5FBE77EFC6F6FD27C4ED45DC65B8CD5ED_inline (ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* __this, OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* ___0_value, const RuntimeMethod* method) ;
// System.Void OVRHapticsClip::set_Capacity(System.Int32)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void OVRHapticsClip_set_Capacity_m0648341A0AFFFE4D146AE0A3EFAC23B70AA739B0_inline (OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* __this, int32_t ___0_value, const RuntimeMethod* method) ;
// System.Int32 OVRHapticsClip::get_Capacity()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int32_t OVRHapticsClip_get_Capacity_mB9F5A181D3C9F8208F229AE0A8734C9E18F22A7C_inline (OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* __this, const RuntimeMethod* method) ;
// System.Void OVRHapticsClip::set_Samples(System.Byte[])
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void OVRHapticsClip_set_Samples_mE62A59340D856612957FB1381FCACDE676702A70_inline (OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* __this, ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_value, const RuntimeMethod* method) ;
// System.Void OVRHapticsClip::set_Count(System.Int32)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void OVRHapticsClip_set_Count_m174C326E1966E50541CE7774619B508BC732B810_inline (OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* __this, int32_t ___0_value, const RuntimeMethod* method) ;
// System.Int32 UnityEngine.AudioClip::get_samples()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t AudioClip_get_samples_mDEA01CA75E7DEA0F8D480E4AF97FB96085BCF38E (AudioClip_t5D272C4EB4F2D3ED49F1C346DEA373CF6D585F20* __this, const RuntimeMethod* method) ;
// System.Int32 UnityEngine.AudioClip::get_channels()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t AudioClip_get_channels_mFEECF5D6389D196BA5102EB79257298B9FDC9F84 (AudioClip_t5D272C4EB4F2D3ED49F1C346DEA373CF6D585F20* __this, const RuntimeMethod* method) ;
// System.Boolean UnityEngine.AudioClip::GetData(System.Single[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool AudioClip_GetData_m1F6480FFDA2E354A7D8C8DE40F61AAB5AF6B4A1D (AudioClip_t5D272C4EB4F2D3ED49F1C346DEA373CF6D585F20* __this, SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___0_data, int32_t ___1_offsetSamples, const RuntimeMethod* method) ;
// System.Int32 UnityEngine.AudioClip::get_frequency()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t AudioClip_get_frequency_m6647E10F4B2B1335187B0066E82468CCCF19647B (AudioClip_t5D272C4EB4F2D3ED49F1C346DEA373CF6D585F20* __this, const RuntimeMethod* method) ;
// System.Void OVRHapticsClip::InitializeFromAudioFloatTrack(System.Single[],System.Double,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsClip_InitializeFromAudioFloatTrack_m2DC0897BCB868A4D9B3E5C409390746CF1CAC844 (OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* __this, SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___0_sourceData, double ___1_sourceFrequency, int32_t ___2_sourceChannelCount, int32_t ___3_sourceChannel, const RuntimeMethod* method) ;
// System.Single UnityEngine.Mathf::Clamp01(System.Single)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR float Mathf_Clamp01_mA7E048DBDA832D399A581BE4D6DED9FA44CE0F14_inline (float ___0_value, const RuntimeMethod* method) ;
// System.Boolean UnityEngine.Application::get_isEditor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Application_get_isEditor_mEAC51E3ACE6DCE438087FB14BD75A3C219D354D0 (const RuntimeMethod* method) ;
// System.Boolean UnityEngine.Input::GetKey(UnityEngine.KeyCode)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Input_GetKey_mE5681EF775F3CEBA7EAD7C63984F7B34C8E8D434 (int32_t ___0_key, const RuntimeMethod* method) ;
// System.Boolean OVRHeadsetEmulator::IsEmulationActivated()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRHeadsetEmulator_IsEmulationActivated_m24021986D6736C750D9EFB6FA756F4526FA757B2 (OVRHeadsetEmulator_t962B146D3C4075E460069BC2ED5B5943DA1B8553* __this, const RuntimeMethod* method) ;
// System.Void UnityEngine.MonoBehaviour::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MonoBehaviour__ctor_m592DB0105CA0BC97AA1C5F4AD27B12D68A3B7C1E (MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71* __this, const RuntimeMethod* method) ;
// System.Version OVRPlugin::get_version()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* OVRPlugin_get_version_mF6424FE1E91DF97DE08CD5C7AE1FBC60873A354E (const RuntimeMethod* method) ;
// System.Boolean System.Version::op_GreaterThanOrEqual(System.Version,System.Version)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Version_op_GreaterThanOrEqual_m792CE284B083EDAAC120E4028150194D1C1284EB (Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* ___0_v1, Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* ___1_v2, const RuntimeMethod* method) ;
// System.Void System.Version::.ctor(System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Version__ctor_m7D8EE608025AE8D7AD8867718BC0AC96A2CFC1F5 (Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* __this, int32_t ___0_major, int32_t ___1_minor, int32_t ___2_build, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<OVRInput/OVRControllerBase>::.ctor()
inline void List_1__ctor_m47318792E32D53A0CE4C2670BAEDA77A7ACB3706 (List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577*, const RuntimeMethod*))List_1__ctor_m7F078BB342729BDF11327FD89D7872265328F690_gshared)(__this, method);
}
// System.Void OVRInput/OVRControllerGamepadAndroid::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerGamepadAndroid__ctor_m2B20446135A5F6216BBF57ADB65A8E55264F991B (OVRControllerGamepadAndroid_t744FA8E4FD2A606498498663467C1271A46F1AB9* __this, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<OVRInput/OVRControllerBase>::Add(T)
inline void List_1_Add_mDB779AD07F59193F6BBFA7819A6E3F152C712450_inline (List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* __this, OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* ___0_item, const RuntimeMethod* method)
{
	((  void (*) (List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577*, OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*, const RuntimeMethod*))List_1_Add_mEBCF994CC3814631017F46A387B1A192ED6C85C7_gshared_inline)(__this, ___0_item, method);
}
// System.Void OVRInput/OVRControllerTouch::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerTouch__ctor_m91BC2C7183CE4A5BC5C88F5853AD8861707099EB (OVRControllerTouch_t3242C19AECEE9D167D937CF1288465415D554A37* __this, const RuntimeMethod* method) ;
// System.Void OVRInput/OVRControllerLTouch::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerLTouch__ctor_m91BB861EC10E9882AB10768F0454FC24950C7101 (OVRControllerLTouch_tAB910B5D7369AA3104AD40C8AE5458C254D225C6* __this, const RuntimeMethod* method) ;
// System.Void OVRInput/OVRControllerRTouch::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerRTouch__ctor_mACBBB5CD6558549FC7D1707D4DE6F92A3469B184 (OVRControllerRTouch_t05E309647F46A925D9C970B8636ADD34E6533A01* __this, const RuntimeMethod* method) ;
// System.Void OVRInput/OVRControllerHands::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerHands__ctor_mCE96EBF14E42471CFFAC54E43B5B9F79DC75C51C (OVRControllerHands_t12594A1327521ECA38B53C166676B845C1D621CA* __this, const RuntimeMethod* method) ;
// System.Void OVRInput/OVRControllerLHand::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerLHand__ctor_m18D0440C8FFB9816CBFD4FCCC22DDF295F5B30A7 (OVRControllerLHand_t05FFDA0A0B722315B47BFEDFFF701B425563DDB8* __this, const RuntimeMethod* method) ;
// System.Void OVRInput/OVRControllerRHand::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerRHand__ctor_m0A5012B434B5D3D4EDC8DAEF913D09AADAA81327 (OVRControllerRHand_t9AF4805EAECF3275B7E861B1A3E4CF7555C989B4* __this, const RuntimeMethod* method) ;
// System.Void OVRInput::InitHapticInfo()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRInput_InitHapticInfo_mAF5586A61678F7D8D7BA986F970A21226E4FC06F (const RuntimeMethod* method) ;
// System.Void OVRInput::UpdateXRControllerNodeIds()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRInput_UpdateXRControllerNodeIds_mBADEA537A0EE550060596054C9FE13B8B041E8CA (const RuntimeMethod* method) ;
// System.Void OVRInput::UpdateXRControllerHaptics()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRInput_UpdateXRControllerHaptics_m9E0932C8F3F7602C10857A4B6AA0CEFF52F1CC78 (const RuntimeMethod* method) ;
// T System.Collections.Generic.List`1<OVRInput/OVRControllerBase>::get_Item(System.Int32)
inline OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D (List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* __this, int32_t ___0_index, const RuntimeMethod* method)
{
	return ((  OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* (*) (List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577*, int32_t, const RuntimeMethod*))List_1_get_Item_m33561245D64798C2AB07584C0EC4F240E4839A38_gshared)(__this, ___0_index, method);
}
// System.Boolean OVRInput::Get(OVRInput/RawButton,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_Get_m537C5F53DCBD027936460E4183648F5EEBA6A654 (int32_t ___0_rawMask, int32_t ___1_controllerMask, const RuntimeMethod* method) ;
// System.Boolean OVRInput::Get(OVRInput/RawTouch,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_Get_mBEB70324F4BE01D02BE80C0A871A096F1D28D598 (int32_t ___0_rawMask, int32_t ___1_controllerMask, const RuntimeMethod* method) ;
// System.Int32 System.Collections.Generic.List`1<OVRInput/OVRControllerBase>::get_Count()
inline int32_t List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_inline (List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* __this, const RuntimeMethod* method)
{
	return ((  int32_t (*) (List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577*, const RuntimeMethod*))List_1_get_Count_m4407E4C389F22B8CEC282C15D56516658746C383_gshared_inline)(__this, method);
}
// System.Boolean OVRInput::get_pluginSupportsActiveController()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_get_pluginSupportsActiveController_m273F22B55C9B8197B8B372827D45933173F51C05 (const RuntimeMethod* method) ;
// OVRPlugin/Controller OVRPlugin::GetConnectedControllers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRPlugin_GetConnectedControllers_m32CC5DB7DC0C5AD45529BD1A6A9CE6BA80E0E3B5 (const RuntimeMethod* method) ;
// OVRPlugin/Controller OVRPlugin::GetActiveController()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRPlugin_GetActiveController_mB51206F4C3221D56F5D78602D98A765A57E6A14C (const RuntimeMethod* method) ;
// OVRPlugin/XrApi OVRPlugin::get_nativeXrApi()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRPlugin_get_nativeXrApi_m32634338020C30D956A1579A7745C94BD77279F3 (const RuntimeMethod* method) ;
// System.Single UnityEngine.Time::get_fixedDeltaTime()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Time_get_fixedDeltaTime_m43136893D00AF5D5FE80AD05609558F6E2381381 (const RuntimeMethod* method) ;
// System.Single UnityEngine.Time::get_timeScale()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Time_get_timeScale_m1F45A413D4EEA08B1E0988022512C137F6C1E616 (const RuntimeMethod* method) ;
// System.Single UnityEngine.Mathf::Max(System.Single,System.Single)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR float Mathf_Max_mF5379E63D2BBAC76D090748695D833934F8AD051_inline (float ___0_a, float ___1_b, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::UpdateNodePhysicsPoses(System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_UpdateNodePhysicsPoses_m30A4EB300401EF39239AE6418ED8CF994C51707C (int32_t ___0_frameIndex, double ___1_predictionSeconds, const RuntimeMethod* method) ;
// OVRPlugin/InteractionProfile OVRPlugin::GetCurrentInteractionProfile(OVRPlugin/Hand)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRPlugin_GetCurrentInteractionProfile_m12953945102999ED32CED85223563A6EAC9AE7CF (int32_t ___0_hand, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::GetNodeOrientationTracked(OVRPlugin/Node)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_GetNodeOrientationTracked_m2F4F1AF81CEA7FB1BC6B8025E99A1D0E93CBDC9F (int32_t ___0_nodeId, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::GetNodeOrientationValid(OVRPlugin/Node)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_GetNodeOrientationValid_m84C2B516B7C2D28967C271C8F5068028E6816717 (int32_t ___0_nodeId, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::GetNodePositionTracked(OVRPlugin/Node)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_GetNodePositionTracked_m7921BCEF65C51982D626A264426AE6A31BCB110B (int32_t ___0_nodeId, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::GetNodePositionValid(OVRPlugin/Node)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_GetNodePositionValid_m855200815DB6B89892A8057D87434E62177ADFDC (int32_t ___0_nodeId, const RuntimeMethod* method) ;
// OVRPlugin/Posef OVRPlugin::GetNodePose(OVRPlugin/Node,OVRPlugin/Step)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Posef_t51A2C10B4094B44A8D3C1913292B839172887B61 OVRPlugin_GetNodePose_m973B3CA31C019465A53494EB440C13C2AE229CB3 (int32_t ___0_nodeId, int32_t ___1_stepId, const RuntimeMethod* method) ;
// OVRPose OVRExtensions::ToOVRPose(OVRPlugin/Posef)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR OVRPose_t8054769FD4517C10D2ECD2C14C823723D675EEFB OVRExtensions_ToOVRPose_m2D557CFD8B775C88FDED26B3D31A67E8AB53B14F (Posef_t51A2C10B4094B44A8D3C1913292B839172887B61 ___0_p, const RuntimeMethod* method) ;
// System.Boolean OVRNodeStateProperties::GetNodeStatePropertyVector3(UnityEngine.XR.XRNode,NodeStatePropertyType,OVRPlugin/Node,OVRPlugin/Step,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRNodeStateProperties_GetNodeStatePropertyVector3_mFA9CA29D9B8B68721EBFF755AE379F019ADB3EA1 (int32_t ___0_nodeType, int32_t ___1_propertyType, int32_t ___2_ovrpNodeType, int32_t ___3_stepType, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* ___4_retVec, const RuntimeMethod* method) ;
// UnityEngine.Vector3 UnityEngine.Vector3::get_zero()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Vector3_get_zero_m0C1249C3F25B1C70EAD3CC8B31259975A457AE39_inline (const RuntimeMethod* method) ;
// System.Boolean OVRNodeStateProperties::GetNodeStatePropertyQuaternion(UnityEngine.XR.XRNode,NodeStatePropertyType,OVRPlugin/Node,OVRPlugin/Step,UnityEngine.Quaternion&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRNodeStateProperties_GetNodeStatePropertyQuaternion_m749DB6361263E70DEC52E819715BC9AF5B67F5AD (int32_t ___0_nodeType, int32_t ___1_propertyType, int32_t ___2_ovrpNodeType, int32_t ___3_stepType, Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974* ___4_retQuat, const RuntimeMethod* method) ;
// UnityEngine.Quaternion UnityEngine.Quaternion::get_identity()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 Quaternion_get_identity_m7E701AE095ED10FD5EA0B50ABCFDE2EEFF2173A5_inline (const RuntimeMethod* method) ;
// OVRPlugin/PoseStatef OVRPlugin::GetNodePoseStateImmediate(OVRPlugin/Node)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR PoseStatef_tC6A564A6E163790E7DE8D1CF4EBDE089D09B053E OVRPlugin_GetNodePoseStateImmediate_m82DA3F8A7A7287C93F32AE7FE510509392F2F288 (int32_t ___0_nodeId, const RuntimeMethod* method) ;
// System.Boolean OVRInput::GetControllerPositionValid(OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetControllerPositionValid_m3ACDABE2BD5335A8DE615A2F9A5C9D63CE329E94 (int32_t ___0_controllerType, const RuntimeMethod* method) ;
// UnityEngine.Vector3 OVRExtensions::FromFlippedZVector3f(OVRPlugin/Vector3f)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 OVRExtensions_FromFlippedZVector3f_m32D17BCDA62BC3F8C9A6442F06A42BBE79140F62 (Vector3f_t232AF83B4642C67BE8EFF85D8E1599D3B06BD562 ___0_v, const RuntimeMethod* method) ;
// System.Boolean OVRInput::GetControllerOrientationValid(OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetControllerOrientationValid_m9EE0634367BCEAF60C6DDBA9CF527F2CEC8327C1 (int32_t ___0_controllerType, const RuntimeMethod* method) ;
// OVRPlugin/Handedness OVRPlugin::GetDominantHand()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRPlugin_GetDominantHand_m28AFC594B67C692D753781414C50839D323EAEBC (const RuntimeMethod* method) ;
// System.Boolean OVRInput::GetResolvedButton(OVRInput/Button,OVRInput/RawButton,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetResolvedButton_mBB31573503E0C243CFCF461E9D8ABACA3B9C1DEE (int32_t ___0_virtualMask, int32_t ___1_rawMask, int32_t ___2_controllerMask, const RuntimeMethod* method) ;
// System.Boolean OVRInput::ShouldResolveController(OVRInput/Controller,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_ShouldResolveController_m28BB36AA2D586B8F1C75071D26654B77285AA952 (int32_t ___0_controllerType, int32_t ___1_controllerMask, const RuntimeMethod* method) ;
// OVRInput/RawButton OVRInput/OVRControllerBase::ResolveToRawMask(OVRInput/Button)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRControllerBase_ResolveToRawMask_m86055AF4DE44D6FB48EC67A0C7E69F6A9744750B (OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* __this, int32_t ___0_virtualMask, const RuntimeMethod* method) ;
// System.Boolean OVRInput::GetResolvedButtonDown(OVRInput/Button,OVRInput/RawButton,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetResolvedButtonDown_m7AAC44E0388502D43F5A6887AE2ACEEE69642C9F (int32_t ___0_virtualMask, int32_t ___1_rawMask, int32_t ___2_controllerMask, const RuntimeMethod* method) ;
// System.Boolean OVRInput::GetResolvedButtonUp(OVRInput/Button,OVRInput/RawButton,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetResolvedButtonUp_m270DD35F9328AA02FD57704B03BD9C48439290FE (int32_t ___0_virtualMask, int32_t ___1_rawMask, int32_t ___2_controllerMask, const RuntimeMethod* method) ;
// System.Boolean OVRInput::GetResolvedTouch(OVRInput/Touch,OVRInput/RawTouch,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetResolvedTouch_m73FE92C1ADB5D80A899E286D292ED84071FE8CFE (int32_t ___0_virtualMask, int32_t ___1_rawMask, int32_t ___2_controllerMask, const RuntimeMethod* method) ;
// OVRInput/RawTouch OVRInput/OVRControllerBase::ResolveToRawMask(OVRInput/Touch)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRControllerBase_ResolveToRawMask_m65F6690080656E738842AC913EF7A7B92A666F07 (OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* __this, int32_t ___0_virtualMask, const RuntimeMethod* method) ;
// System.Boolean OVRInput::GetResolvedTouchDown(OVRInput/Touch,OVRInput/RawTouch,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetResolvedTouchDown_m66E8EEDD8A035AB53C72094860E4B470B383B6BA (int32_t ___0_virtualMask, int32_t ___1_rawMask, int32_t ___2_controllerMask, const RuntimeMethod* method) ;
// System.Boolean OVRInput::GetResolvedTouchUp(OVRInput/Touch,OVRInput/RawTouch,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetResolvedTouchUp_m209C2025FE3912C6A88EBEEC418D28E49CB48C35 (int32_t ___0_virtualMask, int32_t ___1_rawMask, int32_t ___2_controllerMask, const RuntimeMethod* method) ;
// System.Boolean OVRInput::GetResolvedNearTouch(OVRInput/NearTouch,OVRInput/RawNearTouch,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetResolvedNearTouch_mED99EAB619BBCBC6C3A1D39EFFE67D1D2882C1A7 (int32_t ___0_virtualMask, int32_t ___1_rawMask, int32_t ___2_controllerMask, const RuntimeMethod* method) ;
// OVRInput/RawNearTouch OVRInput/OVRControllerBase::ResolveToRawMask(OVRInput/NearTouch)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRControllerBase_ResolveToRawMask_m8D04C93448D2D3438F972AE9796714F134E6BD39 (OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* __this, int32_t ___0_virtualMask, const RuntimeMethod* method) ;
// System.Boolean OVRInput::GetResolvedNearTouchDown(OVRInput/NearTouch,OVRInput/RawNearTouch,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetResolvedNearTouchDown_m6FD16DD559D5DF8B54918EE7C11D43CCF6345FC1 (int32_t ___0_virtualMask, int32_t ___1_rawMask, int32_t ___2_controllerMask, const RuntimeMethod* method) ;
// System.Boolean OVRInput::GetResolvedNearTouchUp(OVRInput/NearTouch,OVRInput/RawNearTouch,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetResolvedNearTouchUp_mF91233ABD8E1D6CC43D2D6929B5EC95D584D3941 (int32_t ___0_virtualMask, int32_t ___1_rawMask, int32_t ___2_controllerMask, const RuntimeMethod* method) ;
// System.Single OVRInput::GetResolvedAxis1D(OVRInput/Axis1D,OVRInput/RawAxis1D,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float OVRInput_GetResolvedAxis1D_mF5209B0321AE338095757D7353B262549E274EA1 (int32_t ___0_virtualMask, int32_t ___1_rawMask, int32_t ___2_controllerMask, const RuntimeMethod* method) ;
// OVRInput/RawAxis1D OVRInput/OVRControllerBase::ResolveToRawMask(OVRInput/Axis1D)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRControllerBase_ResolveToRawMask_m2FA1E268711274A7F9F63F1FC0D614272B8F953E (OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* __this, int32_t ___0_virtualMask, const RuntimeMethod* method) ;
// System.Single OVRInput::CalculateDeadzone(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float OVRInput_CalculateDeadzone_m6BA8FADBF3D06FE95AD5264B167531F78C4AB3C4 (float ___0_a, float ___1_deadzone, const RuntimeMethod* method) ;
// System.Single OVRInput::CalculateAbsMax(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float OVRInput_CalculateAbsMax_mC5712340231F606B82E84C5E7BC769E5A4EBA008 (float ___0_a, float ___1_b, const RuntimeMethod* method) ;
// UnityEngine.Vector2 OVRInput::GetResolvedAxis2D(OVRInput/Axis2D,OVRInput/RawAxis2D,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 OVRInput_GetResolvedAxis2D_m906A84A42FEF829D334263869BE8B73F67DBE2BC (int32_t ___0_virtualMask, int32_t ___1_rawMask, int32_t ___2_controllerMask, const RuntimeMethod* method) ;
// UnityEngine.Vector2 UnityEngine.Vector2::get_zero()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 Vector2_get_zero_m32506C40EC2EE7D5D4410BF40D3EE683A3D5F32C_inline (const RuntimeMethod* method) ;
// OVRInput/RawAxis2D OVRInput/OVRControllerBase::ResolveToRawMask(OVRInput/Axis2D)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRControllerBase_ResolveToRawMask_m574A6F44565F5D22BF8728447C82AA0A55DC4911 (OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* __this, int32_t ___0_virtualMask, const RuntimeMethod* method) ;
// System.Void UnityEngine.Vector2::.ctor(System.Single,System.Single)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7* __this, float ___0_x, float ___1_y, const RuntimeMethod* method) ;
// UnityEngine.Vector2 OVRInput::CalculateDeadzone(UnityEngine.Vector2,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 OVRInput_CalculateDeadzone_m62E502D296247D79A188319599508836C0B88D9C (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___0_a, float ___1_deadzone, const RuntimeMethod* method) ;
// UnityEngine.Vector2 OVRInput::CalculateAbsMax(UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 OVRInput_CalculateAbsMax_m01D62F439662772B8DFACA54195A979A2E151F19 (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___0_a, Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___1_b, const RuntimeMethod* method) ;
// OVR.OpenVR.CVRSystem OVR.OpenVR.OpenVR::get_System()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR CVRSystem_tD199D16B8A7CC7F19E6E0B5D9AE59156C2312B1A* OpenVR_get_System_m3E623FF7D408DACC163D9CB6CD2F9193CB5E51EA (const RuntimeMethod* method) ;
// System.UInt32 OVR.OpenVR.CVRSystem::GetStringTrackedDeviceProperty(System.UInt32,OVR.OpenVR.ETrackedDeviceProperty,System.Text.StringBuilder,System.UInt32,OVR.OpenVR.ETrackedPropertyError&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t CVRSystem_GetStringTrackedDeviceProperty_mFEFAEDDF2415565002891E4C84A6EA7C45BAF9A4 (CVRSystem_tD199D16B8A7CC7F19E6E0B5D9AE59156C2312B1A* __this, uint32_t ___0_unDeviceIndex, int32_t ___1_prop, StringBuilder_t* ___2_pchValue, uint32_t ___3_unBufferSize, int32_t* ___4_pError, const RuntimeMethod* method) ;
// System.Void System.Text.StringBuilder::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StringBuilder__ctor_m2619CA8D2C3476DF1A302D9D941498BB1C6164C5 (StringBuilder_t* __this, int32_t ___0_capacity, const RuntimeMethod* method) ;
// System.String System.Enum::ToString()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* Enum_ToString_m946B0B83C4470457D0FF555D862022C72BB55741 (RuntimeObject* __this, const RuntimeMethod* method) ;
// OVR.OpenVR.ETrackedDeviceClass OVR.OpenVR.CVRSystem::GetTrackedDeviceClass(System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRSystem_GetTrackedDeviceClass_mBCBA6F54A44687E8F540E5EE900B769F8A3CFA97 (CVRSystem_tD199D16B8A7CC7F19E6E0B5D9AE59156C2312B1A* __this, uint32_t ___0_unDeviceIndex, const RuntimeMethod* method) ;
// System.Boolean OVR.OpenVR.CVRSystem::IsTrackedDeviceConnected(System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool CVRSystem_IsTrackedDeviceConnected_m13950757132ED5FB0ADD7137A0F6BB123F16DDBD (CVRSystem_tD199D16B8A7CC7F19E6E0B5D9AE59156C2312B1A* __this, uint32_t ___0_unDeviceIndex, const RuntimeMethod* method) ;
// System.String OVRInput::GetOpenVRStringProperty(OVR.OpenVR.ETrackedDeviceProperty,System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* OVRInput_GetOpenVRStringProperty_m98D9EFA2CF5CB4A3D5B1FBF211792C9BF3694211 (int32_t ___0_prop, uint32_t ___1_deviceId, const RuntimeMethod* method) ;
// System.Boolean System.String::op_Equality(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool String_op_Equality_m030E1B219352228970A076136E455C4E568C02C1 (String_t* ___0_a, String_t* ___1_b, const RuntimeMethod* method) ;
// OVR.OpenVR.ETrackedControllerRole OVR.OpenVR.CVRSystem::GetControllerRoleForTrackedDeviceIndex(System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRSystem_GetControllerRoleForTrackedDeviceIndex_m9B4BE7F863A791CDBA1AE3F57138BD3DBFD6E7BB (CVRSystem_tD199D16B8A7CC7F19E6E0B5D9AE59156C2312B1A* __this, uint32_t ___0_unDeviceIndex, const RuntimeMethod* method) ;
// System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Type_t* Type_GetTypeFromHandle_m6062B81682F79A4D6DF2640692EE6D9987858C57 (RuntimeTypeHandle_t332A452B8B6179E4469B69525D0FE82A88030F7B ___0_handle, const RuntimeMethod* method) ;
// System.Int32 System.Runtime.InteropServices.Marshal::SizeOf(System.Type)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Marshal_SizeOf_mED64846722033D6F60C2973CA604B7C2D7D4A1B7 (Type_t* ___0_t, const RuntimeMethod* method) ;
// System.Boolean OVR.OpenVR.CVRSystem::GetControllerState(System.UInt32,OVR.OpenVR.VRControllerState_t&,System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool CVRSystem_GetControllerState_m67FF86AADBF0ECF15A77544B1A286D96650EF11D (CVRSystem_tD199D16B8A7CC7F19E6E0B5D9AE59156C2312B1A* __this, uint32_t ___0_unControllerDeviceIndex, VRControllerState_t_t50475AF703AB39117DE2C6CE266154309CD9BD4D* ___1_pControllerState, uint32_t ___2_unControllerStateSize, const RuntimeMethod* method) ;
// System.Single UnityEngine.Time::get_deltaTime()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Time_get_deltaTime_mC3195000401F0FD167DD2F948FD2BC58330D0865 (const RuntimeMethod* method) ;
// System.Void OVRInput::PlayHapticImpulse(System.Single,UnityEngine.XR.XRNode)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRInput_PlayHapticImpulse_m1361B3A6FDE69152D291A4AAC0C0D3537926F77B (float ___0_amplitude, int32_t ___1_deviceNode, const RuntimeMethod* method) ;
// System.Void OVRInput/HapticInfo::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HapticInfo__ctor_m386E367D1A8EB72F22817794BDD0E4EAD8210F0F (HapticInfo_t614DAC0509051DC76FD4D48A1D591505E22DE950* __this, const RuntimeMethod* method) ;
// System.Boolean OVRInput::IsValidOpenVRDevice(System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_IsValidOpenVRDevice_m7ADD9AC581CBA6737A77731FEB481BD1E9D75B64 (uint32_t ___0_deviceId, const RuntimeMethod* method) ;
// System.Void OVR.OpenVR.CVRSystem::TriggerHapticPulse(System.UInt32,System.UInt32,System.UInt16)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void CVRSystem_TriggerHapticPulse_m18A6EF5A5B80D838BC186A057C11A45151D8FA7B (CVRSystem_tD199D16B8A7CC7F19E6E0B5D9AE59156C2312B1A* __this, uint32_t ___0_unControllerDeviceIndex, uint32_t ___1_unAxisId, uint16_t ___2_usDurationMicroSec, const RuntimeMethod* method) ;
// System.Void OVRInput::StartVibration(System.Single,System.Single,UnityEngine.XR.XRNode)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRInput_StartVibration_mC60F6AD7169146CCCC1EE049A1BA447F06E67EBD (float ___0_amplitude, float ___1_duration, int32_t ___2_controllerNode, const RuntimeMethod* method) ;
// System.Void OVRInput::SetControllerVibration(System.Single,System.Single,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRInput_SetControllerVibration_m7DE7256047DAAB0F6F5E327250A23B9D7074871E (float ___0_frequency, float ___1_amplitude, int32_t ___2_controllerMask, const RuntimeMethod* method) ;
// System.Single UnityEngine.Vector2::get_sqrMagnitude()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR float Vector2_get_sqrMagnitude_mA16336720C14EEF8BA9B55AE33B98C9EE2082BDC_inline (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7* __this, const RuntimeMethod* method) ;
// System.Single UnityEngine.Vector2::get_magnitude()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR float Vector2_get_magnitude_m5C59B4056420AEFDB291AD0914A3F675330A75CE_inline (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7* __this, const RuntimeMethod* method) ;
// UnityEngine.Vector2 UnityEngine.Vector2::op_Multiply(UnityEngine.Vector2,System.Single)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 Vector2_op_Multiply_m2D984B613020089BF5165BA4CA10988E2DC771FE_inline (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___0_a, float ___1_d, const RuntimeMethod* method) ;
// UnityEngine.Vector2 UnityEngine.Vector2::get_normalized()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 Vector2_get_normalized_mF6722883AEFB5027690A778DF8ACC20F0FA65297_inline (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7* __this, const RuntimeMethod* method) ;
// System.Void OVRInput/OVRControllerBase/VirtualButtonMap::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VirtualButtonMap__ctor_m84849058BF5B2AE16FBEA486FC58B59641A134D5 (VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* __this, const RuntimeMethod* method) ;
// System.Void OVRInput/OVRControllerBase/VirtualTouchMap::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VirtualTouchMap__ctor_mF8C09D67EE6EF2B426DFE0AF08FE81B9CD38CDCA (VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* __this, const RuntimeMethod* method) ;
// System.Void OVRInput/OVRControllerBase/VirtualNearTouchMap::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VirtualNearTouchMap__ctor_m29091026E28CD564A8098B5BB557397C2B8A4B86 (VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* __this, const RuntimeMethod* method) ;
// System.Void OVRInput/OVRControllerBase/VirtualAxis1DMap::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VirtualAxis1DMap__ctor_m7AF1E2FD0D217CE37E1C60CE9F873E253CB7ADFB (VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* __this, const RuntimeMethod* method) ;
// System.Void OVRInput/OVRControllerBase/VirtualAxis2DMap::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VirtualAxis2DMap__ctor_m53A66F09A2A2B816DEDE021C7781DA2422E64C92 (VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* __this, const RuntimeMethod* method) ;
// OVRPlugin/ControllerState5 OVRInput/OVRControllerBase::GetOpenVRControllerState(OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA OVRControllerBase_GetOpenVRControllerState_mF56623CE6E48517ACE0CF8862C0B6377669DEE03 (OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* __this, int32_t ___0_controllerType, const RuntimeMethod* method) ;
// OVRPlugin/ControllerState5 OVRPlugin::GetControllerState5(System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA OVRPlugin_GetControllerState5_mAA377A20B26D6410B559B2C579384E0E80F2A2F3 (uint32_t ___0_controllerMask, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::SetControllerVibration(System.UInt32,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_SetControllerVibration_mAE3456564B4AEF71F875080A33A62AD05C3A71E6 (uint32_t ___0_controllerMask, float ___1_frequency, float ___2_amplitude, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::SetControllerLocalizedVibration(OVRPlugin/Controller,OVRPlugin/HapticsLocation,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_SetControllerLocalizedVibration_m46F01F87698AA2924076D09E9910ECF1ABC22F61 (int32_t ___0_controllerMask, int32_t ___1_hapticsLocationMask, float ___2_frequency, float ___3_amplitude, const RuntimeMethod* method) ;
// System.Runtime.InteropServices.GCHandle System.Runtime.InteropServices.GCHandle::Alloc(System.Object,System.Runtime.InteropServices.GCHandleType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GCHandle_tC44F6F72EE68BD4CFABA24309DA7A179D41127DC GCHandle_Alloc_m3BFD398427352FC756FFE078F01A504B681352EC (RuntimeObject* ___0_value, int32_t ___1_type, const RuntimeMethod* method) ;
// System.Boolean System.Runtime.InteropServices.GCHandle::get_IsAllocated()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool GCHandle_get_IsAllocated_m241908103D8D867E11CCAB73C918729825E86843 (GCHandle_tC44F6F72EE68BD4CFABA24309DA7A179D41127DC* __this, const RuntimeMethod* method) ;
// System.Void System.Runtime.InteropServices.GCHandle::Free()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GCHandle_Free_m1320A260E487EB1EA6D95F9E54BFFCB5A4EF83A3 (GCHandle_tC44F6F72EE68BD4CFABA24309DA7A179D41127DC* __this, const RuntimeMethod* method) ;
// System.IntPtr System.Runtime.InteropServices.GCHandle::AddrOfPinnedObject()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t GCHandle_AddrOfPinnedObject_m9C047E154D6F0FE66BE003AB99F0B67A2CA953A6 (GCHandle_tC44F6F72EE68BD4CFABA24309DA7A179D41127DC* __this, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::SetControllerHapticsAmplitudeEnvelope(OVRPlugin/Controller,OVRPlugin/HapticsAmplitudeEnvelopeVibration)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_SetControllerHapticsAmplitudeEnvelope_m03AE2E3837BCC71E17E006E5CC2E6954960CCEB8 (int32_t ___0_controllerMask, HapticsAmplitudeEnvelopeVibration_t72F2EFB43EF23B078F28C324C8D12EBD9B84A00A ___1_hapticsVibration, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::SetControllerHapticsPcm(OVRPlugin/Controller,OVRPlugin/HapticsPcmVibration)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_SetControllerHapticsPcm_mFEAD0169FAE82422B3DF28F992C79BDFA9BC73E1 (int32_t ___0_controllerMask, HapticsPcmVibration_tE63FF2450048F8B5C0EF36A26C0E61346CAE8CBB ___1_hapticsVibration, const RuntimeMethod* method) ;
// System.Int32 System.Runtime.InteropServices.Marshal::ReadInt32(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Marshal_ReadInt32_mDF5F7A01E6F50C03DBB936ACF229CE5345B0DE18 (intptr_t ___0_ptr, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::GetControllerSampleRateHz(OVRPlugin/Controller,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_GetControllerSampleRateHz_m55D647A56ADF5D9DA644D8D87D8766B52E6E86B9 (int32_t ___0_controllerMask, float* ___1_sampleRateHz, const RuntimeMethod* method) ;
// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::ToRawMask(OVRInput/Button)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t VirtualButtonMap_ToRawMask_m0B0D32BAC0DBFD08BD5E575A3676C9430C60D5AA (VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* __this, int32_t ___0_virtualMask, const RuntimeMethod* method) ;
// OVRInput/RawTouch OVRInput/OVRControllerBase/VirtualTouchMap::ToRawMask(OVRInput/Touch)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t VirtualTouchMap_ToRawMask_mCF2939C4B09B3FE0367B3F73003D4D3EC7F78EB7 (VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* __this, int32_t ___0_virtualMask, const RuntimeMethod* method) ;
// OVRInput/RawNearTouch OVRInput/OVRControllerBase/VirtualNearTouchMap::ToRawMask(OVRInput/NearTouch)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t VirtualNearTouchMap_ToRawMask_mE743414574E2B9D84BD84B2B4E9156973F2A57EA (VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* __this, int32_t ___0_virtualMask, const RuntimeMethod* method) ;
// OVRInput/RawAxis1D OVRInput/OVRControllerBase/VirtualAxis1DMap::ToRawMask(OVRInput/Axis1D)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t VirtualAxis1DMap_ToRawMask_m977A6C4A989DD010BC7C844700E7CF2A2E35AA51 (VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* __this, int32_t ___0_virtualMask, const RuntimeMethod* method) ;
// OVRInput/RawAxis2D OVRInput/OVRControllerBase/VirtualAxis2DMap::ToRawMask(OVRInput/Axis2D)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t VirtualAxis2DMap_ToRawMask_m9C9827F9F56AF946108A8A9A8504299BAC8BCC44 (VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* __this, int32_t ___0_virtualMask, const RuntimeMethod* method) ;
// System.Void OVRInput/OVRControllerBase::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerBase__ctor_m19E323A6D3242829EDFA1879B8B8C0525806A124 (OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* __this, const RuntimeMethod* method) ;
// System.Int32 System.Runtime.InteropServices.Marshal::SizeOf<System.Byte>(T)
inline int32_t Marshal_SizeOf_TisByte_t94D9231AC217BE4D2E004C4CD32DF6D099EA41A3_m7AB12E9316F73FF78004C146AEF4D4616F3A7DEC (uint8_t ___0_structure, const RuntimeMethod* method)
{
	return ((  int32_t (*) (uint8_t, const RuntimeMethod*))Marshal_SizeOf_TisByte_t94D9231AC217BE4D2E004C4CD32DF6D099EA41A3_m7AB12E9316F73FF78004C146AEF4D4616F3A7DEC_gshared)(___0_structure, method);
}
// System.IntPtr System.Runtime.InteropServices.Marshal::AllocHGlobal(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t Marshal_AllocHGlobal_mE1D700DF967E28BE8AB3E0D67C81A96B4FCC8F4F (int32_t ___0_cb, const RuntimeMethod* method) ;
// System.IntPtr OVRPlugin/Ktx::LoadKtxFromMemory(System.IntPtr,System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t Ktx_LoadKtxFromMemory_mD2759F02E4770B460F61326A173531D0CA95AEE5 (intptr_t ___0_dataPtr, uint32_t ___1_length, const RuntimeMethod* method) ;
// System.Void System.Runtime.InteropServices.Marshal::FreeHGlobal(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Marshal_FreeHGlobal_m298EF0650E82E326EDA8048488DC384BB9171EB9 (intptr_t ___0_hglobal, const RuntimeMethod* method) ;
// System.UInt32 OVRPlugin/Ktx::GetKtxTextureWidth(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t Ktx_GetKtxTextureWidth_m67DD7AE87930DB3BDF234E66BB7769BAF7F601F3 (intptr_t ___0_texture, const RuntimeMethod* method) ;
// System.UInt32 OVRPlugin/Ktx::GetKtxTextureHeight(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t Ktx_GetKtxTextureHeight_mBC788B33843F0C9BEFA7028D5AEEE274A23BDA89 (intptr_t ___0_texture, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin/Ktx::TranscodeKtxTexture(System.IntPtr,System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Ktx_TranscodeKtxTexture_mFAAB5B6D9BE3FA318722FBA974E8398AD6AF95B1 (intptr_t ___0_texture, uint32_t ___1_format, const RuntimeMethod* method) ;
// System.Void UnityEngine.Debug::LogError(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_LogError_mB00B2B4468EF3CAF041B038D840820FB84C924B2 (RuntimeObject* ___0_message, const RuntimeMethod* method) ;
// System.UInt32 OVRPlugin/Ktx::GetKtxTextureSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t Ktx_GetKtxTextureSize_mA4515CCDDE6EB440616387342085739CF80C7AF9 (intptr_t ___0_texture, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin/Ktx::GetKtxTextureData(System.IntPtr,System.IntPtr,System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Ktx_GetKtxTextureData_m3057F7B0487BD7B5A1C38915EF342BA6FC17E75D (intptr_t ___0_texture, intptr_t ___1_textureData, uint32_t ___2_bufferSize, const RuntimeMethod* method) ;
// System.Void System.Runtime.InteropServices.Marshal::Copy(System.IntPtr,System.Byte[],System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Marshal_Copy_mF7402FFDB520EA1B8D1C32B368DBEE4B13F1BE77 (intptr_t ___0_source, ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___1_destination, int32_t ___2_startIndex, int32_t ___3_length, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin/Ktx::DestroyKtxTexture(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Ktx_DestroyKtxTexture_mD7EC5644F5EF3C12498F62EE3B150B34A7FC3A3A (intptr_t ___0_texture, const RuntimeMethod* method) ;
// System.Void UnityEngine.PropertyAttribute::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PropertyAttribute__ctor_m19247686E165101F140615C7306DC2DA3953D97D (PropertyAttribute_t5E0CB5A6CDA6E24CBD4FF26DE3B0C29D8BB54BF0* __this, const RuntimeMethod* method) ;
// System.Boolean UnityEngine.Object::op_Equality(UnityEngine.Object,UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Object_op_Equality_mB6120F782D83091EF56A198FCEBCF066DB4A9605 (Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C* ___0_x, Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C* ___1_y, const RuntimeMethod* method) ;
// System.Void OVRProfile::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRProfile__ctor_mAEA89E1269ED1DA8E35555C3869A12098C5D820C (OVRProfile_tCFDDDA5EE82F0ED94671EB741B8954603D98AFC0* __this, const RuntimeMethod* method) ;
// System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Delegate_t* Delegate_Combine_m1F725AEF318BE6F0426863490691A6F4606E7D00 (Delegate_t* ___0_a, Delegate_t* ___1_b, const RuntimeMethod* method) ;
// System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Delegate_t* Delegate_Remove_m8B7DD5661308FA972E23CA1CC3FC9CEB355504E3 (Delegate_t* ___0_source, Delegate_t* ___1_value, const RuntimeMethod* method) ;
// System.Boolean OVRNodeStateProperties::IsHmdPresent()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRNodeStateProperties_IsHmdPresent_m007E7C0AA8B7D85019F2238007C8F5F28DB3547D (const RuntimeMethod* method) ;
// System.String OVRPlugin::get_audioOutId()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* OVRPlugin_get_audioOutId_m5D5085CAAC63B5F1C4FB8E2160278EBC7BC7CCDA (const RuntimeMethod* method) ;
// System.String OVRPlugin::get_audioInId()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* OVRPlugin_get_audioInId_m69899C3CA94D7DFD3E580D40DE456876775000DE (const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::get_hasVrFocus()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_get_hasVrFocus_m3BE22CA34415F44FD722A0D2547388F0C943900E (const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::get_hasInputFocus()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_get_hasInputFocus_m26E031618D6BF901538C11D3A4FF8F82208BEEDD (const RuntimeMethod* method) ;
// System.Boolean OVRManager::get_isHmdPresent()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_get_isHmdPresent_m098F56E4E9C2ECAC87EAB61C7680F0FBD2A2C445 (const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::get_chromatic()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_get_chromatic_m70D923C4EC1A9BDBCB8CAB71133F960808FBC60C (const RuntimeMethod* method) ;
// System.Void OVRPlugin::set_chromatic(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRPlugin_set_chromatic_mAE129890213C1F44B1FCB1F74EAA00E12A95ABA1 (bool ___0_value, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::get_monoscopic()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_get_monoscopic_m1FB2A64C1DF99193B13E940E9DEDE96C3A9ABF64 (const RuntimeMethod* method) ;
// System.Void OVRPlugin::set_monoscopic(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRPlugin_set_monoscopic_m10D8914343874239BBCCA4F68B3FB2DE1A9F2F2D (bool ___0_value, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::SetClientColorDesc(OVRPlugin/ColorSpace)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_SetClientColorDesc_m7E7BD58DCDF8C2320A4741E1D45F0CECB72CD346 (int32_t ___0_colorSpace, const RuntimeMethod* method) ;
// OVRPlugin/ColorSpace OVRPlugin::GetHmdColorDesc()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRPlugin_GetHmdColorDesc_mAE1EC23074A7E9D9E6805686A00F1E82E11AD00B (const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::GetHeadPoseModifier(OVRPlugin/Quatf&,OVRPlugin/Vector3f&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_GetHeadPoseModifier_mF5EB4C2BAE8E41E5282E28B72A3163B0411EC46A (Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A* ___0_relativeRotation, Vector3f_t232AF83B4642C67BE8EFF85D8E1599D3B06BD562* ___1_relativeTranslation, const RuntimeMethod* method) ;
// UnityEngine.Quaternion UnityEngine.Quaternion::Euler(UnityEngine.Vector3)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 Quaternion_Euler_m5BCCC19216CFAD2426F15BC51A30421880D27B73_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___0_euler, const RuntimeMethod* method) ;
// OVRPlugin/Quatf OVRExtensions::ToQuatf(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A OVRExtensions_ToQuatf_mF7543BB09A1D01A842FB07FE7F7997E988BAC06E (Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 ___0_q, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::SetHeadPoseModifier(OVRPlugin/Quatf&,OVRPlugin/Vector3f&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_SetHeadPoseModifier_mBB073CB97E2AC7C4952A36E1AE1F7A825AE9D815 (Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A* ___0_relativeRotation, Vector3f_t232AF83B4642C67BE8EFF85D8E1599D3B06BD562* ___1_relativeTranslation, const RuntimeMethod* method) ;
// System.Boolean UnityEngine.Vector3::op_Inequality(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR bool Vector3_op_Inequality_m9F170CDFBF1E490E559DA5D06D6547501A402BBF_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___0_lhs, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___1_rhs, const RuntimeMethod* method) ;
// OVRPlugin/Vector3f OVRExtensions::ToFlippedZVector3f(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3f_t232AF83B4642C67BE8EFF85D8E1599D3B06BD562 OVRExtensions_ToFlippedZVector3f_m62CC475050FFCDA6E53230DCE20070AB0228D6FA (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___0_v, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::get_eyeFovPremultipliedAlphaModeEnabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_get_eyeFovPremultipliedAlphaModeEnabled_m284A864237949572788B57BFF7B47392A9AFC93E (const RuntimeMethod* method) ;
// System.Void OVRPlugin::set_eyeFovPremultipliedAlphaModeEnabled(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRPlugin_set_eyeFovPremultipliedAlphaModeEnabled_mB0D53565317E5A7A5922B447F2B71D2A3DDA331C (bool ___0_value, const RuntimeMethod* method) ;
// System.UInt64 OVRPlugin::GetNativeOpenXRInstance()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t OVRPlugin_GetNativeOpenXRInstance_mCDB3798FFB361CD670AB9A8E937C2056E9978AD0 (const RuntimeMethod* method) ;
// System.UInt64 OVRPlugin::GetNativeOpenXRSession()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t OVRPlugin_GetNativeOpenXRSession_m9310783676B3E115D4B3509CBE45D89BD61FC1BD (const RuntimeMethod* method) ;
// System.Int32 OVRPlugin::get_vsyncCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRPlugin_get_vsyncCount_m43E11EECD32DC9547222AF21B9FE0BA27974984C (const RuntimeMethod* method) ;
// System.Void OVRPlugin::set_vsyncCount(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRPlugin_set_vsyncCount_mFDB0AD3E722E6889A3081C4DE015A0CF2ADC9A88 (int32_t ___0_value, const RuntimeMethod* method) ;
// System.Single OVRPlugin::get_batteryLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float OVRPlugin_get_batteryLevel_mAD1E25BC5576FC800E9F9E1FCF54C00921D123FF (const RuntimeMethod* method) ;
// System.Single OVRPlugin::get_batteryTemperature()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float OVRPlugin_get_batteryTemperature_m4316A3EEA5599A957148DF73FEC745244D251F6F (const RuntimeMethod* method) ;
// OVRPlugin/BatteryStatus OVRPlugin::get_batteryStatus()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRPlugin_get_batteryStatus_m59B52C68609A52F12E97B5412509C78C47A64426 (const RuntimeMethod* method) ;
// System.Single OVRPlugin::get_systemVolume()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float OVRPlugin_get_systemVolume_mE1D94CF0D3609D2F1A4FAE3D31CF170FF464F864 (const RuntimeMethod* method) ;
// OVRPlugin/ProcessorPerformanceLevel OVRPlugin::get_suggestedCpuPerfLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRPlugin_get_suggestedCpuPerfLevel_m9499E63FC5C08EF4D1F38C494088FD3ADFAAFF9D (const RuntimeMethod* method) ;
// System.Void OVRPlugin::set_suggestedCpuPerfLevel(OVRPlugin/ProcessorPerformanceLevel)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRPlugin_set_suggestedCpuPerfLevel_m0CA3B9722D6D34AD41A978A5A0B5D1C966D237A8 (int32_t ___0_value, const RuntimeMethod* method) ;
// OVRPlugin/ProcessorPerformanceLevel OVRPlugin::get_suggestedGpuPerfLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRPlugin_get_suggestedGpuPerfLevel_mE702E2D9C76882032DED8E00516B587180288EE0 (const RuntimeMethod* method) ;
// System.Void OVRPlugin::set_suggestedGpuPerfLevel(OVRPlugin/ProcessorPerformanceLevel)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRPlugin_set_suggestedGpuPerfLevel_mF464D8BB311C080501ED0608C34295F8A4796BD3 (int32_t ___0_value, const RuntimeMethod* method) ;
// System.Int32 OVRPlugin::get_cpuLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRPlugin_get_cpuLevel_m3FCC053F18121BBAC4C60F22BE26FC4493528DDA (const RuntimeMethod* method) ;
// System.Void OVRPlugin::set_cpuLevel(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRPlugin_set_cpuLevel_m6F7A4BAF88E9ABD0749E01645A8360A153195314 (int32_t ___0_value, const RuntimeMethod* method) ;
// System.Int32 OVRPlugin::get_gpuLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRPlugin_get_gpuLevel_m84965A56CFF04CF1487A64D2D3943A4A3C7D0DFE (const RuntimeMethod* method) ;
// System.Void OVRPlugin::set_gpuLevel(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRPlugin_set_gpuLevel_m90EF3A1F0124C0ABE559550DCEDD13DBEE34599D (int32_t ___0_value, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::get_powerSaving()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_get_powerSaving_mDBF4706807A5A4108C653C75BD9F46AE029D349B (const RuntimeMethod* method) ;
// OVRPlugin/EyeTextureFormat OVRPlugin::GetDesiredEyeTextureFormat()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRPlugin_GetDesiredEyeTextureFormat_m7C94FE67F60CB7B0A4AAAF2D8E3B0A0F1CCC4FEF (const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::SetDesiredEyeTextureFormat(OVRPlugin/EyeTextureFormat)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_SetDesiredEyeTextureFormat_m397C4AB18923A2C1B6A3425B42A7064EB6EAB2D9 (int32_t ___0_value, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::get_eyeTrackedFoveatedRenderingSupported()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_get_eyeTrackedFoveatedRenderingSupported_mA1383C85B7A1E0C0995777E55769811E78646C27 (const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::get_eyeTrackedFoveatedRenderingEnabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_get_eyeTrackedFoveatedRenderingEnabled_m2529D472675C5BB4923708C39FC6F0602B63F059 (const RuntimeMethod* method) ;
// System.Boolean OVRPermissionsRequester::IsPermissionGranted(OVRPermissionsRequester/Permission)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPermissionsRequester_IsPermissionGranted_m0F333D018C92051B8846EE686B5418BA728CF3D0 (int32_t ___0_permission, const RuntimeMethod* method) ;
// System.Void OVRPlugin::set_eyeTrackedFoveatedRenderingEnabled(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRPlugin_set_eyeTrackedFoveatedRenderingEnabled_m81E06C57428DBB6F3EC3348FAA2077DB9F2CC1DA (bool ___0_value, const RuntimeMethod* method) ;
// OVRPlugin/FoveatedRenderingLevel OVRPlugin::get_foveatedRenderingLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRPlugin_get_foveatedRenderingLevel_m8B8134F1AE0303260244A9470036283CCEEBC2DB (const RuntimeMethod* method) ;
// System.Void OVRPlugin::set_foveatedRenderingLevel(OVRPlugin/FoveatedRenderingLevel)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRPlugin_set_foveatedRenderingLevel_m8330487C9D755477E59CE553A086D94A071C0C54 (int32_t ___0_value, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::get_fixedFoveatedRenderingSupported()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_get_fixedFoveatedRenderingSupported_mAA2ED8AD8AEF2EDAE1234213993594EEBDBD491D (const RuntimeMethod* method) ;
// OVRPlugin/FixedFoveatedRenderingLevel OVRPlugin::get_fixedFoveatedRenderingLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRPlugin_get_fixedFoveatedRenderingLevel_mB47E89ECEE55C187A2A6BAD2ED96C6C562E7F3F8 (const RuntimeMethod* method) ;
// System.Void OVRPlugin::set_fixedFoveatedRenderingLevel(OVRPlugin/FixedFoveatedRenderingLevel)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRPlugin_set_fixedFoveatedRenderingLevel_m7621A311282BD1D71AB6EB9BE3F2C65D96DFFC5F (int32_t ___0_value, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::get_useDynamicFoveatedRendering()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_get_useDynamicFoveatedRendering_m75BB7EE36C28644F81D010752E987C5B4E41F095 (const RuntimeMethod* method) ;
// System.Void OVRPlugin::set_useDynamicFoveatedRendering(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRPlugin_set_useDynamicFoveatedRendering_m949D0217B4460D9F15BE4E5F9F8201AA952DC4C9 (bool ___0_value, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::get_useDynamicFixedFoveatedRendering()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_get_useDynamicFixedFoveatedRendering_m5BC239BD83D054F496B9FD8ED4AF3BA234BCBE06 (const RuntimeMethod* method) ;
// System.Void OVRPlugin::set_useDynamicFixedFoveatedRendering(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRPlugin_set_useDynamicFixedFoveatedRendering_m0AA5406E21978CDD460C239831981EF6A21DCC09 (bool ___0_value, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::get_tiledMultiResSupported()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_get_tiledMultiResSupported_m96D9AD06A6D11CA28400DA480D72487566598F21 (const RuntimeMethod* method) ;
// OVRPlugin/TiledMultiResLevel OVRPlugin::get_tiledMultiResLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRPlugin_get_tiledMultiResLevel_m2B30DD960F78E38A3AE9E4D71EE0B8ABEBC49E3D (const RuntimeMethod* method) ;
// System.Void OVRPlugin::set_tiledMultiResLevel(OVRPlugin/TiledMultiResLevel)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRPlugin_set_tiledMultiResLevel_mF23599F1A1CE3E784EDB4D2224805E991FBEA65E (int32_t ___0_value, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::get_gpuUtilSupported()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_get_gpuUtilSupported_m1D267F4837B77A2294C4697796433D213E316863 (const RuntimeMethod* method) ;
// System.Void UnityEngine.Debug::LogWarning(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_LogWarning_m33EF1B897E0C7C6FF538989610BFAFFEF4628CA9 (RuntimeObject* ___0_message, const RuntimeMethod* method) ;
// System.Single OVRPlugin::get_gpuUtilLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float OVRPlugin_get_gpuUtilLevel_m12DED52CD5A80E85355D1847ADDFFDD9A2F333F9 (const RuntimeMethod* method) ;
// OVRPlugin/SystemHeadset OVRPlugin::GetSystemHeadsetType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRPlugin_GetSystemHeadsetType_m78DFDBECE24A926CF89B9A8D93931C78A3824B01 (const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::SetColorScaleAndOffset(UnityEngine.Vector4,UnityEngine.Vector4,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_SetColorScaleAndOffset_m23BE07937AE6D262C0264959EDA7050DC48B22F7 (Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3 ___0_colorScale, Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3 ___1_colorOffset, bool ___2_applyToAllLayers, const RuntimeMethod* method) ;
// System.Void OVRInput::SetOpenVRLocalPose(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRInput_SetOpenVRLocalPose_m27E4294B7780884FF0BC1A8605403289A12C8894 (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___0_leftPos, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___1_rightPos, Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 ___2_leftRot, Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 ___3_rightRot, const RuntimeMethod* method) ;
// OVRPose OVRPose::get_identity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR OVRPose_t8054769FD4517C10D2ECD2C14C823723D675EEFB OVRPose_get_identity_m80A35AA376851112A6104A67226582D63EB0739B (const RuntimeMethod* method) ;
// UnityEngine.Quaternion UnityEngine.Quaternion::Euler(System.Single,System.Single,System.Single)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 Quaternion_Euler_m9262AB29E3E9CE94EF71051F38A28E82AEC73F90_inline (float ___0_x, float ___1_y, float ___2_z, const RuntimeMethod* method) ;
// UnityEngine.Camera OVRManager::FindMainCamera()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* OVRManager_FindMainCamera_mCCD7BE229B2DA34FFCB009A527BBE8F40F57EB49 (const RuntimeMethod* method) ;
// UnityEngine.DepthTextureMode UnityEngine.Camera::get_depthTextureMode()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Camera_get_depthTextureMode_m998CDEBC055FE2A910F3B650585ADE3E2BB141EE (Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* __this, const RuntimeMethod* method) ;
// System.Void UnityEngine.Camera::set_depthTextureMode(UnityEngine.DepthTextureMode)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Camera_set_depthTextureMode_mE722389E4DF8B3DF7F6100DB142E4DBAF698F6BF (Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* __this, int32_t ___0_value, const RuntimeMethod* method) ;
// UnityEngine.Transform UnityEngine.Component::get_transform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371 (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3* __this, const RuntimeMethod* method) ;
// UnityEngine.Transform UnityEngine.Transform::get_parent()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* Transform_get_parent_m65354E28A4C94EC00EBCF03532F7B0718380791E (Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* __this, const RuntimeMethod* method) ;
// System.Void UnityEngine.Transform::set_position(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156 (Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* __this, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___0_value, const RuntimeMethod* method) ;
// System.Void UnityEngine.Transform::set_rotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_rotation_m61340DE74726CF0F9946743A727C4D444397331D (Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* __this, Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 ___0_value, const RuntimeMethod* method) ;
// System.Void OculusXRPlugin::SetSpaceWarp(OVRPlugin/Bool)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OculusXRPlugin_SetSpaceWarp_m591EA7747C0C944877CE8350AEA763560E46E7F1 (int32_t ___0_on, const RuntimeMethod* method) ;
// OVRPlugin/TrackingOrigin OVRPlugin::GetTrackingOriginType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRPlugin_GetTrackingOriginType_m2EDAA913509E615DD626803932B8CE16955F961A (const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::SetTrackingOriginType(OVRPlugin/TrackingOrigin)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_SetTrackingOriginType_mC03CEE60AF8A00DE01E5071C8CCBE8C366ED2105 (int32_t ___0_originType, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::get_userPresent()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_get_userPresent_mDC6C3FFE8897342A888E529C7BEAF368413C8151 (const RuntimeMethod* method) ;
// System.Version OVRPlugin::get_nativeSDKVersion()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* OVRPlugin_get_nativeSDKVersion_mBE25B31B01647B580765EA355C508A235EB07E63 (const RuntimeMethod* method) ;
// System.String[] System.Environment::GetCommandLineArgs()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* Environment_GetCommandLineArgs_mD29CFA1CD3C84F9BD91152E70302E908114A831D (const RuntimeMethod* method) ;
// System.String System.String::ToLower()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_ToLower_m6191ABA3DC514ED47C10BDA23FD0DDCEAE7ACFBD (String_t* __this, const RuntimeMethod* method) ;
// System.String UnityEngine.Application::get_unityVersion()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* Application_get_unityVersion_m27BB3207901305BD239E1C3A74035E15CF3E5D21 (const RuntimeMethod* method) ;
// System.Int32 System.String::get_Length()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int32_t String_get_Length_m42625D67623FA5CC7A44D47425CE86FB946542D2_inline (String_t* __this, const RuntimeMethod* method) ;
// System.Char System.String::get_Chars(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Il2CppChar String_get_Chars_mC49DF0CD2D3BE7BE97B3AD9C995BE3094F8E36D3 (String_t* __this, int32_t ___0_index, const RuntimeMethod* method) ;
// OVRManager OVRManager::get_instance()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* OVRManager_get_instance_m642500A467C7D7B5B1C2763F2BA90C52BBF5381C_inline (const RuntimeMethod* method) ;
// System.Boolean UnityEngine.Object::op_Inequality(UnityEngine.Object,UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Object_op_Inequality_mD0BE578448EAA61948F25C32F8DD55AB1F778602 (Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C* ___0_x, Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C* ___1_y, const RuntimeMethod* method) ;
// System.Void UnityEngine.Behaviour::set_enabled(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Behaviour_set_enabled_mF1DCFE60EB09E0529FE9476CA804A3AA2D72B16A (Behaviour_t01970CFBBA658497AE30F311C447DB0440BAB7FA* __this, bool ___0_value, const RuntimeMethod* method) ;
// System.Void UnityEngine.Object::DestroyImmediate(UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object_DestroyImmediate_m6336EBC83591A5DB64EC70C92132824C6E258705 (Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C* ___0_obj, const RuntimeMethod* method) ;
// System.Void OVRManager::set_instance(OVRManager)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void OVRManager_set_instance_m268BE0B7206FEB81BA8B8EB5221AB2BA10E91E0E_inline (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* ___0_value, const RuntimeMethod* method) ;
// OVRRuntimeSettings OVRRuntimeSettings::GetRuntimeSettings()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR OVRRuntimeSettings_tC85E84DCFBF4DB2D4C3311CA39C96DEE89220EE1* OVRRuntimeSettings_GetRuntimeSettings_m357C35DCF6941F52EDB4FD95F9FEBC78DDFE62AB (const RuntimeMethod* method) ;
// System.Void OVRManager::set_runtimeSettings(OVRRuntimeSettings)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void OVRManager_set_runtimeSettings_m66D09D518E906F1A50738B3BFA760EE8B117C469_inline (OVRRuntimeSettings_tC85E84DCFBF4DB2D4C3311CA39C96DEE89220EE1* ___0_value, const RuntimeMethod* method) ;
// System.String System.String::Concat(System.String[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_m647EBF831F54B6DF7D5AFA5FD012CF4EE7571B6A (StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* ___0_values, const RuntimeMethod* method) ;
// OVRManager/SystemHeadsetType OVRManager::get_systemHeadsetType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRManager_get_systemHeadsetType_mCF5CFA237F93EC8DE90C8F9241846C505C7388B1 (const RuntimeMethod* method) ;
// OVRManager/XrApi OVRManager::get_xrApi()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRManager_get_xrApi_m727D2444A42B1D7E2D1EF3C3ECC493FDDA647712 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) ;
// System.Void UnityEngine.Debug::LogFormat(System.String,System.Object[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_LogFormat_mD555556327B42AA3482D077EFAEB16B0AFDF72C7 (String_t* ___0_format, ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* ___1_args, const RuntimeMethod* method) ;
// System.UInt64 OVRManager::get_xrInstance()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t OVRManager_get_xrInstance_m337F7A5B861DC2EA9D7FCB585ED53B1BE4D21547 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) ;
// System.UInt64 OVRManager::get_xrSession()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t OVRManager_get_xrSession_mF16F24B7F737FC50D705676638DD85179ABB9679 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) ;
// System.Boolean OVRManager::IsUnityAlphaOrBetaVersion()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_IsUnityAlphaOrBetaVersion_m3281FEF5765FFD207B8BDBB627CC6EDDF18688E0 (const RuntimeMethod* method) ;
// UnityEngine.RuntimePlatform UnityEngine.Application::get_platform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Application_get_platform_m59EF7D6155D18891B24767F83F388160B1FF2138 (const RuntimeMethod* method) ;
// System.Void OVRManager::set_isSupportedPlatform(System.Boolean)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void OVRManager_set_isSupportedPlatform_mE8A33FC72544A424CC63ACAF84F71CEC1EC9CE6F_inline (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, bool ___0_value, const RuntimeMethod* method) ;
// System.Boolean OVRManager::get_isSupportedPlatform()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR bool OVRManager_get_isSupportedPlatform_m6AE0B37666BB1660CCFC7F9EAD30E550C5D7FBFA_inline (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) ;
// System.Void OVRManager::set_chromatic(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_chromatic_mC1109A775529EF48476D51176DEC780678AAE0EF (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, bool ___0_value, const RuntimeMethod* method) ;
// System.Void OVRManager::StaticInitializeMixedRealityCapture(OVRMixedRealityCaptureConfiguration)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_StaticInitializeMixedRealityCapture_mECD5892929515DFF005276CD46C2B270F0F7A533 (RuntimeObject* ___0_configuration, const RuntimeMethod* method) ;
// System.Void OVRManager::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_Initialize_m339CEB2C05C31DCDA1C4390EE2635DC90D538821 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) ;
// System.Void OVRManager::InitPermissionRequest()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_InitPermissionRequest_m119AB6ECF8AC0DF7B5165493E5F285A734ABCEB5 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) ;
// OVRDisplay OVRManager::get_display()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27* OVRManager_get_display_m1D17D6867547AC786E00A4CF60B863275AC1AF3D_inline (const RuntimeMethod* method) ;
// System.Single OVRDisplay::get_displayFrequency()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float OVRDisplay_get_displayFrequency_mEBAAEE931893607AEA59FEF00916CCEC79C8DF6B (OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27* __this, const RuntimeMethod* method) ;
// System.Single[] OVRDisplay::get_displayFrequenciesAvailable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* OVRDisplay_get_displayFrequenciesAvailable_mB0AD342C0A7F312A4F7215CA5DC4D8244CF9F9AE (OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27* __this, const RuntimeMethod* method) ;
// System.Void System.Func`2<System.Single,System.String>::.ctor(System.Object,System.IntPtr)
inline void Func_2__ctor_mE82649E276996E9D5EACA7C8F5B15E20B28BE28D (Func_2_t5ACB813DEA6873041E3CE5A28AE88A73E01E6EF8* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method)
{
	((  void (*) (Func_2_t5ACB813DEA6873041E3CE5A28AE88A73E01E6EF8*, RuntimeObject*, intptr_t, const RuntimeMethod*))Func_2__ctor_m689A131E18EAD3C15BDBF106D74D93DE1EFCD02C_gshared)(__this, ___0_object, ___1_method, method);
}
// System.Collections.Generic.IEnumerable`1<TResult> System.Linq.Enumerable::Select<System.Single,System.String>(System.Collections.Generic.IEnumerable`1<TSource>,System.Func`2<TSource,TResult>)
inline RuntimeObject* Enumerable_Select_TisSingle_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_TisString_t_m3D07AA7226DDD2E4D23FF4442D7A928D78DA1B17 (RuntimeObject* ___0_source, Func_2_t5ACB813DEA6873041E3CE5A28AE88A73E01E6EF8* ___1_selector, const RuntimeMethod* method)
{
	return ((  RuntimeObject* (*) (RuntimeObject*, Func_2_t5ACB813DEA6873041E3CE5A28AE88A73E01E6EF8*, const RuntimeMethod*))Enumerable_Select_TisSingle_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_TisRuntimeObject_mB37A07343D3D5B06D3252BF15B76CA539BCC5A4F_gshared)(___0_source, ___1_selector, method);
}
// TSource[] System.Linq.Enumerable::ToArray<System.String>(System.Collections.Generic.IEnumerable`1<TSource>)
inline StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* Enumerable_ToArray_TisString_t_m3B23EE2DD15B2996E7D2ECA6E74696DA892AA194 (RuntimeObject* ___0_source, const RuntimeMethod* method)
{
	return ((  StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* (*) (RuntimeObject*, const RuntimeMethod*))Enumerable_ToArray_TisRuntimeObject_mA54265C2C8A0864929ECD300B75E4952D553D17D_gshared)(___0_source, method);
}
// System.String System.String::Join(System.String,System.String[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Join_m557B6B554B87C1742FA0B128500073B421ED0BFD (String_t* ___0_separator, StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* ___1_value, const RuntimeMethod* method) ;
// System.Void OVRDisplay::RecenterPose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRDisplay_RecenterPose_m5D4F83D11B52934020DD34569B60A8E0D2E0FD82 (OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27* __this, const RuntimeMethod* method) ;
// System.Boolean UnityEngine.Debug::get_isDebugBuild()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Debug_get_isDebugBuild_m9277C4A9591F7E1D8B76340B4CAE5EA33D63AF01 (const RuntimeMethod* method) ;
// T UnityEngine.Component::GetComponent<OVRSystemPerfMetrics/OVRSystemPerfMetricsTcpServer>()
inline OVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86* Component_GetComponent_TisOVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86_mF0B4099235709D379979102F6053FD6042D8A77C (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3* __this, const RuntimeMethod* method)
{
	return ((  OVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86* (*) (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3*, const RuntimeMethod*))Component_GetComponent_TisRuntimeObject_m7181F81CAEC2CF53F5D2BC79B7425C16E1F80D33_gshared)(__this, method);
}
// UnityEngine.GameObject UnityEngine.Component::get_gameObject()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* Component_get_gameObject_m57AEFBB14DB39EC476F740BA000E170355DE691B (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3* __this, const RuntimeMethod* method) ;
// T UnityEngine.GameObject::AddComponent<OVRSystemPerfMetrics/OVRSystemPerfMetricsTcpServer>()
inline OVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86* GameObject_AddComponent_TisOVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86_m9801277350485D9C445EC7E0035EFCF0579BC30E (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* __this, const RuntimeMethod* method)
{
	return ((  OVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86* (*) (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F*, const RuntimeMethod*))GameObject_AddComponent_TisRuntimeObject_m69B93700FACCF372F5753371C6E8FB780800B824_gshared)(__this, method);
}
// System.Boolean UnityEngine.Behaviour::get_enabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Behaviour_get_enabled_mAAC9F15E9EBF552217A5AE2681589CC0BFA300C1 (Behaviour_t01970CFBBA658497AE30F311C447DB0440BAB7FA* __this, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::SetDeveloperMode(OVRPlugin/Bool)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_SetDeveloperMode_m666BA62AB965FE5E7E2857C29F619EE186CC8155 (int32_t ___0_active, const RuntimeMethod* method) ;
// OVRRuntimeSettings OVRManager::get_runtimeSettings()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR OVRRuntimeSettings_tC85E84DCFBF4DB2D4C3311CA39C96DEE89220EE1* OVRManager_get_runtimeSettings_m6DFAF39BFB4B75B251235D43B02696D70BFA897A_inline (const RuntimeMethod* method) ;
// System.Void OVRManager::set_colorGamut(OVRManager/ColorSpace)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_colorGamut_m12885C55A4AF562CF4DA969CE3DFE90B2905509F (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, int32_t ___0_value, const RuntimeMethod* method) ;
// System.Boolean OVRManager::InitializeInsightPassthrough()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_InitializeInsightPassthrough_m016E6C16576A1E4F6B7871E7FDE7D2671119F67E (const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::get_localDimmingSupported()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_get_localDimmingSupported_m33C94209109E4B84E3F531A9005747FF38D6D75C (const RuntimeMethod* method) ;
// System.Void OVRPlugin::set_localDimming(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRPlugin_set_localDimming_mB802F316C5988ACA499BA45E7B9D6590570025AB (bool ___0_value, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.HashSet`1<OVRPermissionsRequester/Permission>::.ctor()
inline void HashSet_1__ctor_mBF244C9F5A32AFAC08C7E26F547F642E66B3A293 (HashSet_1_t8CCE4B1A7C21C55C1F50A4850C846D17B4943076* __this, const RuntimeMethod* method)
{
	((  void (*) (HashSet_1_t8CCE4B1A7C21C55C1F50A4850C846D17B4943076*, const RuntimeMethod*))HashSet_1__ctor_mD2BBE225041537B7240E453D3E14991EB2169E2C_gshared)(__this, method);
}
// System.Boolean System.Collections.Generic.HashSet`1<OVRPermissionsRequester/Permission>::Add(T)
inline bool HashSet_1_Add_m4DBD371950A207F1A5A02780C893698D95AE38CA (HashSet_1_t8CCE4B1A7C21C55C1F50A4850C846D17B4943076* __this, int32_t ___0_item, const RuntimeMethod* method)
{
	return ((  bool (*) (HashSet_1_t8CCE4B1A7C21C55C1F50A4850C846D17B4943076*, int32_t, const RuntimeMethod*))HashSet_1_Add_m4F8BBB0C65C72E41F10A7F83E2963B71A631153C_gshared)(__this, ___0_item, method);
}
// System.Void OVRPermissionsRequester::Request(System.Collections.Generic.IEnumerable`1<OVRPermissionsRequester/Permission>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRPermissionsRequester_Request_mE24346F59325F8846898FF68A44ABE4295695906 (RuntimeObject* ___0_permissions, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::get_initialized()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_get_initialized_m7D7AAEEED41ED4B5798882B6038CF169E2BF0443 (const RuntimeMethod* method) ;
// System.Void OVRManager::InitOVRManager()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_InitOVRManager_m70F462CB3521560EDE92D4C54EF0FAD199386053 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) ;
// UnityEngine.XR.XRDisplaySubsystem OVRManager::GetCurrentDisplaySubsystem()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR XRDisplaySubsystem_t4B00B0BF1894A039ACFA8DDC2C2EB9301118C1F1* OVRManager_GetCurrentDisplaySubsystem_m9DF732778B060759D2E11E04E49A39A43451CAA8 (const RuntimeMethod* method) ;
// UnityEngine.XR.XRDisplaySubsystemDescriptor OVRManager::GetCurrentDisplaySubsystemDescriptor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR XRDisplaySubsystemDescriptor_t72DD88EE9094488AE723A495F48884BA4EA8311A* OVRManager_GetCurrentDisplaySubsystemDescriptor_m774D6D4F85D85E72BCF228C576EAAF55E3CD978E (const RuntimeMethod* method) ;
// System.Boolean UnityEngine.IntegratedSubsystem::get_running()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool IntegratedSubsystem_get_running_m18AA0D7AD1CB593DC9EE5F3DC79643717509D6E8 (IntegratedSubsystem_t990160A89854D87C0836DC589B720231C02D4CE3* __this, const RuntimeMethod* method) ;
// System.String UnityEngine.IntegratedSubsystemDescriptor::get_id()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* IntegratedSubsystemDescriptor_get_id_m89DBA940C79ED7EFE1137E3EC4A5A53BF7052F15 (IntegratedSubsystemDescriptor_t9232963B842E01748A8E032928DC8E35DF00C10D* __this, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<UnityEngine.XR.XRDisplaySubsystem>::.ctor()
inline void List_1__ctor_mBE7647ECE0B8ABB952EDC379472F9E541D41D6DF (List_1_tA7666C6690CE2AEE97571615AD3AFCE2BB020597* __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_tA7666C6690CE2AEE97571615AD3AFCE2BB020597*, const RuntimeMethod*))List_1__ctor_m7F078BB342729BDF11327FD89D7872265328F690_gshared)(__this, method);
}
// System.Void UnityEngine.SubsystemManager::GetInstances<UnityEngine.XR.XRDisplaySubsystem>(System.Collections.Generic.List`1<T>)
inline void SubsystemManager_GetInstances_TisXRDisplaySubsystem_t4B00B0BF1894A039ACFA8DDC2C2EB9301118C1F1_mCDFAF63EF2A2778CA3677E75360BC7961FCB3370 (List_1_tA7666C6690CE2AEE97571615AD3AFCE2BB020597* ___0_subsystems, const RuntimeMethod* method)
{
	((  void (*) (List_1_tA7666C6690CE2AEE97571615AD3AFCE2BB020597*, const RuntimeMethod*))SubsystemManager_GetInstances_TisRuntimeObject_mCBA01F889BE624767358AB5494CD2D7F1B2FB064_gshared)(___0_subsystems, method);
}
// System.Int32 System.Collections.Generic.List`1<UnityEngine.XR.XRDisplaySubsystem>::get_Count()
inline int32_t List_1_get_Count_mE580FBE05EB71FB41AAE62A9AD4C5A7594C8D27C_inline (List_1_tA7666C6690CE2AEE97571615AD3AFCE2BB020597* __this, const RuntimeMethod* method)
{
	return ((  int32_t (*) (List_1_tA7666C6690CE2AEE97571615AD3AFCE2BB020597*, const RuntimeMethod*))List_1_get_Count_m4407E4C389F22B8CEC282C15D56516658746C383_gshared_inline)(__this, method);
}
// T System.Collections.Generic.List`1<UnityEngine.XR.XRDisplaySubsystem>::get_Item(System.Int32)
inline XRDisplaySubsystem_t4B00B0BF1894A039ACFA8DDC2C2EB9301118C1F1* List_1_get_Item_m1C04F2A2E6107833BE00F3C7EAE72DAF048AC643 (List_1_tA7666C6690CE2AEE97571615AD3AFCE2BB020597* __this, int32_t ___0_index, const RuntimeMethod* method)
{
	return ((  XRDisplaySubsystem_t4B00B0BF1894A039ACFA8DDC2C2EB9301118C1F1* (*) (List_1_tA7666C6690CE2AEE97571615AD3AFCE2BB020597*, int32_t, const RuntimeMethod*))List_1_get_Item_m33561245D64798C2AB07584C0EC4F240E4839A38_gshared)(__this, ___0_index, method);
}
// System.Void System.Collections.Generic.List`1<UnityEngine.XR.XRDisplaySubsystemDescriptor>::.ctor()
inline void List_1__ctor_m3E15C72C5BBB246B014CD4F0B141BD78A648B773 (List_1_tC3F021D09EFA4F3516555517B5E0D39308C9C1B4* __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_tC3F021D09EFA4F3516555517B5E0D39308C9C1B4*, const RuntimeMethod*))List_1__ctor_m7F078BB342729BDF11327FD89D7872265328F690_gshared)(__this, method);
}
// System.Void UnityEngine.SubsystemManager::GetSubsystemDescriptors<UnityEngine.XR.XRDisplaySubsystemDescriptor>(System.Collections.Generic.List`1<T>)
inline void SubsystemManager_GetSubsystemDescriptors_TisXRDisplaySubsystemDescriptor_t72DD88EE9094488AE723A495F48884BA4EA8311A_mE88F154272DC98DD50249B29599ABD64EA6DDC55 (List_1_tC3F021D09EFA4F3516555517B5E0D39308C9C1B4* ___0_descriptors, const RuntimeMethod* method)
{
	((  void (*) (List_1_tC3F021D09EFA4F3516555517B5E0D39308C9C1B4*, const RuntimeMethod*))SubsystemManager_GetSubsystemDescriptors_TisRuntimeObject_mE17654C43AF736B8A23F50FEBBD6657CB983907F_gshared)(___0_descriptors, method);
}
// System.Int32 System.Collections.Generic.List`1<UnityEngine.XR.XRDisplaySubsystemDescriptor>::get_Count()
inline int32_t List_1_get_Count_mDFAC96AD60DE7FED9378059AEE6864673962A7B8_inline (List_1_tC3F021D09EFA4F3516555517B5E0D39308C9C1B4* __this, const RuntimeMethod* method)
{
	return ((  int32_t (*) (List_1_tC3F021D09EFA4F3516555517B5E0D39308C9C1B4*, const RuntimeMethod*))List_1_get_Count_m4407E4C389F22B8CEC282C15D56516658746C383_gshared_inline)(__this, method);
}
// T System.Collections.Generic.List`1<UnityEngine.XR.XRDisplaySubsystemDescriptor>::get_Item(System.Int32)
inline XRDisplaySubsystemDescriptor_t72DD88EE9094488AE723A495F48884BA4EA8311A* List_1_get_Item_mBE983C6BF89F37B1D3390A1F3CF1B689D080701E (List_1_tC3F021D09EFA4F3516555517B5E0D39308C9C1B4* __this, int32_t ___0_index, const RuntimeMethod* method)
{
	return ((  XRDisplaySubsystemDescriptor_t72DD88EE9094488AE723A495F48884BA4EA8311A* (*) (List_1_tC3F021D09EFA4F3516555517B5E0D39308C9C1B4*, int32_t, const RuntimeMethod*))List_1_get_Item_m33561245D64798C2AB07584C0EC4F240E4839A38_gshared)(__this, ___0_index, method);
}
// System.Void System.Collections.Generic.List`1<UnityEngine.XR.XRInputSubsystem>::.ctor()
inline void List_1__ctor_mC249FC827BC3BE999A938F8B5BD884F8AA0CB7FA (List_1_t90832B88D7207769654164CC28440CF594CC397D* __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_t90832B88D7207769654164CC28440CF594CC397D*, const RuntimeMethod*))List_1__ctor_m7F078BB342729BDF11327FD89D7872265328F690_gshared)(__this, method);
}
// System.Void UnityEngine.SubsystemManager::GetInstances<UnityEngine.XR.XRInputSubsystem>(System.Collections.Generic.List`1<T>)
inline void SubsystemManager_GetInstances_TisXRInputSubsystem_tFECE6683FCAEBF05BAD05E5D612690095D8BAD34_mE4E3C5739928E93E572D92105A4D3BAC7FC877AF (List_1_t90832B88D7207769654164CC28440CF594CC397D* ___0_subsystems, const RuntimeMethod* method)
{
	((  void (*) (List_1_t90832B88D7207769654164CC28440CF594CC397D*, const RuntimeMethod*))SubsystemManager_GetInstances_TisRuntimeObject_mCBA01F889BE624767358AB5494CD2D7F1B2FB064_gshared)(___0_subsystems, method);
}
// System.Int32 System.Collections.Generic.List`1<UnityEngine.XR.XRInputSubsystem>::get_Count()
inline int32_t List_1_get_Count_mF8DDB0BDC273D655115D5E62307ADF657EC28DE5_inline (List_1_t90832B88D7207769654164CC28440CF594CC397D* __this, const RuntimeMethod* method)
{
	return ((  int32_t (*) (List_1_t90832B88D7207769654164CC28440CF594CC397D*, const RuntimeMethod*))List_1_get_Count_m4407E4C389F22B8CEC282C15D56516658746C383_gshared_inline)(__this, method);
}
// T System.Collections.Generic.List`1<UnityEngine.XR.XRInputSubsystem>::get_Item(System.Int32)
inline XRInputSubsystem_tFECE6683FCAEBF05BAD05E5D612690095D8BAD34* List_1_get_Item_m69C3B0FCDB85116A8F7AB368DC33EBCC27556F0E (List_1_t90832B88D7207769654164CC28440CF594CC397D* __this, int32_t ___0_index, const RuntimeMethod* method)
{
	return ((  XRInputSubsystem_tFECE6683FCAEBF05BAD05E5D612690095D8BAD34* (*) (List_1_t90832B88D7207769654164CC28440CF594CC397D*, int32_t, const RuntimeMethod*))List_1_get_Item_m33561245D64798C2AB07584C0EC4F240E4839A38_gshared)(__this, ___0_index, method);
}
// System.Void OVRDisplay::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRDisplay__ctor_mA1BC0C77506E1D916592E8566C868F7D0E937A67 (OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27* __this, const RuntimeMethod* method) ;
// System.Void OVRManager::set_display(OVRDisplay)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void OVRManager_set_display_mAD68A004132C01084A443254AC164FD31BCDFE6B_inline (OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27* ___0_value, const RuntimeMethod* method) ;
// OVRTracker OVRManager::get_tracker()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR OVRTracker_t5E60EE08D82308F2F8206AD43AE8CC4925938154* OVRManager_get_tracker_mA945BED7BDB670E0F82A7EAD0A401651C8605259_inline (const RuntimeMethod* method) ;
// System.Void OVRTracker::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRTracker__ctor_m283EF4D30717FA44ECFD8C6D31C15E31DBA3D2CD (OVRTracker_t5E60EE08D82308F2F8206AD43AE8CC4925938154* __this, const RuntimeMethod* method) ;
// System.Void OVRManager::set_tracker(OVRTracker)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void OVRManager_set_tracker_m50D4C4C76BA97D4775D75620D4CC033398E72433_inline (OVRTracker_t5E60EE08D82308F2F8206AD43AE8CC4925938154* ___0_value, const RuntimeMethod* method) ;
// OVRBoundary OVRManager::get_boundary()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR OVRBoundary_t56DFE91F758A740A34575D748FEC61959A106DAE* OVRManager_get_boundary_m7495B93002198ABB5346F3F696712133AF7EA943_inline (const RuntimeMethod* method) ;
// System.Void OVRBoundary::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRBoundary__ctor_m31595FDCF7D3AC48703766DB883781D480F6092D (OVRBoundary_t56DFE91F758A740A34575D748FEC61959A106DAE* __this, const RuntimeMethod* method) ;
// System.Void OVRManager::set_boundary(OVRBoundary)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void OVRManager_set_boundary_mCEFC4DA00ED1094A5758AC15FF744BDC4B6091E4_inline (OVRBoundary_t56DFE91F758A740A34575D748FEC61959A106DAE* ___0_value, const RuntimeMethod* method) ;
// System.Void OVRManager::SetCurrentXRDevice()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_SetCurrentXRDevice_m28B26EC00E7F673A3AF5DEE7D732EDFA987E427F (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::get_shouldQuit()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_get_shouldQuit_mBA5C91B74C034F11AB43669726D8DC8D775668E5 (const RuntimeMethod* method) ;
// System.Void OVRManager::StaticShutdownMixedRealityCapture(OVRMixedRealityCaptureConfiguration)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_StaticShutdownMixedRealityCapture_mA2C3B9797235B17834EA372AB99D1024EB81F0F7 (RuntimeObject* ___0_configuration, const RuntimeMethod* method) ;
// System.Void OVRManager::ShutdownInsightPassthrough()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_ShutdownInsightPassthrough_mBBB77D5EB2CE95920737C34F1A0A5E6C14A6E576 (const RuntimeMethod* method) ;
// System.Void UnityEngine.Application::Quit()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Application_Quit_mE304382DB9A6455C2A474C8F364C7387F37E9281 (const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::get_shouldRecenter()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_get_shouldRecenter_m82A62121BEF853ED4A8BF5AFB87DCFB1F7B1F5AB (const RuntimeMethod* method) ;
// OVRManager/TrackingOrigin OVRManager::get_trackingOriginType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRManager_get_trackingOriginType_m352B753617F98DC58AD3F8E4324E23C7CF3A47E0 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) ;
// System.Void OVRManager::set_trackingOriginType(OVRManager/TrackingOrigin)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_trackingOriginType_mDDB79B878E8BF7FD66AD925A4EB0DAE77980F0F3 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, int32_t ___0_value, const RuntimeMethod* method) ;
// System.Void OVRTracker::set_isEnabled(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRTracker_set_isEnabled_m34B6A72018F2C6362EF2CD79DEF6CB52C746E79B (OVRTracker_t5E60EE08D82308F2F8206AD43AE8CC4925938154* __this, bool ___0_value, const RuntimeMethod* method) ;
// System.Void OVRPlugin::set_rotation(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRPlugin_set_rotation_m920187095C1DC0E97287249A8AA27D0CB5E80A7C (bool ___0_value, const RuntimeMethod* method) ;
// System.Void OVRPlugin::set_useIPDInPositionTracking(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRPlugin_set_useIPDInPositionTracking_m8C4F941E9A7273575ACC10F250E07665DFB5D6FF (bool ___0_value, const RuntimeMethod* method) ;
// System.Void OVRManager::set_isHmdPresent(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_isHmdPresent_m4879663A8AA591EE662CEF9F18686D6B89789B7E (bool ___0_value, const RuntimeMethod* method) ;
// System.Int32 UnityEngine.QualitySettings::get_antiAliasing()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t QualitySettings_get_antiAliasing_m71FB82E1C9D9923D313430621C898008D967F516 (const RuntimeMethod* method) ;
// System.Int32 OVRDisplay::get_recommendedMSAALevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRDisplay_get_recommendedMSAALevel_mF7498063717D350637404B308FD185AC7F753FEA (OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27* __this, const RuntimeMethod* method) ;
// System.String System.Int32::ToString()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* Int32_ToString_m030E01C24E294D6762FB0B6F37CB541581F55CA5 (int32_t* __this, const RuntimeMethod* method) ;
// System.Void UnityEngine.QualitySettings::set_antiAliasing(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void QualitySettings_set_antiAliasing_mBC4220AF5820137CFEBB38155D4CCD12822E2C7E (int32_t ___0_value, const RuntimeMethod* method) ;
// System.Boolean OVRManager::get_monoscopic()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_get_monoscopic_m0DE754F28B483E52474ECA234A1E3DD1D2BA7218 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) ;
// System.Void OVRManager::set_monoscopic(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_monoscopic_m1EAAB3C2A3CDB7D72B1700D635AAA6C2AE41893D (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, bool ___0_value, const RuntimeMethod* method) ;
// UnityEngine.Vector3 OVRManager::get_headPoseRelativeOffsetRotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 OVRManager_get_headPoseRelativeOffsetRotation_m24093D9748A541A44618C282B5858BD49C83F3C9 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) ;
// System.Void OVRManager::set_headPoseRelativeOffsetRotation(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_headPoseRelativeOffsetRotation_m607DFB21F99CE3107ECA6BD9E1C0A2B6AC4242FC (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___0_value, const RuntimeMethod* method) ;
// UnityEngine.Vector3 OVRManager::get_headPoseRelativeOffsetTranslation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 OVRManager_get_headPoseRelativeOffsetTranslation_m699900022730F69357C46494506381ED7647BC0C (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) ;
// System.Void OVRManager::set_headPoseRelativeOffsetTranslation(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_headPoseRelativeOffsetTranslation_m8B70891033EA3A0A28D9C1986E7B5D58016CCBA6 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___0_value, const RuntimeMethod* method) ;
// System.Void System.Action::Invoke()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Action_Invoke_m7126A54DACA72B845424072887B5F3A51FC3808E_inline (Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* __this, const RuntimeMethod* method) ;
// System.String System.String::Concat(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_m9E3155FB84015C823606188F53B47CB44C444991 (String_t* ___0_str0, String_t* ___1_str1, const RuntimeMethod* method) ;
// System.Void OVRManager::set_isUserPresent(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_isUserPresent_mAC629CEC482B5627A507D4FB93DE81ADA0366703 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, bool ___0_value, const RuntimeMethod* method) ;
// System.Boolean OVRManager::get_isUserPresent()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_get_isUserPresent_m1E7754523C4912B5EFADE6950DC9D7AA5072699D (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) ;
// System.Void OVRManager::set_hasVrFocus(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_hasVrFocus_m85C981DA02ECC6A7829D348FCBC2149040CD5321 (bool ___0_value, const RuntimeMethod* method) ;
// System.Boolean OVRManager::get_hasVrFocus()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_get_hasVrFocus_mF029C34D16F6733BC210CAA447C39629FB107D90 (const RuntimeMethod* method) ;
// System.Boolean System.String::op_Inequality(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool String_op_Inequality_m8C940F3CFC42866709D7CA931B3D77B4BE94BCB6 (String_t* ___0_a, String_t* ___1_b, const RuntimeMethod* method) ;
// System.Boolean OVRTracker::get_isPositionTracked()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRTracker_get_isPositionTracked_mE9A6204989140E34AB187178E6A268C9A1F492C0 (OVRTracker_t5E60EE08D82308F2F8206AD43AE8CC4925938154* __this, const RuntimeMethod* method) ;
// System.Void OVRDisplay::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRDisplay_Update_m2AAB1947DCA31B18778EC0B5DAD5F5D61C95EAC6 (OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27* __this, const RuntimeMethod* method) ;
// System.Void OVRInput::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRInput_Update_m46BEA0A1B8C6592A25FBA12F61D471770EC72076 (const RuntimeMethod* method) ;
// System.Void OVRManager::UpdateHMDEvents()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_UpdateHMDEvents_m2B05C0DAB70C5325A95E4B7AC01F9CE17CD647B4 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) ;
// System.Void OVRManager::StaticUpdateMixedRealityCapture(OVRMixedRealityCaptureConfiguration,UnityEngine.GameObject,OVRManager/TrackingOrigin)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_StaticUpdateMixedRealityCapture_m68D3A9F860CCE3910D11D4C80FE04E984D863810 (RuntimeObject* ___0_configuration, GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___1_gameObject, int32_t ___2_trackingOrigin, const RuntimeMethod* method) ;
// System.Void OVRManager::UpdateInsightPassthrough(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_UpdateInsightPassthrough_mB261855F40DB798505F3B863C29E7ED598546A4F (bool ___0_shouldBeEnabled, const RuntimeMethod* method) ;
// T OVRDeserialize::ByteArrayToStructure<OVRDeserialize/DisplayRefreshRateChangedData>(System.Byte[])
inline DisplayRefreshRateChangedData_t8412C04FE31982A8D071487EC6E25215EEEFD5AE OVRDeserialize_ByteArrayToStructure_TisDisplayRefreshRateChangedData_t8412C04FE31982A8D071487EC6E25215EEEFD5AE_mC8D55BBFFFFF997ED1224E48615618B2DA4E21AD (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_bytes, const RuntimeMethod* method)
{
	return ((  DisplayRefreshRateChangedData_t8412C04FE31982A8D071487EC6E25215EEEFD5AE (*) (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031*, const RuntimeMethod*))OVRDeserialize_ByteArrayToStructure_TisDisplayRefreshRateChangedData_t8412C04FE31982A8D071487EC6E25215EEEFD5AE_mC8D55BBFFFFF997ED1224E48615618B2DA4E21AD_gshared)(___0_bytes, method);
}
// System.Void System.Action`2<System.Single,System.Single>::Invoke(T1,T2)
inline void Action_2_Invoke_m50A62593A87E11ED31B47FE46E633AB3B9A7666C_inline (Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132* __this, float ___0_arg1, float ___1_arg2, const RuntimeMethod* method)
{
	((  void (*) (Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132*, float, float, const RuntimeMethod*))Action_2_Invoke_m50A62593A87E11ED31B47FE46E633AB3B9A7666C_gshared_inline)(__this, ___0_arg1, ___1_arg2, method);
}
// T OVRDeserialize::ByteArrayToStructure<OVRDeserialize/SpatialAnchorCreateCompleteData>(System.Byte[])
inline SpatialAnchorCreateCompleteData_t8A1C0554B63901CBACE1DC0CAB8103C1487A0A5C OVRDeserialize_ByteArrayToStructure_TisSpatialAnchorCreateCompleteData_t8A1C0554B63901CBACE1DC0CAB8103C1487A0A5C_m90A95D5AA1BE04AA0D0D165AFAC92821D5F38522 (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_bytes, const RuntimeMethod* method)
{
	return ((  SpatialAnchorCreateCompleteData_t8A1C0554B63901CBACE1DC0CAB8103C1487A0A5C (*) (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031*, const RuntimeMethod*))OVRDeserialize_ByteArrayToStructure_TisSpatialAnchorCreateCompleteData_t8A1C0554B63901CBACE1DC0CAB8103C1487A0A5C_m90A95D5AA1BE04AA0D0D165AFAC92821D5F38522_gshared)(___0_bytes, method);
}
// OVRSpace OVRSpace::op_Implicit(System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR OVRSpace_tDA5A6DB241624CD5712AC4A71E565BA171985B4D OVRSpace_op_Implicit_m5668C0D0B94EFD6CE95FC8C92A7E4418B8C0EFB6 (uint64_t ___0_handle, const RuntimeMethod* method) ;
// System.Void System.Action`4<System.UInt64,System.Boolean,OVRSpace,System.Guid>::Invoke(T1,T2,T3,T4)
inline void Action_4_Invoke_mF83AC81DE351FE293937C4B759B549D9A6B68A70_inline (Action_4_t540B344FD589096100128D9A1B39946413ED9AAE* __this, uint64_t ___0_arg1, bool ___1_arg2, OVRSpace_tDA5A6DB241624CD5712AC4A71E565BA171985B4D ___2_arg3, Guid_t ___3_arg4, const RuntimeMethod* method)
{
	((  void (*) (Action_4_t540B344FD589096100128D9A1B39946413ED9AAE*, uint64_t, bool, OVRSpace_tDA5A6DB241624CD5712AC4A71E565BA171985B4D, Guid_t, const RuntimeMethod*))Action_4_Invoke_mF83AC81DE351FE293937C4B759B549D9A6B68A70_gshared_inline)(__this, ___0_arg1, ___1_arg2, ___2_arg3, ___3_arg4, method);
}
// T OVRDeserialize::ByteArrayToStructure<OVRDeserialize/SpaceSetComponentStatusCompleteData>(System.Byte[])
inline SpaceSetComponentStatusCompleteData_tEB0171988C9E109E4F9C41A77D6738DB9D0CE58E OVRDeserialize_ByteArrayToStructure_TisSpaceSetComponentStatusCompleteData_tEB0171988C9E109E4F9C41A77D6738DB9D0CE58E_mC25C743F5A37DACFA5EDEFC9F70D6773281581AD (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_bytes, const RuntimeMethod* method)
{
	return ((  SpaceSetComponentStatusCompleteData_tEB0171988C9E109E4F9C41A77D6738DB9D0CE58E (*) (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031*, const RuntimeMethod*))OVRDeserialize_ByteArrayToStructure_TisSpaceSetComponentStatusCompleteData_tEB0171988C9E109E4F9C41A77D6738DB9D0CE58E_mC25C743F5A37DACFA5EDEFC9F70D6773281581AD_gshared)(___0_bytes, method);
}
// System.Void System.Action`6<System.UInt64,System.Boolean,OVRSpace,System.Guid,OVRPlugin/SpaceComponentType,System.Boolean>::Invoke(T1,T2,T3,T4,T5,T6)
inline void Action_6_Invoke_m25D56069D793A7289F7D60B11D15ED7D15F33780_inline (Action_6_tD8B17612932122F2ABF5C8545327C8F527403625* __this, uint64_t ___0_arg1, bool ___1_arg2, OVRSpace_tDA5A6DB241624CD5712AC4A71E565BA171985B4D ___2_arg3, Guid_t ___3_arg4, int32_t ___4_arg5, bool ___5_arg6, const RuntimeMethod* method)
{
	((  void (*) (Action_6_tD8B17612932122F2ABF5C8545327C8F527403625*, uint64_t, bool, OVRSpace_tDA5A6DB241624CD5712AC4A71E565BA171985B4D, Guid_t, int32_t, bool, const RuntimeMethod*))Action_6_Invoke_mFF8F298606B3E177DF933AE1788928F36BC92D0F_gshared_inline)(__this, ___0_arg1, ___1_arg2, ___2_arg3, ___3_arg4, ___4_arg5, ___5_arg6, method);
}
// T OVRDeserialize::ByteArrayToStructure<OVRDeserialize/SpaceQueryResultsData>(System.Byte[])
inline SpaceQueryResultsData_tED5DAE5E8BDB324E88D3A492B94ECEACA6BA907A OVRDeserialize_ByteArrayToStructure_TisSpaceQueryResultsData_tED5DAE5E8BDB324E88D3A492B94ECEACA6BA907A_m50F3066158A963BA10DF164DF2CA6E5B57375951 (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_bytes, const RuntimeMethod* method)
{
	return ((  SpaceQueryResultsData_tED5DAE5E8BDB324E88D3A492B94ECEACA6BA907A (*) (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031*, const RuntimeMethod*))OVRDeserialize_ByteArrayToStructure_TisSpaceQueryResultsData_tED5DAE5E8BDB324E88D3A492B94ECEACA6BA907A_m50F3066158A963BA10DF164DF2CA6E5B57375951_gshared)(___0_bytes, method);
}
// System.Void System.Action`1<System.UInt64>::Invoke(T)
inline void Action_1_Invoke_mD21E1BBC413B52214AE1643F8570EB10B0C004CF_inline (Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C* __this, uint64_t ___0_obj, const RuntimeMethod* method)
{
	((  void (*) (Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C*, uint64_t, const RuntimeMethod*))Action_1_Invoke_mD21E1BBC413B52214AE1643F8570EB10B0C004CF_gshared_inline)(__this, ___0_obj, method);
}
// T OVRDeserialize::ByteArrayToStructure<OVRDeserialize/SpaceQueryCompleteData>(System.Byte[])
inline SpaceQueryCompleteData_tF177ABA884999611B5EC3DC2944FCE143E9F749F OVRDeserialize_ByteArrayToStructure_TisSpaceQueryCompleteData_tF177ABA884999611B5EC3DC2944FCE143E9F749F_mE1A49ABB1A9E3E72C77E37D97432AE54F4407732 (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_bytes, const RuntimeMethod* method)
{
	return ((  SpaceQueryCompleteData_tF177ABA884999611B5EC3DC2944FCE143E9F749F (*) (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031*, const RuntimeMethod*))OVRDeserialize_ByteArrayToStructure_TisSpaceQueryCompleteData_tF177ABA884999611B5EC3DC2944FCE143E9F749F_mE1A49ABB1A9E3E72C77E37D97432AE54F4407732_gshared)(___0_bytes, method);
}
// System.Void System.Action`2<System.UInt64,System.Boolean>::Invoke(T1,T2)
inline void Action_2_Invoke_m5C4507B6E0477EDD49165F507099C83A696B6B20_inline (Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* __this, uint64_t ___0_arg1, bool ___1_arg2, const RuntimeMethod* method)
{
	((  void (*) (Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71*, uint64_t, bool, const RuntimeMethod*))Action_2_Invoke_m5C4507B6E0477EDD49165F507099C83A696B6B20_gshared_inline)(__this, ___0_arg1, ___1_arg2, method);
}
// T OVRDeserialize::ByteArrayToStructure<OVRDeserialize/SpaceSaveCompleteData>(System.Byte[])
inline SpaceSaveCompleteData_t86F76FAD997B29F8C01EECC13D8BC18477D398F4 OVRDeserialize_ByteArrayToStructure_TisSpaceSaveCompleteData_t86F76FAD997B29F8C01EECC13D8BC18477D398F4_mB0692BA462E26A86BCFA96B6876BA6C11118B48B (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_bytes, const RuntimeMethod* method)
{
	return ((  SpaceSaveCompleteData_t86F76FAD997B29F8C01EECC13D8BC18477D398F4 (*) (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031*, const RuntimeMethod*))OVRDeserialize_ByteArrayToStructure_TisSpaceSaveCompleteData_t86F76FAD997B29F8C01EECC13D8BC18477D398F4_mB0692BA462E26A86BCFA96B6876BA6C11118B48B_gshared)(___0_bytes, method);
}
// System.Void System.Action`4<System.UInt64,OVRSpace,System.Boolean,System.Guid>::Invoke(T1,T2,T3,T4)
inline void Action_4_Invoke_mD49299FEC5EDAE647F844D50183E3832DB459D6F_inline (Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A* __this, uint64_t ___0_arg1, OVRSpace_tDA5A6DB241624CD5712AC4A71E565BA171985B4D ___1_arg2, bool ___2_arg3, Guid_t ___3_arg4, const RuntimeMethod* method)
{
	((  void (*) (Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A*, uint64_t, OVRSpace_tDA5A6DB241624CD5712AC4A71E565BA171985B4D, bool, Guid_t, const RuntimeMethod*))Action_4_Invoke_mD49299FEC5EDAE647F844D50183E3832DB459D6F_gshared_inline)(__this, ___0_arg1, ___1_arg2, ___2_arg3, ___3_arg4, method);
}
// T OVRDeserialize::ByteArrayToStructure<OVRDeserialize/SpaceEraseCompleteData>(System.Byte[])
inline SpaceEraseCompleteData_t29938D1C6E218C23257DF9F75C64AD57B1786AC3 OVRDeserialize_ByteArrayToStructure_TisSpaceEraseCompleteData_t29938D1C6E218C23257DF9F75C64AD57B1786AC3_mF47A0B55259937E10C4A967BCE2AE71377F6E3C3 (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_bytes, const RuntimeMethod* method)
{
	return ((  SpaceEraseCompleteData_t29938D1C6E218C23257DF9F75C64AD57B1786AC3 (*) (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031*, const RuntimeMethod*))OVRDeserialize_ByteArrayToStructure_TisSpaceEraseCompleteData_t29938D1C6E218C23257DF9F75C64AD57B1786AC3_mF47A0B55259937E10C4A967BCE2AE71377F6E3C3_gshared)(___0_bytes, method);
}
// System.Void System.Action`4<System.UInt64,System.Boolean,System.Guid,OVRPlugin/SpaceStorageLocation>::Invoke(T1,T2,T3,T4)
inline void Action_4_Invoke_mE230342C815050AB281BEBADE54FC805AE60B3F0_inline (Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC* __this, uint64_t ___0_arg1, bool ___1_arg2, Guid_t ___2_arg3, int32_t ___3_arg4, const RuntimeMethod* method)
{
	((  void (*) (Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC*, uint64_t, bool, Guid_t, int32_t, const RuntimeMethod*))Action_4_Invoke_m6132B3D24664DAF3AD9A98C1C0311A8DA081927E_gshared_inline)(__this, ___0_arg1, ___1_arg2, ___2_arg3, ___3_arg4, method);
}
// T OVRDeserialize::ByteArrayToStructure<OVRDeserialize/SpaceShareResultData>(System.Byte[])
inline SpaceShareResultData_t1BE431DF2FC60FBBB1F6BA5ECFB140117CFF044F OVRDeserialize_ByteArrayToStructure_TisSpaceShareResultData_t1BE431DF2FC60FBBB1F6BA5ECFB140117CFF044F_m6FD88F86C774971F10124906FDEB4709734D471C (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_bytes, const RuntimeMethod* method)
{
	return ((  SpaceShareResultData_t1BE431DF2FC60FBBB1F6BA5ECFB140117CFF044F (*) (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031*, const RuntimeMethod*))OVRDeserialize_ByteArrayToStructure_TisSpaceShareResultData_t1BE431DF2FC60FBBB1F6BA5ECFB140117CFF044F_m6FD88F86C774971F10124906FDEB4709734D471C_gshared)(___0_bytes, method);
}
// System.Void System.Action`2<System.UInt64,OVRSpatialAnchor/OperationResult>::Invoke(T1,T2)
inline void Action_2_Invoke_mF391E368703BF04E5B3933748BB1BD1BFC5799D9_inline (Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* __this, uint64_t ___0_arg1, int32_t ___1_arg2, const RuntimeMethod* method)
{
	((  void (*) (Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9*, uint64_t, int32_t, const RuntimeMethod*))Action_2_Invoke_m8E9819A2536DE97B15561CFC230E9492FFE345C6_gshared_inline)(__this, ___0_arg1, ___1_arg2, method);
}
// T OVRDeserialize::ByteArrayToStructure<OVRDeserialize/SpaceListSaveResultData>(System.Byte[])
inline SpaceListSaveResultData_tCFC8B45EABB98F65FE80A9D7659D7E898383970D OVRDeserialize_ByteArrayToStructure_TisSpaceListSaveResultData_tCFC8B45EABB98F65FE80A9D7659D7E898383970D_m01BA59E421B63F6D1EC9103E6591F209FD67B541 (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_bytes, const RuntimeMethod* method)
{
	return ((  SpaceListSaveResultData_tCFC8B45EABB98F65FE80A9D7659D7E898383970D (*) (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031*, const RuntimeMethod*))OVRDeserialize_ByteArrayToStructure_TisSpaceListSaveResultData_tCFC8B45EABB98F65FE80A9D7659D7E898383970D_m01BA59E421B63F6D1EC9103E6591F209FD67B541_gshared)(___0_bytes, method);
}
// T OVRDeserialize::ByteArrayToStructure<OVRDeserialize/SceneCaptureCompleteData>(System.Byte[])
inline SceneCaptureCompleteData_t309B8671164A38CEA71FDAC002DB145FFAECA033 OVRDeserialize_ByteArrayToStructure_TisSceneCaptureCompleteData_t309B8671164A38CEA71FDAC002DB145FFAECA033_mE2D9B1669B28BA064E53A833B1B3E35844DDD783 (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_bytes, const RuntimeMethod* method)
{
	return ((  SceneCaptureCompleteData_t309B8671164A38CEA71FDAC002DB145FFAECA033 (*) (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031*, const RuntimeMethod*))OVRDeserialize_ByteArrayToStructure_TisSceneCaptureCompleteData_t309B8671164A38CEA71FDAC002DB145FFAECA033_mE2D9B1669B28BA064E53A833B1B3E35844DDD783_gshared)(___0_bytes, method);
}
// System.Boolean OVRPlugin::PollEvent(OVRPlugin/EventDataBuffer&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_PollEvent_mB91F8F706861047BD2CCD1BDC0AB6374642503E0 (EventDataBuffer_t5836E8ECE1E094863DEDCC92818AEF39C2F646E8* ___0_eventDataBuffer, const RuntimeMethod* method) ;
// System.Boolean System.WeakReference`1<UnityEngine.Camera>::TryGetTarget(T&)
inline bool WeakReference_1_TryGetTarget_m554CBAC52CB26900F9D0E24648D3482A43AB67B6 (WeakReference_1_t08942AAA5C58B24D75314BD9594E2DE409CB9C93* __this, Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184** ___0_target, const RuntimeMethod* method)
{
	return ((  bool (*) (WeakReference_1_t08942AAA5C58B24D75314BD9594E2DE409CB9C93*, Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184**, const RuntimeMethod*))WeakReference_1_TryGetTarget_m4982797589731AB705E9C79FA4531331F40410AB_gshared)(__this, ___0_target, method);
}
// System.Boolean UnityEngine.Behaviour::get_isActiveAndEnabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Behaviour_get_isActiveAndEnabled_mEB4ECCE9761A7016BC619557CEFEA1A30D3BF28A (Behaviour_t01970CFBBA658497AE30F311C447DB0440BAB7FA* __this, const RuntimeMethod* method) ;
// System.Boolean UnityEngine.Component::CompareTag(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Component_CompareTag_mE6F8897E84F12DF12D302FFC4D58204D51096FC5 (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3* __this, String_t* ___0_tag, const RuntimeMethod* method) ;
// UnityEngine.GameObject[] UnityEngine.GameObject::FindGameObjectsWithTag(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObjectU5BU5D_tFF67550DFCE87096D7A3734EA15B75896B2722CF* GameObject_FindGameObjectsWithTag_mB8AA805DA664EF0221BB338446014F662771B4E3 (String_t* ___0_tag, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<UnityEngine.Camera>::.ctor(System.Int32)
inline void List_1__ctor_m62FFCB8D441FA0A3D3002703967951B70D8475F1 (List_1_tD2FA3273746E404D72561E8324608D18B52B533E* __this, int32_t ___0_capacity, const RuntimeMethod* method)
{
	((  void (*) (List_1_tD2FA3273746E404D72561E8324608D18B52B533E*, int32_t, const RuntimeMethod*))List_1__ctor_m76CBBC3E2F0583F5AD30CE592CEA1225C06A0428_gshared)(__this, ___0_capacity, method);
}
// T UnityEngine.GameObject::GetComponent<UnityEngine.Camera>()
inline Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* GameObject_GetComponent_TisCamera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184_m3B3C11550E48AA36AFF82788636EB163CC51FEE6 (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* __this, const RuntimeMethod* method)
{
	return ((  Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* (*) (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F*, const RuntimeMethod*))GameObject_GetComponent_TisRuntimeObject_m6EAED4AA356F0F48288F67899E5958792395563B_gshared)(__this, method);
}
// T UnityEngine.Component::GetComponentInParent<OVRCameraRig>()
inline OVRCameraRig_t7FC2BB0D30DED2B7F0C8914AF2B66E9F4CF891A9* Component_GetComponentInParent_TisOVRCameraRig_t7FC2BB0D30DED2B7F0C8914AF2B66E9F4CF891A9_m132CAE22DC4B18ACA26D293EE1D3799068ADAA5D (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3* __this, const RuntimeMethod* method)
{
	return ((  OVRCameraRig_t7FC2BB0D30DED2B7F0C8914AF2B66E9F4CF891A9* (*) (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3*, const RuntimeMethod*))Component_GetComponentInParent_TisRuntimeObject_m6746D6BB99912B1B509746C993906492F86CD119_gshared)(__this, method);
}
// UnityEngine.Transform OVRCameraRig::get_trackingSpace()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* OVRCameraRig_get_trackingSpace_m76339871C7804C1BD14283FBF3D91268D4D87550_inline (OVRCameraRig_t7FC2BB0D30DED2B7F0C8914AF2B66E9F4CF891A9* __this, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<UnityEngine.Camera>::Add(T)
inline void List_1_Add_m9BE0CD6DB63BFCBCBD5619618748924143F1AFAD_inline (List_1_tD2FA3273746E404D72561E8324608D18B52B533E* __this, Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* ___0_item, const RuntimeMethod* method)
{
	((  void (*) (List_1_tD2FA3273746E404D72561E8324608D18B52B533E*, Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184*, const RuntimeMethod*))List_1_Add_mEBCF994CC3814631017F46A387B1A192ED6C85C7_gshared_inline)(__this, ___0_item, method);
}
// System.Int32 System.Collections.Generic.List`1<UnityEngine.Camera>::get_Count()
inline int32_t List_1_get_Count_mDCDDC4E9E15CD83C00D4CC32F79830261769F65C_inline (List_1_tD2FA3273746E404D72561E8324608D18B52B533E* __this, const RuntimeMethod* method)
{
	return ((  int32_t (*) (List_1_tD2FA3273746E404D72561E8324608D18B52B533E*, const RuntimeMethod*))List_1_get_Count_m4407E4C389F22B8CEC282C15D56516658746C383_gshared_inline)(__this, method);
}
// UnityEngine.Camera UnityEngine.Camera::get_main()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* Camera_get_main_m52C992F18E05355ABB9EEB64A4BF2215E12762DF (const RuntimeMethod* method) ;
// T System.Collections.Generic.List`1<UnityEngine.Camera>::get_Item(System.Int32)
inline Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* List_1_get_Item_m7CEE3A6E144C8D86DE6490620206FAB13432ACF6 (List_1_tD2FA3273746E404D72561E8324608D18B52B533E* __this, int32_t ___0_index, const RuntimeMethod* method)
{
	return ((  Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* (*) (List_1_tD2FA3273746E404D72561E8324608D18B52B533E*, int32_t, const RuntimeMethod*))List_1_get_Item_m33561245D64798C2AB07584C0EC4F240E4839A38_gshared)(__this, ___0_index, method);
}
// System.Void System.Comparison`1<UnityEngine.Camera>::.ctor(System.Object,System.IntPtr)
inline void Comparison_1__ctor_mA05E36D38BB75F9EF78F876803A19445EDF81CD5 (Comparison_1_t49BE56523BDD8BC22EF3396960546FE16DE7B11A* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method)
{
	((  void (*) (Comparison_1_t49BE56523BDD8BC22EF3396960546FE16DE7B11A*, RuntimeObject*, intptr_t, const RuntimeMethod*))Comparison_1__ctor_mC1E8799BBCE317B612875123C9C894BD470BFE6A_gshared)(__this, ___0_object, ___1_method, method);
}
// System.Void System.Collections.Generic.List`1<UnityEngine.Camera>::Sort(System.Comparison`1<T>)
inline void List_1_Sort_mF0042CBA61BB32CBA4FFE1CD1286329131635B85 (List_1_tD2FA3273746E404D72561E8324608D18B52B533E* __this, Comparison_1_t49BE56523BDD8BC22EF3396960546FE16DE7B11A* ___0_comparison, const RuntimeMethod* method)
{
	((  void (*) (List_1_tD2FA3273746E404D72561E8324608D18B52B533E*, Comparison_1_t49BE56523BDD8BC22EF3396960546FE16DE7B11A*, const RuntimeMethod*))List_1_Sort_mEB3B61CB86B1419919338B0668DC4E568C2FFF93_gshared)(__this, ___0_comparison, method);
}
// System.String UnityEngine.Object::get_name()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* Object_get_name_mAC2F6B897CF1303BA4249B4CB55271AFACBB6392 (Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C* __this, const RuntimeMethod* method) ;
// System.Void System.WeakReference`1<UnityEngine.Camera>::.ctor(T)
inline void WeakReference_1__ctor_m12E7503DDFC128E1736C08DF717D975A0B2BB6E7 (WeakReference_1_t08942AAA5C58B24D75314BD9594E2DE409CB9C93* __this, Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* ___0_target, const RuntimeMethod* method)
{
	((  void (*) (WeakReference_1_t08942AAA5C58B24D75314BD9594E2DE409CB9C93*, Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184*, const RuntimeMethod*))WeakReference_1__ctor_m932665C8861A22B177DC1ACF1EDAA87E1624B5AC_gshared)(__this, ___0_target, method);
}
// System.Void OVRHaptics::Process()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHaptics_Process_m4C06440CFE490FDE9213449D6DF094E68E55C4CB (const RuntimeMethod* method) ;
// UnityEngine.Vector3 UnityEngine.Transform::get_position()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1 (Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* __this, const RuntimeMethod* method) ;
// System.Void OculusXRPlugin::SetAppSpacePosition(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OculusXRPlugin_SetAppSpacePosition_m4F081B1A6672C6CE541651F75EA9B955938808F2 (float ___0_x, float ___1_y, float ___2_z, const RuntimeMethod* method) ;
// UnityEngine.Quaternion UnityEngine.Transform::get_rotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 Transform_get_rotation_m32AF40CA0D50C797DA639A696F8EAEC7524C179C (Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* __this, const RuntimeMethod* method) ;
// System.Void OculusXRPlugin::SetAppSpaceRotation(System.Single,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OculusXRPlugin_SetAppSpaceRotation_m24E78BBF3BA5775538BA8C0A1A0CE99A9521E2D6 (float ___0_x, float ___1_y, float ___2_z, float ___3_w, const RuntimeMethod* method) ;
// System.Void OVRInput::FixedUpdate()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRInput_FixedUpdate_m0B2BA5C8485902E1A0EE19A1F7066E671D8ECCB5 (const RuntimeMethod* method) ;
// System.Void OVRManager::PlatformUIConfirmQuit()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_PlatformUIConfirmQuit_m535F93DC2CAE215773CB4B8A10F47E921086FBC3 (const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::ShowUI(OVRPlugin/PlatformUI)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_ShowUI_m92CACED0C9DAE308F644CEB83AE396FC1444AB0A (int32_t ___0_ui, const RuntimeMethod* method) ;
// T UnityEngine.ScriptableObject::CreateInstance<OVRMixedRealityCaptureSettings>()
inline OVRMixedRealityCaptureSettings_tF6078D6B59F16A0EE3DEE4144FCED347444B9198* ScriptableObject_CreateInstance_TisOVRMixedRealityCaptureSettings_tF6078D6B59F16A0EE3DEE4144FCED347444B9198_mA2CD02C40A4B9D05C1DF3C42710BC05670FFA61E (const RuntimeMethod* method)
{
	return ((  OVRMixedRealityCaptureSettings_tF6078D6B59F16A0EE3DEE4144FCED347444B9198* (*) (const RuntimeMethod*))ScriptableObject_CreateInstance_TisRuntimeObject_mC07BE383F5EF546F4191035A679930852BC19BDA_gshared)(method);
}
// System.Void OVRMixedRealityCaptureConfigurationExtensions::ReadFrom(OVRMixedRealityCaptureConfiguration,OVRMixedRealityCaptureConfiguration)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRMixedRealityCaptureConfigurationExtensions_ReadFrom_m585C78AFC92A80FE7A42CFC872B19375759C1E6D (RuntimeObject* ___0_dest, RuntimeObject* ___1_source, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin/Media::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Media_Initialize_m940C4B3CAFAC0A7B12B461AE9C0F57F65A534772 (const RuntimeMethod* method) ;
// UnityEngine.AudioConfiguration UnityEngine.AudioSettings::GetConfiguration()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR AudioConfiguration_t4C8585EA98B6559B306B6FAD6A68088555394A5D AudioSettings_GetConfiguration_mDA005BAD9577EBBE375F6D6C040D7F110508C910 (const RuntimeMethod* method) ;
// System.Boolean OVRPlugin/Media::SetMrcAudioSampleRate(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Media_SetMrcAudioSampleRate_m9534D4DC9CDE248D5D7A5D9A8DAB2580B4D88E44 (int32_t ___0_sampleRate, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin/Media::SetMrcInputVideoBufferType(OVRPlugin/Media/InputVideoBufferType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Media_SetMrcInputVideoBufferType_mDE256F23EB488EFC24FB4E87EB5FA2220848F4E6 (int32_t ___0_videoBufferType, const RuntimeMethod* method) ;
// OVRPlugin/Media/InputVideoBufferType OVRPlugin/Media::GetMrcInputVideoBufferType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Media_GetMrcInputVideoBufferType_m84171F6829839074E24610A3F0BC5AD9002DA353 (const RuntimeMethod* method) ;
// System.Boolean OVRPlugin/Media::SetMrcActivationMode(OVRPlugin/Media/MrcActivationMode)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Media_SetMrcActivationMode_mE35E5A9E3D238093D464B58DD3CC40BCE5E021B7 (int32_t ___0_mode, const RuntimeMethod* method) ;
// T[] System.Array::Empty<System.Object>()
inline ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* Array_Empty_TisRuntimeObject_mFB8A63D602BB6974D31E20300D9EB89C6FE7C278_inline (const RuntimeMethod* method)
{
	return ((  ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* (*) (const RuntimeMethod*))Array_Empty_TisRuntimeObject_mFB8A63D602BB6974D31E20300D9EB89C6FE7C278_gshared_inline)(method);
}
// UnityEngine.Rendering.GraphicsDeviceType UnityEngine.SystemInfo::get_graphicsDeviceType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SystemInfo_get_graphicsDeviceType_m2D54A0B94D138727041B29B127D8837165686545 (const RuntimeMethod* method) ;
// System.Boolean OVRPlugin/Media::SetAvailableQueueIndexVulkan(System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Media_SetAvailableQueueIndexVulkan_m7B8F350B4D3DD38BC5CA47D1E49690EB53509A22 (uint32_t ___0_queueIndexVk, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin/Media::SetMrcFrameImageFlipped(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Media_SetMrcFrameImageFlipped_m7017BA5F4AE6A40CFF4D29076F4638E4CEFDA0CE (bool ___0_imageFlipped, const RuntimeMethod* method) ;
// System.Void OVRMixedRealityCaptureConfigurationExtensions::ApplyTo(OVRMixedRealityCaptureConfiguration,OVRMixedRealityCaptureConfiguration)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRMixedRealityCaptureConfigurationExtensions_ApplyTo_m14994C97386BAF4C069891F001590BDD520955AF (RuntimeObject* ___0_dest, RuntimeObject* ___1_source, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin/Media::GetInitialized()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Media_GetInitialized_m0786F11D130FC9598B90C01A542F76A002F4D048 (const RuntimeMethod* method) ;
// System.Boolean OVRPlugin/Media::IsMrcActivated()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Media_IsMrcActivated_m789D03726393864E19EE0516C7EA3773CA122844 (const RuntimeMethod* method) ;
// System.Boolean OVRPlugin/Media::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Media_Update_m2059A835F3BE32366432FED120C16EAB71614D8B (const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::SendEvent(System.String,System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_SendEvent_m2724870AAEAEC48E83D56DB0019FEB45B917A70D (String_t* ___0_name, String_t* ___1_param, String_t* ___2_source, const RuntimeMethod* method) ;
// System.Void OVRMixedReality::Update(UnityEngine.GameObject,UnityEngine.Camera,OVRMixedRealityCaptureConfiguration,OVRManager/TrackingOrigin)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRMixedReality_Update_m3D99309363838A6B8BC1BDA6F45ED303760EBD10 (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___0_parentObject, Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* ___1_mainCamera, RuntimeObject* ___2_configuration, int32_t ___3_trackingOrigin, const RuntimeMethod* method) ;
// System.Void OVRMixedReality::Cleanup()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRMixedReality_Cleanup_m312DAB9A4C89085DB090214409B45DEF56B82B62 (const RuntimeMethod* method) ;
// System.Void UnityEngine.Object::Destroy(UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object_Destroy_mE97D0A766419A81296E8D4E5C23D01D3FE91ACBB (Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C* ___0_obj, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin/Media::Shutdown()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Media_Shutdown_m8ABD858739EAE7E2D18F4CC94898D86DCB222DB9 (const RuntimeMethod* method) ;
// System.Boolean OVRManager::PassthroughInitializedOrPending(OVRManager/PassthroughInitializationState)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_PassthroughInitializedOrPending_m7B360381FEDC2014AFB1ABB74E907B62B0D14348 (int32_t ___0_state, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::InitializeInsightPassthrough()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_InitializeInsightPassthrough_m533CFC66EFCBCF4C9B69AC938D2E2653724D2304 (const RuntimeMethod* method) ;
// OVRPlugin/Result OVRPlugin::GetInsightPassthroughInitializationState()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRPlugin_GetInsightPassthroughInitializationState_m3E668E023B953E8204B732EBCD358FAC7B7660C4 (const RuntimeMethod* method) ;
// System.String System.String::Concat(System.String,System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_m8855A6DE10F84DA7F4EC113CADDB59873A25573B (String_t* ___0_str0, String_t* ___1_str1, String_t* ___2_str2, const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::ShutdownInsightPassthrough()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_ShutdownInsightPassthrough_m8BD5F14E5C47D98E1E78889BEDC2D32DE96C9F96 (const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::IsInsightPassthroughInitialized()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_IsInsightPassthroughInitialized_m1637AFD376CCC2D63B5C34475FD012FD7DF3EB36 (const RuntimeMethod* method) ;
// System.Boolean OVRPlugin::IsInsightPassthroughSupported()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRPlugin_IsInsightPassthroughSupported_m7AE9F209201C3853A8DBF56F8AD3DAAA13ED8529 (const RuntimeMethod* method) ;
// OVRPlugin/PassthroughCapabilityFlags OVRPlugin::GetPassthroughCapabilityFlags()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRPlugin_GetPassthroughCapabilityFlags_m17CE0E3D6F476E63ECE69CC29FA167DE14C6DD3B (const RuntimeMethod* method) ;
// System.Void OVRManager/PassthroughCapabilities::.ctor(System.Boolean,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PassthroughCapabilities__ctor_mD9AD81E53544D7D85A7E6CAAF8F277721F0B31A3 (PassthroughCapabilities_t3B338539A7E4125FE79381628715BDC608471F9F* __this, bool ___0_supportsPassthrough, bool ___1_supportsColorPassthrough, const RuntimeMethod* method) ;
// UnityEngine.Color UnityEngine.Color::get_green()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Color_tD001788D726C3A7F1379BEED0260B9591F440C1F Color_get_green_mEB001F2CD8C68C6BBAEF9101990B779D3AA2A6EF_inline (const RuntimeMethod* method) ;
// UnityEngine.Color UnityEngine.Color::get_clear()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Color_tD001788D726C3A7F1379BEED0260B9591F440C1F Color_get_clear_m02E023A7D396B973288B3915F6F24FBF7E0DC81D_inline (const RuntimeMethod* method) ;
// System.Void UnityEngine.Vector3::.ctor(System.Single,System.Single,System.Single)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* __this, float ___0_x, float ___1_y, float ___2_z, const RuntimeMethod* method) ;
// System.Void UnityEngine.Vector2::Normalize()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Vector2_Normalize_m56DABCAB5967DF37A6B96710477D3660D800C652_inline (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7* __this, const RuntimeMethod* method) ;
// UnityEngine.Vector3 UnityEngine.Vector3::op_Multiply(UnityEngine.Vector3,System.Single)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___0_a, float ___1_d, const RuntimeMethod* method) ;
// UnityEngine.Quaternion UnityEngine.Quaternion::Internal_FromEulerRad(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 Quaternion_Internal_FromEulerRad_m66D4475341F53949471E6870FB5C5E4A5E9BA93E (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___0_euler, const RuntimeMethod* method) ;
// System.Boolean UnityEngine.Vector3::op_Equality(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR bool Vector3_op_Equality_mCDCBB8D2EDC3D3BF20F31A25ACB34705D352B479_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___0_lhs, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___1_rhs, const RuntimeMethod* method) ;
// System.Void UnityEngine.Color::.ctor(System.Single,System.Single,System.Single,System.Single)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Color__ctor_m3786F0D6E510D9CFA544523A955870BD2A514C8C_inline (Color_tD001788D726C3A7F1379BEED0260B9591F440C1F* __this, float ___0_r, float ___1_g, float ___2_b, float ___3_a, const RuntimeMethod* method) ;
// System.Void System.Array::Clear(System.Array,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Array_Clear_m50BAA3751899858B097D3FF2ED31F284703FE5CB (RuntimeArray* ___0_array, int32_t ___1_index, int32_t ___2_length, const RuntimeMethod* method) ;
// UnityEngine.Vector2 UnityEngine.Vector2::op_Division(UnityEngine.Vector2,System.Single)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 Vector2_op_Division_m57A2DCD71E0CE7420851D705D1951F9238902AAB_inline (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___0_a, float ___1_d, const RuntimeMethod* method) ;
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void OVRGLTFLoader/<>c__DisplayClass27_0::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CU3Ec__DisplayClass27_0__ctor_mAA33415A6334C948D5FB6FF0676C5FAB37792F1B (U3CU3Ec__DisplayClass27_0_tE26F78A56AA4B7B70818EB50BF1D6AF8D0415010* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&U3CU3Ec__DisplayClass27_0__ctor_mAA33415A6334C948D5FB6FF0676C5FAB37792F1B_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CU3Ec__DisplayClass27_0__ctor_mAA33415A6334C948D5FB6FF0676C5FAB37792F1B_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		return;
	}
}
// System.Void OVRGLTFLoader/<>c__DisplayClass27_0::<ProcessMesh>b__0()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CU3Ec__DisplayClass27_0_U3CProcessMeshU3Eb__0_m998C738F6C4AB24E0AE93FC5AAD2910A88E229D5 (U3CU3Ec__DisplayClass27_0_tE26F78A56AA4B7B70818EB50BF1D6AF8D0415010* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&U3CU3Ec__DisplayClass27_0_U3CProcessMeshU3Eb__0_m998C738F6C4AB24E0AE93FC5AAD2910A88E229D5_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&U3CU3Ec__DisplayClass27_0_tE26F78A56AA4B7B70818EB50BF1D6AF8D0415010_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CU3Ec__DisplayClass27_0_U3CProcessMeshU3Eb__0_m998C738F6C4AB24E0AE93FC5AAD2910A88E229D5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5697));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5698));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5699));
		// transcodeTask = Task.Run(() => { TranscodeTexture(ref matData.texture); });
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5700));
		OVRGLTFLoader_t2E5E39D416422D0459916F5D1FA9C83CA2C92CD1* L_0 = __this->___U3CU3E4__this_0;
		OVRMaterialData_tD4DEFD6FD5DCEE802F11DEBB7FECA677B52CA581* L_1 = (&__this->___matData_1);
		OVRTextureData_t357BF09E78929C6C4BC7C3039D461E73D58064A3* L_2 = (&L_1->___texture_2);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5701));
		NullCheck(L_0);
		OVRGLTFLoader_TranscodeTexture_mD9BF9AFCF83026B04837D015BF23EA69599B516F(L_0, L_2, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5701));
		// transcodeTask = Task.Run(() => { TranscodeTexture(ref matData.texture); });
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5702));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void OVRHaptics::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHaptics__cctor_mA37F799C36EEE23EBA0E65CD8D730008A01BDE57 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsChannelU5BU5D_t5CFD3CC0AE2D7AF472EADAE43D25D00EA71AF3C8_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsOutputU5BU5D_tF2F7D8627C25B56A905E3C8574260767FB659BA7_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHaptics__cctor_mA37F799C36EEE23EBA0E65CD8D730008A01BDE57_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHaptics__cctor_mA37F799C36EEE23EBA0E65CD8D730008A01BDE57_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5703));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5704));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5705));
		// Config.Load();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5706));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5707));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		Config_Load_m37407D28EF74FBA74FEDBFD78695E65CD859A330(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5707));
		// m_outputs = new OVRHapticsOutput[]
		// {
		//     new OVRHapticsOutput((uint)OVRPlugin.Controller.LTouch),
		//     new OVRHapticsOutput((uint)OVRPlugin.Controller.RTouch),
		// };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5708));
		OVRHapticsOutputU5BU5D_tF2F7D8627C25B56A905E3C8574260767FB659BA7* L_0 = (OVRHapticsOutputU5BU5D_tF2F7D8627C25B56A905E3C8574260767FB659BA7*)(OVRHapticsOutputU5BU5D_tF2F7D8627C25B56A905E3C8574260767FB659BA7*)SZArrayNew(OVRHapticsOutputU5BU5D_tF2F7D8627C25B56A905E3C8574260767FB659BA7_il2cpp_TypeInfo_var, (uint32_t)2);
		OVRHapticsOutputU5BU5D_tF2F7D8627C25B56A905E3C8574260767FB659BA7* L_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5709));
		OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE* L_2 = (OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE*)il2cpp_codegen_object_new(OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE_il2cpp_TypeInfo_var);
		NullCheck(L_2);
		OVRHapticsOutput__ctor_mA154790252DB03E79E6BCF543F05390AE10CD934(L_2, 1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5709));
		NullCheck(L_1);
		ArrayElementTypeCheck (L_1, L_2);
		(L_1)->SetAt(static_cast<il2cpp_array_size_t>(0), (OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE*)L_2);
		OVRHapticsOutputU5BU5D_tF2F7D8627C25B56A905E3C8574260767FB659BA7* L_3 = L_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5710));
		OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE* L_4 = (OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE*)il2cpp_codegen_object_new(OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE_il2cpp_TypeInfo_var);
		NullCheck(L_4);
		OVRHapticsOutput__ctor_mA154790252DB03E79E6BCF543F05390AE10CD934(L_4, 2, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5710));
		NullCheck(L_3);
		ArrayElementTypeCheck (L_3, L_4);
		(L_3)->SetAt(static_cast<il2cpp_array_size_t>(1), (OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE*)L_4);
		((OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C_StaticFields*)il2cpp_codegen_static_fields_for(OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C_il2cpp_TypeInfo_var))->___m_outputs_3 = L_3;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C_StaticFields*)il2cpp_codegen_static_fields_for(OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C_il2cpp_TypeInfo_var))->___m_outputs_3), (void*)L_3);
		// Channels = new OVRHapticsChannel[]
		// {
		//     LeftChannel = new OVRHapticsChannel(0),
		//     RightChannel = new OVRHapticsChannel(1),
		// };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5711));
		OVRHapticsChannelU5BU5D_t5CFD3CC0AE2D7AF472EADAE43D25D00EA71AF3C8* L_5 = (OVRHapticsChannelU5BU5D_t5CFD3CC0AE2D7AF472EADAE43D25D00EA71AF3C8*)(OVRHapticsChannelU5BU5D_t5CFD3CC0AE2D7AF472EADAE43D25D00EA71AF3C8*)SZArrayNew(OVRHapticsChannelU5BU5D_t5CFD3CC0AE2D7AF472EADAE43D25D00EA71AF3C8_il2cpp_TypeInfo_var, (uint32_t)2);
		OVRHapticsChannelU5BU5D_t5CFD3CC0AE2D7AF472EADAE43D25D00EA71AF3C8* L_6 = L_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5712));
		OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853* L_7 = (OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853*)il2cpp_codegen_object_new(OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853_il2cpp_TypeInfo_var);
		NullCheck(L_7);
		OVRHapticsChannel__ctor_m79C872D3637A1862B08A58D00A21F413D3B1CA96(L_7, 0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5712));
		OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853* L_8 = L_7;
		((OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C_StaticFields*)il2cpp_codegen_static_fields_for(OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C_il2cpp_TypeInfo_var))->___LeftChannel_1 = L_8;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C_StaticFields*)il2cpp_codegen_static_fields_for(OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C_il2cpp_TypeInfo_var))->___LeftChannel_1), (void*)L_8);
		NullCheck(L_6);
		ArrayElementTypeCheck (L_6, L_8);
		(L_6)->SetAt(static_cast<il2cpp_array_size_t>(0), (OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853*)L_8);
		OVRHapticsChannelU5BU5D_t5CFD3CC0AE2D7AF472EADAE43D25D00EA71AF3C8* L_9 = L_6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5713));
		OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853* L_10 = (OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853*)il2cpp_codegen_object_new(OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853_il2cpp_TypeInfo_var);
		NullCheck(L_10);
		OVRHapticsChannel__ctor_m79C872D3637A1862B08A58D00A21F413D3B1CA96(L_10, 1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5713));
		OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853* L_11 = L_10;
		((OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C_StaticFields*)il2cpp_codegen_static_fields_for(OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C_il2cpp_TypeInfo_var))->___RightChannel_2 = L_11;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C_StaticFields*)il2cpp_codegen_static_fields_for(OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C_il2cpp_TypeInfo_var))->___RightChannel_2), (void*)L_11);
		NullCheck(L_9);
		ArrayElementTypeCheck (L_9, L_11);
		(L_9)->SetAt(static_cast<il2cpp_array_size_t>(1), (OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853*)L_11);
		((OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C_StaticFields*)il2cpp_codegen_static_fields_for(OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C_il2cpp_TypeInfo_var))->___Channels_0 = L_9;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C_StaticFields*)il2cpp_codegen_static_fields_for(OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C_il2cpp_TypeInfo_var))->___Channels_0), (void*)L_9);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5714));
		return;
	}
}
// System.Void OVRHaptics::Process()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHaptics_Process_m4C06440CFE490FDE9213449D6DF094E68E55C4CB (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHaptics_Process_m4C06440CFE490FDE9213449D6DF094E68E55C4CB_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHaptics_Process_m4C06440CFE490FDE9213449D6DF094E68E55C4CB_RuntimeMethod_var, NULL, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5715));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5716));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5717));
		// Config.Load();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5718));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5719));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		Config_Load_m37407D28EF74FBA74FEDBFD78695E65CD859A330(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5719));
		// for (int i = 0; i < m_outputs.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5720));
		V_0 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5721));
		goto IL_001e;
	}

IL_000b:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5722));
		// m_outputs[i].Process();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5723));
		il2cpp_codegen_runtime_class_init_inline(OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C_il2cpp_TypeInfo_var);
		OVRHapticsOutputU5BU5D_tF2F7D8627C25B56A905E3C8574260767FB659BA7* L_0 = ((OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C_StaticFields*)il2cpp_codegen_static_fields_for(OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C_il2cpp_TypeInfo_var))->___m_outputs_3;
		int32_t L_1 = V_0;
		NullCheck(L_0);
		int32_t L_2 = L_1;
		OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE* L_3 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_2));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5724));
		NullCheck(L_3);
		OVRHapticsOutput_Process_mD508D5EA14E13D5D1395D5A958770A9158A8912D(L_3, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5724));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5725));
		// for (int i = 0; i < m_outputs.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5726));
		int32_t L_4 = V_0;
		V_0 = ((int32_t)il2cpp_codegen_add(L_4, 1));
	}

IL_001e:
	{
		// for (int i = 0; i < m_outputs.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5727));
		int32_t L_5 = V_0;
		il2cpp_codegen_runtime_class_init_inline(OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C_il2cpp_TypeInfo_var);
		OVRHapticsOutputU5BU5D_tF2F7D8627C25B56A905E3C8574260767FB659BA7* L_6 = ((OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C_StaticFields*)il2cpp_codegen_static_fields_for(OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C_il2cpp_TypeInfo_var))->___m_outputs_3;
		NullCheck(L_6);
		V_1 = (bool)((((int32_t)L_5) < ((int32_t)((int32_t)(((RuntimeArray*)L_6)->max_length))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5728));
		bool L_7 = V_1;
		if (L_7)
		{
			goto IL_000b;
		}
	}
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5729));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Int32 OVRHaptics/Config::get_SampleRateHz()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Config_get_SampleRateHz_m2D1B79A8EC0A19BA0EA97E6B3039D15788BB9F47 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_get_SampleRateHz_m2D1B79A8EC0A19BA0EA97E6B3039D15788BB9F47_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Config_get_SampleRateHz_m2D1B79A8EC0A19BA0EA97E6B3039D15788BB9F47_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5730));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5731));
	{
		// public static int SampleRateHz { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5732));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_0 = ((Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_StaticFields*)il2cpp_codegen_static_fields_for(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var))->___U3CSampleRateHzU3Ek__BackingField_0;
		return L_0;
	}
}
// System.Void OVRHaptics/Config::set_SampleRateHz(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Config_set_SampleRateHz_mDCD3C6D84B82FAEE86652D00EB57F6D1C52692B5 (int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_set_SampleRateHz_mDCD3C6D84B82FAEE86652D00EB57F6D1C52692B5_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Config_set_SampleRateHz_mDCD3C6D84B82FAEE86652D00EB57F6D1C52692B5_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5733));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5734));
	{
		// public static int SampleRateHz { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5735));
		int32_t L_0 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		((Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_StaticFields*)il2cpp_codegen_static_fields_for(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var))->___U3CSampleRateHzU3Ek__BackingField_0 = L_0;
		return;
	}
}
// System.Int32 OVRHaptics/Config::get_SampleSizeInBytes()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Config_get_SampleSizeInBytes_m8A59438CA870B1DEDA2DDE836BBF513D4DA6C209 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_get_SampleSizeInBytes_m8A59438CA870B1DEDA2DDE836BBF513D4DA6C209_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Config_get_SampleSizeInBytes_m8A59438CA870B1DEDA2DDE836BBF513D4DA6C209_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5736));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5737));
	{
		// public static int SampleSizeInBytes { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5738));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_0 = ((Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_StaticFields*)il2cpp_codegen_static_fields_for(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var))->___U3CSampleSizeInBytesU3Ek__BackingField_1;
		return L_0;
	}
}
// System.Void OVRHaptics/Config::set_SampleSizeInBytes(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Config_set_SampleSizeInBytes_mFD9B00CDEDFDB3C01D5958A9ECEEF22C80651A22 (int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_set_SampleSizeInBytes_mFD9B00CDEDFDB3C01D5958A9ECEEF22C80651A22_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Config_set_SampleSizeInBytes_mFD9B00CDEDFDB3C01D5958A9ECEEF22C80651A22_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5739));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5740));
	{
		// public static int SampleSizeInBytes { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5741));
		int32_t L_0 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		((Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_StaticFields*)il2cpp_codegen_static_fields_for(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var))->___U3CSampleSizeInBytesU3Ek__BackingField_1 = L_0;
		return;
	}
}
// System.Int32 OVRHaptics/Config::get_MinimumSafeSamplesQueued()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Config_get_MinimumSafeSamplesQueued_m479D3DEBCD5251637DC7FDE141FBECAC70DE5A1C (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_get_MinimumSafeSamplesQueued_m479D3DEBCD5251637DC7FDE141FBECAC70DE5A1C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Config_get_MinimumSafeSamplesQueued_m479D3DEBCD5251637DC7FDE141FBECAC70DE5A1C_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5742));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5743));
	{
		// public static int MinimumSafeSamplesQueued { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5744));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_0 = ((Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_StaticFields*)il2cpp_codegen_static_fields_for(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var))->___U3CMinimumSafeSamplesQueuedU3Ek__BackingField_2;
		return L_0;
	}
}
// System.Void OVRHaptics/Config::set_MinimumSafeSamplesQueued(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Config_set_MinimumSafeSamplesQueued_m08F042C5BB8DCCBEE448EAD12412D3336ABAEFC5 (int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_set_MinimumSafeSamplesQueued_m08F042C5BB8DCCBEE448EAD12412D3336ABAEFC5_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Config_set_MinimumSafeSamplesQueued_m08F042C5BB8DCCBEE448EAD12412D3336ABAEFC5_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5745));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5746));
	{
		// public static int MinimumSafeSamplesQueued { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5747));
		int32_t L_0 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		((Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_StaticFields*)il2cpp_codegen_static_fields_for(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var))->___U3CMinimumSafeSamplesQueuedU3Ek__BackingField_2 = L_0;
		return;
	}
}
// System.Int32 OVRHaptics/Config::get_MinimumBufferSamplesCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Config_get_MinimumBufferSamplesCount_m27DBFB9FEA1CB7EF08AC8C62B2F7B99CF1B9457C (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_get_MinimumBufferSamplesCount_m27DBFB9FEA1CB7EF08AC8C62B2F7B99CF1B9457C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Config_get_MinimumBufferSamplesCount_m27DBFB9FEA1CB7EF08AC8C62B2F7B99CF1B9457C_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5748));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5749));
	{
		// public static int MinimumBufferSamplesCount { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5750));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_0 = ((Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_StaticFields*)il2cpp_codegen_static_fields_for(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var))->___U3CMinimumBufferSamplesCountU3Ek__BackingField_3;
		return L_0;
	}
}
// System.Void OVRHaptics/Config::set_MinimumBufferSamplesCount(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Config_set_MinimumBufferSamplesCount_m866A99335F02A0402AEE83DA6BDD06BEB7FEA7A3 (int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_set_MinimumBufferSamplesCount_m866A99335F02A0402AEE83DA6BDD06BEB7FEA7A3_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Config_set_MinimumBufferSamplesCount_m866A99335F02A0402AEE83DA6BDD06BEB7FEA7A3_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5751));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5752));
	{
		// public static int MinimumBufferSamplesCount { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5753));
		int32_t L_0 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		((Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_StaticFields*)il2cpp_codegen_static_fields_for(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var))->___U3CMinimumBufferSamplesCountU3Ek__BackingField_3 = L_0;
		return;
	}
}
// System.Int32 OVRHaptics/Config::get_OptimalBufferSamplesCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Config_get_OptimalBufferSamplesCount_mBC971D5C4CF6F34A8A3925DC8103A09E3E8BF4F7 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_get_OptimalBufferSamplesCount_mBC971D5C4CF6F34A8A3925DC8103A09E3E8BF4F7_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Config_get_OptimalBufferSamplesCount_mBC971D5C4CF6F34A8A3925DC8103A09E3E8BF4F7_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5754));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5755));
	{
		// public static int OptimalBufferSamplesCount { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5756));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_0 = ((Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_StaticFields*)il2cpp_codegen_static_fields_for(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var))->___U3COptimalBufferSamplesCountU3Ek__BackingField_4;
		return L_0;
	}
}
// System.Void OVRHaptics/Config::set_OptimalBufferSamplesCount(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Config_set_OptimalBufferSamplesCount_m5B583871BC4784C547969664A7DCC45343792E7F (int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_set_OptimalBufferSamplesCount_m5B583871BC4784C547969664A7DCC45343792E7F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Config_set_OptimalBufferSamplesCount_m5B583871BC4784C547969664A7DCC45343792E7F_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5757));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5758));
	{
		// public static int OptimalBufferSamplesCount { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5759));
		int32_t L_0 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		((Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_StaticFields*)il2cpp_codegen_static_fields_for(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var))->___U3COptimalBufferSamplesCountU3Ek__BackingField_4 = L_0;
		return;
	}
}
// System.Int32 OVRHaptics/Config::get_MaximumBufferSamplesCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Config_get_MaximumBufferSamplesCount_mFA9670050A7B57A5778B588CB400DBEB413DE4C0 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_get_MaximumBufferSamplesCount_mFA9670050A7B57A5778B588CB400DBEB413DE4C0_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Config_get_MaximumBufferSamplesCount_mFA9670050A7B57A5778B588CB400DBEB413DE4C0_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5760));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5761));
	{
		// public static int MaximumBufferSamplesCount { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5762));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_0 = ((Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_StaticFields*)il2cpp_codegen_static_fields_for(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var))->___U3CMaximumBufferSamplesCountU3Ek__BackingField_5;
		return L_0;
	}
}
// System.Void OVRHaptics/Config::set_MaximumBufferSamplesCount(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Config_set_MaximumBufferSamplesCount_m9D324EE5E616DCD4DA7F6563973A3B430B6D1C0A (int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_set_MaximumBufferSamplesCount_m9D324EE5E616DCD4DA7F6563973A3B430B6D1C0A_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Config_set_MaximumBufferSamplesCount_m9D324EE5E616DCD4DA7F6563973A3B430B6D1C0A_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5763));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5764));
	{
		// public static int MaximumBufferSamplesCount { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5765));
		int32_t L_0 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		((Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_StaticFields*)il2cpp_codegen_static_fields_for(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var))->___U3CMaximumBufferSamplesCountU3Ek__BackingField_5 = L_0;
		return;
	}
}
// System.Void OVRHaptics/Config::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Config__cctor_m1E562E3C40232AC081DE7CCC55A917623D792DF0 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config__cctor_m1E562E3C40232AC081DE7CCC55A917623D792DF0_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Config__cctor_m1E562E3C40232AC081DE7CCC55A917623D792DF0_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5766));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5767));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5768));
		// Load();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5769));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5770));
		Config_Load_m37407D28EF74FBA74FEDBFD78695E65CD859A330(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5770));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5771));
		return;
	}
}
// System.Void OVRHaptics/Config::Load()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Config_Load_m37407D28EF74FBA74FEDBFD78695E65CD859A330 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_Load_m37407D28EF74FBA74FEDBFD78695E65CD859A330_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&HapticsDesc_tA499A18F90CA6E72D680CBF94F1B189E31F8844A_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	HapticsDesc_tA499A18F90CA6E72D680CBF94F1B189E31F8844A V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Config_Load_m37407D28EF74FBA74FEDBFD78695E65CD859A330_RuntimeMethod_var, NULL, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5772));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5773));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5774));
		// OVRPlugin.HapticsDesc desc = OVRPlugin.GetControllerHapticsDesc((uint)OVRPlugin.Controller.RTouch);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5775));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5776));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		HapticsDesc_tA499A18F90CA6E72D680CBF94F1B189E31F8844A L_0;
		L_0 = OVRPlugin_GetControllerHapticsDesc_m4F5B99D7454F62CAAB43656B5BEBAE3181405737(2, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5776));
		V_0 = L_0;
		// SampleRateHz = desc.SampleRateHz;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5777));
		HapticsDesc_tA499A18F90CA6E72D680CBF94F1B189E31F8844A L_1 = V_0;
		int32_t L_2 = L_1.___SampleRateHz_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5778));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		Config_set_SampleRateHz_mDCD3C6D84B82FAEE86652D00EB57F6D1C52692B5_inline(L_2, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5778));
		// SampleSizeInBytes = desc.SampleSizeInBytes;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5779));
		HapticsDesc_tA499A18F90CA6E72D680CBF94F1B189E31F8844A L_3 = V_0;
		int32_t L_4 = L_3.___SampleSizeInBytes_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5780));
		Config_set_SampleSizeInBytes_mFD9B00CDEDFDB3C01D5958A9ECEEF22C80651A22_inline(L_4, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5780));
		// MinimumSafeSamplesQueued = desc.MinimumSafeSamplesQueued;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5781));
		HapticsDesc_tA499A18F90CA6E72D680CBF94F1B189E31F8844A L_5 = V_0;
		int32_t L_6 = L_5.___MinimumSafeSamplesQueued_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5782));
		Config_set_MinimumSafeSamplesQueued_m08F042C5BB8DCCBEE448EAD12412D3336ABAEFC5_inline(L_6, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5782));
		// MinimumBufferSamplesCount = desc.MinimumBufferSamplesCount;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5783));
		HapticsDesc_tA499A18F90CA6E72D680CBF94F1B189E31F8844A L_7 = V_0;
		int32_t L_8 = L_7.___MinimumBufferSamplesCount_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5784));
		Config_set_MinimumBufferSamplesCount_m866A99335F02A0402AEE83DA6BDD06BEB7FEA7A3_inline(L_8, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5784));
		// OptimalBufferSamplesCount = desc.OptimalBufferSamplesCount;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5785));
		HapticsDesc_tA499A18F90CA6E72D680CBF94F1B189E31F8844A L_9 = V_0;
		int32_t L_10 = L_9.___OptimalBufferSamplesCount_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5786));
		Config_set_OptimalBufferSamplesCount_m5B583871BC4784C547969664A7DCC45343792E7F_inline(L_10, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5786));
		// MaximumBufferSamplesCount = desc.MaximumBufferSamplesCount;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5787));
		HapticsDesc_tA499A18F90CA6E72D680CBF94F1B189E31F8844A L_11 = V_0;
		int32_t L_12 = L_11.___MaximumBufferSamplesCount_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5788));
		Config_set_MaximumBufferSamplesCount_m9D324EE5E616DCD4DA7F6563973A3B430B6D1C0A_inline(L_12, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5788));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5789));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void OVRHaptics/OVRHapticsChannel::.ctor(System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsChannel__ctor_m79C872D3637A1862B08A58D00A21F413D3B1CA96 (OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853* __this, uint32_t ___0_outputIndex, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsChannel__ctor_m79C872D3637A1862B08A58D00A21F413D3B1CA96_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_outputIndex));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHapticsChannel__ctor_m79C872D3637A1862B08A58D00A21F413D3B1CA96_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5790));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5791));
	{
		// public OVRHapticsChannel(uint outputIndex)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5792));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5793));
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5793));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5794));
		// m_output = m_outputs[outputIndex];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5795));
		il2cpp_codegen_runtime_class_init_inline(OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C_il2cpp_TypeInfo_var);
		OVRHapticsOutputU5BU5D_tF2F7D8627C25B56A905E3C8574260767FB659BA7* L_0 = ((OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C_StaticFields*)il2cpp_codegen_static_fields_for(OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C_il2cpp_TypeInfo_var))->___m_outputs_3;
		uint32_t L_1 = ___0_outputIndex;
		NullCheck(L_0);
		uint32_t L_2 = L_1;
		OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE* L_3 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_2));
		__this->___m_output_0 = L_3;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_output_0), (void*)L_3);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5796));
		return;
	}
}
// System.Void OVRHaptics/OVRHapticsChannel::Preempt(OVRHapticsClip)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsChannel_Preempt_m631918450856E9AF177CE3893792CB93663A89E6 (OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853* __this, OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* ___0_clip, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsChannel_Preempt_m631918450856E9AF177CE3893792CB93663A89E6_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_clip));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHapticsChannel_Preempt_m631918450856E9AF177CE3893792CB93663A89E6_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5797));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5798));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5799));
		// m_output.Preempt(clip);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5800));
		OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE* L_0 = __this->___m_output_0;
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_1 = ___0_clip;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5801));
		NullCheck(L_0);
		OVRHapticsOutput_Preempt_m61A86B9122AB9DD061EE376161F1F8FF3CD4C92D(L_0, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5801));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5802));
		return;
	}
}
// System.Void OVRHaptics/OVRHapticsChannel::Queue(OVRHapticsClip)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsChannel_Queue_mE80EB13C876985FE530F96E93E3D3F839BA3040C (OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853* __this, OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* ___0_clip, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsChannel_Queue_mE80EB13C876985FE530F96E93E3D3F839BA3040C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_clip));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHapticsChannel_Queue_mE80EB13C876985FE530F96E93E3D3F839BA3040C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5803));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5804));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5805));
		// m_output.Queue(clip);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5806));
		OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE* L_0 = __this->___m_output_0;
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_1 = ___0_clip;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5807));
		NullCheck(L_0);
		OVRHapticsOutput_Queue_m171B7A50C5470F5F17E89E80C963CE5F688F0DA7(L_0, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5807));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5808));
		return;
	}
}
// System.Void OVRHaptics/OVRHapticsChannel::Mix(OVRHapticsClip)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsChannel_Mix_m5FBD6E1C1C9CBCDA0C8227E755B18FC252034D47 (OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853* __this, OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* ___0_clip, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsChannel_Mix_m5FBD6E1C1C9CBCDA0C8227E755B18FC252034D47_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_clip));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHapticsChannel_Mix_m5FBD6E1C1C9CBCDA0C8227E755B18FC252034D47_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5809));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5810));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5811));
		// m_output.Mix(clip);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5812));
		OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE* L_0 = __this->___m_output_0;
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_1 = ___0_clip;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5813));
		NullCheck(L_0);
		OVRHapticsOutput_Mix_m495B3113A50775D379257E2DFE8BE61ACDEDA2DB(L_0, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5813));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5814));
		return;
	}
}
// System.Void OVRHaptics/OVRHapticsChannel::Clear()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsChannel_Clear_m3C6819C8769264B5CF6A160234CD57D6036E3FE7 (OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsChannel_Clear_m3C6819C8769264B5CF6A160234CD57D6036E3FE7_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsChannel_t75D4C7E9D31A769189F2B58DA8DB552C97CA6853_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHapticsChannel_Clear_m3C6819C8769264B5CF6A160234CD57D6036E3FE7_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5815));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5816));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5817));
		// m_output.Clear();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5818));
		OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE* L_0 = __this->___m_output_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5819));
		NullCheck(L_0);
		OVRHapticsOutput_Clear_m9AB99B742ACA194E3345109759C065E0EC12DACA(L_0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5819));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5820));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void OVRHaptics/OVRHapticsOutput::.ctor(System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsOutput__ctor_mA154790252DB03E79E6BCF543F05390AE10CD934 (OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE* __this, uint32_t ___0_controller, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1__ctor_m8A0FEDCD4360E80E51A1E6E839F94C725FFDB633_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsOutput__ctor_mA154790252DB03E79E6BCF543F05390AE10CD934_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRNativeBuffer_tEBEDDBFD193B5EE2FE1E0C1B22AA823FB3703915_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_controller));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHapticsOutput__ctor_mA154790252DB03E79E6BCF543F05390AE10CD934_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5821));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5822));
	{
		// private bool m_lowLatencyMode = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5823));
		__this->___m_lowLatencyMode_0 = (bool)1;
		// private bool m_paddingEnabled = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5824));
		__this->___m_paddingEnabled_1 = (bool)1;
		// private int m_prevSamplesQueued = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5825));
		__this->___m_prevSamplesQueued_2 = 0;
		// private float m_prevSamplesQueuedTime = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5826));
		__this->___m_prevSamplesQueuedTime_3 = (0.0f);
		// private int m_numPredictionHits = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5827));
		__this->___m_numPredictionHits_4 = 0;
		// private int m_numPredictionMisses = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5828));
		__this->___m_numPredictionMisses_5 = 0;
		// private int m_numUnderruns = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5829));
		__this->___m_numUnderruns_6 = 0;
		// private List<ClipPlaybackTracker> m_pendingClips = new List<ClipPlaybackTracker>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5830));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5831));
		List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6* L_0 = (List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6*)il2cpp_codegen_object_new(List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6_il2cpp_TypeInfo_var);
		NullCheck(L_0);
		List_1__ctor_m8A0FEDCD4360E80E51A1E6E839F94C725FFDB633(L_0, List_1__ctor_m8A0FEDCD4360E80E51A1E6E839F94C725FFDB633_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5831));
		__this->___m_pendingClips_7 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_pendingClips_7), (void*)L_0);
		// private uint m_controller = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5832));
		__this->___m_controller_8 = 0;
		// private OVRNativeBuffer m_nativeBuffer = new OVRNativeBuffer(OVRHaptics.Config.MaximumBufferSamplesCount * OVRHaptics.Config.SampleSizeInBytes);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5833));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5834));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_1;
		L_1 = Config_get_MaximumBufferSamplesCount_mFA9670050A7B57A5778B588CB400DBEB413DE4C0_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5834));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5835));
		int32_t L_2;
		L_2 = Config_get_SampleSizeInBytes_m8A59438CA870B1DEDA2DDE836BBF513D4DA6C209_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5835));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5836));
		OVRNativeBuffer_tEBEDDBFD193B5EE2FE1E0C1B22AA823FB3703915* L_3 = (OVRNativeBuffer_tEBEDDBFD193B5EE2FE1E0C1B22AA823FB3703915*)il2cpp_codegen_object_new(OVRNativeBuffer_tEBEDDBFD193B5EE2FE1E0C1B22AA823FB3703915_il2cpp_TypeInfo_var);
		NullCheck(L_3);
		OVRNativeBuffer__ctor_m49B59D113EB19FB7AB2111CBCD8AC8D2D0EF4285(L_3, ((int32_t)il2cpp_codegen_multiply(L_1, L_2)), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5836));
		__this->___m_nativeBuffer_9 = L_3;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_nativeBuffer_9), (void*)L_3);
		// private OVRHapticsClip m_paddingClip = new OVRHapticsClip();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5837));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5838));
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_4 = (OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C*)il2cpp_codegen_object_new(OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C_il2cpp_TypeInfo_var);
		NullCheck(L_4);
		OVRHapticsClip__ctor_m42DBDF3ECFAD1D75A8C835F65532743278009A08(L_4, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5838));
		__this->___m_paddingClip_10 = L_4;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_paddingClip_10), (void*)L_4);
		// private int PrevSampleRateHz = -1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5839));
		__this->___PrevSampleRateHz_11 = (-1);
		// public OVRHapticsOutput(uint controller)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5840));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5841));
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5841));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5842));
		// m_paddingEnabled = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5843));
		__this->___m_paddingEnabled_1 = (bool)0;
		// m_controller = controller;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5844));
		uint32_t L_5 = ___0_controller;
		__this->___m_controller_8 = L_5;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5845));
		return;
	}
}
// System.Void OVRHaptics/OVRHapticsOutput::Process()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsOutput_Process_mD508D5EA14E13D5D1395D5A958770A9158A8912D (OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&HapticsBuffer_t05090BEFD2D209883C588225318CD620E29EF181_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&HapticsState_tF1FED426B2261FB06D69988945D47B96DC067ABD_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_RemoveAt_m7C70CF4778FAA1C22586E0F909585AD0F1A9172C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Count_m56AACF0D9683BE0A6929A5B9DE131EE44C5DC9C1_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Item_m1DF20120684518D1E70C0DC8F9D80031B06744F3_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Marshal_tD976A56A90263C3CE2B780D4B1CADADE2E70B4A7_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsOutput_Process_mD508D5EA14E13D5D1395D5A958770A9158A8912D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral40457678CE607C8ACB74508CC74E43DBC9E7CFAC);
		s_Il2CppMethodInitialized = true;
	}
	HapticsState_tF1FED426B2261FB06D69988945D47B96DC067ABD V_0;
	memset((&V_0), 0, sizeof(V_0));
	float V_1 = 0.0f;
	int32_t V_2 = 0;
	int32_t V_3 = 0;
	int32_t V_4 = 0;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	int32_t V_9 = 0;
	bool V_10 = false;
	bool V_11 = false;
	bool V_12 = false;
	bool V_13 = false;
	float V_14 = 0.0f;
	float V_15 = 0.0f;
	int32_t V_16 = 0;
	int32_t V_17 = 0;
	bool V_18 = false;
	bool V_19 = false;
	bool V_20 = false;
	bool V_21 = false;
	int32_t V_22 = 0;
	int32_t V_23 = 0;
	bool V_24 = false;
	bool V_25 = false;
	int32_t V_26 = 0;
	int32_t V_27 = 0;
	int32_t V_28 = 0;
	bool V_29 = false;
	int32_t V_30 = 0;
	bool V_31 = false;
	bool V_32 = false;
	bool V_33 = false;
	int32_t V_34 = 0;
	bool V_35 = false;
	bool V_36 = false;
	bool V_37 = false;
	int32_t V_38 = 0;
	int32_t V_39 = 0;
	int32_t V_40 = 0;
	bool V_41 = false;
	HapticsBuffer_t05090BEFD2D209883C588225318CD620E29EF181 V_42;
	memset((&V_42), 0, sizeof(V_42));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3), (&V_4), (&V_9), (&V_14), (&V_15), (&V_16), (&V_17), (&V_22), (&V_23), (&V_26), (&V_27), (&V_28), (&V_30), (&V_34), (&V_38), (&V_39), (&V_40), (&V_42));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHapticsOutput_Process_mD508D5EA14E13D5D1395D5A958770A9158A8912D_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5846));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5847));
	int32_t G_B15_0 = 0;
	int32_t G_B37_0 = 0;
	int32_t G_B45_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5848));
		// if (OVRHaptics.Config.SampleRateHz == 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5849));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5850));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_0;
		L_0 = Config_get_SampleRateHz_m2D1B79A8EC0A19BA0EA97E6B3039D15788BB9F47_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5850));
		V_5 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5851));
		bool L_1 = V_5;
		if (!L_1)
		{
			goto IL_0038;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5852));
		// if(PrevSampleRateHz != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5853));
		int32_t L_2 = __this->___PrevSampleRateHz_11;
		V_6 = (bool)((!(((uint32_t)L_2) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5854));
		bool L_3 = V_6;
		if (!L_3)
		{
			goto IL_0033;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5855));
		// Debug.Log("Unable to process a controller whose SampleRateHz is 0 now.");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5856));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5857));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_Log_m87A9A3C761FF5C43ED8A53B16190A53D08F818BB(_stringLiteral40457678CE607C8ACB74508CC74E43DBC9E7CFAC, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5857));
		// PrevSampleRateHz = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5858));
		__this->___PrevSampleRateHz_11 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5859));
	}

IL_0033:
	{
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5860));
		goto IL_042f;
	}

IL_0038:
	{
		// PrevSampleRateHz = OVRHaptics.Config.SampleRateHz;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5861));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5862));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_4;
		L_4 = Config_get_SampleRateHz_m2D1B79A8EC0A19BA0EA97E6B3039D15788BB9F47_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5862));
		__this->___PrevSampleRateHz_11 = L_4;
		// if (m_nativeBuffer.GetCapacity() != Config.MaximumBufferSamplesCount * Config.SampleSizeInBytes)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5863));
		OVRNativeBuffer_tEBEDDBFD193B5EE2FE1E0C1B22AA823FB3703915* L_5 = __this->___m_nativeBuffer_9;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5864));
		NullCheck(L_5);
		int32_t L_6;
		L_6 = OVRNativeBuffer_GetCapacity_m388215B1A6727C487815D040FE7DF9E91B2EA1AF(L_5, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5864));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5865));
		int32_t L_7;
		L_7 = Config_get_MaximumBufferSamplesCount_mFA9670050A7B57A5778B588CB400DBEB413DE4C0_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5865));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5866));
		int32_t L_8;
		L_8 = Config_get_SampleSizeInBytes_m8A59438CA870B1DEDA2DDE836BBF513D4DA6C209_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5866));
		V_7 = (bool)((((int32_t)((((int32_t)L_6) == ((int32_t)((int32_t)il2cpp_codegen_multiply(L_7, L_8))))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5867));
		bool L_9 = V_7;
		if (!L_9)
		{
			goto IL_007d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5868));
		// m_nativeBuffer.Reset(Config.MaximumBufferSamplesCount * Config.SampleSizeInBytes);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5869));
		OVRNativeBuffer_tEBEDDBFD193B5EE2FE1E0C1B22AA823FB3703915* L_10 = __this->___m_nativeBuffer_9;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5870));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_11;
		L_11 = Config_get_MaximumBufferSamplesCount_mFA9670050A7B57A5778B588CB400DBEB413DE4C0_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5870));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5871));
		int32_t L_12;
		L_12 = Config_get_SampleSizeInBytes_m8A59438CA870B1DEDA2DDE836BBF513D4DA6C209_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5871));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5872));
		NullCheck(L_10);
		OVRNativeBuffer_Reset_m65A403E428F766CF99119FFDDC3824A856F6B45A(L_10, ((int32_t)il2cpp_codegen_multiply(L_11, L_12)), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5872));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5873));
	}

IL_007d:
	{
		// var hapticsState = OVRPlugin.GetControllerHapticsState(m_controller);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5874));
		uint32_t L_13 = __this->___m_controller_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5875));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		HapticsState_tF1FED426B2261FB06D69988945D47B96DC067ABD L_14;
		L_14 = OVRPlugin_GetControllerHapticsState_mEEA959FE0B91F35368C4229D5423C70C448E03DE(L_13, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5875));
		V_0 = L_14;
		// float elapsedTime = Time.realtimeSinceStartup - m_prevSamplesQueuedTime;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5876));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5877));
		float L_15;
		L_15 = Time_get_realtimeSinceStartup_m73B3CB73175D79A44333D59BB70F9EDE55EC9510(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5877));
		float L_16 = __this->___m_prevSamplesQueuedTime_3;
		V_1 = ((float)il2cpp_codegen_subtract(L_15, L_16));
		// if (m_prevSamplesQueued > 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5878));
		int32_t L_17 = __this->___m_prevSamplesQueued_2;
		V_8 = (bool)((((int32_t)L_17) > ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5879));
		bool L_18 = V_8;
		if (!L_18)
		{
			goto IL_013e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5880));
		// int expectedSamples = m_prevSamplesQueued - (int)(elapsedTime * OVRHaptics.Config.SampleRateHz + 0.5f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5881));
		int32_t L_19 = __this->___m_prevSamplesQueued_2;
		float L_20 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5882));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_21;
		L_21 = Config_get_SampleRateHz_m2D1B79A8EC0A19BA0EA97E6B3039D15788BB9F47_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5882));
		V_9 = ((int32_t)il2cpp_codegen_subtract(L_19, il2cpp_codegen_cast_double_to_int<int32_t>(((float)il2cpp_codegen_add(((float)il2cpp_codegen_multiply(L_20, ((float)L_21))), (0.5f))))));
		// if (expectedSamples < 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5883));
		int32_t L_22 = V_9;
		V_10 = (bool)((((int32_t)L_22) < ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5884));
		bool L_23 = V_10;
		if (!L_23)
		{
			goto IL_00cf;
		}
	}
	{
		// expectedSamples = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5885));
		V_9 = 0;
	}

IL_00cf:
	{
		// if ((hapticsState.SamplesQueued - expectedSamples) == 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5886));
		HapticsState_tF1FED426B2261FB06D69988945D47B96DC067ABD L_24 = V_0;
		int32_t L_25 = L_24.___SamplesQueued_1;
		int32_t L_26 = V_9;
		V_11 = (bool)((((int32_t)((int32_t)il2cpp_codegen_subtract(L_25, L_26))) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5887));
		bool L_27 = V_11;
		if (!L_27)
		{
			goto IL_00f1;
		}
	}
	{
		// m_numPredictionHits++;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5888));
		int32_t L_28 = __this->___m_numPredictionHits_4;
		__this->___m_numPredictionHits_4 = ((int32_t)il2cpp_codegen_add(L_28, 1));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5889));
		goto IL_00ff;
	}

IL_00f1:
	{
		// m_numPredictionMisses++;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5890));
		int32_t L_29 = __this->___m_numPredictionMisses_5;
		__this->___m_numPredictionMisses_5 = ((int32_t)il2cpp_codegen_add(L_29, 1));
	}

IL_00ff:
	{
		// if ((expectedSamples > 0) && (hapticsState.SamplesQueued == 0))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5891));
		int32_t L_30 = V_9;
		if ((((int32_t)L_30) <= ((int32_t)0)))
		{
			goto IL_010f;
		}
	}
	{
		HapticsState_tF1FED426B2261FB06D69988945D47B96DC067ABD L_31 = V_0;
		int32_t L_32 = L_31.___SamplesQueued_1;
		G_B15_0 = ((((int32_t)L_32) == ((int32_t)0))? 1 : 0);
		goto IL_0110;
	}

IL_010f:
	{
		G_B15_0 = 0;
	}

IL_0110:
	{
		V_12 = (bool)G_B15_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5892));
		bool L_33 = V_12;
		if (!L_33)
		{
			goto IL_0126;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5893));
		// m_numUnderruns++;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5894));
		int32_t L_34 = __this->___m_numUnderruns_6;
		__this->___m_numUnderruns_6 = ((int32_t)il2cpp_codegen_add(L_34, 1));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5895));
	}

IL_0126:
	{
		// m_prevSamplesQueued = hapticsState.SamplesQueued;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5896));
		HapticsState_tF1FED426B2261FB06D69988945D47B96DC067ABD L_35 = V_0;
		int32_t L_36 = L_35.___SamplesQueued_1;
		__this->___m_prevSamplesQueued_2 = L_36;
		// m_prevSamplesQueuedTime = Time.realtimeSinceStartup;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5897));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5898));
		float L_37;
		L_37 = Time_get_realtimeSinceStartup_m73B3CB73175D79A44333D59BB70F9EDE55EC9510(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5898));
		__this->___m_prevSamplesQueuedTime_3 = L_37;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5899));
	}

IL_013e:
	{
		// int desiredSamplesCount = OVRHaptics.Config.OptimalBufferSamplesCount;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5900));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5901));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_38;
		L_38 = Config_get_OptimalBufferSamplesCount_mBC971D5C4CF6F34A8A3925DC8103A09E3E8BF4F7_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5901));
		V_2 = L_38;
		// if (m_lowLatencyMode)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5902));
		bool L_39 = __this->___m_lowLatencyMode_0;
		V_13 = L_39;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5903));
		bool L_40 = V_13;
		if (!L_40)
		{
			goto IL_018e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5904));
		// float sampleRateMs = 1000.0f / (float)OVRHaptics.Config.SampleRateHz;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5905));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5906));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_41;
		L_41 = Config_get_SampleRateHz_m2D1B79A8EC0A19BA0EA97E6B3039D15788BB9F47_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5906));
		V_14 = ((float)((1000.0f)/((float)L_41)));
		// float elapsedMs = elapsedTime * 1000.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5907));
		float L_42 = V_1;
		V_15 = ((float)il2cpp_codegen_multiply(L_42, (1000.0f)));
		// int samplesNeededPerFrame = (int)Mathf.Ceil(elapsedMs / sampleRateMs);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5908));
		float L_43 = V_15;
		float L_44 = V_14;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5909));
		float L_45;
		L_45 = ceilf(((float)(L_43/L_44)));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5909));
		V_16 = il2cpp_codegen_cast_double_to_int<int32_t>(L_45);
		// int lowLatencySamplesCount = OVRHaptics.Config.MinimumSafeSamplesQueued + samplesNeededPerFrame;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5910));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5911));
		int32_t L_46;
		L_46 = Config_get_MinimumSafeSamplesQueued_m479D3DEBCD5251637DC7FDE141FBECAC70DE5A1C_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5911));
		int32_t L_47 = V_16;
		V_17 = ((int32_t)il2cpp_codegen_add(L_46, L_47));
		// if (lowLatencySamplesCount < desiredSamplesCount)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5912));
		int32_t L_48 = V_17;
		int32_t L_49 = V_2;
		V_18 = (bool)((((int32_t)L_48) < ((int32_t)L_49))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5913));
		bool L_50 = V_18;
		if (!L_50)
		{
			goto IL_018d;
		}
	}
	{
		// desiredSamplesCount = lowLatencySamplesCount;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5914));
		int32_t L_51 = V_17;
		V_2 = L_51;
	}

IL_018d:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5915));
	}

IL_018e:
	{
		// if (hapticsState.SamplesQueued > desiredSamplesCount)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5916));
		HapticsState_tF1FED426B2261FB06D69988945D47B96DC067ABD L_52 = V_0;
		int32_t L_53 = L_52.___SamplesQueued_1;
		int32_t L_54 = V_2;
		V_19 = (bool)((((int32_t)L_53) > ((int32_t)L_54))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5917));
		bool L_55 = V_19;
		if (!L_55)
		{
			goto IL_01a2;
		}
	}
	{
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5918));
		goto IL_042f;
	}

IL_01a2:
	{
		// if (desiredSamplesCount > OVRHaptics.Config.MaximumBufferSamplesCount)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5919));
		int32_t L_56 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5920));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_57;
		L_57 = Config_get_MaximumBufferSamplesCount_mFA9670050A7B57A5778B588CB400DBEB413DE4C0_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5920));
		V_20 = (bool)((((int32_t)L_56) > ((int32_t)L_57))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5921));
		bool L_58 = V_20;
		if (!L_58)
		{
			goto IL_01b6;
		}
	}
	{
		// desiredSamplesCount = OVRHaptics.Config.MaximumBufferSamplesCount;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5922));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5923));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_59;
		L_59 = Config_get_MaximumBufferSamplesCount_mFA9670050A7B57A5778B588CB400DBEB413DE4C0_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5923));
		V_2 = L_59;
	}

IL_01b6:
	{
		// if (desiredSamplesCount > hapticsState.SamplesAvailable)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5924));
		int32_t L_60 = V_2;
		HapticsState_tF1FED426B2261FB06D69988945D47B96DC067ABD L_61 = V_0;
		int32_t L_62 = L_61.___SamplesAvailable_0;
		V_21 = (bool)((((int32_t)L_60) > ((int32_t)L_62))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5925));
		bool L_63 = V_21;
		if (!L_63)
		{
			goto IL_01cc;
		}
	}
	{
		// desiredSamplesCount = hapticsState.SamplesAvailable;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5926));
		HapticsState_tF1FED426B2261FB06D69988945D47B96DC067ABD L_64 = V_0;
		int32_t L_65 = L_64.___SamplesAvailable_0;
		V_2 = L_65;
	}

IL_01cc:
	{
		// int acquiredSamplesCount = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5927));
		V_3 = 0;
		// int clipIndex = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5928));
		V_4 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5929));
		goto IL_02a8;
	}

IL_01d6:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5930));
		// int numSamplesToCopy = desiredSamplesCount - acquiredSamplesCount;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5931));
		int32_t L_66 = V_2;
		int32_t L_67 = V_3;
		V_22 = ((int32_t)il2cpp_codegen_subtract(L_66, L_67));
		// int remainingSamplesInClip = m_pendingClips[clipIndex].Clip.Count - m_pendingClips[clipIndex].ReadCount;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5932));
		List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6* L_68 = __this->___m_pendingClips_7;
		int32_t L_69 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5933));
		NullCheck(L_68);
		ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* L_70;
		L_70 = List_1_get_Item_m1DF20120684518D1E70C0DC8F9D80031B06744F3(L_68, L_69, List_1_get_Item_m1DF20120684518D1E70C0DC8F9D80031B06744F3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5933));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5934));
		NullCheck(L_70);
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_71;
		L_71 = ClipPlaybackTracker_get_Clip_m5F7BF9A75928114403808D29DCF2E00243A5D87A_inline(L_70, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5934));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5935));
		NullCheck(L_71);
		int32_t L_72;
		L_72 = OVRHapticsClip_get_Count_mF6DCD041E169A35A5B208FE92AEE5D47269F107E_inline(L_71, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5935));
		List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6* L_73 = __this->___m_pendingClips_7;
		int32_t L_74 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5936));
		NullCheck(L_73);
		ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* L_75;
		L_75 = List_1_get_Item_m1DF20120684518D1E70C0DC8F9D80031B06744F3(L_73, L_74, List_1_get_Item_m1DF20120684518D1E70C0DC8F9D80031B06744F3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5936));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5937));
		NullCheck(L_75);
		int32_t L_76;
		L_76 = ClipPlaybackTracker_get_ReadCount_m5CB89D120FC361680A8450515CA02357D2879191_inline(L_75, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5937));
		V_23 = ((int32_t)il2cpp_codegen_subtract(L_72, L_76));
		// if (numSamplesToCopy > remainingSamplesInClip)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5938));
		int32_t L_77 = V_22;
		int32_t L_78 = V_23;
		V_24 = (bool)((((int32_t)L_77) > ((int32_t)L_78))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5939));
		bool L_79 = V_24;
		if (!L_79)
		{
			goto IL_0218;
		}
	}
	{
		// numSamplesToCopy = remainingSamplesInClip;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5940));
		int32_t L_80 = V_23;
		V_22 = L_80;
	}

IL_0218:
	{
		// if (numSamplesToCopy > 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5941));
		int32_t L_81 = V_22;
		V_25 = (bool)((((int32_t)L_81) > ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5942));
		bool L_82 = V_25;
		if (!L_82)
		{
			goto IL_02a1;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5943));
		// int numBytes = numSamplesToCopy * OVRHaptics.Config.SampleSizeInBytes;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5944));
		int32_t L_83 = V_22;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5945));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_84;
		L_84 = Config_get_SampleSizeInBytes_m8A59438CA870B1DEDA2DDE836BBF513D4DA6C209_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5945));
		V_26 = ((int32_t)il2cpp_codegen_multiply(L_83, L_84));
		// int dstOffset = acquiredSamplesCount * OVRHaptics.Config.SampleSizeInBytes;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5946));
		int32_t L_85 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5947));
		int32_t L_86;
		L_86 = Config_get_SampleSizeInBytes_m8A59438CA870B1DEDA2DDE836BBF513D4DA6C209_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5947));
		V_27 = ((int32_t)il2cpp_codegen_multiply(L_85, L_86));
		// int srcOffset = m_pendingClips[clipIndex].ReadCount * OVRHaptics.Config.SampleSizeInBytes;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5948));
		List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6* L_87 = __this->___m_pendingClips_7;
		int32_t L_88 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5949));
		NullCheck(L_87);
		ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* L_89;
		L_89 = List_1_get_Item_m1DF20120684518D1E70C0DC8F9D80031B06744F3(L_87, L_88, List_1_get_Item_m1DF20120684518D1E70C0DC8F9D80031B06744F3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5949));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5950));
		NullCheck(L_89);
		int32_t L_90;
		L_90 = ClipPlaybackTracker_get_ReadCount_m5CB89D120FC361680A8450515CA02357D2879191_inline(L_89, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5950));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5951));
		int32_t L_91;
		L_91 = Config_get_SampleSizeInBytes_m8A59438CA870B1DEDA2DDE836BBF513D4DA6C209_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5951));
		V_28 = ((int32_t)il2cpp_codegen_multiply(L_90, L_91));
		// Marshal.Copy(m_pendingClips[clipIndex].Clip.Samples, srcOffset, m_nativeBuffer.GetPointer(dstOffset), numBytes);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5952));
		List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6* L_92 = __this->___m_pendingClips_7;
		int32_t L_93 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5953));
		NullCheck(L_92);
		ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* L_94;
		L_94 = List_1_get_Item_m1DF20120684518D1E70C0DC8F9D80031B06744F3(L_92, L_93, List_1_get_Item_m1DF20120684518D1E70C0DC8F9D80031B06744F3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5953));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5954));
		NullCheck(L_94);
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_95;
		L_95 = ClipPlaybackTracker_get_Clip_m5F7BF9A75928114403808D29DCF2E00243A5D87A_inline(L_94, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5954));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5955));
		NullCheck(L_95);
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_96;
		L_96 = OVRHapticsClip_get_Samples_m433E8160F5A8874E4AC7972406FB0CC146AC74BE_inline(L_95, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5955));
		int32_t L_97 = V_28;
		OVRNativeBuffer_tEBEDDBFD193B5EE2FE1E0C1B22AA823FB3703915* L_98 = __this->___m_nativeBuffer_9;
		int32_t L_99 = V_27;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5956));
		NullCheck(L_98);
		intptr_t L_100;
		L_100 = OVRNativeBuffer_GetPointer_m0BDE8F3A317E948AA21A16BAF97CDF360C9C6AA7(L_98, L_99, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5956));
		int32_t L_101 = V_26;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5957));
		il2cpp_codegen_runtime_class_init_inline(Marshal_tD976A56A90263C3CE2B780D4B1CADADE2E70B4A7_il2cpp_TypeInfo_var);
		Marshal_Copy_m0FD7BFE70EE28FC67B67A6225AD58F95FEE7EB85(L_96, L_97, L_100, L_101, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5957));
		// m_pendingClips[clipIndex].ReadCount += numSamplesToCopy;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5958));
		List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6* L_102 = __this->___m_pendingClips_7;
		int32_t L_103 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5959));
		NullCheck(L_102);
		ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* L_104;
		L_104 = List_1_get_Item_m1DF20120684518D1E70C0DC8F9D80031B06744F3(L_102, L_103, List_1_get_Item_m1DF20120684518D1E70C0DC8F9D80031B06744F3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5959));
		ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* L_105 = L_104;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5960));
		NullCheck(L_105);
		int32_t L_106;
		L_106 = ClipPlaybackTracker_get_ReadCount_m5CB89D120FC361680A8450515CA02357D2879191_inline(L_105, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5960));
		int32_t L_107 = V_22;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5961));
		NullCheck(L_105);
		ClipPlaybackTracker_set_ReadCount_m5BA54F5A69408488A59C5FFA2DE454E199469671_inline(L_105, ((int32_t)il2cpp_codegen_add(L_106, L_107)), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5961));
		// acquiredSamplesCount += numSamplesToCopy;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5962));
		int32_t L_108 = V_3;
		int32_t L_109 = V_22;
		V_3 = ((int32_t)il2cpp_codegen_add(L_108, L_109));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5963));
	}

IL_02a1:
	{
		// clipIndex++;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5964));
		int32_t L_110 = V_4;
		V_4 = ((int32_t)il2cpp_codegen_add(L_110, 1));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5965));
	}

IL_02a8:
	{
		// while(acquiredSamplesCount < desiredSamplesCount && clipIndex < m_pendingClips.Count)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5966));
		int32_t L_111 = V_3;
		int32_t L_112 = V_2;
		if ((((int32_t)L_111) >= ((int32_t)L_112)))
		{
			goto IL_02bd;
		}
	}
	{
		int32_t L_113 = V_4;
		List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6* L_114 = __this->___m_pendingClips_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5967));
		NullCheck(L_114);
		int32_t L_115;
		L_115 = List_1_get_Count_m56AACF0D9683BE0A6929A5B9DE131EE44C5DC9C1_inline(L_114, List_1_get_Count_m56AACF0D9683BE0A6929A5B9DE131EE44C5DC9C1_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5967));
		G_B37_0 = ((((int32_t)L_113) < ((int32_t)L_115))? 1 : 0);
		goto IL_02be;
	}

IL_02bd:
	{
		G_B37_0 = 0;
	}

IL_02be:
	{
		V_29 = (bool)G_B37_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5968));
		bool L_116 = V_29;
		if (L_116)
		{
			goto IL_01d6;
		}
	}
	{
		// for (int i = m_pendingClips.Count - 1; i >= 0 && m_pendingClips.Count > 0; i--)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5969));
		List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6* L_117 = __this->___m_pendingClips_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5970));
		NullCheck(L_117);
		int32_t L_118;
		L_118 = List_1_get_Count_m56AACF0D9683BE0A6929A5B9DE131EE44C5DC9C1_inline(L_117, List_1_get_Count_m56AACF0D9683BE0A6929A5B9DE131EE44C5DC9C1_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5970));
		V_30 = ((int32_t)il2cpp_codegen_subtract(L_118, 1));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5971));
		goto IL_0322;
	}

IL_02d8:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5972));
		// if (m_pendingClips[i].ReadCount >= m_pendingClips[i].Clip.Count)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5973));
		List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6* L_119 = __this->___m_pendingClips_7;
		int32_t L_120 = V_30;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5974));
		NullCheck(L_119);
		ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* L_121;
		L_121 = List_1_get_Item_m1DF20120684518D1E70C0DC8F9D80031B06744F3(L_119, L_120, List_1_get_Item_m1DF20120684518D1E70C0DC8F9D80031B06744F3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5974));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5975));
		NullCheck(L_121);
		int32_t L_122;
		L_122 = ClipPlaybackTracker_get_ReadCount_m5CB89D120FC361680A8450515CA02357D2879191_inline(L_121, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5975));
		List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6* L_123 = __this->___m_pendingClips_7;
		int32_t L_124 = V_30;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5976));
		NullCheck(L_123);
		ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* L_125;
		L_125 = List_1_get_Item_m1DF20120684518D1E70C0DC8F9D80031B06744F3(L_123, L_124, List_1_get_Item_m1DF20120684518D1E70C0DC8F9D80031B06744F3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5976));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5977));
		NullCheck(L_125);
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_126;
		L_126 = ClipPlaybackTracker_get_Clip_m5F7BF9A75928114403808D29DCF2E00243A5D87A_inline(L_125, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5977));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5978));
		NullCheck(L_126);
		int32_t L_127;
		L_127 = OVRHapticsClip_get_Count_mF6DCD041E169A35A5B208FE92AEE5D47269F107E_inline(L_126, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5978));
		V_31 = (bool)((((int32_t)((((int32_t)L_122) < ((int32_t)L_127))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5979));
		bool L_128 = V_31;
		if (!L_128)
		{
			goto IL_031b;
		}
	}
	{
		// m_pendingClips.RemoveAt(i);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5980));
		List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6* L_129 = __this->___m_pendingClips_7;
		int32_t L_130 = V_30;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5981));
		NullCheck(L_129);
		List_1_RemoveAt_m7C70CF4778FAA1C22586E0F909585AD0F1A9172C(L_129, L_130, List_1_RemoveAt_m7C70CF4778FAA1C22586E0F909585AD0F1A9172C_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5981));
	}

IL_031b:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5982));
		// for (int i = m_pendingClips.Count - 1; i >= 0 && m_pendingClips.Count > 0; i--)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5983));
		int32_t L_131 = V_30;
		V_30 = ((int32_t)il2cpp_codegen_subtract(L_131, 1));
	}

IL_0322:
	{
		// for (int i = m_pendingClips.Count - 1; i >= 0 && m_pendingClips.Count > 0; i--)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5984));
		int32_t L_132 = V_30;
		if ((((int32_t)L_132) < ((int32_t)0)))
		{
			goto IL_0337;
		}
	}
	{
		List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6* L_133 = __this->___m_pendingClips_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5985));
		NullCheck(L_133);
		int32_t L_134;
		L_134 = List_1_get_Count_m56AACF0D9683BE0A6929A5B9DE131EE44C5DC9C1_inline(L_133, List_1_get_Count_m56AACF0D9683BE0A6929A5B9DE131EE44C5DC9C1_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5985));
		G_B45_0 = ((((int32_t)L_134) > ((int32_t)0))? 1 : 0);
		goto IL_0338;
	}

IL_0337:
	{
		G_B45_0 = 0;
	}

IL_0338:
	{
		V_32 = (bool)G_B45_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5986));
		bool L_135 = V_32;
		if (L_135)
		{
			goto IL_02d8;
		}
	}
	{
		// if (m_paddingEnabled)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5987));
		bool L_136 = __this->___m_paddingEnabled_1;
		V_33 = L_136;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5988));
		bool L_137 = V_33;
		if (!L_137)
		{
			goto IL_03d7;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5989));
		// int desiredPadding = desiredSamplesCount - (hapticsState.SamplesQueued + acquiredSamplesCount);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5990));
		int32_t L_138 = V_2;
		HapticsState_tF1FED426B2261FB06D69988945D47B96DC067ABD L_139 = V_0;
		int32_t L_140 = L_139.___SamplesQueued_1;
		int32_t L_141 = V_3;
		V_34 = ((int32_t)il2cpp_codegen_subtract(L_138, ((int32_t)il2cpp_codegen_add(L_140, L_141))));
		// if (desiredPadding < (OVRHaptics.Config.MinimumBufferSamplesCount - acquiredSamplesCount))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5991));
		int32_t L_142 = V_34;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5992));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_143;
		L_143 = Config_get_MinimumBufferSamplesCount_m27DBFB9FEA1CB7EF08AC8C62B2F7B99CF1B9457C_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5992));
		int32_t L_144 = V_3;
		V_35 = (bool)((((int32_t)L_142) < ((int32_t)((int32_t)il2cpp_codegen_subtract(L_143, L_144))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5993));
		bool L_145 = V_35;
		if (!L_145)
		{
			goto IL_0374;
		}
	}
	{
		// desiredPadding = (OVRHaptics.Config.MinimumBufferSamplesCount - acquiredSamplesCount);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5994));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5995));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_146;
		L_146 = Config_get_MinimumBufferSamplesCount_m27DBFB9FEA1CB7EF08AC8C62B2F7B99CF1B9457C_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5995));
		int32_t L_147 = V_3;
		V_34 = ((int32_t)il2cpp_codegen_subtract(L_146, L_147));
	}

IL_0374:
	{
		// if (desiredPadding > hapticsState.SamplesAvailable)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5996));
		int32_t L_148 = V_34;
		HapticsState_tF1FED426B2261FB06D69988945D47B96DC067ABD L_149 = V_0;
		int32_t L_150 = L_149.___SamplesAvailable_0;
		V_36 = (bool)((((int32_t)L_148) > ((int32_t)L_150))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5997));
		bool L_151 = V_36;
		if (!L_151)
		{
			goto IL_038c;
		}
	}
	{
		// desiredPadding = hapticsState.SamplesAvailable;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5998));
		HapticsState_tF1FED426B2261FB06D69988945D47B96DC067ABD L_152 = V_0;
		int32_t L_153 = L_152.___SamplesAvailable_0;
		V_34 = L_153;
	}

IL_038c:
	{
		// if (desiredPadding > 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5999));
		int32_t L_154 = V_34;
		V_37 = (bool)((((int32_t)L_154) > ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6000));
		bool L_155 = V_37;
		if (!L_155)
		{
			goto IL_03d6;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6001));
		// int numBytes = desiredPadding * OVRHaptics.Config.SampleSizeInBytes;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6002));
		int32_t L_156 = V_34;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6003));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_157;
		L_157 = Config_get_SampleSizeInBytes_m8A59438CA870B1DEDA2DDE836BBF513D4DA6C209_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6003));
		V_38 = ((int32_t)il2cpp_codegen_multiply(L_156, L_157));
		// int dstOffset = acquiredSamplesCount * OVRHaptics.Config.SampleSizeInBytes;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6004));
		int32_t L_158 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6005));
		int32_t L_159;
		L_159 = Config_get_SampleSizeInBytes_m8A59438CA870B1DEDA2DDE836BBF513D4DA6C209_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6005));
		V_39 = ((int32_t)il2cpp_codegen_multiply(L_158, L_159));
		// int srcOffset = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6006));
		V_40 = 0;
		// Marshal.Copy(m_paddingClip.Samples, srcOffset, m_nativeBuffer.GetPointer(dstOffset), numBytes);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6007));
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_160 = __this->___m_paddingClip_10;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6008));
		NullCheck(L_160);
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_161;
		L_161 = OVRHapticsClip_get_Samples_m433E8160F5A8874E4AC7972406FB0CC146AC74BE_inline(L_160, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6008));
		int32_t L_162 = V_40;
		OVRNativeBuffer_tEBEDDBFD193B5EE2FE1E0C1B22AA823FB3703915* L_163 = __this->___m_nativeBuffer_9;
		int32_t L_164 = V_39;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6009));
		NullCheck(L_163);
		intptr_t L_165;
		L_165 = OVRNativeBuffer_GetPointer_m0BDE8F3A317E948AA21A16BAF97CDF360C9C6AA7(L_163, L_164, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6009));
		int32_t L_166 = V_38;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6010));
		il2cpp_codegen_runtime_class_init_inline(Marshal_tD976A56A90263C3CE2B780D4B1CADADE2E70B4A7_il2cpp_TypeInfo_var);
		Marshal_Copy_m0FD7BFE70EE28FC67B67A6225AD58F95FEE7EB85(L_161, L_162, L_165, L_166, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6010));
		// acquiredSamplesCount += desiredPadding;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6011));
		int32_t L_167 = V_3;
		int32_t L_168 = V_34;
		V_3 = ((int32_t)il2cpp_codegen_add(L_167, L_168));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6012));
	}

IL_03d6:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6013));
	}

IL_03d7:
	{
		// if (acquiredSamplesCount > 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6014));
		int32_t L_169 = V_3;
		V_41 = (bool)((((int32_t)L_169) > ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6015));
		bool L_170 = V_41;
		if (!L_170)
		{
			goto IL_042f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6016));
		// hapticsBuffer.Samples = m_nativeBuffer.GetPointer();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6017));
		OVRNativeBuffer_tEBEDDBFD193B5EE2FE1E0C1B22AA823FB3703915* L_171 = __this->___m_nativeBuffer_9;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6018));
		NullCheck(L_171);
		intptr_t L_172;
		L_172 = OVRNativeBuffer_GetPointer_m0BDE8F3A317E948AA21A16BAF97CDF360C9C6AA7(L_171, 0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6018));
		(&V_42)->___Samples_0 = L_172;
		// hapticsBuffer.SamplesCount = acquiredSamplesCount;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6019));
		int32_t L_173 = V_3;
		(&V_42)->___SamplesCount_1 = L_173;
		// OVRPlugin.SetControllerHaptics(m_controller, hapticsBuffer);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6020));
		uint32_t L_174 = __this->___m_controller_8;
		HapticsBuffer_t05090BEFD2D209883C588225318CD620E29EF181 L_175 = V_42;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6021));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_176;
		L_176 = OVRPlugin_SetControllerHaptics_mF261D7841611D1A96353C34F471145D69A15A0DE(L_174, L_175, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6021));
		// hapticsState = OVRPlugin.GetControllerHapticsState(m_controller);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6022));
		uint32_t L_177 = __this->___m_controller_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6023));
		HapticsState_tF1FED426B2261FB06D69988945D47B96DC067ABD L_178;
		L_178 = OVRPlugin_GetControllerHapticsState_mEEA959FE0B91F35368C4229D5423C70C448E03DE(L_177, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6023));
		V_0 = L_178;
		// m_prevSamplesQueued = hapticsState.SamplesQueued;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6024));
		HapticsState_tF1FED426B2261FB06D69988945D47B96DC067ABD L_179 = V_0;
		int32_t L_180 = L_179.___SamplesQueued_1;
		__this->___m_prevSamplesQueued_2 = L_180;
		// m_prevSamplesQueuedTime = Time.realtimeSinceStartup;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6025));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6026));
		float L_181;
		L_181 = Time_get_realtimeSinceStartup_m73B3CB73175D79A44333D59BB70F9EDE55EC9510(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6026));
		__this->___m_prevSamplesQueuedTime_3 = L_181;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6027));
	}

IL_042f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6028));
		return;
	}
}
// System.Void OVRHaptics/OVRHapticsOutput::Preempt(OVRHapticsClip)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsOutput_Preempt_m61A86B9122AB9DD061EE376161F1F8FF3CD4C92D (OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE* __this, OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* ___0_clip, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_Add_m666634559A1DC2E23A975D510716DF60BF7B3DA3_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_Clear_m3C38C7FE9F143B773DBEB2AB00D023E99D54342D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsOutput_Preempt_m61A86B9122AB9DD061EE376161F1F8FF3CD4C92D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_clip));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHapticsOutput_Preempt_m61A86B9122AB9DD061EE376161F1F8FF3CD4C92D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6029));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6030));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6031));
		// m_pendingClips.Clear();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6032));
		List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6* L_0 = __this->___m_pendingClips_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6033));
		NullCheck(L_0);
		List_1_Clear_m3C38C7FE9F143B773DBEB2AB00D023E99D54342D_inline(L_0, List_1_Clear_m3C38C7FE9F143B773DBEB2AB00D023E99D54342D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6033));
		// m_pendingClips.Add(new ClipPlaybackTracker(clip));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6034));
		List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6* L_1 = __this->___m_pendingClips_7;
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_2 = ___0_clip;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6035));
		ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* L_3 = (ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B*)il2cpp_codegen_object_new(ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B_il2cpp_TypeInfo_var);
		NullCheck(L_3);
		ClipPlaybackTracker__ctor_m9CAEE1DF7DAD9B70E9CA91652CA67C9A19425F9F(L_3, L_2, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6035));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6036));
		NullCheck(L_1);
		List_1_Add_m666634559A1DC2E23A975D510716DF60BF7B3DA3_inline(L_1, L_3, List_1_Add_m666634559A1DC2E23A975D510716DF60BF7B3DA3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6036));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6037));
		return;
	}
}
// System.Void OVRHaptics/OVRHapticsOutput::Queue(OVRHapticsClip)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsOutput_Queue_m171B7A50C5470F5F17E89E80C963CE5F688F0DA7 (OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE* __this, OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* ___0_clip, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_Add_m666634559A1DC2E23A975D510716DF60BF7B3DA3_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsOutput_Queue_m171B7A50C5470F5F17E89E80C963CE5F688F0DA7_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_clip));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHapticsOutput_Queue_m171B7A50C5470F5F17E89E80C963CE5F688F0DA7_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6038));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6039));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6040));
		// m_pendingClips.Add(new ClipPlaybackTracker(clip));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6041));
		List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6* L_0 = __this->___m_pendingClips_7;
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_1 = ___0_clip;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6042));
		ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* L_2 = (ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B*)il2cpp_codegen_object_new(ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B_il2cpp_TypeInfo_var);
		NullCheck(L_2);
		ClipPlaybackTracker__ctor_m9CAEE1DF7DAD9B70E9CA91652CA67C9A19425F9F(L_2, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6042));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6043));
		NullCheck(L_0);
		List_1_Add_m666634559A1DC2E23A975D510716DF60BF7B3DA3_inline(L_0, L_2, List_1_Add_m666634559A1DC2E23A975D510716DF60BF7B3DA3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6043));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6044));
		return;
	}
}
// System.Void OVRHaptics/OVRHapticsOutput::Mix(OVRHapticsClip)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsOutput_Mix_m495B3113A50775D379257E2DFE8BE61ACDEDA2DB (OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE* __this, OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* ___0_clip, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Byte_t94D9231AC217BE4D2E004C4CD32DF6D099EA41A3_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_Add_m666634559A1DC2E23A975D510716DF60BF7B3DA3_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_RemoveAt_m7C70CF4778FAA1C22586E0F909585AD0F1A9172C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Count_m56AACF0D9683BE0A6929A5B9DE131EE44C5DC9C1_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Item_m1DF20120684518D1E70C0DC8F9D80031B06744F3_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_set_Item_mFE544BC47A6353F6876FD8CB7468508875584F10_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsOutput_Mix_m495B3113A50775D379257E2DFE8BE61ACDEDA2DB_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	int32_t V_1 = 0;
	int32_t V_2 = 0;
	int32_t V_3 = 0;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* V_7 = NULL;
	OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* V_8 = NULL;
	int32_t V_9 = 0;
	int32_t V_10 = 0;
	OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* V_11 = NULL;
	int32_t V_12 = 0;
	bool V_13 = false;
	uint8_t V_14 = 0x0;
	bool V_15 = false;
	bool V_16 = false;
	bool V_17 = false;
	bool V_18 = false;
	bool V_19 = false;
	bool V_20 = false;
	int32_t V_21 = 0;
	bool V_22 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_clip));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3), (&V_7), (&V_8), (&V_9), (&V_10), (&V_11), (&V_12), (&V_14), (&V_21));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHapticsOutput_Mix_m495B3113A50775D379257E2DFE8BE61ACDEDA2DB_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6045));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6046));
	int32_t G_B5_0 = 0;
	int32_t G_B15_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6047));
		// int numClipsToMix = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6048));
		V_0 = 0;
		// int numSamplesToMix = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6049));
		V_1 = 0;
		// int numSamplesRemaining = clip.Count;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6050));
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_0 = ___0_clip;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6051));
		NullCheck(L_0);
		int32_t L_1;
		L_1 = OVRHapticsClip_get_Count_mF6DCD041E169A35A5B208FE92AEE5D47269F107E_inline(L_0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6051));
		V_2 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6052));
		goto IL_0045;
	}

IL_000e:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6053));
		// int numSamplesRemainingInClip = m_pendingClips[numClipsToMix].Clip.Count - m_pendingClips[numClipsToMix].ReadCount;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6054));
		List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6* L_2 = __this->___m_pendingClips_7;
		int32_t L_3 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6055));
		NullCheck(L_2);
		ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* L_4;
		L_4 = List_1_get_Item_m1DF20120684518D1E70C0DC8F9D80031B06744F3(L_2, L_3, List_1_get_Item_m1DF20120684518D1E70C0DC8F9D80031B06744F3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6055));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6056));
		NullCheck(L_4);
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_5;
		L_5 = ClipPlaybackTracker_get_Clip_m5F7BF9A75928114403808D29DCF2E00243A5D87A_inline(L_4, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6056));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6057));
		NullCheck(L_5);
		int32_t L_6;
		L_6 = OVRHapticsClip_get_Count_mF6DCD041E169A35A5B208FE92AEE5D47269F107E_inline(L_5, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6057));
		List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6* L_7 = __this->___m_pendingClips_7;
		int32_t L_8 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6058));
		NullCheck(L_7);
		ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* L_9;
		L_9 = List_1_get_Item_m1DF20120684518D1E70C0DC8F9D80031B06744F3(L_7, L_8, List_1_get_Item_m1DF20120684518D1E70C0DC8F9D80031B06744F3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6058));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6059));
		NullCheck(L_9);
		int32_t L_10;
		L_10 = ClipPlaybackTracker_get_ReadCount_m5CB89D120FC361680A8450515CA02357D2879191_inline(L_9, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6059));
		V_3 = ((int32_t)il2cpp_codegen_subtract(L_6, L_10));
		// numSamplesRemaining -= numSamplesRemainingInClip;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6060));
		int32_t L_11 = V_2;
		int32_t L_12 = V_3;
		V_2 = ((int32_t)il2cpp_codegen_subtract(L_11, L_12));
		// numSamplesToMix += numSamplesRemainingInClip;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6061));
		int32_t L_13 = V_1;
		int32_t L_14 = V_3;
		V_1 = ((int32_t)il2cpp_codegen_add(L_13, L_14));
		// numClipsToMix++;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6062));
		int32_t L_15 = V_0;
		V_0 = ((int32_t)il2cpp_codegen_add(L_15, 1));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6063));
	}

IL_0045:
	{
		// while (numSamplesRemaining > 0 && numClipsToMix < m_pendingClips.Count)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6064));
		int32_t L_16 = V_2;
		if ((((int32_t)L_16) <= ((int32_t)0)))
		{
			goto IL_0059;
		}
	}
	{
		int32_t L_17 = V_0;
		List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6* L_18 = __this->___m_pendingClips_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6065));
		NullCheck(L_18);
		int32_t L_19;
		L_19 = List_1_get_Count_m56AACF0D9683BE0A6929A5B9DE131EE44C5DC9C1_inline(L_18, List_1_get_Count_m56AACF0D9683BE0A6929A5B9DE131EE44C5DC9C1_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6065));
		G_B5_0 = ((((int32_t)L_17) < ((int32_t)L_19))? 1 : 0);
		goto IL_005a;
	}

IL_0059:
	{
		G_B5_0 = 0;
	}

IL_005a:
	{
		V_4 = (bool)G_B5_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6066));
		bool L_20 = V_4;
		if (L_20)
		{
			goto IL_000e;
		}
	}
	{
		// if (numSamplesRemaining > 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6067));
		int32_t L_21 = V_2;
		V_5 = (bool)((((int32_t)L_21) > ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6068));
		bool L_22 = V_5;
		if (!L_22)
		{
			goto IL_0072;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6069));
		// numSamplesToMix += numSamplesRemaining;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6070));
		int32_t L_23 = V_1;
		int32_t L_24 = V_2;
		V_1 = ((int32_t)il2cpp_codegen_add(L_23, L_24));
		// numSamplesRemaining = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6071));
		V_2 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6072));
	}

IL_0072:
	{
		// if (numClipsToMix > 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6073));
		int32_t L_25 = V_0;
		V_6 = (bool)((((int32_t)L_25) > ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6074));
		bool L_26 = V_6;
		if (!L_26)
		{
			goto IL_01f6;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6075));
		// OVRHapticsClip mixClip = new OVRHapticsClip(numSamplesToMix);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6076));
		int32_t L_27 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6077));
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_28 = (OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C*)il2cpp_codegen_object_new(OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C_il2cpp_TypeInfo_var);
		NullCheck(L_28);
		OVRHapticsClip__ctor_m73C1C39F8313D599A215707410A4940361F6C32A(L_28, L_27, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6077));
		V_7 = L_28;
		// OVRHapticsClip a = clip;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6078));
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_29 = ___0_clip;
		V_8 = L_29;
		// int aReadCount = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6079));
		V_9 = 0;
		// for (int i = 0; i < numClipsToMix; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6080));
		V_10 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6081));
		goto IL_016f;
	}

IL_0096:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6082));
		// OVRHapticsClip b = m_pendingClips[i].Clip;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6083));
		List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6* L_30 = __this->___m_pendingClips_7;
		int32_t L_31 = V_10;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6084));
		NullCheck(L_30);
		ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* L_32;
		L_32 = List_1_get_Item_m1DF20120684518D1E70C0DC8F9D80031B06744F3(L_30, L_31, List_1_get_Item_m1DF20120684518D1E70C0DC8F9D80031B06744F3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6084));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6085));
		NullCheck(L_32);
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_33;
		L_33 = ClipPlaybackTracker_get_Clip_m5F7BF9A75928114403808D29DCF2E00243A5D87A_inline(L_32, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6085));
		V_11 = L_33;
		// for(int bReadCount = m_pendingClips[i].ReadCount; bReadCount < b.Count; bReadCount++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6086));
		List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6* L_34 = __this->___m_pendingClips_7;
		int32_t L_35 = V_10;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6087));
		NullCheck(L_34);
		ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* L_36;
		L_36 = List_1_get_Item_m1DF20120684518D1E70C0DC8F9D80031B06744F3(L_34, L_35, List_1_get_Item_m1DF20120684518D1E70C0DC8F9D80031B06744F3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6087));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6088));
		NullCheck(L_36);
		int32_t L_37;
		L_37 = ClipPlaybackTracker_get_ReadCount_m5CB89D120FC361680A8450515CA02357D2879191_inline(L_36, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6088));
		V_12 = L_37;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6089));
		goto IL_0154;
	}

IL_00c4:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6090));
		// if (OVRHaptics.Config.SampleSizeInBytes == 1)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6091));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6092));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_38;
		L_38 = Config_get_SampleSizeInBytes_m8A59438CA870B1DEDA2DDE836BBF513D4DA6C209_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6092));
		V_13 = (bool)((((int32_t)L_38) == ((int32_t)1))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6093));
		bool L_39 = V_13;
		if (!L_39)
		{
			goto IL_014d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6094));
		// byte sample = 0; // TODO support multi-byte samples
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6095));
		V_14 = (uint8_t)0;
		// if ((aReadCount < a.Count) && (bReadCount < b.Count))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6096));
		int32_t L_40 = V_9;
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_41 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6097));
		NullCheck(L_41);
		int32_t L_42;
		L_42 = OVRHapticsClip_get_Count_mF6DCD041E169A35A5B208FE92AEE5D47269F107E_inline(L_41, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6097));
		if ((((int32_t)L_40) >= ((int32_t)L_42)))
		{
			goto IL_00ef;
		}
	}
	{
		int32_t L_43 = V_12;
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_44 = V_11;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6098));
		NullCheck(L_44);
		int32_t L_45;
		L_45 = OVRHapticsClip_get_Count_mF6DCD041E169A35A5B208FE92AEE5D47269F107E_inline(L_44, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6098));
		G_B15_0 = ((((int32_t)L_43) < ((int32_t)L_45))? 1 : 0);
		goto IL_00f0;
	}

IL_00ef:
	{
		G_B15_0 = 0;
	}

IL_00f0:
	{
		V_15 = (bool)G_B15_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6099));
		bool L_46 = V_15;
		if (!L_46)
		{
			goto IL_0123;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6100));
		// sample = (byte)(Mathf.Clamp(a.Samples[aReadCount] + b.Samples[bReadCount], 0, System.Byte.MaxValue)); // TODO support multi-byte samples
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6101));
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_47 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6102));
		NullCheck(L_47);
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_48;
		L_48 = OVRHapticsClip_get_Samples_m433E8160F5A8874E4AC7972406FB0CC146AC74BE_inline(L_47, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6102));
		int32_t L_49 = V_9;
		NullCheck(L_48);
		int32_t L_50 = L_49;
		uint8_t L_51 = (L_48)->GetAt(static_cast<il2cpp_array_size_t>(L_50));
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_52 = V_11;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6103));
		NullCheck(L_52);
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_53;
		L_53 = OVRHapticsClip_get_Samples_m433E8160F5A8874E4AC7972406FB0CC146AC74BE_inline(L_52, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6103));
		int32_t L_54 = V_12;
		NullCheck(L_53);
		int32_t L_55 = L_54;
		uint8_t L_56 = (L_53)->GetAt(static_cast<il2cpp_array_size_t>(L_55));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6104));
		int32_t L_57;
		L_57 = Mathf_Clamp_m4DC36EEFDBE5F07C16249DA568023C5ECCFF0E7B_inline(((int32_t)il2cpp_codegen_add((int32_t)L_51, (int32_t)L_56)), 0, ((int32_t)255), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6104));
		V_14 = (uint8_t)((int32_t)(uint8_t)L_57);
		// aReadCount++;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6105));
		int32_t L_58 = V_9;
		V_9 = ((int32_t)il2cpp_codegen_add(L_58, 1));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6106));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6107));
		goto IL_0142;
	}

IL_0123:
	{
		// else if (bReadCount < b.Count)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6108));
		int32_t L_59 = V_12;
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_60 = V_11;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6109));
		NullCheck(L_60);
		int32_t L_61;
		L_61 = OVRHapticsClip_get_Count_mF6DCD041E169A35A5B208FE92AEE5D47269F107E_inline(L_60, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6109));
		V_16 = (bool)((((int32_t)L_59) < ((int32_t)L_61))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6110));
		bool L_62 = V_16;
		if (!L_62)
		{
			goto IL_0142;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6111));
		// sample = b.Samples[bReadCount]; // TODO support multi-byte samples
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6112));
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_63 = V_11;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6113));
		NullCheck(L_63);
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_64;
		L_64 = OVRHapticsClip_get_Samples_m433E8160F5A8874E4AC7972406FB0CC146AC74BE_inline(L_63, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6113));
		int32_t L_65 = V_12;
		NullCheck(L_64);
		int32_t L_66 = L_65;
		uint8_t L_67 = (L_64)->GetAt(static_cast<il2cpp_array_size_t>(L_66));
		V_14 = L_67;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6114));
	}

IL_0142:
	{
		// mixClip.WriteSample(sample); // TODO support multi-byte samples
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6115));
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_68 = V_7;
		uint8_t L_69 = V_14;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6116));
		NullCheck(L_68);
		OVRHapticsClip_WriteSample_m5C7A13E38F525E2C58DF5A09E1EC9493FCF262ED(L_68, L_69, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6116));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6117));
	}

IL_014d:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6118));
		// for(int bReadCount = m_pendingClips[i].ReadCount; bReadCount < b.Count; bReadCount++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6119));
		int32_t L_70 = V_12;
		V_12 = ((int32_t)il2cpp_codegen_add(L_70, 1));
	}

IL_0154:
	{
		// for(int bReadCount = m_pendingClips[i].ReadCount; bReadCount < b.Count; bReadCount++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6120));
		int32_t L_71 = V_12;
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_72 = V_11;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6121));
		NullCheck(L_72);
		int32_t L_73;
		L_73 = OVRHapticsClip_get_Count_mF6DCD041E169A35A5B208FE92AEE5D47269F107E_inline(L_72, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6121));
		V_17 = (bool)((((int32_t)L_71) < ((int32_t)L_73))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6122));
		bool L_74 = V_17;
		if (L_74)
		{
			goto IL_00c4;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6123));
		// for (int i = 0; i < numClipsToMix; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6124));
		int32_t L_75 = V_10;
		V_10 = ((int32_t)il2cpp_codegen_add(L_75, 1));
	}

IL_016f:
	{
		// for (int i = 0; i < numClipsToMix; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6125));
		int32_t L_76 = V_10;
		int32_t L_77 = V_0;
		V_18 = (bool)((((int32_t)L_76) < ((int32_t)L_77))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6126));
		bool L_78 = V_18;
		if (L_78)
		{
			goto IL_0096;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6127));
		goto IL_01a9;
	}

IL_017f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6128));
		// if (OVRHaptics.Config.SampleSizeInBytes == 1)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6129));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6130));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_79;
		L_79 = Config_get_SampleSizeInBytes_m8A59438CA870B1DEDA2DDE836BBF513D4DA6C209_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6130));
		V_19 = (bool)((((int32_t)L_79) == ((int32_t)1))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6131));
		bool L_80 = V_19;
		if (!L_80)
		{
			goto IL_01a2;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6132));
		// mixClip.WriteSample(a.Samples[aReadCount]); // TODO support multi-byte samples
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6133));
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_81 = V_7;
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_82 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6134));
		NullCheck(L_82);
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_83;
		L_83 = OVRHapticsClip_get_Samples_m433E8160F5A8874E4AC7972406FB0CC146AC74BE_inline(L_82, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6134));
		int32_t L_84 = V_9;
		NullCheck(L_83);
		int32_t L_85 = L_84;
		uint8_t L_86 = (L_83)->GetAt(static_cast<il2cpp_array_size_t>(L_85));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6135));
		NullCheck(L_81);
		OVRHapticsClip_WriteSample_m5C7A13E38F525E2C58DF5A09E1EC9493FCF262ED(L_81, L_86, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6135));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6136));
	}

IL_01a2:
	{
		// aReadCount++;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6137));
		int32_t L_87 = V_9;
		V_9 = ((int32_t)il2cpp_codegen_add(L_87, 1));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6138));
	}

IL_01a9:
	{
		// while (aReadCount < a.Count)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6139));
		int32_t L_88 = V_9;
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_89 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6140));
		NullCheck(L_89);
		int32_t L_90;
		L_90 = OVRHapticsClip_get_Count_mF6DCD041E169A35A5B208FE92AEE5D47269F107E_inline(L_89, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6140));
		V_20 = (bool)((((int32_t)L_88) < ((int32_t)L_90))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6141));
		bool L_91 = V_20;
		if (L_91)
		{
			goto IL_017f;
		}
	}
	{
		// m_pendingClips[0] = new ClipPlaybackTracker(mixClip);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6142));
		List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6* L_92 = __this->___m_pendingClips_7;
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_93 = V_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6143));
		ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* L_94 = (ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B*)il2cpp_codegen_object_new(ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B_il2cpp_TypeInfo_var);
		NullCheck(L_94);
		ClipPlaybackTracker__ctor_m9CAEE1DF7DAD9B70E9CA91652CA67C9A19425F9F(L_94, L_93, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6143));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6144));
		NullCheck(L_92);
		List_1_set_Item_mFE544BC47A6353F6876FD8CB7468508875584F10(L_92, 0, L_94, List_1_set_Item_mFE544BC47A6353F6876FD8CB7468508875584F10_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6144));
		// for (int i = 1; i < numClipsToMix; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6145));
		V_21 = 1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6146));
		goto IL_01e8;
	}

IL_01d3:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6147));
		// m_pendingClips.RemoveAt(1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6148));
		List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6* L_95 = __this->___m_pendingClips_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6149));
		NullCheck(L_95);
		List_1_RemoveAt_m7C70CF4778FAA1C22586E0F909585AD0F1A9172C(L_95, 1, List_1_RemoveAt_m7C70CF4778FAA1C22586E0F909585AD0F1A9172C_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6149));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6150));
		// for (int i = 1; i < numClipsToMix; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6151));
		int32_t L_96 = V_21;
		V_21 = ((int32_t)il2cpp_codegen_add(L_96, 1));
	}

IL_01e8:
	{
		// for (int i = 1; i < numClipsToMix; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6152));
		int32_t L_97 = V_21;
		int32_t L_98 = V_0;
		V_22 = (bool)((((int32_t)L_97) < ((int32_t)L_98))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6153));
		bool L_99 = V_22;
		if (L_99)
		{
			goto IL_01d3;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6154));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6155));
		goto IL_020a;
	}

IL_01f6:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6156));
		// m_pendingClips.Add(new ClipPlaybackTracker(clip));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6157));
		List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6* L_100 = __this->___m_pendingClips_7;
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_101 = ___0_clip;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6158));
		ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* L_102 = (ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B*)il2cpp_codegen_object_new(ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B_il2cpp_TypeInfo_var);
		NullCheck(L_102);
		ClipPlaybackTracker__ctor_m9CAEE1DF7DAD9B70E9CA91652CA67C9A19425F9F(L_102, L_101, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6158));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6159));
		NullCheck(L_100);
		List_1_Add_m666634559A1DC2E23A975D510716DF60BF7B3DA3_inline(L_100, L_102, List_1_Add_m666634559A1DC2E23A975D510716DF60BF7B3DA3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6159));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6160));
	}

IL_020a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6161));
		return;
	}
}
// System.Void OVRHaptics/OVRHapticsOutput::Clear()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsOutput_Clear_m9AB99B742ACA194E3345109759C065E0EC12DACA (OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_Clear_m3C38C7FE9F143B773DBEB2AB00D023E99D54342D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsOutput_Clear_m9AB99B742ACA194E3345109759C065E0EC12DACA_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsOutput_t8AEFB01983659374BAC6EB7381C83F9A05DE70EE_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHapticsOutput_Clear_m9AB99B742ACA194E3345109759C065E0EC12DACA_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6162));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6163));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6164));
		// m_pendingClips.Clear();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6165));
		List_1_tB829B146F0C20427588C75576BC36BB6A1D016E6* L_0 = __this->___m_pendingClips_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6166));
		NullCheck(L_0);
		List_1_Clear_m3C38C7FE9F143B773DBEB2AB00D023E99D54342D_inline(L_0, List_1_Clear_m3C38C7FE9F143B773DBEB2AB00D023E99D54342D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6166));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6167));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Int32 OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker::get_ReadCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ClipPlaybackTracker_get_ReadCount_m5CB89D120FC361680A8450515CA02357D2879191 (ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ClipPlaybackTracker_get_ReadCount_m5CB89D120FC361680A8450515CA02357D2879191_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ClipPlaybackTracker_get_ReadCount_m5CB89D120FC361680A8450515CA02357D2879191_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6168));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6169));
	{
		// public int ReadCount { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6170));
		int32_t L_0 = __this->___U3CReadCountU3Ek__BackingField_0;
		return L_0;
	}
}
// System.Void OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker::set_ReadCount(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ClipPlaybackTracker_set_ReadCount_m5BA54F5A69408488A59C5FFA2DE454E199469671 (ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ClipPlaybackTracker_set_ReadCount_m5BA54F5A69408488A59C5FFA2DE454E199469671_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ClipPlaybackTracker_set_ReadCount_m5BA54F5A69408488A59C5FFA2DE454E199469671_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6171));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6172));
	{
		// public int ReadCount { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6173));
		int32_t L_0 = ___0_value;
		__this->___U3CReadCountU3Ek__BackingField_0 = L_0;
		return;
	}
}
// OVRHapticsClip OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker::get_Clip()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* ClipPlaybackTracker_get_Clip_m5F7BF9A75928114403808D29DCF2E00243A5D87A (ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ClipPlaybackTracker_get_Clip_m5F7BF9A75928114403808D29DCF2E00243A5D87A_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ClipPlaybackTracker_get_Clip_m5F7BF9A75928114403808D29DCF2E00243A5D87A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6174));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6175));
	{
		// public OVRHapticsClip Clip { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6176));
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_0 = __this->___U3CClipU3Ek__BackingField_1;
		return L_0;
	}
}
// System.Void OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker::set_Clip(OVRHapticsClip)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ClipPlaybackTracker_set_Clip_mA7D1F4B5FBE77EFC6F6FD27C4ED45DC65B8CD5ED (ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* __this, OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ClipPlaybackTracker_set_Clip_mA7D1F4B5FBE77EFC6F6FD27C4ED45DC65B8CD5ED_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ClipPlaybackTracker_set_Clip_mA7D1F4B5FBE77EFC6F6FD27C4ED45DC65B8CD5ED_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6177));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6178));
	{
		// public OVRHapticsClip Clip { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6179));
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_0 = ___0_value;
		__this->___U3CClipU3Ek__BackingField_1 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CClipU3Ek__BackingField_1), (void*)L_0);
		return;
	}
}
// System.Void OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker::.ctor(OVRHapticsClip)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ClipPlaybackTracker__ctor_m9CAEE1DF7DAD9B70E9CA91652CA67C9A19425F9F (ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* __this, OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* ___0_clip, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ClipPlaybackTracker__ctor_m9CAEE1DF7DAD9B70E9CA91652CA67C9A19425F9F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_clip));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ClipPlaybackTracker__ctor_m9CAEE1DF7DAD9B70E9CA91652CA67C9A19425F9F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6180));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6181));
	{
		// public ClipPlaybackTracker(OVRHapticsClip clip)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6182));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6183));
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6183));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6184));
		// Clip = clip;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6185));
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_0 = ___0_clip;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6186));
		ClipPlaybackTracker_set_Clip_mA7D1F4B5FBE77EFC6F6FD27C4ED45DC65B8CD5ED_inline(__this, L_0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6186));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6187));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Int32 OVRHapticsClip::get_Count()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRHapticsClip_get_Count_mF6DCD041E169A35A5B208FE92AEE5D47269F107E (OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_get_Count_mF6DCD041E169A35A5B208FE92AEE5D47269F107E_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHapticsClip_get_Count_mF6DCD041E169A35A5B208FE92AEE5D47269F107E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6188));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6189));
	{
		// public int Count { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6190));
		int32_t L_0 = __this->___U3CCountU3Ek__BackingField_0;
		return L_0;
	}
}
// System.Void OVRHapticsClip::set_Count(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsClip_set_Count_m174C326E1966E50541CE7774619B508BC732B810 (OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_set_Count_m174C326E1966E50541CE7774619B508BC732B810_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHapticsClip_set_Count_m174C326E1966E50541CE7774619B508BC732B810_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6191));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6192));
	{
		// public int Count { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6193));
		int32_t L_0 = ___0_value;
		__this->___U3CCountU3Ek__BackingField_0 = L_0;
		return;
	}
}
// System.Int32 OVRHapticsClip::get_Capacity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRHapticsClip_get_Capacity_mB9F5A181D3C9F8208F229AE0A8734C9E18F22A7C (OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_get_Capacity_mB9F5A181D3C9F8208F229AE0A8734C9E18F22A7C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHapticsClip_get_Capacity_mB9F5A181D3C9F8208F229AE0A8734C9E18F22A7C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6194));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6195));
	{
		// public int Capacity { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6196));
		int32_t L_0 = __this->___U3CCapacityU3Ek__BackingField_1;
		return L_0;
	}
}
// System.Void OVRHapticsClip::set_Capacity(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsClip_set_Capacity_m0648341A0AFFFE4D146AE0A3EFAC23B70AA739B0 (OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_set_Capacity_m0648341A0AFFFE4D146AE0A3EFAC23B70AA739B0_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHapticsClip_set_Capacity_m0648341A0AFFFE4D146AE0A3EFAC23B70AA739B0_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6197));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6198));
	{
		// public int Capacity { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6199));
		int32_t L_0 = ___0_value;
		__this->___U3CCapacityU3Ek__BackingField_1 = L_0;
		return;
	}
}
// System.Byte[] OVRHapticsClip::get_Samples()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* OVRHapticsClip_get_Samples_m433E8160F5A8874E4AC7972406FB0CC146AC74BE (OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_get_Samples_m433E8160F5A8874E4AC7972406FB0CC146AC74BE_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHapticsClip_get_Samples_m433E8160F5A8874E4AC7972406FB0CC146AC74BE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6200));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6201));
	{
		// public byte[] Samples { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6202));
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_0 = __this->___U3CSamplesU3Ek__BackingField_2;
		return L_0;
	}
}
// System.Void OVRHapticsClip::set_Samples(System.Byte[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsClip_set_Samples_mE62A59340D856612957FB1381FCACDE676702A70 (OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* __this, ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_set_Samples_mE62A59340D856612957FB1381FCACDE676702A70_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHapticsClip_set_Samples_mE62A59340D856612957FB1381FCACDE676702A70_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6203));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6204));
	{
		// public byte[] Samples { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6205));
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_0 = ___0_value;
		__this->___U3CSamplesU3Ek__BackingField_2 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CSamplesU3Ek__BackingField_2), (void*)L_0);
		return;
	}
}
// System.Void OVRHapticsClip::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsClip__ctor_m42DBDF3ECFAD1D75A8C835F65532743278009A08 (OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip__ctor_m42DBDF3ECFAD1D75A8C835F65532743278009A08_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHapticsClip__ctor_m42DBDF3ECFAD1D75A8C835F65532743278009A08_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6206));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6207));
	{
		// public OVRHapticsClip()
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6208));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6209));
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6209));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6210));
		// Capacity = OVRHaptics.Config.MaximumBufferSamplesCount;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6211));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6212));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_0;
		L_0 = Config_get_MaximumBufferSamplesCount_mFA9670050A7B57A5778B588CB400DBEB413DE4C0_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6212));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6213));
		OVRHapticsClip_set_Capacity_m0648341A0AFFFE4D146AE0A3EFAC23B70AA739B0_inline(__this, L_0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6213));
		// Samples = new byte[Capacity * OVRHaptics.Config.SampleSizeInBytes];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6214));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6215));
		int32_t L_1;
		L_1 = OVRHapticsClip_get_Capacity_mB9F5A181D3C9F8208F229AE0A8734C9E18F22A7C_inline(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6215));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6216));
		int32_t L_2;
		L_2 = Config_get_SampleSizeInBytes_m8A59438CA870B1DEDA2DDE836BBF513D4DA6C209_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6216));
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_3 = (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031*)(ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031*)SZArrayNew(ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031_il2cpp_TypeInfo_var, (uint32_t)((int32_t)il2cpp_codegen_multiply(L_1, L_2)));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6217));
		OVRHapticsClip_set_Samples_mE62A59340D856612957FB1381FCACDE676702A70_inline(__this, L_3, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6217));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6218));
		return;
	}
}
// System.Void OVRHapticsClip::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsClip__ctor_m73C1C39F8313D599A215707410A4940361F6C32A (OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* __this, int32_t ___0_capacity, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip__ctor_m73C1C39F8313D599A215707410A4940361F6C32A_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_capacity));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHapticsClip__ctor_m73C1C39F8313D599A215707410A4940361F6C32A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6219));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6220));
	OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* G_B2_0 = NULL;
	OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* G_B1_0 = NULL;
	int32_t G_B3_0 = 0;
	OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* G_B3_1 = NULL;
	{
		// public OVRHapticsClip(int capacity)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6221));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6222));
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6222));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6223));
		// Capacity = (capacity >= 0) ? capacity : 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6224));
		int32_t L_0 = ___0_capacity;
		G_B1_0 = __this;
		if ((((int32_t)L_0) >= ((int32_t)0)))
		{
			G_B2_0 = __this;
			goto IL_0010;
		}
	}
	{
		G_B3_0 = 0;
		G_B3_1 = G_B1_0;
		goto IL_0011;
	}

IL_0010:
	{
		int32_t L_1 = ___0_capacity;
		G_B3_0 = L_1;
		G_B3_1 = G_B2_0;
	}

IL_0011:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6225));
		NullCheck(G_B3_1);
		OVRHapticsClip_set_Capacity_m0648341A0AFFFE4D146AE0A3EFAC23B70AA739B0_inline(G_B3_1, G_B3_0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6225));
		// Samples = new byte[Capacity * OVRHaptics.Config.SampleSizeInBytes];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6226));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6227));
		int32_t L_2;
		L_2 = OVRHapticsClip_get_Capacity_mB9F5A181D3C9F8208F229AE0A8734C9E18F22A7C_inline(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6227));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6228));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_3;
		L_3 = Config_get_SampleSizeInBytes_m8A59438CA870B1DEDA2DDE836BBF513D4DA6C209_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6228));
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_4 = (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031*)(ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031*)SZArrayNew(ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031_il2cpp_TypeInfo_var, (uint32_t)((int32_t)il2cpp_codegen_multiply(L_2, L_3)));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6229));
		OVRHapticsClip_set_Samples_mE62A59340D856612957FB1381FCACDE676702A70_inline(__this, L_4, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6229));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6230));
		return;
	}
}
// System.Void OVRHapticsClip::.ctor(System.Byte[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsClip__ctor_mE6D5F60EB90776445CB433C5433D82A9870F915E (OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* __this, ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_samples, int32_t ___1_samplesCount, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip__ctor_mE6D5F60EB90776445CB433C5433D82A9870F915E_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_samples), (&___1_samplesCount));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHapticsClip__ctor_mE6D5F60EB90776445CB433C5433D82A9870F915E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6231));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6232));
	OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* G_B2_0 = NULL;
	OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* G_B1_0 = NULL;
	int32_t G_B3_0 = 0;
	OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* G_B3_1 = NULL;
	{
		// public OVRHapticsClip(byte[] samples, int samplesCount)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6233));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6234));
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6234));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6235));
		// Samples = samples;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6236));
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_0 = ___0_samples;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6237));
		OVRHapticsClip_set_Samples_mE62A59340D856612957FB1381FCACDE676702A70_inline(__this, L_0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6237));
		// Capacity = Samples.Length / OVRHaptics.Config.SampleSizeInBytes;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6238));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6239));
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_1;
		L_1 = OVRHapticsClip_get_Samples_m433E8160F5A8874E4AC7972406FB0CC146AC74BE_inline(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6239));
		NullCheck(L_1);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6240));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_2;
		L_2 = Config_get_SampleSizeInBytes_m8A59438CA870B1DEDA2DDE836BBF513D4DA6C209_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6240));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6241));
		OVRHapticsClip_set_Capacity_m0648341A0AFFFE4D146AE0A3EFAC23B70AA739B0_inline(__this, ((int32_t)(((int32_t)(((RuntimeArray*)L_1)->max_length))/L_2)), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6241));
		// Count = (samplesCount >= 0) ? samplesCount : 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6242));
		int32_t L_3 = ___1_samplesCount;
		G_B1_0 = __this;
		if ((((int32_t)L_3) >= ((int32_t)0)))
		{
			G_B2_0 = __this;
			goto IL_002d;
		}
	}
	{
		G_B3_0 = 0;
		G_B3_1 = G_B1_0;
		goto IL_002e;
	}

IL_002d:
	{
		int32_t L_4 = ___1_samplesCount;
		G_B3_0 = L_4;
		G_B3_1 = G_B2_0;
	}

IL_002e:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6243));
		NullCheck(G_B3_1);
		OVRHapticsClip_set_Count_m174C326E1966E50541CE7774619B508BC732B810_inline(G_B3_1, G_B3_0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6243));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6244));
		return;
	}
}
// System.Void OVRHapticsClip::.ctor(OVRHapticsClip,OVRHapticsClip)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsClip__ctor_m44F7B4BB7AB1980712BF6399320B737AD86D96E7 (OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* __this, OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* ___0_a, OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* ___1_b, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Byte_t94D9231AC217BE4D2E004C4CD32DF6D099EA41A3_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip__ctor_m44F7B4BB7AB1980712BF6399320B737AD86D96E7_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	int32_t V_2 = 0;
	bool V_3 = false;
	uint8_t V_4 = 0x0;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_a), (&___1_b));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_2), (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHapticsClip__ctor_m44F7B4BB7AB1980712BF6399320B737AD86D96E7_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6245));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6246));
	int32_t G_B7_0 = 0;
	int32_t G_B18_0 = 0;
	{
		// public OVRHapticsClip(OVRHapticsClip a, OVRHapticsClip b)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6247));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6248));
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6248));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6249));
		// int maxCount = a.Count;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6250));
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_0 = ___0_a;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6251));
		NullCheck(L_0);
		int32_t L_1;
		L_1 = OVRHapticsClip_get_Count_mF6DCD041E169A35A5B208FE92AEE5D47269F107E_inline(L_0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6251));
		V_0 = L_1;
		// if (b.Count > maxCount)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6252));
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_2 = ___1_b;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6253));
		NullCheck(L_2);
		int32_t L_3;
		L_3 = OVRHapticsClip_get_Count_mF6DCD041E169A35A5B208FE92AEE5D47269F107E_inline(L_2, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6253));
		int32_t L_4 = V_0;
		V_1 = (bool)((((int32_t)L_3) > ((int32_t)L_4))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6254));
		bool L_5 = V_1;
		if (!L_5)
		{
			goto IL_0023;
		}
	}
	{
		// maxCount = b.Count;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6255));
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_6 = ___1_b;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6256));
		NullCheck(L_6);
		int32_t L_7;
		L_7 = OVRHapticsClip_get_Count_mF6DCD041E169A35A5B208FE92AEE5D47269F107E_inline(L_6, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6256));
		V_0 = L_7;
	}

IL_0023:
	{
		// Capacity = maxCount;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6257));
		int32_t L_8 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6258));
		OVRHapticsClip_set_Capacity_m0648341A0AFFFE4D146AE0A3EFAC23B70AA739B0_inline(__this, L_8, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6258));
		// Samples = new byte[Capacity * OVRHaptics.Config.SampleSizeInBytes];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6259));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6260));
		int32_t L_9;
		L_9 = OVRHapticsClip_get_Capacity_mB9F5A181D3C9F8208F229AE0A8734C9E18F22A7C_inline(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6260));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6261));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_10;
		L_10 = Config_get_SampleSizeInBytes_m8A59438CA870B1DEDA2DDE836BBF513D4DA6C209_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6261));
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_11 = (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031*)(ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031*)SZArrayNew(ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031_il2cpp_TypeInfo_var, (uint32_t)((int32_t)il2cpp_codegen_multiply(L_9, L_10)));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6262));
		OVRHapticsClip_set_Samples_mE62A59340D856612957FB1381FCACDE676702A70_inline(__this, L_11, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6262));
		// for (int i = 0; i < a.Count || i < b.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6263));
		V_2 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6264));
		goto IL_00da;
	}

IL_004a:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6265));
		// if (OVRHaptics.Config.SampleSizeInBytes == 1)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6266));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6267));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_12;
		L_12 = Config_get_SampleSizeInBytes_m8A59438CA870B1DEDA2DDE836BBF513D4DA6C209_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6267));
		V_3 = (bool)((((int32_t)L_12) == ((int32_t)1))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6268));
		bool L_13 = V_3;
		if (!L_13)
		{
			goto IL_00d5;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6269));
		// byte sample = 0; // TODO support multi-byte samples
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6270));
		V_4 = (uint8_t)0;
		// if ((i < a.Count) && (i < b.Count))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6271));
		int32_t L_14 = V_2;
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_15 = ___0_a;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6272));
		NullCheck(L_15);
		int32_t L_16;
		L_16 = OVRHapticsClip_get_Count_mF6DCD041E169A35A5B208FE92AEE5D47269F107E_inline(L_15, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6272));
		if ((((int32_t)L_14) >= ((int32_t)L_16)))
		{
			goto IL_006f;
		}
	}
	{
		int32_t L_17 = V_2;
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_18 = ___1_b;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6273));
		NullCheck(L_18);
		int32_t L_19;
		L_19 = OVRHapticsClip_get_Count_mF6DCD041E169A35A5B208FE92AEE5D47269F107E_inline(L_18, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6273));
		G_B7_0 = ((((int32_t)L_17) < ((int32_t)L_19))? 1 : 0);
		goto IL_0070;
	}

IL_006f:
	{
		G_B7_0 = 0;
	}

IL_0070:
	{
		V_5 = (bool)G_B7_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6274));
		bool L_20 = V_5;
		if (!L_20)
		{
			goto IL_0097;
		}
	}
	{
		// sample = (byte)(Mathf.Clamp(a.Samples[i] + b.Samples[i], 0, System.Byte.MaxValue)); // TODO support multi-byte samples
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6275));
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_21 = ___0_a;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6276));
		NullCheck(L_21);
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_22;
		L_22 = OVRHapticsClip_get_Samples_m433E8160F5A8874E4AC7972406FB0CC146AC74BE_inline(L_21, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6276));
		int32_t L_23 = V_2;
		NullCheck(L_22);
		int32_t L_24 = L_23;
		uint8_t L_25 = (L_22)->GetAt(static_cast<il2cpp_array_size_t>(L_24));
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_26 = ___1_b;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6277));
		NullCheck(L_26);
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_27;
		L_27 = OVRHapticsClip_get_Samples_m433E8160F5A8874E4AC7972406FB0CC146AC74BE_inline(L_26, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6277));
		int32_t L_28 = V_2;
		NullCheck(L_27);
		int32_t L_29 = L_28;
		uint8_t L_30 = (L_27)->GetAt(static_cast<il2cpp_array_size_t>(L_29));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6278));
		int32_t L_31;
		L_31 = Mathf_Clamp_m4DC36EEFDBE5F07C16249DA568023C5ECCFF0E7B_inline(((int32_t)il2cpp_codegen_add((int32_t)L_25, (int32_t)L_30)), 0, ((int32_t)255), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6278));
		V_4 = (uint8_t)((int32_t)(uint8_t)L_31);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6279));
		goto IL_00cb;
	}

IL_0097:
	{
		// else if (i < a.Count)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6280));
		int32_t L_32 = V_2;
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_33 = ___0_a;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6281));
		NullCheck(L_33);
		int32_t L_34;
		L_34 = OVRHapticsClip_get_Count_mF6DCD041E169A35A5B208FE92AEE5D47269F107E_inline(L_33, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6281));
		V_6 = (bool)((((int32_t)L_32) < ((int32_t)L_34))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6282));
		bool L_35 = V_6;
		if (!L_35)
		{
			goto IL_00b2;
		}
	}
	{
		// sample = a.Samples[i]; // TODO support multi-byte samples
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6283));
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_36 = ___0_a;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6284));
		NullCheck(L_36);
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_37;
		L_37 = OVRHapticsClip_get_Samples_m433E8160F5A8874E4AC7972406FB0CC146AC74BE_inline(L_36, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6284));
		int32_t L_38 = V_2;
		NullCheck(L_37);
		int32_t L_39 = L_38;
		uint8_t L_40 = (L_37)->GetAt(static_cast<il2cpp_array_size_t>(L_39));
		V_4 = L_40;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6285));
		goto IL_00cb;
	}

IL_00b2:
	{
		// else if (i < b.Count)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6286));
		int32_t L_41 = V_2;
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_42 = ___1_b;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6287));
		NullCheck(L_42);
		int32_t L_43;
		L_43 = OVRHapticsClip_get_Count_mF6DCD041E169A35A5B208FE92AEE5D47269F107E_inline(L_42, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6287));
		V_7 = (bool)((((int32_t)L_41) < ((int32_t)L_43))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6288));
		bool L_44 = V_7;
		if (!L_44)
		{
			goto IL_00cb;
		}
	}
	{
		// sample = b.Samples[i]; // TODO support multi-byte samples
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6289));
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_45 = ___1_b;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6290));
		NullCheck(L_45);
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_46;
		L_46 = OVRHapticsClip_get_Samples_m433E8160F5A8874E4AC7972406FB0CC146AC74BE_inline(L_45, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6290));
		int32_t L_47 = V_2;
		NullCheck(L_46);
		int32_t L_48 = L_47;
		uint8_t L_49 = (L_46)->GetAt(static_cast<il2cpp_array_size_t>(L_48));
		V_4 = L_49;
	}

IL_00cb:
	{
		// WriteSample(sample); // TODO support multi-byte samples
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6291));
		uint8_t L_50 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6292));
		OVRHapticsClip_WriteSample_m5C7A13E38F525E2C58DF5A09E1EC9493FCF262ED(__this, L_50, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6292));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6293));
	}

IL_00d5:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6294));
		// for (int i = 0; i < a.Count || i < b.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6295));
		int32_t L_51 = V_2;
		V_2 = ((int32_t)il2cpp_codegen_add(L_51, 1));
	}

IL_00da:
	{
		// for (int i = 0; i < a.Count || i < b.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6296));
		int32_t L_52 = V_2;
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_53 = ___0_a;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6297));
		NullCheck(L_53);
		int32_t L_54;
		L_54 = OVRHapticsClip_get_Count_mF6DCD041E169A35A5B208FE92AEE5D47269F107E_inline(L_53, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6297));
		if ((((int32_t)L_52) < ((int32_t)L_54)))
		{
			goto IL_00ee;
		}
	}
	{
		int32_t L_55 = V_2;
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_56 = ___1_b;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6298));
		NullCheck(L_56);
		int32_t L_57;
		L_57 = OVRHapticsClip_get_Count_mF6DCD041E169A35A5B208FE92AEE5D47269F107E_inline(L_56, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6298));
		G_B18_0 = ((((int32_t)L_55) < ((int32_t)L_57))? 1 : 0);
		goto IL_00ef;
	}

IL_00ee:
	{
		G_B18_0 = 1;
	}

IL_00ef:
	{
		V_8 = (bool)G_B18_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6299));
		bool L_58 = V_8;
		if (L_58)
		{
			goto IL_004a;
		}
	}
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6300));
		return;
	}
}
// System.Void OVRHapticsClip::.ctor(UnityEngine.AudioClip,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsClip__ctor_mF7432BA73E368C7B7EF3D2D03FCA54E632734181 (OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* __this, AudioClip_t5D272C4EB4F2D3ED49F1C346DEA373CF6D585F20* ___0_audioClip, int32_t ___1_channel, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip__ctor_mF7432BA73E368C7B7EF3D2D03FCA54E632734181_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_audioClip), (&___1_channel));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHapticsClip__ctor_mF7432BA73E368C7B7EF3D2D03FCA54E632734181_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6301));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6302));
	{
		// public OVRHapticsClip(AudioClip audioClip, int channel = 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6303));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6304));
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6304));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6305));
		// float[] audioData = new float[audioClip.samples * audioClip.channels];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6306));
		AudioClip_t5D272C4EB4F2D3ED49F1C346DEA373CF6D585F20* L_0 = ___0_audioClip;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6307));
		NullCheck(L_0);
		int32_t L_1;
		L_1 = AudioClip_get_samples_mDEA01CA75E7DEA0F8D480E4AF97FB96085BCF38E(L_0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6307));
		AudioClip_t5D272C4EB4F2D3ED49F1C346DEA373CF6D585F20* L_2 = ___0_audioClip;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6308));
		NullCheck(L_2);
		int32_t L_3;
		L_3 = AudioClip_get_channels_mFEECF5D6389D196BA5102EB79257298B9FDC9F84(L_2, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6308));
		SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* L_4 = (SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C*)(SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C*)SZArrayNew(SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C_il2cpp_TypeInfo_var, (uint32_t)((int32_t)il2cpp_codegen_multiply(L_1, L_3)));
		V_0 = L_4;
		// audioClip.GetData(audioData, 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6309));
		AudioClip_t5D272C4EB4F2D3ED49F1C346DEA373CF6D585F20* L_5 = ___0_audioClip;
		SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* L_6 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6310));
		NullCheck(L_5);
		bool L_7;
		L_7 = AudioClip_GetData_m1F6480FFDA2E354A7D8C8DE40F61AAB5AF6B4A1D(L_5, L_6, 0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6310));
		// InitializeFromAudioFloatTrack(audioData, audioClip.frequency, audioClip.channels, channel);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6311));
		SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* L_8 = V_0;
		AudioClip_t5D272C4EB4F2D3ED49F1C346DEA373CF6D585F20* L_9 = ___0_audioClip;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6312));
		NullCheck(L_9);
		int32_t L_10;
		L_10 = AudioClip_get_frequency_m6647E10F4B2B1335187B0066E82468CCCF19647B(L_9, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6312));
		AudioClip_t5D272C4EB4F2D3ED49F1C346DEA373CF6D585F20* L_11 = ___0_audioClip;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6313));
		NullCheck(L_11);
		int32_t L_12;
		L_12 = AudioClip_get_channels_mFEECF5D6389D196BA5102EB79257298B9FDC9F84(L_11, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6313));
		int32_t L_13 = ___1_channel;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6314));
		OVRHapticsClip_InitializeFromAudioFloatTrack_m2DC0897BCB868A4D9B3E5C409390746CF1CAC844(__this, L_8, ((double)L_10), L_12, L_13, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6314));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6315));
		return;
	}
}
// System.Void OVRHapticsClip::WriteSample(System.Byte)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsClip_WriteSample_m5C7A13E38F525E2C58DF5A09E1EC9493FCF262ED (OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* __this, uint8_t ___0_sample, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_WriteSample_m5C7A13E38F525E2C58DF5A09E1EC9493FCF262ED_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	int32_t V_2 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_sample));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHapticsClip_WriteSample_m5C7A13E38F525E2C58DF5A09E1EC9493FCF262ED_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6316));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6317));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6318));
		// if (Count >= Capacity)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6319));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6320));
		int32_t L_0;
		L_0 = OVRHapticsClip_get_Count_mF6DCD041E169A35A5B208FE92AEE5D47269F107E_inline(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6320));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6321));
		int32_t L_1;
		L_1 = OVRHapticsClip_get_Capacity_mB9F5A181D3C9F8208F229AE0A8734C9E18F22A7C_inline(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6321));
		V_0 = (bool)((((int32_t)((((int32_t)L_0) < ((int32_t)L_1))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6322));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0019;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6323));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6324));
		goto IL_004c;
	}

IL_0019:
	{
		// if (OVRHaptics.Config.SampleSizeInBytes == 1)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6325));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6326));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_3;
		L_3 = Config_get_SampleSizeInBytes_m8A59438CA870B1DEDA2DDE836BBF513D4DA6C209_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6326));
		V_1 = (bool)((((int32_t)L_3) == ((int32_t)1))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6327));
		bool L_4 = V_1;
		if (!L_4)
		{
			goto IL_003b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6328));
		// Samples[Count * OVRHaptics.Config.SampleSizeInBytes] = sample; // TODO support multi-byte samples
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6329));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6330));
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_5;
		L_5 = OVRHapticsClip_get_Samples_m433E8160F5A8874E4AC7972406FB0CC146AC74BE_inline(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6330));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6331));
		int32_t L_6;
		L_6 = OVRHapticsClip_get_Count_mF6DCD041E169A35A5B208FE92AEE5D47269F107E_inline(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6331));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6332));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_7;
		L_7 = Config_get_SampleSizeInBytes_m8A59438CA870B1DEDA2DDE836BBF513D4DA6C209_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6332));
		uint8_t L_8 = ___0_sample;
		NullCheck(L_5);
		(L_5)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_multiply(L_6, L_7))), (uint8_t)L_8);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6333));
	}

IL_003b:
	{
		// Count++;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6334));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6335));
		int32_t L_9;
		L_9 = OVRHapticsClip_get_Count_mF6DCD041E169A35A5B208FE92AEE5D47269F107E_inline(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6335));
		V_2 = L_9;
		int32_t L_10 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6336));
		OVRHapticsClip_set_Count_m174C326E1966E50541CE7774619B508BC732B810_inline(__this, ((int32_t)il2cpp_codegen_add(L_10, 1)), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6336));
	}

IL_004c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6337));
		return;
	}
}
// System.Void OVRHapticsClip::Reset()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsClip_Reset_mC5875B21BD94FB65995B881CB90E4A11C8D26403 (OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_Reset_mC5875B21BD94FB65995B881CB90E4A11C8D26403_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHapticsClip_Reset_mC5875B21BD94FB65995B881CB90E4A11C8D26403_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6338));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6339));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6340));
		// Count = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6341));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6342));
		OVRHapticsClip_set_Count_m174C326E1966E50541CE7774619B508BC732B810_inline(__this, 0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6342));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6343));
		return;
	}
}
// System.Void OVRHapticsClip::InitializeFromAudioFloatTrack(System.Single[],System.Double,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHapticsClip_InitializeFromAudioFloatTrack_m2DC0897BCB868A4D9B3E5C409390746CF1CAC844 (OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* __this, SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___0_sourceData, double ___1_sourceFrequency, int32_t ___2_sourceChannelCount, int32_t ___3_sourceChannel, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Double_tE150EF3D1D43DEE85D533810AB4C742307EEDE5F_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_InitializeFromAudioFloatTrack_m2DC0897BCB868A4D9B3E5C409390746CF1CAC844_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralEE25EB25AA74DA323C4A0C2C18E0921705443848);
		s_Il2CppMethodInitialized = true;
	}
	double V_0 = 0.0;
	int32_t V_1 = 0;
	double V_2 = 0.0;
	double V_3 = 0.0;
	int32_t V_4 = 0;
	int32_t V_5 = 0;
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	bool V_10 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_sourceData), (&___1_sourceFrequency), (&___2_sourceChannelCount), (&___3_sourceChannel));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3), (&V_4), (&V_5));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHapticsClip_InitializeFromAudioFloatTrack_m2DC0897BCB868A4D9B3E5C409390746CF1CAC844_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6344));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6345));
	int32_t G_B5_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6346));
		// if (OVRHaptics.Config.SampleRateHz == 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6347));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6348));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_0;
		L_0 = Config_get_SampleRateHz_m2D1B79A8EC0A19BA0EA97E6B3039D15788BB9F47_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6348));
		V_6 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6349));
		bool L_1 = V_6;
		if (!L_1)
		{
			goto IL_0020;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6350));
		// Debug.Log("Unable to initialize a controller whose SampleRateHz is 0 now.");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6351));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6352));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_Log_m87A9A3C761FF5C43ED8A53B16190A53D08F818BB(_stringLiteralEE25EB25AA74DA323C4A0C2C18E0921705443848, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6352));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6353));
		goto IL_0109;
	}

IL_0020:
	{
		// double stepSizePrecise = (sourceFrequency + 1e-6) / OVRHaptics.Config.SampleRateHz;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6354));
		double L_2 = ___1_sourceFrequency;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6355));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_3;
		L_3 = Config_get_SampleRateHz_m2D1B79A8EC0A19BA0EA97E6B3039D15788BB9F47_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6355));
		V_0 = ((double)(((double)il2cpp_codegen_add(L_2, (9.9999999999999995E-07)))/((double)L_3)));
		// if (stepSizePrecise < 1.0 || stepSizePrecise> Int32.MaxValue)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6356));
		double L_4 = V_0;
		if ((((double)L_4) < ((double)(1.0))))
		{
			goto IL_004d;
		}
	}
	{
		double L_5 = V_0;
		G_B5_0 = ((((double)L_5) > ((double)(2147483647.0)))? 1 : 0);
		goto IL_004e;
	}

IL_004d:
	{
		G_B5_0 = 1;
	}

IL_004e:
	{
		V_7 = (bool)G_B5_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6357));
		bool L_6 = V_7;
		if (!L_6)
		{
			goto IL_0059;
		}
	}
	{
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6358));
		goto IL_0109;
	}

IL_0059:
	{
		// int stepSize = (int)stepSizePrecise;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6359));
		double L_7 = V_0;
		V_1 = il2cpp_codegen_cast_double_to_int<int32_t>(L_7);
		// double stepSizeError = stepSizePrecise - stepSize;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6360));
		double L_8 = V_0;
		int32_t L_9 = V_1;
		V_2 = ((double)il2cpp_codegen_subtract(L_8, ((double)L_9)));
		// double accumulatedStepSizeError = 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6361));
		V_3 = (0.0);
		// int length = sourceData.Length;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6362));
		SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* L_10 = ___0_sourceData;
		NullCheck(L_10);
		V_4 = ((int32_t)(((RuntimeArray*)L_10)->max_length));
		// Count = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6363));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6364));
		OVRHapticsClip_set_Count_m174C326E1966E50541CE7774619B508BC732B810_inline(__this, 0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6364));
		// Capacity = length / sourceChannelCount / stepSize + 1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6365));
		int32_t L_11 = V_4;
		int32_t L_12 = ___2_sourceChannelCount;
		int32_t L_13 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6366));
		OVRHapticsClip_set_Capacity_m0648341A0AFFFE4D146AE0A3EFAC23B70AA739B0_inline(__this, ((int32_t)il2cpp_codegen_add(((int32_t)(((int32_t)(L_11/L_12))/L_13)), 1)), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6366));
		// Samples = new byte[Capacity * OVRHaptics.Config.SampleSizeInBytes];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6367));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6368));
		int32_t L_14;
		L_14 = OVRHapticsClip_get_Capacity_mB9F5A181D3C9F8208F229AE0A8734C9E18F22A7C_inline(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6368));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6369));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_15;
		L_15 = Config_get_SampleSizeInBytes_m8A59438CA870B1DEDA2DDE836BBF513D4DA6C209_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6369));
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_16 = (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031*)(ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031*)SZArrayNew(ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031_il2cpp_TypeInfo_var, (uint32_t)((int32_t)il2cpp_codegen_multiply(L_14, L_15)));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6370));
		OVRHapticsClip_set_Samples_mE62A59340D856612957FB1381FCACDE676702A70_inline(__this, L_16, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6370));
		// int i = sourceChannel % sourceChannelCount;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6371));
		int32_t L_17 = ___3_sourceChannel;
		int32_t L_18 = ___2_sourceChannelCount;
		V_5 = ((int32_t)(L_17%L_18));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6372));
		goto IL_00fd;
	}

IL_00a7:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6373));
		// if (OVRHaptics.Config.SampleSizeInBytes == 1)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6374));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6375));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_19;
		L_19 = Config_get_SampleSizeInBytes_m8A59438CA870B1DEDA2DDE836BBF513D4DA6C209_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6375));
		V_8 = (bool)((((int32_t)L_19) == ((int32_t)1))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6376));
		bool L_20 = V_8;
		if (!L_20)
		{
			goto IL_00d4;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6377));
		// WriteSample((byte)(Mathf.Clamp01(Mathf.Abs(sourceData[i])) * System.Byte.MaxValue)); // TODO support multi-byte samples
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6378));
		SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* L_21 = ___0_sourceData;
		int32_t L_22 = V_5;
		NullCheck(L_21);
		int32_t L_23 = L_22;
		float L_24 = (L_21)->GetAt(static_cast<il2cpp_array_size_t>(L_23));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6379));
		float L_25;
		L_25 = fabsf(L_24);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6379));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6380));
		float L_26;
		L_26 = Mathf_Clamp01_mA7E048DBDA832D399A581BE4D6DED9FA44CE0F14_inline(L_25, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6380));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6381));
		OVRHapticsClip_WriteSample_m5C7A13E38F525E2C58DF5A09E1EC9493FCF262ED(__this, (uint8_t)il2cpp_codegen_cast_floating_point<uint8_t, int32_t, float>(((float)il2cpp_codegen_multiply(L_26, (255.0f)))), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6381));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6382));
	}

IL_00d4:
	{
		// i+= stepSize * sourceChannelCount;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6383));
		int32_t L_27 = V_5;
		int32_t L_28 = V_1;
		int32_t L_29 = ___2_sourceChannelCount;
		V_5 = ((int32_t)il2cpp_codegen_add(L_27, ((int32_t)il2cpp_codegen_multiply(L_28, L_29))));
		// accumulatedStepSizeError += stepSizeError;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6384));
		double L_30 = V_3;
		double L_31 = V_2;
		V_3 = ((double)il2cpp_codegen_add(L_30, L_31));
		// if ((int)accumulatedStepSizeError > 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6385));
		double L_32 = V_3;
		V_9 = (bool)((((int32_t)il2cpp_codegen_cast_double_to_int<int32_t>(L_32)) > ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6386));
		bool L_33 = V_9;
		if (!L_33)
		{
			goto IL_00fc;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6387));
		// i+= (int)accumulatedStepSizeError * sourceChannelCount;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6388));
		int32_t L_34 = V_5;
		double L_35 = V_3;
		int32_t L_36 = ___2_sourceChannelCount;
		V_5 = ((int32_t)il2cpp_codegen_add(L_34, ((int32_t)il2cpp_codegen_multiply(il2cpp_codegen_cast_double_to_int<int32_t>(L_35), L_36))));
		// accumulatedStepSizeError = accumulatedStepSizeError - (int)accumulatedStepSizeError;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6389));
		double L_37 = V_3;
		double L_38 = V_3;
		V_3 = ((double)il2cpp_codegen_subtract(L_37, ((double)il2cpp_codegen_cast_double_to_int<int32_t>(L_38))));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6390));
	}

IL_00fc:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6391));
	}

IL_00fd:
	{
		// while (i < length)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6392));
		int32_t L_39 = V_5;
		int32_t L_40 = V_4;
		V_10 = (bool)((((int32_t)L_39) < ((int32_t)L_40))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6393));
		bool L_41 = V_10;
		if (L_41)
		{
			goto IL_00a7;
		}
	}

IL_0109:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6394));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void OVRHeadsetEmulator::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHeadsetEmulator_Start_m86C29FC1374CA984D1C5ADE766F7B9AF4C7FEB1A (OVRHeadsetEmulator_t962B146D3C4075E460069BC2ED5B5943DA1B8553* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHeadsetEmulator_Start_m86C29FC1374CA984D1C5ADE766F7B9AF4C7FEB1A_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHeadsetEmulator_t962B146D3C4075E460069BC2ED5B5943DA1B8553_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHeadsetEmulator_Start_m86C29FC1374CA984D1C5ADE766F7B9AF4C7FEB1A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6395));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6396));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6397));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6398));
		return;
	}
}
// System.Void OVRHeadsetEmulator::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHeadsetEmulator_Update_mC1E72FB42AB15CD95FBED7256B60FFEABAD505C5 (OVRHeadsetEmulator_t962B146D3C4075E460069BC2ED5B5943DA1B8553* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHeadsetEmulator_Update_mC1E72FB42AB15CD95FBED7256B60FFEABAD505C5_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHeadsetEmulator_t962B146D3C4075E460069BC2ED5B5943DA1B8553_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHeadsetEmulator_Update_mC1E72FB42AB15CD95FBED7256B60FFEABAD505C5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6399));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6400));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6401));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6402));
		return;
	}
}
// System.Boolean OVRHeadsetEmulator::IsEmulationActivated()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRHeadsetEmulator_IsEmulationActivated_m24021986D6736C750D9EFB6FA756F4526FA757B2 (OVRHeadsetEmulator_t962B146D3C4075E460069BC2ED5B5943DA1B8553* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&KeyCodeU5BU5D_tE5EF2F42327664A9138C613B265BEE8524672B85_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&KeyCode_t75B9ECCC26D858F55040DDFF9523681E996D17E9_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHeadsetEmulator_IsEmulationActivated_m24021986D6736C750D9EFB6FA756F4526FA757B2_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHeadsetEmulator_t962B146D3C4075E460069BC2ED5B5943DA1B8553_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	KeyCodeU5BU5D_tE5EF2F42327664A9138C613B265BEE8524672B85* V_3 = NULL;
	int32_t V_4 = 0;
	int32_t V_5 = 0;
	bool V_6 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_5));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHeadsetEmulator_IsEmulationActivated_m24021986D6736C750D9EFB6FA756F4526FA757B2_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6403));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6404));
	int32_t G_B5_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6405));
		// if (opMode == OpMode.Off)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6406));
		int32_t L_0 = __this->___opMode_4;
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6407));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0013;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6408));
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6409));
		V_1 = (bool)0;
		goto IL_0067;
	}

IL_0013:
	{
		// else if (opMode == OpMode.EditorOnly && !Application.isEditor)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6410));
		int32_t L_2 = __this->___opMode_4;
		if ((!(((uint32_t)L_2) == ((uint32_t)1))))
		{
			goto IL_0026;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6411));
		bool L_3;
		L_3 = Application_get_isEditor_mEAC51E3ACE6DCE438087FB14BD75A3C219D354D0(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6411));
		G_B5_0 = ((((int32_t)L_3) == ((int32_t)0))? 1 : 0);
		goto IL_0027;
	}

IL_0026:
	{
		G_B5_0 = 0;
	}

IL_0027:
	{
		V_2 = (bool)G_B5_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6412));
		bool L_4 = V_2;
		if (!L_4)
		{
			goto IL_0030;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6413));
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6414));
		V_1 = (bool)0;
		goto IL_0067;
	}

IL_0030:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6415));
		// foreach (KeyCode key in activateKeys)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6416));
		KeyCodeU5BU5D_tE5EF2F42327664A9138C613B265BEE8524672B85* L_5 = __this->___activateKeys_7;
		V_3 = L_5;
		V_4 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6417));
		goto IL_005c;
	}

IL_003d:
	{
		// foreach (KeyCode key in activateKeys)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6418));
		KeyCodeU5BU5D_tE5EF2F42327664A9138C613B265BEE8524672B85* L_6 = V_3;
		int32_t L_7 = V_4;
		NullCheck(L_6);
		int32_t L_8 = L_7;
		int32_t L_9 = (int32_t)(L_6)->GetAt(static_cast<il2cpp_array_size_t>(L_8));
		V_5 = L_9;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6419));
		// if (Input.GetKey(key))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6420));
		int32_t L_10 = V_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6421));
		bool L_11;
		L_11 = Input_GetKey_mE5681EF775F3CEBA7EAD7C63984F7B34C8E8D434(L_10, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6421));
		V_6 = L_11;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6422));
		bool L_12 = V_6;
		if (!L_12)
		{
			goto IL_0055;
		}
	}
	{
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6423));
		V_1 = (bool)1;
		goto IL_0067;
	}

IL_0055:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6424));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6425));
		int32_t L_13 = V_4;
		V_4 = ((int32_t)il2cpp_codegen_add(L_13, 1));
	}

IL_005c:
	{
		// foreach (KeyCode key in activateKeys)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6426));
		int32_t L_14 = V_4;
		KeyCodeU5BU5D_tE5EF2F42327664A9138C613B265BEE8524672B85* L_15 = V_3;
		NullCheck(L_15);
		if ((((int32_t)L_14) < ((int32_t)((int32_t)(((RuntimeArray*)L_15)->max_length)))))
		{
			goto IL_003d;
		}
	}
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6427));
		V_1 = (bool)0;
		goto IL_0067;
	}

IL_0067:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6428));
		bool L_16 = V_1;
		return L_16;
	}
}
// System.Boolean OVRHeadsetEmulator::IsTweakingPitch()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRHeadsetEmulator_IsTweakingPitch_m996A63E4DE8EEE3BC82947D7AE8F56667A72947F (OVRHeadsetEmulator_t962B146D3C4075E460069BC2ED5B5943DA1B8553* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&KeyCodeU5BU5D_tE5EF2F42327664A9138C613B265BEE8524672B85_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&KeyCode_t75B9ECCC26D858F55040DDFF9523681E996D17E9_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHeadsetEmulator_IsTweakingPitch_m996A63E4DE8EEE3BC82947D7AE8F56667A72947F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHeadsetEmulator_t962B146D3C4075E460069BC2ED5B5943DA1B8553_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	KeyCodeU5BU5D_tE5EF2F42327664A9138C613B265BEE8524672B85* V_2 = NULL;
	int32_t V_3 = 0;
	int32_t V_4 = 0;
	bool V_5 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHeadsetEmulator_IsTweakingPitch_m996A63E4DE8EEE3BC82947D7AE8F56667A72947F_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6429));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6430));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6431));
		// if (!IsEmulationActivated())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6432));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6433));
		bool L_0;
		L_0 = OVRHeadsetEmulator_IsEmulationActivated_m24021986D6736C750D9EFB6FA756F4526FA757B2(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6433));
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6434));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0012;
		}
	}
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6435));
		V_1 = (bool)0;
		goto IL_0044;
	}

IL_0012:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6436));
		// foreach (KeyCode key in pitchKeys)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6437));
		KeyCodeU5BU5D_tE5EF2F42327664A9138C613B265BEE8524672B85* L_2 = __this->___pitchKeys_8;
		V_2 = L_2;
		V_3 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6438));
		goto IL_003a;
	}

IL_001e:
	{
		// foreach (KeyCode key in pitchKeys)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6439));
		KeyCodeU5BU5D_tE5EF2F42327664A9138C613B265BEE8524672B85* L_3 = V_2;
		int32_t L_4 = V_3;
		NullCheck(L_3);
		int32_t L_5 = L_4;
		int32_t L_6 = (int32_t)(L_3)->GetAt(static_cast<il2cpp_array_size_t>(L_5));
		V_4 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6440));
		// if (Input.GetKey(key))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6441));
		int32_t L_7 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6442));
		bool L_8;
		L_8 = Input_GetKey_mE5681EF775F3CEBA7EAD7C63984F7B34C8E8D434(L_7, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6442));
		V_5 = L_8;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6443));
		bool L_9 = V_5;
		if (!L_9)
		{
			goto IL_0035;
		}
	}
	{
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6444));
		V_1 = (bool)1;
		goto IL_0044;
	}

IL_0035:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6445));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6446));
		int32_t L_10 = V_3;
		V_3 = ((int32_t)il2cpp_codegen_add(L_10, 1));
	}

IL_003a:
	{
		// foreach (KeyCode key in pitchKeys)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6447));
		int32_t L_11 = V_3;
		KeyCodeU5BU5D_tE5EF2F42327664A9138C613B265BEE8524672B85* L_12 = V_2;
		NullCheck(L_12);
		if ((((int32_t)L_11) < ((int32_t)((int32_t)(((RuntimeArray*)L_12)->max_length)))))
		{
			goto IL_001e;
		}
	}
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6448));
		V_1 = (bool)0;
		goto IL_0044;
	}

IL_0044:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6449));
		bool L_13 = V_1;
		return L_13;
	}
}
// System.Void OVRHeadsetEmulator::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRHeadsetEmulator__ctor_m468B5EF0EA89C3133B2F07D99E4E61DC8CEE77E1 (OVRHeadsetEmulator_t962B146D3C4075E460069BC2ED5B5943DA1B8553* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&KeyCodeU5BU5D_tE5EF2F42327664A9138C613B265BEE8524672B85_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHeadsetEmulator__ctor_m468B5EF0EA89C3133B2F07D99E4E61DC8CEE77E1_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHeadsetEmulator_t962B146D3C4075E460069BC2ED5B5943DA1B8553_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHeadsetEmulator__ctor_m468B5EF0EA89C3133B2F07D99E4E61DC8CEE77E1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6450));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6451));
	{
		// public OpMode opMode = OpMode.EditorOnly;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6452));
		__this->___opMode_4 = 1;
		// public bool resetHmdPoseOnRelease = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6453));
		__this->___resetHmdPoseOnRelease_5 = (bool)1;
		// public bool resetHmdPoseByMiddleMouseButton = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6454));
		__this->___resetHmdPoseByMiddleMouseButton_6 = (bool)1;
		// public KeyCode[] activateKeys = new KeyCode[] { KeyCode.LeftControl, KeyCode.RightControl };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6455));
		KeyCodeU5BU5D_tE5EF2F42327664A9138C613B265BEE8524672B85* L_0 = (KeyCodeU5BU5D_tE5EF2F42327664A9138C613B265BEE8524672B85*)(KeyCodeU5BU5D_tE5EF2F42327664A9138C613B265BEE8524672B85*)SZArrayNew(KeyCodeU5BU5D_tE5EF2F42327664A9138C613B265BEE8524672B85_il2cpp_TypeInfo_var, (uint32_t)2);
		KeyCodeU5BU5D_tE5EF2F42327664A9138C613B265BEE8524672B85* L_1 = L_0;
		NullCheck(L_1);
		(L_1)->SetAt(static_cast<il2cpp_array_size_t>(0), (int32_t)((int32_t)306));
		KeyCodeU5BU5D_tE5EF2F42327664A9138C613B265BEE8524672B85* L_2 = L_1;
		NullCheck(L_2);
		(L_2)->SetAt(static_cast<il2cpp_array_size_t>(1), (int32_t)((int32_t)305));
		__this->___activateKeys_7 = L_2;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___activateKeys_7), (void*)L_2);
		// public KeyCode[] pitchKeys = new KeyCode[] { KeyCode.LeftAlt, KeyCode.RightAlt };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6456));
		KeyCodeU5BU5D_tE5EF2F42327664A9138C613B265BEE8524672B85* L_3 = (KeyCodeU5BU5D_tE5EF2F42327664A9138C613B265BEE8524672B85*)(KeyCodeU5BU5D_tE5EF2F42327664A9138C613B265BEE8524672B85*)SZArrayNew(KeyCodeU5BU5D_tE5EF2F42327664A9138C613B265BEE8524672B85_il2cpp_TypeInfo_var, (uint32_t)2);
		KeyCodeU5BU5D_tE5EF2F42327664A9138C613B265BEE8524672B85* L_4 = L_3;
		NullCheck(L_4);
		(L_4)->SetAt(static_cast<il2cpp_array_size_t>(0), (int32_t)((int32_t)308));
		KeyCodeU5BU5D_tE5EF2F42327664A9138C613B265BEE8524672B85* L_5 = L_4;
		NullCheck(L_5);
		(L_5)->SetAt(static_cast<il2cpp_array_size_t>(1), (int32_t)((int32_t)307));
		__this->___pitchKeys_8 = L_5;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___pitchKeys_8), (void*)L_5);
		// private bool lastFrameEmulationActivated = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6457));
		__this->___lastFrameEmulationActivated_15 = (bool)0;
		// private bool hasSentEvent = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6458));
		__this->___hasSentEvent_18 = (bool)0;
		// private bool emulatorHasInitialized = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6459));
		__this->___emulatorHasInitialized_19 = (bool)0;
		// private CursorLockMode previousCursorLockMode = CursorLockMode.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6460));
		__this->___previousCursorLockMode_20 = 0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6461));
		MonoBehaviour__ctor_m592DB0105CA0BC97AA1C5F4AD27B12D68A3B7C1E(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6461));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Boolean OVRInput::get_pluginSupportsActiveController()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_get_pluginSupportsActiveController_m273F22B55C9B8197B8B372827D45933173F51C05 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_get_pluginSupportsActiveController_m273F22B55C9B8197B8B372827D45933173F51C05_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_get_pluginSupportsActiveController_m273F22B55C9B8197B8B372827D45933173F51C05_RuntimeMethod_var, NULL, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6462));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6463));
	int32_t G_B4_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6464));
		// if (!_pluginSupportsActiveControllerCached)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6465));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		bool L_0 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->____pluginSupportsActiveControllerCached_8;
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6466));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0033;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6467));
		// bool isSupportedPlatform = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6468));
		V_1 = (bool)1;
		// isSupportedPlatform = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6469));
		V_1 = (bool)0;
		// _pluginSupportsActiveController = isSupportedPlatform && (OVRPlugin.version >= _pluginSupportsActiveControllerMinVersion);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6470));
		bool L_2 = V_1;
		if (!L_2)
		{
			goto IL_0026;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6471));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* L_3;
		L_3 = OVRPlugin_get_version_mF6424FE1E91DF97DE08CD5C7AE1FBC60873A354E(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6471));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* L_4 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->____pluginSupportsActiveControllerMinVersion_9;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6472));
		bool L_5;
		L_5 = Version_op_GreaterThanOrEqual_m792CE284B083EDAAC120E4028150194D1C1284EB(L_3, L_4, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6472));
		G_B4_0 = ((int32_t)(L_5));
		goto IL_0027;
	}

IL_0026:
	{
		G_B4_0 = 0;
	}

IL_0027:
	{
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->____pluginSupportsActiveController_7 = (bool)G_B4_0;
		// _pluginSupportsActiveControllerCached = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6473));
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->____pluginSupportsActiveControllerCached_8 = (bool)1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6474));
	}

IL_0033:
	{
		// return _pluginSupportsActiveController;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6475));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		bool L_6 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->____pluginSupportsActiveController_7;
		V_2 = L_6;
		goto IL_003b;
	}

IL_003b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6476));
		bool L_7 = V_2;
		return L_7;
	}
}
// System.Void OVRInput::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRInput__cctor_m8795EFB9DA9E021E059009CB980EB0608FBCD540 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_Add_mDB779AD07F59193F6BBFA7819A6E3F152C712450_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1__ctor_m47318792E32D53A0CE4C2670BAEDA77A7ACB3706_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerGamepadAndroid_t744FA8E4FD2A606498498663467C1271A46F1AB9_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerHands_t12594A1327521ECA38B53C166676B845C1D621CA_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerLHand_t05FFDA0A0B722315B47BFEDFFF701B425563DDB8_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerLTouch_tAB910B5D7369AA3104AD40C8AE5458C254D225C6_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRHand_t9AF4805EAECF3275B7E861B1A3E4CF7555C989B4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRTouch_t05E309647F46A925D9C970B8636ADD34E6533A01_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerTouch_t3242C19AECEE9D167D937CF1288465415D554A37_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput__cctor_m8795EFB9DA9E021E059009CB980EB0608FBCD540_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral132736885745103CD69579127F82ED683A3408CD);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral15627DE07324E44D9B2C6CB10DB8743C8D90E486);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral38D2CF180BAEA5AC39A051E431530C030665C5EE);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput__cctor_m8795EFB9DA9E021E059009CB980EB0608FBCD540_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6477));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6478));
	{
		// private static readonly float AXIS_AS_BUTTON_THRESHOLD = 0.5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6479));
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___AXIS_AS_BUTTON_THRESHOLD_0 = (0.5f);
		// private static readonly float AXIS_DEADZONE_THRESHOLD = 0.2f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6480));
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___AXIS_DEADZONE_THRESHOLD_1 = (0.200000003f);
		// private static Controller activeControllerType = Controller.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6481));
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3 = 0;
		// private static Controller connectedControllerTypes = Controller.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6482));
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___connectedControllerTypes_4 = 0;
		// private static OVRPlugin.Step stepType = OVRPlugin.Step.Render;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6483));
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___stepType_5 = (-1);
		// private static int fixedUpdateCount = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6484));
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___fixedUpdateCount_6 = 0;
		// private static bool _pluginSupportsActiveController = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6485));
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->____pluginSupportsActiveController_7 = (bool)0;
		// private static bool _pluginSupportsActiveControllerCached = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6486));
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->____pluginSupportsActiveControllerCached_8 = (bool)0;
		// private static System.Version _pluginSupportsActiveControllerMinVersion = new System.Version(1, 9, 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6487));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6488));
		Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* L_0 = (Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7*)il2cpp_codegen_object_new(Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7_il2cpp_TypeInfo_var);
		NullCheck(L_0);
		Version__ctor_m7D8EE608025AE8D7AD8867718BC0AC96A2CFC1F5(L_0, 1, ((int32_t)9), 0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6488));
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->____pluginSupportsActiveControllerMinVersion_9 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->____pluginSupportsActiveControllerMinVersion_9), (void*)L_0);
		// private static int NUM_HAPTIC_CHANNELS = 2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6489));
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___NUM_HAPTIC_CHANNELS_10 = 2;
		// private static float OPENVR_MAX_HAPTIC_AMPLITUDE = 4000.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6490));
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___OPENVR_MAX_HAPTIC_AMPLITUDE_12 = (4000.0f);
		// private static float HAPTIC_VIBRATION_DURATION_SECONDS = 2.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6491));
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___HAPTIC_VIBRATION_DURATION_SECONDS_13 = (2.0f);
		// private static String OPENVR_TOUCH_NAME = "oculus_touch";
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6492));
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___OPENVR_TOUCH_NAME_14 = _stringLiteral132736885745103CD69579127F82ED683A3408CD;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___OPENVR_TOUCH_NAME_14), (void*)_stringLiteral132736885745103CD69579127F82ED683A3408CD);
		// private static String OPENVR_VIVE_CONTROLLER_NAME = "vive_controller";
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6493));
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___OPENVR_VIVE_CONTROLLER_NAME_15 = _stringLiteral38D2CF180BAEA5AC39A051E431530C030665C5EE;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___OPENVR_VIVE_CONTROLLER_NAME_15), (void*)_stringLiteral38D2CF180BAEA5AC39A051E431530C030665C5EE);
		// private static String OPENVR_WINDOWSMR_CONTROLLER_NAME = "holographic_controller";
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6494));
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___OPENVR_WINDOWSMR_CONTROLLER_NAME_16 = _stringLiteral15627DE07324E44D9B2C6CB10DB8743C8D90E486;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___OPENVR_WINDOWSMR_CONTROLLER_NAME_16), (void*)_stringLiteral15627DE07324E44D9B2C6CB10DB8743C8D90E486);
		// public static OpenVRControllerDetails[] openVRControllerDetails = new OpenVRControllerDetails[2];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6495));
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_1 = (OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4*)(OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4*)SZArrayNew(OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4_il2cpp_TypeInfo_var, (uint32_t)2);
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17 = L_1;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17), (void*)L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6496));
		//         controllers = new List<OVRControllerBase>
		//         {
		// #if UNITY_ANDROID && !UNITY_EDITOR
		//             new OVRControllerGamepadAndroid(),
		//             new OVRControllerTouch(),
		//             new OVRControllerLTouch(),
		//             new OVRControllerRTouch(),
		//             new OVRControllerHands(),
		//             new OVRControllerLHand(),
		//             new OVRControllerRHand(),
		// #elif UNITY_STANDALONE_WIN || UNITY_EDITOR_WIN
		//             new OVRControllerGamepadPC(),
		//             new OVRControllerTouch(),
		//             new OVRControllerLTouch(),
		//             new OVRControllerRTouch(),
		//             new OVRControllerHands(),
		//             new OVRControllerLHand(),
		//             new OVRControllerRHand(),
		//             new OVRControllerRemote(),
		// #endif
		//         };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6497));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6498));
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_2 = (List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577*)il2cpp_codegen_object_new(List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577_il2cpp_TypeInfo_var);
		NullCheck(L_2);
		List_1__ctor_m47318792E32D53A0CE4C2670BAEDA77A7ACB3706(L_2, List_1__ctor_m47318792E32D53A0CE4C2670BAEDA77A7ACB3706_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6498));
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_3 = L_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6499));
		OVRControllerGamepadAndroid_t744FA8E4FD2A606498498663467C1271A46F1AB9* L_4 = (OVRControllerGamepadAndroid_t744FA8E4FD2A606498498663467C1271A46F1AB9*)il2cpp_codegen_object_new(OVRControllerGamepadAndroid_t744FA8E4FD2A606498498663467C1271A46F1AB9_il2cpp_TypeInfo_var);
		NullCheck(L_4);
		OVRControllerGamepadAndroid__ctor_m2B20446135A5F6216BBF57ADB65A8E55264F991B(L_4, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6499));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6500));
		NullCheck(L_3);
		List_1_Add_mDB779AD07F59193F6BBFA7819A6E3F152C712450_inline(L_3, L_4, List_1_Add_mDB779AD07F59193F6BBFA7819A6E3F152C712450_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6500));
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_5 = L_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6501));
		OVRControllerTouch_t3242C19AECEE9D167D937CF1288465415D554A37* L_6 = (OVRControllerTouch_t3242C19AECEE9D167D937CF1288465415D554A37*)il2cpp_codegen_object_new(OVRControllerTouch_t3242C19AECEE9D167D937CF1288465415D554A37_il2cpp_TypeInfo_var);
		NullCheck(L_6);
		OVRControllerTouch__ctor_m91BC2C7183CE4A5BC5C88F5853AD8861707099EB(L_6, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6501));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6502));
		NullCheck(L_5);
		List_1_Add_mDB779AD07F59193F6BBFA7819A6E3F152C712450_inline(L_5, L_6, List_1_Add_mDB779AD07F59193F6BBFA7819A6E3F152C712450_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6502));
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_7 = L_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6503));
		OVRControllerLTouch_tAB910B5D7369AA3104AD40C8AE5458C254D225C6* L_8 = (OVRControllerLTouch_tAB910B5D7369AA3104AD40C8AE5458C254D225C6*)il2cpp_codegen_object_new(OVRControllerLTouch_tAB910B5D7369AA3104AD40C8AE5458C254D225C6_il2cpp_TypeInfo_var);
		NullCheck(L_8);
		OVRControllerLTouch__ctor_m91BB861EC10E9882AB10768F0454FC24950C7101(L_8, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6503));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6504));
		NullCheck(L_7);
		List_1_Add_mDB779AD07F59193F6BBFA7819A6E3F152C712450_inline(L_7, L_8, List_1_Add_mDB779AD07F59193F6BBFA7819A6E3F152C712450_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6504));
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_9 = L_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6505));
		OVRControllerRTouch_t05E309647F46A925D9C970B8636ADD34E6533A01* L_10 = (OVRControllerRTouch_t05E309647F46A925D9C970B8636ADD34E6533A01*)il2cpp_codegen_object_new(OVRControllerRTouch_t05E309647F46A925D9C970B8636ADD34E6533A01_il2cpp_TypeInfo_var);
		NullCheck(L_10);
		OVRControllerRTouch__ctor_mACBBB5CD6558549FC7D1707D4DE6F92A3469B184(L_10, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6505));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6506));
		NullCheck(L_9);
		List_1_Add_mDB779AD07F59193F6BBFA7819A6E3F152C712450_inline(L_9, L_10, List_1_Add_mDB779AD07F59193F6BBFA7819A6E3F152C712450_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6506));
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_11 = L_9;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6507));
		OVRControllerHands_t12594A1327521ECA38B53C166676B845C1D621CA* L_12 = (OVRControllerHands_t12594A1327521ECA38B53C166676B845C1D621CA*)il2cpp_codegen_object_new(OVRControllerHands_t12594A1327521ECA38B53C166676B845C1D621CA_il2cpp_TypeInfo_var);
		NullCheck(L_12);
		OVRControllerHands__ctor_mCE96EBF14E42471CFFAC54E43B5B9F79DC75C51C(L_12, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6507));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6508));
		NullCheck(L_11);
		List_1_Add_mDB779AD07F59193F6BBFA7819A6E3F152C712450_inline(L_11, L_12, List_1_Add_mDB779AD07F59193F6BBFA7819A6E3F152C712450_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6508));
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_13 = L_11;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6509));
		OVRControllerLHand_t05FFDA0A0B722315B47BFEDFFF701B425563DDB8* L_14 = (OVRControllerLHand_t05FFDA0A0B722315B47BFEDFFF701B425563DDB8*)il2cpp_codegen_object_new(OVRControllerLHand_t05FFDA0A0B722315B47BFEDFFF701B425563DDB8_il2cpp_TypeInfo_var);
		NullCheck(L_14);
		OVRControllerLHand__ctor_m18D0440C8FFB9816CBFD4FCCC22DDF295F5B30A7(L_14, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6509));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6510));
		NullCheck(L_13);
		List_1_Add_mDB779AD07F59193F6BBFA7819A6E3F152C712450_inline(L_13, L_14, List_1_Add_mDB779AD07F59193F6BBFA7819A6E3F152C712450_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6510));
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_15 = L_13;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6511));
		OVRControllerRHand_t9AF4805EAECF3275B7E861B1A3E4CF7555C989B4* L_16 = (OVRControllerRHand_t9AF4805EAECF3275B7E861B1A3E4CF7555C989B4*)il2cpp_codegen_object_new(OVRControllerRHand_t9AF4805EAECF3275B7E861B1A3E4CF7555C989B4_il2cpp_TypeInfo_var);
		NullCheck(L_16);
		OVRControllerRHand__ctor_m0A5012B434B5D3D4EDC8DAEF913D09AADAA81327(L_16, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6511));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6512));
		NullCheck(L_15);
		List_1_Add_mDB779AD07F59193F6BBFA7819A6E3F152C712450_inline(L_15, L_16, List_1_Add_mDB779AD07F59193F6BBFA7819A6E3F152C712450_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6512));
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2 = L_15;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2), (void*)L_15);
		// InitHapticInfo();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6513));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6514));
		OVRInput_InitHapticInfo_mAF5586A61678F7D8D7BA986F970A21226E4FC06F(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6514));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6515));
		return;
	}
}
// System.Void OVRInput::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRInput_Update_m46BEA0A1B8C6592A25FBA12F61D471770EC72076 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Controller_tBCAA59EAD9BFE2381E974A48B203D044B6CE1ECB_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_Update_m46BEA0A1B8C6592A25FBA12F61D471770EC72076_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&RawButton_tCD95D496C88D49C316A04BE1354D128EF7DB23AF_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&RawTouch_t7D17A388D30D8E3B4FD34FBDAA322D5023CF8BE3_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* V_2 = NULL;
	bool V_3 = false;
	int32_t V_4 = 0;
	int32_t V_5 = 0;
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	bool V_10 = false;
	bool V_11 = false;
	bool V_12 = false;
	bool V_13 = false;
	int32_t V_14 = 0;
	bool V_15 = false;
	bool V_16 = false;
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_2), (&V_4), (&V_5), (&V_14));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_Update_m46BEA0A1B8C6592A25FBA12F61D471770EC72076_RuntimeMethod_var, NULL, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6516));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6517));
	int32_t G_B7_0 = 0;
	int32_t G_B15_0 = 0;
	int32_t G_B22_0 = 0;
	int32_t G_B31_0 = 0;
	int32_t G_B35_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6518));
		// connectedControllerTypes = Controller.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6519));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___connectedControllerTypes_4 = 0;
		// stepType = OVRPlugin.Step.Render;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6520));
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___stepType_5 = (-1);
		// fixedUpdateCount = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6521));
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___fixedUpdateCount_6 = 0;
		// if (OVRManager.loadedXRDevice == OVRManager.XRDevice.OpenVR)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6522));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___loadedXRDevice_85;
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)2))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6523));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_002d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6524));
		// UpdateXRControllerNodeIds();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6525));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6526));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		OVRInput_UpdateXRControllerNodeIds_mBADEA537A0EE550060596054C9FE13B8B041E8CA(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6526));
		// UpdateXRControllerHaptics();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6527));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6528));
		OVRInput_UpdateXRControllerHaptics_m9E0932C8F3F7602C10857A4B6AA0CEFF52F1CC78(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6528));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6529));
	}

IL_002d:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6530));
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6531));
		goto IL_00a1;
	}

IL_0031:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6532));
		// OVRControllerBase controller = controllers[i];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6533));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_2 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		int32_t L_3 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6534));
		NullCheck(L_2);
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_4;
		L_4 = List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D(L_2, L_3, List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6534));
		V_2 = L_4;
		// connectedControllerTypes |= controller.Update();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6535));
		int32_t L_5 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___connectedControllerTypes_4;
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_6 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6536));
		NullCheck(L_6);
		int32_t L_7;
		L_7 = VirtualFuncInvoker0< int32_t >::Invoke(4 /* OVRInput/Controller OVRInput/OVRControllerBase::Update() */, L_6);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6536));
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___connectedControllerTypes_4 = ((int32_t)((int32_t)L_5|(int32_t)L_7));
		// if ((connectedControllerTypes & controller.controllerType) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6537));
		int32_t L_8 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___connectedControllerTypes_4;
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_9 = V_2;
		NullCheck(L_9);
		int32_t L_10 = L_9->___controllerType_0;
		V_3 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_8&(int32_t)L_10))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6538));
		bool L_11 = V_3;
		if (!L_11)
		{
			goto IL_009c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6539));
		// RawButton rawButtonMask = RawButton.Any;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6540));
		V_4 = (-1);
		// RawTouch rawTouchMask = RawTouch.Any;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6541));
		V_5 = (-1);
		// if (Get(rawButtonMask, controller.controllerType)
		//     || Get(rawTouchMask, controller.controllerType))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6542));
		int32_t L_12 = V_4;
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_13 = V_2;
		NullCheck(L_13);
		int32_t L_14 = L_13->___controllerType_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6543));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		bool L_15;
		L_15 = OVRInput_Get_m537C5F53DCBD027936460E4183648F5EEBA6A654(L_12, L_14, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6543));
		if (L_15)
		{
			goto IL_0087;
		}
	}
	{
		int32_t L_16 = V_5;
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_17 = V_2;
		NullCheck(L_17);
		int32_t L_18 = L_17->___controllerType_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6544));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		bool L_19;
		L_19 = OVRInput_Get_mBEB70324F4BE01D02BE80C0A871A096F1D28D598(L_16, L_18, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6544));
		G_B7_0 = ((int32_t)(L_19));
		goto IL_0088;
	}

IL_0087:
	{
		G_B7_0 = 1;
	}

IL_0088:
	{
		V_6 = (bool)G_B7_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6545));
		bool L_20 = V_6;
		if (!L_20)
		{
			goto IL_009b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6546));
		// activeControllerType = controller.controllerType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6547));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_21 = V_2;
		NullCheck(L_21);
		int32_t L_22 = L_21->___controllerType_0;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3 = L_22;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6548));
	}

IL_009b:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6549));
	}

IL_009c:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6550));
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6551));
		int32_t L_23 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add(L_23, 1));
	}

IL_00a1:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6552));
		int32_t L_24 = V_1;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_25 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6553));
		NullCheck(L_25);
		int32_t L_26;
		L_26 = List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_inline(L_25, List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6553));
		V_7 = (bool)((((int32_t)L_24) < ((int32_t)L_26))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6554));
		bool L_27 = V_7;
		if (L_27)
		{
			goto IL_0031;
		}
	}
	{
		// if ((activeControllerType == Controller.LTouch) || (activeControllerType == Controller.RTouch))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6555));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_28 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3;
		if ((((int32_t)L_28) == ((int32_t)1)))
		{
			goto IL_00c9;
		}
	}
	{
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_29 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3;
		G_B15_0 = ((((int32_t)L_29) == ((int32_t)2))? 1 : 0);
		goto IL_00ca;
	}

IL_00c9:
	{
		G_B15_0 = 1;
	}

IL_00ca:
	{
		V_8 = (bool)G_B15_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6556));
		bool L_30 = V_8;
		if (!L_30)
		{
			goto IL_00ea;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6557));
		// if ((connectedControllerTypes & Controller.Touch) == Controller.Touch)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6558));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_31 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___connectedControllerTypes_4;
		V_9 = (bool)((((int32_t)((int32_t)((int32_t)L_31&3))) == ((int32_t)3))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6559));
		bool L_32 = V_9;
		if (!L_32)
		{
			goto IL_00e9;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6560));
		// activeControllerType = Controller.Touch;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6561));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3 = 3;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6562));
	}

IL_00e9:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6563));
	}

IL_00ea:
	{
		// if ((activeControllerType == Controller.LHand) || (activeControllerType == Controller.RHand))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6564));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_33 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3;
		if ((((int32_t)L_33) == ((int32_t)((int32_t)32))))
		{
			goto IL_00fe;
		}
	}
	{
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_34 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3;
		G_B22_0 = ((((int32_t)L_34) == ((int32_t)((int32_t)64)))? 1 : 0);
		goto IL_00ff;
	}

IL_00fe:
	{
		G_B22_0 = 1;
	}

IL_00ff:
	{
		V_10 = (bool)G_B22_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6565));
		bool L_35 = V_10;
		if (!L_35)
		{
			goto IL_0122;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6566));
		// if ((connectedControllerTypes & Controller.Hands) == Controller.Hands)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6567));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_36 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___connectedControllerTypes_4;
		V_11 = (bool)((((int32_t)((int32_t)((int32_t)L_36&((int32_t)96)))) == ((int32_t)((int32_t)96)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6568));
		bool L_37 = V_11;
		if (!L_37)
		{
			goto IL_0121;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6569));
		// activeControllerType = Controller.Hands;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6570));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3 = ((int32_t)96);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6571));
	}

IL_0121:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6572));
	}

IL_0122:
	{
		// if ((connectedControllerTypes & activeControllerType) == 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6573));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_38 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___connectedControllerTypes_4;
		int32_t L_39 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3;
		V_12 = (bool)((((int32_t)((int32_t)((int32_t)L_38&(int32_t)L_39))) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6574));
		bool L_40 = V_12;
		if (!L_40)
		{
			goto IL_013e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6575));
		// activeControllerType = Controller.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6576));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6577));
	}

IL_013e:
	{
		// if ( OVRManager.loadedXRDevice == OVRManager.XRDevice.Oculus && pluginSupportsActiveController)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6578));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_41 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___loadedXRDevice_85;
		if ((!(((uint32_t)L_41) == ((uint32_t)1))))
		{
			goto IL_014d;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6579));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		bool L_42;
		L_42 = OVRInput_get_pluginSupportsActiveController_m273F22B55C9B8197B8B372827D45933173F51C05(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6579));
		G_B31_0 = ((int32_t)(L_42));
		goto IL_014e;
	}

IL_014d:
	{
		G_B31_0 = 0;
	}

IL_014e:
	{
		V_13 = (bool)G_B31_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6580));
		bool L_43 = V_13;
		if (!L_43)
		{
			goto IL_0194;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6581));
		// Controller localActiveController = activeControllerType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6582));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_44 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3;
		V_14 = L_44;
		// connectedControllerTypes = (OVRInput.Controller)OVRPlugin.GetConnectedControllers();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6583));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6584));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		int32_t L_45;
		L_45 = OVRPlugin_GetConnectedControllers_m32CC5DB7DC0C5AD45529BD1A6A9CE6BA80E0E3B5(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6584));
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___connectedControllerTypes_4 = L_45;
		// activeControllerType = (OVRInput.Controller)OVRPlugin.GetActiveController();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6585));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6586));
		int32_t L_46;
		L_46 = OVRPlugin_GetActiveController_mB51206F4C3221D56F5D78602D98A765A57E6A14C(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6586));
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3 = L_46;
		// if (activeControllerType == Controller.None && ((localActiveController & Controller.Hands) != 0))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6587));
		int32_t L_47 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3;
		if (L_47)
		{
			goto IL_0181;
		}
	}
	{
		int32_t L_48 = V_14;
		G_B35_0 = ((!(((uint32_t)((int32_t)((int32_t)L_48&((int32_t)96)))) <= ((uint32_t)0)))? 1 : 0);
		goto IL_0182;
	}

IL_0181:
	{
		G_B35_0 = 0;
	}

IL_0182:
	{
		V_15 = (bool)G_B35_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6588));
		bool L_49 = V_15;
		if (!L_49)
		{
			goto IL_0191;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6589));
		// activeControllerType = localActiveController;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6590));
		int32_t L_50 = V_14;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3 = L_50;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6591));
	}

IL_0191:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6592));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6593));
		goto IL_01ae;
	}

IL_0194:
	{
		// else if (OVRManager.loadedXRDevice == OVRManager.XRDevice.OpenVR)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6594));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_51 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___loadedXRDevice_85;
		V_16 = (bool)((((int32_t)L_51) == ((int32_t)2))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6595));
		bool L_52 = V_16;
		if (!L_52)
		{
			goto IL_01ae;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6596));
		// activeControllerType = connectedControllerTypes;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6597));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_53 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___connectedControllerTypes_4;
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3 = L_53;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6598));
	}

IL_01ae:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6599));
		return;
	}
}
// System.Void OVRInput::FixedUpdate()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRInput_FixedUpdate_m0B2BA5C8485902E1A0EE19A1F7066E671D8ECCB5 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Double_tE150EF3D1D43DEE85D533810AB4C742307EEDE5F_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_FixedUpdate_m0B2BA5C8485902E1A0EE19A1F7066E671D8ECCB5_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	double V_1 = 0.0;
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_FixedUpdate_m0B2BA5C8485902E1A0EE19A1F7066E671D8ECCB5_RuntimeMethod_var, NULL, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6600));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6601));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6602));
		// if (OVRPlugin.nativeXrApi != OVRPlugin.XrApi.OpenXR)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6603));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6604));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		int32_t L_0;
		L_0 = OVRPlugin_get_nativeXrApi_m32634338020C30D956A1579A7745C94BD77279F3(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6604));
		V_0 = (bool)((((int32_t)((((int32_t)L_0) == ((int32_t)3))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6605));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_004b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6606));
		// stepType = OVRPlugin.Step.Physics;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6607));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___stepType_5 = 0;
		// double predictionSeconds = (double)fixedUpdateCount * Time.fixedDeltaTime / Mathf.Max(Time.timeScale, 1e-6f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6608));
		int32_t L_2 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___fixedUpdateCount_6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6609));
		float L_3;
		L_3 = Time_get_fixedDeltaTime_m43136893D00AF5D5FE80AD05609558F6E2381381(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6609));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6610));
		float L_4;
		L_4 = Time_get_timeScale_m1F45A413D4EEA08B1E0988022512C137F6C1E616(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6610));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6611));
		float L_5;
		L_5 = Mathf_Max_mF5379E63D2BBAC76D090748695D833934F8AD051_inline(L_4, (9.99999997E-07f), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6611));
		V_1 = ((double)(((double)il2cpp_codegen_multiply(((double)L_2), ((double)L_3)))/((double)L_5)));
		// fixedUpdateCount++;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6612));
		int32_t L_6 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___fixedUpdateCount_6;
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___fixedUpdateCount_6 = ((int32_t)il2cpp_codegen_add(L_6, 1));
		// OVRPlugin.UpdateNodePhysicsPoses(0, predictionSeconds);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6613));
		double L_7 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6614));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_8;
		L_8 = OVRPlugin_UpdateNodePhysicsPoses_m30A4EB300401EF39239AE6418ED8CF994C51707C(0, L_7, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6614));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6615));
	}

IL_004b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6616));
		return;
	}
}
// OVRInput/InteractionProfile OVRInput::GetCurrentInteractionProfile(OVRInput/Hand)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRInput_GetCurrentInteractionProfile_m8630585A560EB956CDEC8EA3355C3A4584E6734A (int32_t ___0_hand, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&InteractionProfile_tE7ABF6508471099A925103D86BCDD892269F74D2_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetCurrentInteractionProfile_m8630585A560EB956CDEC8EA3355C3A4584E6734A_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_hand));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetCurrentInteractionProfile_m8630585A560EB956CDEC8EA3355C3A4584E6734A_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6617));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6618));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6619));
		// return (OVRInput.InteractionProfile)OVRPlugin.GetCurrentInteractionProfile((OVRPlugin.Hand)hand);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6620));
		int32_t L_0 = ___0_hand;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6621));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		int32_t L_1;
		L_1 = OVRPlugin_GetCurrentInteractionProfile_m12953945102999ED32CED85223563A6EAC9AE7CF(L_0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6621));
		V_0 = L_1;
		goto IL_000a;
	}

IL_000a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6622));
		int32_t L_2 = V_0;
		return L_2;
	}
}
// System.Boolean OVRInput::GetControllerOrientationTracked(OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetControllerOrientationTracked_m29C61E840A641F6639492E4AD2A852A786E6EC7F (int32_t ___0_controllerType, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Controller_tBCAA59EAD9BFE2381E974A48B203D044B6CE1ECB_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetControllerOrientationTracked_m29C61E840A641F6639492E4AD2A852A786E6EC7F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	int32_t V_1 = 0;
	bool V_2 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_controllerType));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetControllerOrientationTracked_m29C61E840A641F6639492E4AD2A852A786E6EC7F_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6623));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6624));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6625));
		// switch (controllerType)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6626));
		int32_t L_0 = ___0_controllerType;
		V_1 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6627));
		int32_t L_1 = V_1;
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6628));
		int32_t L_2 = V_0;
		if ((((int32_t)L_2) > ((int32_t)2)))
		{
			goto IL_0015;
		}
	}
	{
		int32_t L_3 = V_0;
		if ((((int32_t)L_3) == ((int32_t)1)))
		{
			goto IL_0023;
		}
	}
	{
		goto IL_000f;
	}

IL_000f:
	{
		int32_t L_4 = V_0;
		if ((((int32_t)L_4) == ((int32_t)2)))
		{
			goto IL_002c;
		}
	}
	{
		goto IL_0035;
	}

IL_0015:
	{
		int32_t L_5 = V_0;
		if ((((int32_t)L_5) == ((int32_t)((int32_t)32))))
		{
			goto IL_0023;
		}
	}
	{
		goto IL_001c;
	}

IL_001c:
	{
		int32_t L_6 = V_0;
		if ((((int32_t)L_6) == ((int32_t)((int32_t)64))))
		{
			goto IL_002c;
		}
	}
	{
		goto IL_0035;
	}

IL_0023:
	{
		// return OVRPlugin.GetNodeOrientationTracked(OVRPlugin.Node.HandLeft);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6629));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6630));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_7;
		L_7 = OVRPlugin_GetNodeOrientationTracked_m2F4F1AF81CEA7FB1BC6B8025E99A1D0E93CBDC9F(3, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6630));
		V_2 = L_7;
		goto IL_0039;
	}

IL_002c:
	{
		// return OVRPlugin.GetNodeOrientationTracked(OVRPlugin.Node.HandRight);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6631));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6632));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_8;
		L_8 = OVRPlugin_GetNodeOrientationTracked_m2F4F1AF81CEA7FB1BC6B8025E99A1D0E93CBDC9F(4, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6632));
		V_2 = L_8;
		goto IL_0039;
	}

IL_0035:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6633));
		V_2 = (bool)0;
		goto IL_0039;
	}

IL_0039:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6634));
		bool L_9 = V_2;
		return L_9;
	}
}
// System.Boolean OVRInput::GetControllerOrientationValid(OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetControllerOrientationValid_m9EE0634367BCEAF60C6DDBA9CF527F2CEC8327C1 (int32_t ___0_controllerType, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Controller_tBCAA59EAD9BFE2381E974A48B203D044B6CE1ECB_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetControllerOrientationValid_m9EE0634367BCEAF60C6DDBA9CF527F2CEC8327C1_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	int32_t V_1 = 0;
	bool V_2 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_controllerType));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetControllerOrientationValid_m9EE0634367BCEAF60C6DDBA9CF527F2CEC8327C1_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6635));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6636));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6637));
		// switch (controllerType)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6638));
		int32_t L_0 = ___0_controllerType;
		V_1 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6639));
		int32_t L_1 = V_1;
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6640));
		int32_t L_2 = V_0;
		if ((((int32_t)L_2) > ((int32_t)2)))
		{
			goto IL_0015;
		}
	}
	{
		int32_t L_3 = V_0;
		if ((((int32_t)L_3) == ((int32_t)1)))
		{
			goto IL_0023;
		}
	}
	{
		goto IL_000f;
	}

IL_000f:
	{
		int32_t L_4 = V_0;
		if ((((int32_t)L_4) == ((int32_t)2)))
		{
			goto IL_002c;
		}
	}
	{
		goto IL_0035;
	}

IL_0015:
	{
		int32_t L_5 = V_0;
		if ((((int32_t)L_5) == ((int32_t)((int32_t)32))))
		{
			goto IL_0023;
		}
	}
	{
		goto IL_001c;
	}

IL_001c:
	{
		int32_t L_6 = V_0;
		if ((((int32_t)L_6) == ((int32_t)((int32_t)64))))
		{
			goto IL_002c;
		}
	}
	{
		goto IL_0035;
	}

IL_0023:
	{
		// return OVRPlugin.GetNodeOrientationValid(OVRPlugin.Node.HandLeft);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6641));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6642));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_7;
		L_7 = OVRPlugin_GetNodeOrientationValid_m84C2B516B7C2D28967C271C8F5068028E6816717(3, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6642));
		V_2 = L_7;
		goto IL_0039;
	}

IL_002c:
	{
		// return OVRPlugin.GetNodeOrientationValid(OVRPlugin.Node.HandRight);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6643));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6644));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_8;
		L_8 = OVRPlugin_GetNodeOrientationValid_m84C2B516B7C2D28967C271C8F5068028E6816717(4, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6644));
		V_2 = L_8;
		goto IL_0039;
	}

IL_0035:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6645));
		V_2 = (bool)0;
		goto IL_0039;
	}

IL_0039:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6646));
		bool L_9 = V_2;
		return L_9;
	}
}
// System.Boolean OVRInput::GetControllerPositionTracked(OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetControllerPositionTracked_mA3D8C4DFC17FB1808C78A865556E394BF565CF0A (int32_t ___0_controllerType, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Controller_tBCAA59EAD9BFE2381E974A48B203D044B6CE1ECB_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetControllerPositionTracked_mA3D8C4DFC17FB1808C78A865556E394BF565CF0A_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	int32_t V_1 = 0;
	bool V_2 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_controllerType));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetControllerPositionTracked_mA3D8C4DFC17FB1808C78A865556E394BF565CF0A_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6647));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6648));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6649));
		// switch (controllerType)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6650));
		int32_t L_0 = ___0_controllerType;
		V_1 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6651));
		int32_t L_1 = V_1;
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6652));
		int32_t L_2 = V_0;
		if ((((int32_t)L_2) > ((int32_t)2)))
		{
			goto IL_0015;
		}
	}
	{
		int32_t L_3 = V_0;
		if ((((int32_t)L_3) == ((int32_t)1)))
		{
			goto IL_0023;
		}
	}
	{
		goto IL_000f;
	}

IL_000f:
	{
		int32_t L_4 = V_0;
		if ((((int32_t)L_4) == ((int32_t)2)))
		{
			goto IL_002c;
		}
	}
	{
		goto IL_0035;
	}

IL_0015:
	{
		int32_t L_5 = V_0;
		if ((((int32_t)L_5) == ((int32_t)((int32_t)32))))
		{
			goto IL_0023;
		}
	}
	{
		goto IL_001c;
	}

IL_001c:
	{
		int32_t L_6 = V_0;
		if ((((int32_t)L_6) == ((int32_t)((int32_t)64))))
		{
			goto IL_002c;
		}
	}
	{
		goto IL_0035;
	}

IL_0023:
	{
		// return OVRPlugin.GetNodePositionTracked(OVRPlugin.Node.HandLeft);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6653));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6654));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_7;
		L_7 = OVRPlugin_GetNodePositionTracked_m7921BCEF65C51982D626A264426AE6A31BCB110B(3, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6654));
		V_2 = L_7;
		goto IL_0039;
	}

IL_002c:
	{
		// return OVRPlugin.GetNodePositionTracked(OVRPlugin.Node.HandRight);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6655));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6656));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_8;
		L_8 = OVRPlugin_GetNodePositionTracked_m7921BCEF65C51982D626A264426AE6A31BCB110B(4, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6656));
		V_2 = L_8;
		goto IL_0039;
	}

IL_0035:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6657));
		V_2 = (bool)0;
		goto IL_0039;
	}

IL_0039:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6658));
		bool L_9 = V_2;
		return L_9;
	}
}
// System.Boolean OVRInput::GetControllerPositionValid(OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetControllerPositionValid_m3ACDABE2BD5335A8DE615A2F9A5C9D63CE329E94 (int32_t ___0_controllerType, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Controller_tBCAA59EAD9BFE2381E974A48B203D044B6CE1ECB_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetControllerPositionValid_m3ACDABE2BD5335A8DE615A2F9A5C9D63CE329E94_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	int32_t V_1 = 0;
	bool V_2 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_controllerType));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetControllerPositionValid_m3ACDABE2BD5335A8DE615A2F9A5C9D63CE329E94_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6659));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6660));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6661));
		// switch (controllerType)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6662));
		int32_t L_0 = ___0_controllerType;
		V_1 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6663));
		int32_t L_1 = V_1;
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6664));
		int32_t L_2 = V_0;
		if ((((int32_t)L_2) > ((int32_t)2)))
		{
			goto IL_0015;
		}
	}
	{
		int32_t L_3 = V_0;
		if ((((int32_t)L_3) == ((int32_t)1)))
		{
			goto IL_0023;
		}
	}
	{
		goto IL_000f;
	}

IL_000f:
	{
		int32_t L_4 = V_0;
		if ((((int32_t)L_4) == ((int32_t)2)))
		{
			goto IL_002c;
		}
	}
	{
		goto IL_0035;
	}

IL_0015:
	{
		int32_t L_5 = V_0;
		if ((((int32_t)L_5) == ((int32_t)((int32_t)32))))
		{
			goto IL_0023;
		}
	}
	{
		goto IL_001c;
	}

IL_001c:
	{
		int32_t L_6 = V_0;
		if ((((int32_t)L_6) == ((int32_t)((int32_t)64))))
		{
			goto IL_002c;
		}
	}
	{
		goto IL_0035;
	}

IL_0023:
	{
		// return OVRPlugin.GetNodePositionValid(OVRPlugin.Node.HandLeft);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6665));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6666));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_7;
		L_7 = OVRPlugin_GetNodePositionValid_m855200815DB6B89892A8057D87434E62177ADFDC(3, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6666));
		V_2 = L_7;
		goto IL_0039;
	}

IL_002c:
	{
		// return OVRPlugin.GetNodePositionValid(OVRPlugin.Node.HandRight);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6667));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6668));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_8;
		L_8 = OVRPlugin_GetNodePositionValid_m855200815DB6B89892A8057D87434E62177ADFDC(4, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6668));
		V_2 = L_8;
		goto IL_0039;
	}

IL_0035:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6669));
		V_2 = (bool)0;
		goto IL_0039;
	}

IL_0039:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6670));
		bool L_9 = V_2;
		return L_9;
	}
}
// UnityEngine.Vector3 OVRInput::GetLocalControllerPosition(OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 OVRInput_GetLocalControllerPosition_mD8A4504C441B477AB11C92CB7FBD561ECF15E253 (int32_t ___0_controllerType, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Controller_tBCAA59EAD9BFE2381E974A48B203D044B6CE1ECB_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetLocalControllerPosition_mD8A4504C441B477AB11C92CB7FBD561ECF15E253_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRNodeStateProperties_tE41A5F7393D4FB967D6062A0A2DBE4F3A24350BC_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	int32_t V_1 = 0;
	bool V_2 = false;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_3;
	memset((&V_3), 0, sizeof(V_3));
	bool V_4 = false;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_5;
	memset((&V_5), 0, sizeof(V_5));
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_9;
	memset((&V_9), 0, sizeof(V_9));
	bool V_10 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_controllerType));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_5), (&V_9));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetLocalControllerPosition_mD8A4504C441B477AB11C92CB7FBD561ECF15E253_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6671));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6672));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6673));
		// switch (controllerType)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6674));
		int32_t L_0 = ___0_controllerType;
		V_1 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6675));
		int32_t L_1 = V_1;
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6676));
		int32_t L_2 = V_0;
		if ((((int32_t)L_2) > ((int32_t)2)))
		{
			goto IL_001b;
		}
	}
	{
		int32_t L_3 = V_0;
		if ((((int32_t)L_3) == ((int32_t)1)))
		{
			goto IL_002c;
		}
	}
	{
		goto IL_000f;
	}

IL_000f:
	{
		int32_t L_4 = V_0;
		if ((((int32_t)L_4) == ((int32_t)2)))
		{
			goto IL_009a;
		}
	}
	{
		goto IL_0104;
	}

IL_001b:
	{
		int32_t L_5 = V_0;
		if ((((int32_t)L_5) == ((int32_t)((int32_t)32))))
		{
			goto IL_002c;
		}
	}
	{
		goto IL_0022;
	}

IL_0022:
	{
		int32_t L_6 = V_0;
		if ((((int32_t)L_6) == ((int32_t)((int32_t)64))))
		{
			goto IL_009a;
		}
	}
	{
		goto IL_0104;
	}

IL_002c:
	{
		// if (OVRManager.loadedXRDevice == OVRManager.XRDevice.Oculus)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6677));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_7 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___loadedXRDevice_85;
		V_2 = (bool)((((int32_t)L_7) == ((int32_t)1))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6678));
		bool L_8 = V_2;
		if (!L_8)
		{
			goto IL_0053;
		}
	}
	{
		// return OVRPlugin.GetNodePose(OVRPlugin.Node.HandLeft, stepType).ToOVRPose().position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6679));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_9 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___stepType_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6680));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		Posef_t51A2C10B4094B44A8D3C1913292B839172887B61 L_10;
		L_10 = OVRPlugin_GetNodePose_m973B3CA31C019465A53494EB440C13C2AE229CB3(3, L_9, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6680));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6681));
		OVRPose_t8054769FD4517C10D2ECD2C14C823723D675EEFB L_11;
		L_11 = OVRExtensions_ToOVRPose_m2D557CFD8B775C88FDED26B3D31A67E8AB53B14F(L_10, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6681));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_12 = L_11.___position_0;
		V_3 = L_12;
		goto IL_010c;
	}

IL_0053:
	{
		// else if (OVRManager.loadedXRDevice == OVRManager.XRDevice.OpenVR)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6682));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_13 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___loadedXRDevice_85;
		V_4 = (bool)((((int32_t)L_13) == ((int32_t)2))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6683));
		bool L_14 = V_4;
		if (!L_14)
		{
			goto IL_0077;
		}
	}
	{
		// return openVRControllerDetails[0].localPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6684));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_15 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_15);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_16 = ((L_15)->GetAddressAt(static_cast<il2cpp_array_size_t>(0)))->___localPosition_3;
		V_3 = L_16;
		goto IL_010c;
	}

IL_0077:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6685));
		// if (OVRNodeStateProperties.GetNodeStatePropertyVector3(Node.LeftHand, NodeStatePropertyType.Position, OVRPlugin.Node.HandLeft, stepType, out retVec))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6686));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_17 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___stepType_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6687));
		il2cpp_codegen_runtime_class_init_inline(OVRNodeStateProperties_tE41A5F7393D4FB967D6062A0A2DBE4F3A24350BC_il2cpp_TypeInfo_var);
		bool L_18;
		L_18 = OVRNodeStateProperties_GetNodeStatePropertyVector3_mFA9CA29D9B8B68721EBFF755AE379F019ADB3EA1(4, 4, 3, L_17, (&V_5), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6687));
		V_6 = L_18;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6688));
		bool L_19 = V_6;
		if (!L_19)
		{
			goto IL_0092;
		}
	}
	{
		// return retVec;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6689));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_20 = V_5;
		V_3 = L_20;
		goto IL_010c;
	}

IL_0092:
	{
		// return Vector3.zero;                //Will never be hit, but is a final fallback.
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6690));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6691));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_21;
		L_21 = Vector3_get_zero_m0C1249C3F25B1C70EAD3CC8B31259975A457AE39_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6691));
		V_3 = L_21;
		goto IL_010c;
	}

IL_009a:
	{
		// if (OVRManager.loadedXRDevice == OVRManager.XRDevice.Oculus)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6692));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_22 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___loadedXRDevice_85;
		V_7 = (bool)((((int32_t)L_22) == ((int32_t)1))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6693));
		bool L_23 = V_7;
		if (!L_23)
		{
			goto IL_00c0;
		}
	}
	{
		// return OVRPlugin.GetNodePose(OVRPlugin.Node.HandRight, stepType).ToOVRPose().position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6694));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_24 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___stepType_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6695));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		Posef_t51A2C10B4094B44A8D3C1913292B839172887B61 L_25;
		L_25 = OVRPlugin_GetNodePose_m973B3CA31C019465A53494EB440C13C2AE229CB3(4, L_24, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6695));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6696));
		OVRPose_t8054769FD4517C10D2ECD2C14C823723D675EEFB L_26;
		L_26 = OVRExtensions_ToOVRPose_m2D557CFD8B775C88FDED26B3D31A67E8AB53B14F(L_25, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6696));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_27 = L_26.___position_0;
		V_3 = L_27;
		goto IL_010c;
	}

IL_00c0:
	{
		// else if (OVRManager.loadedXRDevice == OVRManager.XRDevice.OpenVR)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6697));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_28 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___loadedXRDevice_85;
		V_8 = (bool)((((int32_t)L_28) == ((int32_t)2))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6698));
		bool L_29 = V_8;
		if (!L_29)
		{
			goto IL_00e1;
		}
	}
	{
		// return openVRControllerDetails[1].localPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6699));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_30 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_30);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_31 = ((L_30)->GetAddressAt(static_cast<il2cpp_array_size_t>(1)))->___localPosition_3;
		V_3 = L_31;
		goto IL_010c;
	}

IL_00e1:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6700));
		// if (OVRNodeStateProperties.GetNodeStatePropertyVector3(Node.RightHand, NodeStatePropertyType.Position, OVRPlugin.Node.HandRight, stepType, out retVec))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6701));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_32 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___stepType_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6702));
		il2cpp_codegen_runtime_class_init_inline(OVRNodeStateProperties_tE41A5F7393D4FB967D6062A0A2DBE4F3A24350BC_il2cpp_TypeInfo_var);
		bool L_33;
		L_33 = OVRNodeStateProperties_GetNodeStatePropertyVector3_mFA9CA29D9B8B68721EBFF755AE379F019ADB3EA1(5, 4, 4, L_32, (&V_9), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6702));
		V_10 = L_33;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6703));
		bool L_34 = V_10;
		if (!L_34)
		{
			goto IL_00fc;
		}
	}
	{
		// return retVec;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6704));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_35 = V_9;
		V_3 = L_35;
		goto IL_010c;
	}

IL_00fc:
	{
		// return Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6705));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6706));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_36;
		L_36 = Vector3_get_zero_m0C1249C3F25B1C70EAD3CC8B31259975A457AE39_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6706));
		V_3 = L_36;
		goto IL_010c;
	}

IL_0104:
	{
		// return Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6707));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6708));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_37;
		L_37 = Vector3_get_zero_m0C1249C3F25B1C70EAD3CC8B31259975A457AE39_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6708));
		V_3 = L_37;
		goto IL_010c;
	}

IL_010c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6709));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_38 = V_3;
		return L_38;
	}
}
// UnityEngine.Vector3 OVRInput::GetLocalControllerVelocity(OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 OVRInput_GetLocalControllerVelocity_m2E8ED9F38FCB0E781C796E72917D27F65A3EFF14 (int32_t ___0_controllerType, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Controller_tBCAA59EAD9BFE2381E974A48B203D044B6CE1ECB_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetLocalControllerVelocity_m2E8ED9F38FCB0E781C796E72917D27F65A3EFF14_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRNodeStateProperties_tE41A5F7393D4FB967D6062A0A2DBE4F3A24350BC_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_0;
	memset((&V_0), 0, sizeof(V_0));
	int32_t V_1 = 0;
	int32_t V_2 = 0;
	bool V_3 = false;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_4;
	memset((&V_4), 0, sizeof(V_4));
	bool V_5 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_controllerType));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetLocalControllerVelocity_m2E8ED9F38FCB0E781C796E72917D27F65A3EFF14_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6710));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6711));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6712));
		// Vector3 velocity = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6713));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6714));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_0;
		L_0 = Vector3_get_zero_m0C1249C3F25B1C70EAD3CC8B31259975A457AE39_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6714));
		V_0 = L_0;
		// switch (controllerType)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6715));
		int32_t L_1 = ___0_controllerType;
		V_2 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6716));
		int32_t L_2 = V_2;
		V_1 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6717));
		int32_t L_3 = V_1;
		if ((((int32_t)L_3) > ((int32_t)2)))
		{
			goto IL_001b;
		}
	}
	{
		int32_t L_4 = V_1;
		if ((((int32_t)L_4) == ((int32_t)1)))
		{
			goto IL_0029;
		}
	}
	{
		goto IL_0015;
	}

IL_0015:
	{
		int32_t L_5 = V_1;
		if ((((int32_t)L_5) == ((int32_t)2)))
		{
			goto IL_004c;
		}
	}
	{
		goto IL_0071;
	}

IL_001b:
	{
		int32_t L_6 = V_1;
		if ((((int32_t)L_6) == ((int32_t)((int32_t)32))))
		{
			goto IL_0029;
		}
	}
	{
		goto IL_0022;
	}

IL_0022:
	{
		int32_t L_7 = V_1;
		if ((((int32_t)L_7) == ((int32_t)((int32_t)64))))
		{
			goto IL_004c;
		}
	}
	{
		goto IL_0071;
	}

IL_0029:
	{
		// if (OVRNodeStateProperties.GetNodeStatePropertyVector3(Node.LeftHand, NodeStatePropertyType.Velocity, OVRPlugin.Node.HandLeft, stepType, out velocity))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6718));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_8 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___stepType_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6719));
		il2cpp_codegen_runtime_class_init_inline(OVRNodeStateProperties_tE41A5F7393D4FB967D6062A0A2DBE4F3A24350BC_il2cpp_TypeInfo_var);
		bool L_9;
		L_9 = OVRNodeStateProperties_GetNodeStatePropertyVector3_mFA9CA29D9B8B68721EBFF755AE379F019ADB3EA1(4, 2, 3, L_8, (&V_0), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6719));
		V_3 = L_9;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6720));
		bool L_10 = V_3;
		if (!L_10)
		{
			goto IL_0042;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6721));
		// return velocity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6722));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_11 = V_0;
		V_4 = L_11;
		goto IL_007a;
	}

IL_0042:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6723));
		// return Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6724));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6725));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_12;
		L_12 = Vector3_get_zero_m0C1249C3F25B1C70EAD3CC8B31259975A457AE39_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6725));
		V_4 = L_12;
		goto IL_007a;
	}

IL_004c:
	{
		// if (OVRNodeStateProperties.GetNodeStatePropertyVector3(Node.RightHand, NodeStatePropertyType.Velocity, OVRPlugin.Node.HandRight, stepType, out velocity))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6726));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_13 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___stepType_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6727));
		il2cpp_codegen_runtime_class_init_inline(OVRNodeStateProperties_tE41A5F7393D4FB967D6062A0A2DBE4F3A24350BC_il2cpp_TypeInfo_var);
		bool L_14;
		L_14 = OVRNodeStateProperties_GetNodeStatePropertyVector3_mFA9CA29D9B8B68721EBFF755AE379F019ADB3EA1(5, 2, 4, L_13, (&V_0), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6727));
		V_5 = L_14;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6728));
		bool L_15 = V_5;
		if (!L_15)
		{
			goto IL_0067;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6729));
		// return velocity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6730));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_16 = V_0;
		V_4 = L_16;
		goto IL_007a;
	}

IL_0067:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6731));
		// return Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6732));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6733));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_17;
		L_17 = Vector3_get_zero_m0C1249C3F25B1C70EAD3CC8B31259975A457AE39_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6733));
		V_4 = L_17;
		goto IL_007a;
	}

IL_0071:
	{
		// return Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6734));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6735));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_18;
		L_18 = Vector3_get_zero_m0C1249C3F25B1C70EAD3CC8B31259975A457AE39_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6735));
		V_4 = L_18;
		goto IL_007a;
	}

IL_007a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6736));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_19 = V_4;
		return L_19;
	}
}
// UnityEngine.Vector3 OVRInput::GetLocalControllerAcceleration(OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 OVRInput_GetLocalControllerAcceleration_m89D4A94FC2E1282CED140A6BC5D54527B1E98ECD (int32_t ___0_controllerType, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Controller_tBCAA59EAD9BFE2381E974A48B203D044B6CE1ECB_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetLocalControllerAcceleration_m89D4A94FC2E1282CED140A6BC5D54527B1E98ECD_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRNodeStateProperties_tE41A5F7393D4FB967D6062A0A2DBE4F3A24350BC_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_0;
	memset((&V_0), 0, sizeof(V_0));
	int32_t V_1 = 0;
	int32_t V_2 = 0;
	bool V_3 = false;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_4;
	memset((&V_4), 0, sizeof(V_4));
	bool V_5 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_controllerType));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetLocalControllerAcceleration_m89D4A94FC2E1282CED140A6BC5D54527B1E98ECD_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6737));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6738));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6739));
		// Vector3 accel = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6740));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6741));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_0;
		L_0 = Vector3_get_zero_m0C1249C3F25B1C70EAD3CC8B31259975A457AE39_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6741));
		V_0 = L_0;
		// switch (controllerType)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6742));
		int32_t L_1 = ___0_controllerType;
		V_2 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6743));
		int32_t L_2 = V_2;
		V_1 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6744));
		int32_t L_3 = V_1;
		if ((((int32_t)L_3) > ((int32_t)2)))
		{
			goto IL_001b;
		}
	}
	{
		int32_t L_4 = V_1;
		if ((((int32_t)L_4) == ((int32_t)1)))
		{
			goto IL_0029;
		}
	}
	{
		goto IL_0015;
	}

IL_0015:
	{
		int32_t L_5 = V_1;
		if ((((int32_t)L_5) == ((int32_t)2)))
		{
			goto IL_004c;
		}
	}
	{
		goto IL_0071;
	}

IL_001b:
	{
		int32_t L_6 = V_1;
		if ((((int32_t)L_6) == ((int32_t)((int32_t)32))))
		{
			goto IL_0029;
		}
	}
	{
		goto IL_0022;
	}

IL_0022:
	{
		int32_t L_7 = V_1;
		if ((((int32_t)L_7) == ((int32_t)((int32_t)64))))
		{
			goto IL_004c;
		}
	}
	{
		goto IL_0071;
	}

IL_0029:
	{
		// if (OVRNodeStateProperties.GetNodeStatePropertyVector3(Node.LeftHand, NodeStatePropertyType.Acceleration, OVRPlugin.Node.HandLeft, stepType, out accel))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6745));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_8 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___stepType_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6746));
		il2cpp_codegen_runtime_class_init_inline(OVRNodeStateProperties_tE41A5F7393D4FB967D6062A0A2DBE4F3A24350BC_il2cpp_TypeInfo_var);
		bool L_9;
		L_9 = OVRNodeStateProperties_GetNodeStatePropertyVector3_mFA9CA29D9B8B68721EBFF755AE379F019ADB3EA1(4, 0, 3, L_8, (&V_0), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6746));
		V_3 = L_9;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6747));
		bool L_10 = V_3;
		if (!L_10)
		{
			goto IL_0042;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6748));
		// return accel;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6749));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_11 = V_0;
		V_4 = L_11;
		goto IL_007a;
	}

IL_0042:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6750));
		// return Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6751));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6752));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_12;
		L_12 = Vector3_get_zero_m0C1249C3F25B1C70EAD3CC8B31259975A457AE39_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6752));
		V_4 = L_12;
		goto IL_007a;
	}

IL_004c:
	{
		// if (OVRNodeStateProperties.GetNodeStatePropertyVector3(Node.RightHand, NodeStatePropertyType.Acceleration, OVRPlugin.Node.HandRight, stepType, out accel))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6753));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_13 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___stepType_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6754));
		il2cpp_codegen_runtime_class_init_inline(OVRNodeStateProperties_tE41A5F7393D4FB967D6062A0A2DBE4F3A24350BC_il2cpp_TypeInfo_var);
		bool L_14;
		L_14 = OVRNodeStateProperties_GetNodeStatePropertyVector3_mFA9CA29D9B8B68721EBFF755AE379F019ADB3EA1(5, 0, 4, L_13, (&V_0), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6754));
		V_5 = L_14;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6755));
		bool L_15 = V_5;
		if (!L_15)
		{
			goto IL_0067;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6756));
		// return accel;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6757));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_16 = V_0;
		V_4 = L_16;
		goto IL_007a;
	}

IL_0067:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6758));
		// return Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6759));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6760));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_17;
		L_17 = Vector3_get_zero_m0C1249C3F25B1C70EAD3CC8B31259975A457AE39_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6760));
		V_4 = L_17;
		goto IL_007a;
	}

IL_0071:
	{
		// return Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6761));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6762));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_18;
		L_18 = Vector3_get_zero_m0C1249C3F25B1C70EAD3CC8B31259975A457AE39_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6762));
		V_4 = L_18;
		goto IL_007a;
	}

IL_007a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6763));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_19 = V_4;
		return L_19;
	}
}
// UnityEngine.Quaternion OVRInput::GetLocalControllerRotation(OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 OVRInput_GetLocalControllerRotation_mF2ECF5F8BBB3EF1CF9D4B5E0A1BEC6CA9036515F (int32_t ___0_controllerType, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Controller_tBCAA59EAD9BFE2381E974A48B203D044B6CE1ECB_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetLocalControllerRotation_mF2ECF5F8BBB3EF1CF9D4B5E0A1BEC6CA9036515F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRNodeStateProperties_tE41A5F7393D4FB967D6062A0A2DBE4F3A24350BC_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	int32_t V_1 = 0;
	bool V_2 = false;
	Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 V_3;
	memset((&V_3), 0, sizeof(V_3));
	bool V_4 = false;
	Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 V_5;
	memset((&V_5), 0, sizeof(V_5));
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 V_9;
	memset((&V_9), 0, sizeof(V_9));
	bool V_10 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_controllerType));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_5), (&V_9));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetLocalControllerRotation_mF2ECF5F8BBB3EF1CF9D4B5E0A1BEC6CA9036515F_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6764));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6765));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6766));
		// switch (controllerType)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6767));
		int32_t L_0 = ___0_controllerType;
		V_1 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6768));
		int32_t L_1 = V_1;
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6769));
		int32_t L_2 = V_0;
		if ((((int32_t)L_2) > ((int32_t)2)))
		{
			goto IL_001b;
		}
	}
	{
		int32_t L_3 = V_0;
		if ((((int32_t)L_3) == ((int32_t)1)))
		{
			goto IL_002c;
		}
	}
	{
		goto IL_000f;
	}

IL_000f:
	{
		int32_t L_4 = V_0;
		if ((((int32_t)L_4) == ((int32_t)2)))
		{
			goto IL_009a;
		}
	}
	{
		goto IL_0104;
	}

IL_001b:
	{
		int32_t L_5 = V_0;
		if ((((int32_t)L_5) == ((int32_t)((int32_t)32))))
		{
			goto IL_002c;
		}
	}
	{
		goto IL_0022;
	}

IL_0022:
	{
		int32_t L_6 = V_0;
		if ((((int32_t)L_6) == ((int32_t)((int32_t)64))))
		{
			goto IL_009a;
		}
	}
	{
		goto IL_0104;
	}

IL_002c:
	{
		// if (OVRManager.loadedXRDevice == OVRManager.XRDevice.Oculus)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6770));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_7 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___loadedXRDevice_85;
		V_2 = (bool)((((int32_t)L_7) == ((int32_t)1))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6771));
		bool L_8 = V_2;
		if (!L_8)
		{
			goto IL_0053;
		}
	}
	{
		// return OVRPlugin.GetNodePose(OVRPlugin.Node.HandLeft, stepType).ToOVRPose().orientation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6772));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_9 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___stepType_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6773));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		Posef_t51A2C10B4094B44A8D3C1913292B839172887B61 L_10;
		L_10 = OVRPlugin_GetNodePose_m973B3CA31C019465A53494EB440C13C2AE229CB3(3, L_9, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6773));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6774));
		OVRPose_t8054769FD4517C10D2ECD2C14C823723D675EEFB L_11;
		L_11 = OVRExtensions_ToOVRPose_m2D557CFD8B775C88FDED26B3D31A67E8AB53B14F(L_10, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6774));
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_12 = L_11.___orientation_1;
		V_3 = L_12;
		goto IL_010c;
	}

IL_0053:
	{
		// else if (OVRManager.loadedXRDevice == OVRManager.XRDevice.OpenVR)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6775));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_13 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___loadedXRDevice_85;
		V_4 = (bool)((((int32_t)L_13) == ((int32_t)2))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6776));
		bool L_14 = V_4;
		if (!L_14)
		{
			goto IL_0077;
		}
	}
	{
		// return openVRControllerDetails[0].localOrientation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6777));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_15 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_15);
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_16 = ((L_15)->GetAddressAt(static_cast<il2cpp_array_size_t>(0)))->___localOrientation_4;
		V_3 = L_16;
		goto IL_010c;
	}

IL_0077:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6778));
		// if (OVRNodeStateProperties.GetNodeStatePropertyQuaternion(Node.LeftHand, NodeStatePropertyType.Orientation, OVRPlugin.Node.HandLeft, stepType, out retQuat))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6779));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_17 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___stepType_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6780));
		il2cpp_codegen_runtime_class_init_inline(OVRNodeStateProperties_tE41A5F7393D4FB967D6062A0A2DBE4F3A24350BC_il2cpp_TypeInfo_var);
		bool L_18;
		L_18 = OVRNodeStateProperties_GetNodeStatePropertyQuaternion_m749DB6361263E70DEC52E819715BC9AF5B67F5AD(4, 5, 3, L_17, (&V_5), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6780));
		V_6 = L_18;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6781));
		bool L_19 = V_6;
		if (!L_19)
		{
			goto IL_0092;
		}
	}
	{
		// return retQuat;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6782));
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_20 = V_5;
		V_3 = L_20;
		goto IL_010c;
	}

IL_0092:
	{
		// return Quaternion.identity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6783));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6784));
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_21;
		L_21 = Quaternion_get_identity_m7E701AE095ED10FD5EA0B50ABCFDE2EEFF2173A5_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6784));
		V_3 = L_21;
		goto IL_010c;
	}

IL_009a:
	{
		// if (OVRManager.loadedXRDevice == OVRManager.XRDevice.Oculus)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6785));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_22 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___loadedXRDevice_85;
		V_7 = (bool)((((int32_t)L_22) == ((int32_t)1))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6786));
		bool L_23 = V_7;
		if (!L_23)
		{
			goto IL_00c0;
		}
	}
	{
		// return OVRPlugin.GetNodePose(OVRPlugin.Node.HandRight, stepType).ToOVRPose().orientation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6787));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_24 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___stepType_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6788));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		Posef_t51A2C10B4094B44A8D3C1913292B839172887B61 L_25;
		L_25 = OVRPlugin_GetNodePose_m973B3CA31C019465A53494EB440C13C2AE229CB3(4, L_24, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6788));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6789));
		OVRPose_t8054769FD4517C10D2ECD2C14C823723D675EEFB L_26;
		L_26 = OVRExtensions_ToOVRPose_m2D557CFD8B775C88FDED26B3D31A67E8AB53B14F(L_25, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6789));
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_27 = L_26.___orientation_1;
		V_3 = L_27;
		goto IL_010c;
	}

IL_00c0:
	{
		// else if (OVRManager.loadedXRDevice == OVRManager.XRDevice.OpenVR)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6790));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_28 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___loadedXRDevice_85;
		V_8 = (bool)((((int32_t)L_28) == ((int32_t)2))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6791));
		bool L_29 = V_8;
		if (!L_29)
		{
			goto IL_00e1;
		}
	}
	{
		// return openVRControllerDetails[1].localOrientation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6792));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_30 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_30);
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_31 = ((L_30)->GetAddressAt(static_cast<il2cpp_array_size_t>(1)))->___localOrientation_4;
		V_3 = L_31;
		goto IL_010c;
	}

IL_00e1:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6793));
		// if (OVRNodeStateProperties.GetNodeStatePropertyQuaternion(Node.RightHand, NodeStatePropertyType.Orientation, OVRPlugin.Node.HandRight, stepType, out retQuat))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6794));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_32 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___stepType_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6795));
		il2cpp_codegen_runtime_class_init_inline(OVRNodeStateProperties_tE41A5F7393D4FB967D6062A0A2DBE4F3A24350BC_il2cpp_TypeInfo_var);
		bool L_33;
		L_33 = OVRNodeStateProperties_GetNodeStatePropertyQuaternion_m749DB6361263E70DEC52E819715BC9AF5B67F5AD(5, 5, 4, L_32, (&V_9), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6795));
		V_10 = L_33;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6796));
		bool L_34 = V_10;
		if (!L_34)
		{
			goto IL_00fc;
		}
	}
	{
		// return retQuat;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6797));
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_35 = V_9;
		V_3 = L_35;
		goto IL_010c;
	}

IL_00fc:
	{
		// return Quaternion.identity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6798));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6799));
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_36;
		L_36 = Quaternion_get_identity_m7E701AE095ED10FD5EA0B50ABCFDE2EEFF2173A5_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6799));
		V_3 = L_36;
		goto IL_010c;
	}

IL_0104:
	{
		// return Quaternion.identity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6800));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6801));
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_37;
		L_37 = Quaternion_get_identity_m7E701AE095ED10FD5EA0B50ABCFDE2EEFF2173A5_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6801));
		V_3 = L_37;
		goto IL_010c;
	}

IL_010c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6802));
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_38 = V_3;
		return L_38;
	}
}
// UnityEngine.Vector3 OVRInput::GetLocalControllerAngularVelocity(OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 OVRInput_GetLocalControllerAngularVelocity_m4A05C6F3F878F119AEB2E5222154B773C3FE8F24 (int32_t ___0_controllerType, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Controller_tBCAA59EAD9BFE2381E974A48B203D044B6CE1ECB_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetLocalControllerAngularVelocity_m4A05C6F3F878F119AEB2E5222154B773C3FE8F24_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRNodeStateProperties_tE41A5F7393D4FB967D6062A0A2DBE4F3A24350BC_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_0;
	memset((&V_0), 0, sizeof(V_0));
	int32_t V_1 = 0;
	int32_t V_2 = 0;
	bool V_3 = false;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_4;
	memset((&V_4), 0, sizeof(V_4));
	bool V_5 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_controllerType));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetLocalControllerAngularVelocity_m4A05C6F3F878F119AEB2E5222154B773C3FE8F24_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6803));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6804));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6805));
		// Vector3 velocity = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6806));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6807));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_0;
		L_0 = Vector3_get_zero_m0C1249C3F25B1C70EAD3CC8B31259975A457AE39_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6807));
		V_0 = L_0;
		// switch (controllerType)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6808));
		int32_t L_1 = ___0_controllerType;
		V_2 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6809));
		int32_t L_2 = V_2;
		V_1 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6810));
		int32_t L_3 = V_1;
		if ((((int32_t)L_3) > ((int32_t)2)))
		{
			goto IL_001b;
		}
	}
	{
		int32_t L_4 = V_1;
		if ((((int32_t)L_4) == ((int32_t)1)))
		{
			goto IL_0029;
		}
	}
	{
		goto IL_0015;
	}

IL_0015:
	{
		int32_t L_5 = V_1;
		if ((((int32_t)L_5) == ((int32_t)2)))
		{
			goto IL_004c;
		}
	}
	{
		goto IL_0071;
	}

IL_001b:
	{
		int32_t L_6 = V_1;
		if ((((int32_t)L_6) == ((int32_t)((int32_t)32))))
		{
			goto IL_0029;
		}
	}
	{
		goto IL_0022;
	}

IL_0022:
	{
		int32_t L_7 = V_1;
		if ((((int32_t)L_7) == ((int32_t)((int32_t)64))))
		{
			goto IL_004c;
		}
	}
	{
		goto IL_0071;
	}

IL_0029:
	{
		// if (OVRNodeStateProperties.GetNodeStatePropertyVector3(Node.LeftHand, NodeStatePropertyType.AngularVelocity, OVRPlugin.Node.HandLeft, stepType, out velocity))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6811));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_8 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___stepType_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6812));
		il2cpp_codegen_runtime_class_init_inline(OVRNodeStateProperties_tE41A5F7393D4FB967D6062A0A2DBE4F3A24350BC_il2cpp_TypeInfo_var);
		bool L_9;
		L_9 = OVRNodeStateProperties_GetNodeStatePropertyVector3_mFA9CA29D9B8B68721EBFF755AE379F019ADB3EA1(4, 3, 3, L_8, (&V_0), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6812));
		V_3 = L_9;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6813));
		bool L_10 = V_3;
		if (!L_10)
		{
			goto IL_0042;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6814));
		// return velocity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6815));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_11 = V_0;
		V_4 = L_11;
		goto IL_007a;
	}

IL_0042:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6816));
		// return Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6817));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6818));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_12;
		L_12 = Vector3_get_zero_m0C1249C3F25B1C70EAD3CC8B31259975A457AE39_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6818));
		V_4 = L_12;
		goto IL_007a;
	}

IL_004c:
	{
		// if (OVRNodeStateProperties.GetNodeStatePropertyVector3(Node.RightHand, NodeStatePropertyType.AngularVelocity, OVRPlugin.Node.HandRight, stepType, out velocity))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6819));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_13 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___stepType_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6820));
		il2cpp_codegen_runtime_class_init_inline(OVRNodeStateProperties_tE41A5F7393D4FB967D6062A0A2DBE4F3A24350BC_il2cpp_TypeInfo_var);
		bool L_14;
		L_14 = OVRNodeStateProperties_GetNodeStatePropertyVector3_mFA9CA29D9B8B68721EBFF755AE379F019ADB3EA1(5, 3, 4, L_13, (&V_0), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6820));
		V_5 = L_14;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6821));
		bool L_15 = V_5;
		if (!L_15)
		{
			goto IL_0067;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6822));
		// return velocity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6823));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_16 = V_0;
		V_4 = L_16;
		goto IL_007a;
	}

IL_0067:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6824));
		// return Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6825));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6826));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_17;
		L_17 = Vector3_get_zero_m0C1249C3F25B1C70EAD3CC8B31259975A457AE39_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6826));
		V_4 = L_17;
		goto IL_007a;
	}

IL_0071:
	{
		// return Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6827));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6828));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_18;
		L_18 = Vector3_get_zero_m0C1249C3F25B1C70EAD3CC8B31259975A457AE39_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6828));
		V_4 = L_18;
		goto IL_007a;
	}

IL_007a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6829));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_19 = V_4;
		return L_19;
	}
}
// UnityEngine.Vector3 OVRInput::GetLocalControllerAngularAcceleration(OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 OVRInput_GetLocalControllerAngularAcceleration_mEF0691E48437D9A49899E17BA2F5501DDDF9E762 (int32_t ___0_controllerType, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Controller_tBCAA59EAD9BFE2381E974A48B203D044B6CE1ECB_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetLocalControllerAngularAcceleration_mEF0691E48437D9A49899E17BA2F5501DDDF9E762_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRNodeStateProperties_tE41A5F7393D4FB967D6062A0A2DBE4F3A24350BC_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_0;
	memset((&V_0), 0, sizeof(V_0));
	int32_t V_1 = 0;
	int32_t V_2 = 0;
	bool V_3 = false;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_4;
	memset((&V_4), 0, sizeof(V_4));
	bool V_5 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_controllerType));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetLocalControllerAngularAcceleration_mEF0691E48437D9A49899E17BA2F5501DDDF9E762_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6830));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6831));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6832));
		// Vector3 accel = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6833));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6834));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_0;
		L_0 = Vector3_get_zero_m0C1249C3F25B1C70EAD3CC8B31259975A457AE39_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6834));
		V_0 = L_0;
		// switch (controllerType)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6835));
		int32_t L_1 = ___0_controllerType;
		V_2 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6836));
		int32_t L_2 = V_2;
		V_1 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6837));
		int32_t L_3 = V_1;
		if ((((int32_t)L_3) > ((int32_t)2)))
		{
			goto IL_001b;
		}
	}
	{
		int32_t L_4 = V_1;
		if ((((int32_t)L_4) == ((int32_t)1)))
		{
			goto IL_0029;
		}
	}
	{
		goto IL_0015;
	}

IL_0015:
	{
		int32_t L_5 = V_1;
		if ((((int32_t)L_5) == ((int32_t)2)))
		{
			goto IL_004c;
		}
	}
	{
		goto IL_0071;
	}

IL_001b:
	{
		int32_t L_6 = V_1;
		if ((((int32_t)L_6) == ((int32_t)((int32_t)32))))
		{
			goto IL_0029;
		}
	}
	{
		goto IL_0022;
	}

IL_0022:
	{
		int32_t L_7 = V_1;
		if ((((int32_t)L_7) == ((int32_t)((int32_t)64))))
		{
			goto IL_004c;
		}
	}
	{
		goto IL_0071;
	}

IL_0029:
	{
		// if (OVRNodeStateProperties.GetNodeStatePropertyVector3(Node.LeftHand, NodeStatePropertyType.AngularAcceleration, OVRPlugin.Node.HandLeft, stepType, out accel))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6838));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_8 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___stepType_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6839));
		il2cpp_codegen_runtime_class_init_inline(OVRNodeStateProperties_tE41A5F7393D4FB967D6062A0A2DBE4F3A24350BC_il2cpp_TypeInfo_var);
		bool L_9;
		L_9 = OVRNodeStateProperties_GetNodeStatePropertyVector3_mFA9CA29D9B8B68721EBFF755AE379F019ADB3EA1(4, 1, 3, L_8, (&V_0), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6839));
		V_3 = L_9;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6840));
		bool L_10 = V_3;
		if (!L_10)
		{
			goto IL_0042;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6841));
		// return accel;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6842));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_11 = V_0;
		V_4 = L_11;
		goto IL_007a;
	}

IL_0042:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6843));
		// return Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6844));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6845));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_12;
		L_12 = Vector3_get_zero_m0C1249C3F25B1C70EAD3CC8B31259975A457AE39_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6845));
		V_4 = L_12;
		goto IL_007a;
	}

IL_004c:
	{
		// if (OVRNodeStateProperties.GetNodeStatePropertyVector3(Node.RightHand, NodeStatePropertyType.AngularAcceleration, OVRPlugin.Node.HandRight, stepType, out accel))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6846));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_13 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___stepType_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6847));
		il2cpp_codegen_runtime_class_init_inline(OVRNodeStateProperties_tE41A5F7393D4FB967D6062A0A2DBE4F3A24350BC_il2cpp_TypeInfo_var);
		bool L_14;
		L_14 = OVRNodeStateProperties_GetNodeStatePropertyVector3_mFA9CA29D9B8B68721EBFF755AE379F019ADB3EA1(5, 1, 4, L_13, (&V_0), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6847));
		V_5 = L_14;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6848));
		bool L_15 = V_5;
		if (!L_15)
		{
			goto IL_0067;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6849));
		// return accel;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6850));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_16 = V_0;
		V_4 = L_16;
		goto IL_007a;
	}

IL_0067:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6851));
		// return Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6852));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6853));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_17;
		L_17 = Vector3_get_zero_m0C1249C3F25B1C70EAD3CC8B31259975A457AE39_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6853));
		V_4 = L_17;
		goto IL_007a;
	}

IL_0071:
	{
		// return Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6854));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6855));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_18;
		L_18 = Vector3_get_zero_m0C1249C3F25B1C70EAD3CC8B31259975A457AE39_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6855));
		V_4 = L_18;
		goto IL_007a;
	}

IL_007a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6856));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_19 = V_4;
		return L_19;
	}
}
// System.Boolean OVRInput::GetLocalControllerStatesWithoutPrediction(OVRInput/Controller,UnityEngine.Vector3&,UnityEngine.Quaternion&,UnityEngine.Vector3&,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetLocalControllerStatesWithoutPrediction_m103D67215F6473717F5FA7747FD6B835070248C2 (int32_t ___0_controllerType, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* ___1_position, Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974* ___2_rotation, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* ___3_velocity, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* ___4_angularVelocity, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Controller_tBCAA59EAD9BFE2381E974A48B203D044B6CE1ECB_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetLocalControllerStatesWithoutPrediction_m103D67215F6473717F5FA7747FD6B835070248C2_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&PoseStatef_tC6A564A6E163790E7DE8D1CF4EBDE089D09B053E_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	PoseStatef_tC6A564A6E163790E7DE8D1CF4EBDE089D09B053E V_0;
	memset((&V_0), 0, sizeof(V_0));
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	int32_t V_4 = 0;
	int32_t V_5 = 0;
	bool V_6 = false;
	bool V_7 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_controllerType), (&___1_position), (&___2_rotation), (&___3_velocity), (&___4_angularVelocity));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetLocalControllerStatesWithoutPrediction_m103D67215F6473717F5FA7747FD6B835070248C2_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6857));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6858));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6859));
		// position = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6860));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_0 = ___1_position;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6861));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_1;
		L_1 = Vector3_get_zero_m0C1249C3F25B1C70EAD3CC8B31259975A457AE39_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6861));
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_0 = L_1;
		// rotation = Quaternion.identity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6862));
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974* L_2 = ___2_rotation;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6863));
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_3;
		L_3 = Quaternion_get_identity_m7E701AE095ED10FD5EA0B50ABCFDE2EEFF2173A5_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6863));
		*(Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974*)L_2 = L_3;
		// velocity = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6864));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_4 = ___3_velocity;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6865));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_5;
		L_5 = Vector3_get_zero_m0C1249C3F25B1C70EAD3CC8B31259975A457AE39_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6865));
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_4 = L_5;
		// angularVelocity = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6866));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_6 = ___4_angularVelocity;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6867));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_7;
		L_7 = Vector3_get_zero_m0C1249C3F25B1C70EAD3CC8B31259975A457AE39_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6867));
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_6 = L_7;
		// if (OVRManager.loadedXRDevice != OVRManager.XRDevice.Oculus)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6868));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_8 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___loadedXRDevice_85;
		V_1 = (bool)((((int32_t)((((int32_t)L_8) == ((int32_t)1))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6869));
		bool L_9 = V_1;
		if (!L_9)
		{
			goto IL_0044;
		}
	}
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6870));
		V_2 = (bool)0;
		goto IL_0109;
	}

IL_0044:
	{
		// if (OVRPlugin.nativeXrApi != OVRPlugin.XrApi.OpenXR)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6871));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6872));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		int32_t L_10;
		L_10 = OVRPlugin_get_nativeXrApi_m32634338020C30D956A1579A7745C94BD77279F3(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6872));
		V_3 = (bool)((((int32_t)((((int32_t)L_10) == ((int32_t)3))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6873));
		bool L_11 = V_3;
		if (!L_11)
		{
			goto IL_005a;
		}
	}
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6874));
		V_2 = (bool)0;
		goto IL_0109;
	}

IL_005a:
	{
		// switch (controllerType)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6875));
		int32_t L_12 = ___0_controllerType;
		V_5 = L_12;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6876));
		int32_t L_13 = V_5;
		V_4 = L_13;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6877));
		int32_t L_14 = V_4;
		if ((((int32_t)L_14) > ((int32_t)2)))
		{
			goto IL_0074;
		}
	}
	{
		int32_t L_15 = V_4;
		if ((((int32_t)L_15) == ((int32_t)1)))
		{
			goto IL_0084;
		}
	}
	{
		goto IL_006d;
	}

IL_006d:
	{
		int32_t L_16 = V_4;
		if ((((int32_t)L_16) == ((int32_t)2)))
		{
			goto IL_008d;
		}
	}
	{
		goto IL_0096;
	}

IL_0074:
	{
		int32_t L_17 = V_4;
		if ((((int32_t)L_17) == ((int32_t)((int32_t)32))))
		{
			goto IL_0084;
		}
	}
	{
		goto IL_007c;
	}

IL_007c:
	{
		int32_t L_18 = V_4;
		if ((((int32_t)L_18) == ((int32_t)((int32_t)64))))
		{
			goto IL_008d;
		}
	}
	{
		goto IL_0096;
	}

IL_0084:
	{
		// poseState = OVRPlugin.GetNodePoseStateImmediate(OVRPlugin.Node.HandLeft);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6878));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6879));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		PoseStatef_tC6A564A6E163790E7DE8D1CF4EBDE089D09B053E L_19;
		L_19 = OVRPlugin_GetNodePoseStateImmediate_m82DA3F8A7A7287C93F32AE7FE510509392F2F288(3, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6879));
		V_0 = L_19;
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6880));
		goto IL_009a;
	}

IL_008d:
	{
		// poseState = OVRPlugin.GetNodePoseStateImmediate(OVRPlugin.Node.HandRight);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6881));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6882));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		PoseStatef_tC6A564A6E163790E7DE8D1CF4EBDE089D09B053E L_20;
		L_20 = OVRPlugin_GetNodePoseStateImmediate_m82DA3F8A7A7287C93F32AE7FE510509392F2F288(4, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6882));
		V_0 = L_20;
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6883));
		goto IL_009a;
	}

IL_0096:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6884));
		V_2 = (bool)0;
		goto IL_0109;
	}

IL_009a:
	{
		// if (GetControllerPositionValid(controllerType))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6885));
		int32_t L_21 = ___0_controllerType;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6886));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		bool L_22;
		L_22 = OVRInput_GetControllerPositionValid_m3ACDABE2BD5335A8DE615A2F9A5C9D63CE329E94(L_21, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6886));
		V_6 = L_22;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6887));
		bool L_23 = V_6;
		if (!L_23)
		{
			goto IL_00cf;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6888));
		// position = poseState.Pose.ToOVRPose().position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6889));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_24 = ___1_position;
		PoseStatef_tC6A564A6E163790E7DE8D1CF4EBDE089D09B053E L_25 = V_0;
		Posef_t51A2C10B4094B44A8D3C1913292B839172887B61 L_26 = L_25.___Pose_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6890));
		OVRPose_t8054769FD4517C10D2ECD2C14C823723D675EEFB L_27;
		L_27 = OVRExtensions_ToOVRPose_m2D557CFD8B775C88FDED26B3D31A67E8AB53B14F(L_26, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6890));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_28 = L_27.___position_0;
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_24 = L_28;
		// velocity = poseState.Velocity.FromFlippedZVector3f();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6891));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_29 = ___3_velocity;
		PoseStatef_tC6A564A6E163790E7DE8D1CF4EBDE089D09B053E L_30 = V_0;
		Vector3f_t232AF83B4642C67BE8EFF85D8E1599D3B06BD562 L_31 = L_30.___Velocity_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6892));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_32;
		L_32 = OVRExtensions_FromFlippedZVector3f_m32D17BCDA62BC3F8C9A6442F06A42BBE79140F62(L_31, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6892));
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_29 = L_32;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6893));
	}

IL_00cf:
	{
		// if (GetControllerOrientationValid(controllerType))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6894));
		int32_t L_33 = ___0_controllerType;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6895));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		bool L_34;
		L_34 = OVRInput_GetControllerOrientationValid_m9EE0634367BCEAF60C6DDBA9CF527F2CEC8327C1(L_33, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6895));
		V_7 = L_34;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6896));
		bool L_35 = V_7;
		if (!L_35)
		{
			goto IL_0105;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6897));
		// rotation = poseState.Pose.ToOVRPose().orientation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6898));
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974* L_36 = ___2_rotation;
		PoseStatef_tC6A564A6E163790E7DE8D1CF4EBDE089D09B053E L_37 = V_0;
		Posef_t51A2C10B4094B44A8D3C1913292B839172887B61 L_38 = L_37.___Pose_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6899));
		OVRPose_t8054769FD4517C10D2ECD2C14C823723D675EEFB L_39;
		L_39 = OVRExtensions_ToOVRPose_m2D557CFD8B775C88FDED26B3D31A67E8AB53B14F(L_38, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6899));
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_40 = L_39.___orientation_1;
		*(Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974*)L_36 = L_40;
		// angularVelocity = poseState.AngularVelocity.FromFlippedZVector3f();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6900));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_41 = ___4_angularVelocity;
		PoseStatef_tC6A564A6E163790E7DE8D1CF4EBDE089D09B053E L_42 = V_0;
		Vector3f_t232AF83B4642C67BE8EFF85D8E1599D3B06BD562 L_43 = L_42.___AngularVelocity_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6901));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_44;
		L_44 = OVRExtensions_FromFlippedZVector3f_m32D17BCDA62BC3F8C9A6442F06A42BBE79140F62(L_43, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6901));
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_41 = L_44;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6902));
	}

IL_0105:
	{
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6903));
		V_2 = (bool)1;
		goto IL_0109;
	}

IL_0109:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6904));
		bool L_45 = V_2;
		return L_45;
	}
}
// OVRInput/Handedness OVRInput::GetDominantHand()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRInput_GetDominantHand_m19E38B4B4C4B246B2ABE605F1ED7F0041B88E6F0 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Handedness_t7EF8D60FA75C1E15025FA0C3BF839533072C3A6E_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetDominantHand_m19E38B4B4C4B246B2ABE605F1ED7F0041B88E6F0_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetDominantHand_m19E38B4B4C4B246B2ABE605F1ED7F0041B88E6F0_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6905));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6906));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6907));
		// return (Handedness) OVRPlugin.GetDominantHand();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6908));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6909));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		int32_t L_0;
		L_0 = OVRPlugin_GetDominantHand_m28AFC594B67C692D753781414C50839D323EAEBC(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6909));
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6910));
		int32_t L_1 = V_0;
		return L_1;
	}
}
// System.Boolean OVRInput::Get(OVRInput/Button,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_Get_m8CF227684F49E1C26239D78F826E11A956E909C1 (int32_t ___0_virtualMask, int32_t ___1_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_Get_m8CF227684F49E1C26239D78F826E11A956E909C1_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_virtualMask), (&___1_controllerMask));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_Get_m8CF227684F49E1C26239D78F826E11A956E909C1_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6911));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6912));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6913));
		// return GetResolvedButton(virtualMask, RawButton.None, controllerMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6914));
		int32_t L_0 = ___0_virtualMask;
		int32_t L_1 = ___1_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6915));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = OVRInput_GetResolvedButton_mBB31573503E0C243CFCF461E9D8ABACA3B9C1DEE(L_0, 0, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6915));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6916));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean OVRInput::Get(OVRInput/RawButton,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_Get_m537C5F53DCBD027936460E4183648F5EEBA6A654 (int32_t ___0_rawMask, int32_t ___1_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_Get_m537C5F53DCBD027936460E4183648F5EEBA6A654_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_rawMask), (&___1_controllerMask));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_Get_m537C5F53DCBD027936460E4183648F5EEBA6A654_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6917));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6918));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6919));
		// return GetResolvedButton(Button.None, rawMask, controllerMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6920));
		int32_t L_0 = ___0_rawMask;
		int32_t L_1 = ___1_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6921));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = OVRInput_GetResolvedButton_mBB31573503E0C243CFCF461E9D8ABACA3B9C1DEE(0, L_0, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6921));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6922));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean OVRInput::GetResolvedButton(OVRInput/Button,OVRInput/RawButton,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetResolvedButton_mBB31573503E0C243CFCF461E9D8ABACA3B9C1DEE (int32_t ___0_virtualMask, int32_t ___1_rawMask, int32_t ___2_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetResolvedButton_mBB31573503E0C243CFCF461E9D8ABACA3B9C1DEE_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&RawButton_tCD95D496C88D49C316A04BE1354D128EF7DB23AF_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* V_2 = NULL;
	bool V_3 = false;
	int32_t V_4 = 0;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_virtualMask), (&___1_rawMask), (&___2_controllerMask));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_2), (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetResolvedButton_mBB31573503E0C243CFCF461E9D8ABACA3B9C1DEE_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6923));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6924));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6925));
		// if ((controllerMask & Controller.Active) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6926));
		int32_t L_0 = ___2_controllerMask;
		V_0 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_0&((int32_t)-2147483648LL)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6927));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0018;
		}
	}
	{
		// controllerMask |= activeControllerType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6928));
		int32_t L_2 = ___2_controllerMask;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_3 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3;
		___2_controllerMask = ((int32_t)((int32_t)L_2|(int32_t)L_3));
	}

IL_0018:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6929));
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6930));
		goto IL_0068;
	}

IL_001c:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6931));
		// OVRControllerBase controller = controllers[i];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6932));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_4 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		int32_t L_5 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6933));
		NullCheck(L_4);
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_6;
		L_6 = List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D(L_4, L_5, List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6933));
		V_2 = L_6;
		// if (ShouldResolveController(controller.controllerType, controllerMask))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6934));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_7 = V_2;
		NullCheck(L_7);
		int32_t L_8 = L_7->___controllerType_0;
		int32_t L_9 = ___2_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6935));
		bool L_10;
		L_10 = OVRInput_ShouldResolveController_m28BB36AA2D586B8F1C75071D26654B77285AA952(L_8, L_9, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6935));
		V_3 = L_10;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6936));
		bool L_11 = V_3;
		if (!L_11)
		{
			goto IL_0063;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6937));
		// RawButton resolvedMask = rawMask | controller.ResolveToRawMask(virtualMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6938));
		int32_t L_12 = ___1_rawMask;
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_13 = V_2;
		int32_t L_14 = ___0_virtualMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6939));
		NullCheck(L_13);
		int32_t L_15;
		L_15 = OVRControllerBase_ResolveToRawMask_m86055AF4DE44D6FB48EC67A0C7E69F6A9744750B(L_13, L_14, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6939));
		V_4 = ((int32_t)((int32_t)L_12|(int32_t)L_15));
		// if (((RawButton)controller.currentState.Buttons & resolvedMask) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6940));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_16 = V_2;
		NullCheck(L_16);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_17 = (&L_16->___currentState_7);
		uint32_t L_18 = L_17->___Buttons_1;
		int32_t L_19 = V_4;
		V_5 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_18&(int32_t)L_19))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6941));
		bool L_20 = V_5;
		if (!L_20)
		{
			goto IL_0062;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6942));
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6943));
		V_6 = (bool)1;
		goto IL_0080;
	}

IL_0062:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6944));
	}

IL_0063:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6945));
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6946));
		int32_t L_21 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add(L_21, 1));
	}

IL_0068:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6947));
		int32_t L_22 = V_1;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_23 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6948));
		NullCheck(L_23);
		int32_t L_24;
		L_24 = List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_inline(L_23, List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6948));
		V_7 = (bool)((((int32_t)L_22) < ((int32_t)L_24))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6949));
		bool L_25 = V_7;
		if (L_25)
		{
			goto IL_001c;
		}
	}
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6950));
		V_6 = (bool)0;
		goto IL_0080;
	}

IL_0080:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6951));
		bool L_26 = V_6;
		return L_26;
	}
}
// System.Boolean OVRInput::GetDown(OVRInput/Button,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetDown_mEC4F71AEC93D3AF1A041934CA4C61680C6DB9AC7 (int32_t ___0_virtualMask, int32_t ___1_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetDown_mEC4F71AEC93D3AF1A041934CA4C61680C6DB9AC7_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_virtualMask), (&___1_controllerMask));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetDown_mEC4F71AEC93D3AF1A041934CA4C61680C6DB9AC7_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6952));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6953));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6954));
		// return GetResolvedButtonDown(virtualMask, RawButton.None, controllerMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6955));
		int32_t L_0 = ___0_virtualMask;
		int32_t L_1 = ___1_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6956));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = OVRInput_GetResolvedButtonDown_m7AAC44E0388502D43F5A6887AE2ACEEE69642C9F(L_0, 0, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6956));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6957));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean OVRInput::GetDown(OVRInput/RawButton,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetDown_mEF663E99B6E5FABB41B86716C6D04C788C979139 (int32_t ___0_rawMask, int32_t ___1_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetDown_mEF663E99B6E5FABB41B86716C6D04C788C979139_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_rawMask), (&___1_controllerMask));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetDown_mEF663E99B6E5FABB41B86716C6D04C788C979139_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6958));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6959));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6960));
		// return GetResolvedButtonDown(Button.None, rawMask, controllerMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6961));
		int32_t L_0 = ___0_rawMask;
		int32_t L_1 = ___1_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6962));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = OVRInput_GetResolvedButtonDown_m7AAC44E0388502D43F5A6887AE2ACEEE69642C9F(0, L_0, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6962));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6963));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean OVRInput::GetResolvedButtonDown(OVRInput/Button,OVRInput/RawButton,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetResolvedButtonDown_m7AAC44E0388502D43F5A6887AE2ACEEE69642C9F (int32_t ___0_virtualMask, int32_t ___1_rawMask, int32_t ___2_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetResolvedButtonDown_m7AAC44E0388502D43F5A6887AE2ACEEE69642C9F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&RawButton_tCD95D496C88D49C316A04BE1354D128EF7DB23AF_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	int32_t V_2 = 0;
	OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* V_3 = NULL;
	bool V_4 = false;
	int32_t V_5 = 0;
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_virtualMask), (&___1_rawMask), (&___2_controllerMask));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_2), (&V_3), (&V_5));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetResolvedButtonDown_m7AAC44E0388502D43F5A6887AE2ACEEE69642C9F_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6964));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6965));
	int32_t G_B9_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6966));
		// bool down = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6967));
		V_0 = (bool)0;
		// if ((controllerMask & Controller.Active) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6968));
		int32_t L_0 = ___2_controllerMask;
		V_1 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_0&((int32_t)-2147483648LL)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6969));
		bool L_1 = V_1;
		if (!L_1)
		{
			goto IL_001a;
		}
	}
	{
		// controllerMask |= activeControllerType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6970));
		int32_t L_2 = ___2_controllerMask;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_3 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3;
		___2_controllerMask = ((int32_t)((int32_t)L_2|(int32_t)L_3));
	}

IL_001a:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6971));
		V_2 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6972));
		goto IL_009a;
	}

IL_001e:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6973));
		// OVRControllerBase controller = controllers[i];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6974));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_4 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		int32_t L_5 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6975));
		NullCheck(L_4);
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_6;
		L_6 = List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D(L_4, L_5, List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6975));
		V_3 = L_6;
		// if (ShouldResolveController(controller.controllerType, controllerMask))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6976));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_7 = V_3;
		NullCheck(L_7);
		int32_t L_8 = L_7->___controllerType_0;
		int32_t L_9 = ___2_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6977));
		bool L_10;
		L_10 = OVRInput_ShouldResolveController_m28BB36AA2D586B8F1C75071D26654B77285AA952(L_8, L_9, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6977));
		V_4 = L_10;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6978));
		bool L_11 = V_4;
		if (!L_11)
		{
			goto IL_0095;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6979));
		// RawButton resolvedMask = rawMask | controller.ResolveToRawMask(virtualMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6980));
		int32_t L_12 = ___1_rawMask;
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_13 = V_3;
		int32_t L_14 = ___0_virtualMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6981));
		NullCheck(L_13);
		int32_t L_15;
		L_15 = OVRControllerBase_ResolveToRawMask_m86055AF4DE44D6FB48EC67A0C7E69F6A9744750B(L_13, L_14, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6981));
		V_5 = ((int32_t)((int32_t)L_12|(int32_t)L_15));
		// if (((RawButton)controller.previousState.Buttons & resolvedMask) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6982));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_16 = V_3;
		NullCheck(L_16);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_17 = (&L_16->___previousState_6);
		uint32_t L_18 = L_17->___Buttons_1;
		int32_t L_19 = V_5;
		V_6 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_18&(int32_t)L_19))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6983));
		bool L_20 = V_6;
		if (!L_20)
		{
			goto IL_0066;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6984));
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6985));
		V_7 = (bool)0;
		goto IL_00b5;
	}

IL_0066:
	{
		// if ((((RawButton)controller.currentState.Buttons & resolvedMask) != 0)
		//     && (((RawButton)controller.previousState.Buttons & resolvedMask) == 0))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6986));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_21 = V_3;
		NullCheck(L_21);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_22 = (&L_21->___currentState_7);
		uint32_t L_23 = L_22->___Buttons_1;
		int32_t L_24 = V_5;
		if (!((int32_t)((int32_t)L_23&(int32_t)L_24)))
		{
			goto IL_0089;
		}
	}
	{
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_25 = V_3;
		NullCheck(L_25);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_26 = (&L_25->___previousState_6);
		uint32_t L_27 = L_26->___Buttons_1;
		int32_t L_28 = V_5;
		G_B9_0 = ((((int32_t)((int32_t)((int32_t)L_27&(int32_t)L_28))) == ((int32_t)0))? 1 : 0);
		goto IL_008a;
	}

IL_0089:
	{
		G_B9_0 = 0;
	}

IL_008a:
	{
		V_8 = (bool)G_B9_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6987));
		bool L_29 = V_8;
		if (!L_29)
		{
			goto IL_0094;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6988));
		// down = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6989));
		V_0 = (bool)1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6990));
	}

IL_0094:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6991));
	}

IL_0095:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6992));
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6993));
		int32_t L_30 = V_2;
		V_2 = ((int32_t)il2cpp_codegen_add(L_30, 1));
	}

IL_009a:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6994));
		int32_t L_31 = V_2;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_32 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6995));
		NullCheck(L_32);
		int32_t L_33;
		L_33 = List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_inline(L_32, List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6995));
		V_9 = (bool)((((int32_t)L_31) < ((int32_t)L_33))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6996));
		bool L_34 = V_9;
		if (L_34)
		{
			goto IL_001e;
		}
	}
	{
		// return down;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6997));
		bool L_35 = V_0;
		V_7 = L_35;
		goto IL_00b5;
	}

IL_00b5:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6998));
		bool L_36 = V_7;
		return L_36;
	}
}
// System.Boolean OVRInput::GetUp(OVRInput/Button,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetUp_m66B13613FF16CBAB8B0A77A5ADCFD1A3A68F3898 (int32_t ___0_virtualMask, int32_t ___1_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetUp_m66B13613FF16CBAB8B0A77A5ADCFD1A3A68F3898_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_virtualMask), (&___1_controllerMask));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetUp_m66B13613FF16CBAB8B0A77A5ADCFD1A3A68F3898_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6999));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7000));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7001));
		// return GetResolvedButtonUp(virtualMask, RawButton.None, controllerMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7002));
		int32_t L_0 = ___0_virtualMask;
		int32_t L_1 = ___1_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7003));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = OVRInput_GetResolvedButtonUp_m270DD35F9328AA02FD57704B03BD9C48439290FE(L_0, 0, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7003));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7004));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean OVRInput::GetUp(OVRInput/RawButton,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetUp_mFBB66C8829A20CBA56AB5A01B27B9B656AB8E385 (int32_t ___0_rawMask, int32_t ___1_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetUp_mFBB66C8829A20CBA56AB5A01B27B9B656AB8E385_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_rawMask), (&___1_controllerMask));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetUp_mFBB66C8829A20CBA56AB5A01B27B9B656AB8E385_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7005));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7006));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7007));
		// return GetResolvedButtonUp(Button.None, rawMask, controllerMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7008));
		int32_t L_0 = ___0_rawMask;
		int32_t L_1 = ___1_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7009));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = OVRInput_GetResolvedButtonUp_m270DD35F9328AA02FD57704B03BD9C48439290FE(0, L_0, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7009));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7010));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean OVRInput::GetResolvedButtonUp(OVRInput/Button,OVRInput/RawButton,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetResolvedButtonUp_m270DD35F9328AA02FD57704B03BD9C48439290FE (int32_t ___0_virtualMask, int32_t ___1_rawMask, int32_t ___2_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetResolvedButtonUp_m270DD35F9328AA02FD57704B03BD9C48439290FE_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&RawButton_tCD95D496C88D49C316A04BE1354D128EF7DB23AF_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	int32_t V_2 = 0;
	OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* V_3 = NULL;
	bool V_4 = false;
	int32_t V_5 = 0;
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_virtualMask), (&___1_rawMask), (&___2_controllerMask));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_2), (&V_3), (&V_5));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetResolvedButtonUp_m270DD35F9328AA02FD57704B03BD9C48439290FE_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7011));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7012));
	int32_t G_B9_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7013));
		// bool up = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7014));
		V_0 = (bool)0;
		// if ((controllerMask & Controller.Active) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7015));
		int32_t L_0 = ___2_controllerMask;
		V_1 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_0&((int32_t)-2147483648LL)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7016));
		bool L_1 = V_1;
		if (!L_1)
		{
			goto IL_001a;
		}
	}
	{
		// controllerMask |= activeControllerType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7017));
		int32_t L_2 = ___2_controllerMask;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_3 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3;
		___2_controllerMask = ((int32_t)((int32_t)L_2|(int32_t)L_3));
	}

IL_001a:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7018));
		V_2 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7019));
		goto IL_009a;
	}

IL_001e:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7020));
		// OVRControllerBase controller = controllers[i];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7021));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_4 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		int32_t L_5 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7022));
		NullCheck(L_4);
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_6;
		L_6 = List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D(L_4, L_5, List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7022));
		V_3 = L_6;
		// if (ShouldResolveController(controller.controllerType, controllerMask))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7023));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_7 = V_3;
		NullCheck(L_7);
		int32_t L_8 = L_7->___controllerType_0;
		int32_t L_9 = ___2_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7024));
		bool L_10;
		L_10 = OVRInput_ShouldResolveController_m28BB36AA2D586B8F1C75071D26654B77285AA952(L_8, L_9, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7024));
		V_4 = L_10;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7025));
		bool L_11 = V_4;
		if (!L_11)
		{
			goto IL_0095;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7026));
		// RawButton resolvedMask = rawMask | controller.ResolveToRawMask(virtualMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7027));
		int32_t L_12 = ___1_rawMask;
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_13 = V_3;
		int32_t L_14 = ___0_virtualMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7028));
		NullCheck(L_13);
		int32_t L_15;
		L_15 = OVRControllerBase_ResolveToRawMask_m86055AF4DE44D6FB48EC67A0C7E69F6A9744750B(L_13, L_14, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7028));
		V_5 = ((int32_t)((int32_t)L_12|(int32_t)L_15));
		// if (((RawButton)controller.currentState.Buttons & resolvedMask) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7029));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_16 = V_3;
		NullCheck(L_16);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_17 = (&L_16->___currentState_7);
		uint32_t L_18 = L_17->___Buttons_1;
		int32_t L_19 = V_5;
		V_6 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_18&(int32_t)L_19))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7030));
		bool L_20 = V_6;
		if (!L_20)
		{
			goto IL_0066;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7031));
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7032));
		V_7 = (bool)0;
		goto IL_00b5;
	}

IL_0066:
	{
		// if ((((RawButton)controller.currentState.Buttons & resolvedMask) == 0)
		//     && (((RawButton)controller.previousState.Buttons & resolvedMask) != 0))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7033));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_21 = V_3;
		NullCheck(L_21);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_22 = (&L_21->___currentState_7);
		uint32_t L_23 = L_22->___Buttons_1;
		int32_t L_24 = V_5;
		if (((int32_t)((int32_t)L_23&(int32_t)L_24)))
		{
			goto IL_0089;
		}
	}
	{
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_25 = V_3;
		NullCheck(L_25);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_26 = (&L_25->___previousState_6);
		uint32_t L_27 = L_26->___Buttons_1;
		int32_t L_28 = V_5;
		G_B9_0 = ((!(((uint32_t)((int32_t)((int32_t)L_27&(int32_t)L_28))) <= ((uint32_t)0)))? 1 : 0);
		goto IL_008a;
	}

IL_0089:
	{
		G_B9_0 = 0;
	}

IL_008a:
	{
		V_8 = (bool)G_B9_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7034));
		bool L_29 = V_8;
		if (!L_29)
		{
			goto IL_0094;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7035));
		// up = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7036));
		V_0 = (bool)1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7037));
	}

IL_0094:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7038));
	}

IL_0095:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7039));
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7040));
		int32_t L_30 = V_2;
		V_2 = ((int32_t)il2cpp_codegen_add(L_30, 1));
	}

IL_009a:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7041));
		int32_t L_31 = V_2;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_32 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7042));
		NullCheck(L_32);
		int32_t L_33;
		L_33 = List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_inline(L_32, List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7042));
		V_9 = (bool)((((int32_t)L_31) < ((int32_t)L_33))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7043));
		bool L_34 = V_9;
		if (L_34)
		{
			goto IL_001e;
		}
	}
	{
		// return up;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7044));
		bool L_35 = V_0;
		V_7 = L_35;
		goto IL_00b5;
	}

IL_00b5:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7045));
		bool L_36 = V_7;
		return L_36;
	}
}
// System.Boolean OVRInput::Get(OVRInput/Touch,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_Get_m6C2E703E080DE2688C40ACA3F68F83F906E625A2 (int32_t ___0_virtualMask, int32_t ___1_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_Get_m6C2E703E080DE2688C40ACA3F68F83F906E625A2_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_virtualMask), (&___1_controllerMask));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_Get_m6C2E703E080DE2688C40ACA3F68F83F906E625A2_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7046));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7047));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7048));
		// return GetResolvedTouch(virtualMask, RawTouch.None, controllerMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7049));
		int32_t L_0 = ___0_virtualMask;
		int32_t L_1 = ___1_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7050));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = OVRInput_GetResolvedTouch_m73FE92C1ADB5D80A899E286D292ED84071FE8CFE(L_0, 0, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7050));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7051));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean OVRInput::Get(OVRInput/RawTouch,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_Get_mBEB70324F4BE01D02BE80C0A871A096F1D28D598 (int32_t ___0_rawMask, int32_t ___1_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_Get_mBEB70324F4BE01D02BE80C0A871A096F1D28D598_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_rawMask), (&___1_controllerMask));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_Get_mBEB70324F4BE01D02BE80C0A871A096F1D28D598_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7052));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7053));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7054));
		// return GetResolvedTouch(Touch.None, rawMask, controllerMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7055));
		int32_t L_0 = ___0_rawMask;
		int32_t L_1 = ___1_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7056));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = OVRInput_GetResolvedTouch_m73FE92C1ADB5D80A899E286D292ED84071FE8CFE(0, L_0, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7056));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7057));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean OVRInput::GetResolvedTouch(OVRInput/Touch,OVRInput/RawTouch,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetResolvedTouch_m73FE92C1ADB5D80A899E286D292ED84071FE8CFE (int32_t ___0_virtualMask, int32_t ___1_rawMask, int32_t ___2_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetResolvedTouch_m73FE92C1ADB5D80A899E286D292ED84071FE8CFE_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&RawTouch_t7D17A388D30D8E3B4FD34FBDAA322D5023CF8BE3_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* V_2 = NULL;
	bool V_3 = false;
	int32_t V_4 = 0;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_virtualMask), (&___1_rawMask), (&___2_controllerMask));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_2), (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetResolvedTouch_m73FE92C1ADB5D80A899E286D292ED84071FE8CFE_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7058));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7059));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7060));
		// if ((controllerMask & Controller.Active) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7061));
		int32_t L_0 = ___2_controllerMask;
		V_0 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_0&((int32_t)-2147483648LL)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7062));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0018;
		}
	}
	{
		// controllerMask |= activeControllerType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7063));
		int32_t L_2 = ___2_controllerMask;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_3 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3;
		___2_controllerMask = ((int32_t)((int32_t)L_2|(int32_t)L_3));
	}

IL_0018:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7064));
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7065));
		goto IL_0068;
	}

IL_001c:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7066));
		// OVRControllerBase controller = controllers[i];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7067));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_4 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		int32_t L_5 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7068));
		NullCheck(L_4);
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_6;
		L_6 = List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D(L_4, L_5, List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7068));
		V_2 = L_6;
		// if (ShouldResolveController(controller.controllerType, controllerMask))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7069));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_7 = V_2;
		NullCheck(L_7);
		int32_t L_8 = L_7->___controllerType_0;
		int32_t L_9 = ___2_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7070));
		bool L_10;
		L_10 = OVRInput_ShouldResolveController_m28BB36AA2D586B8F1C75071D26654B77285AA952(L_8, L_9, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7070));
		V_3 = L_10;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7071));
		bool L_11 = V_3;
		if (!L_11)
		{
			goto IL_0063;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7072));
		// RawTouch resolvedMask = rawMask | controller.ResolveToRawMask(virtualMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7073));
		int32_t L_12 = ___1_rawMask;
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_13 = V_2;
		int32_t L_14 = ___0_virtualMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7074));
		NullCheck(L_13);
		int32_t L_15;
		L_15 = OVRControllerBase_ResolveToRawMask_m65F6690080656E738842AC913EF7A7B92A666F07(L_13, L_14, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7074));
		V_4 = ((int32_t)((int32_t)L_12|(int32_t)L_15));
		// if (((RawTouch)controller.currentState.Touches & resolvedMask) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7075));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_16 = V_2;
		NullCheck(L_16);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_17 = (&L_16->___currentState_7);
		uint32_t L_18 = L_17->___Touches_2;
		int32_t L_19 = V_4;
		V_5 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_18&(int32_t)L_19))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7076));
		bool L_20 = V_5;
		if (!L_20)
		{
			goto IL_0062;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7077));
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7078));
		V_6 = (bool)1;
		goto IL_0080;
	}

IL_0062:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7079));
	}

IL_0063:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7080));
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7081));
		int32_t L_21 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add(L_21, 1));
	}

IL_0068:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7082));
		int32_t L_22 = V_1;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_23 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7083));
		NullCheck(L_23);
		int32_t L_24;
		L_24 = List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_inline(L_23, List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7083));
		V_7 = (bool)((((int32_t)L_22) < ((int32_t)L_24))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7084));
		bool L_25 = V_7;
		if (L_25)
		{
			goto IL_001c;
		}
	}
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7085));
		V_6 = (bool)0;
		goto IL_0080;
	}

IL_0080:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7086));
		bool L_26 = V_6;
		return L_26;
	}
}
// System.Boolean OVRInput::GetDown(OVRInput/Touch,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetDown_m5491C09889270B683C537503A0C6BF872504AAA8 (int32_t ___0_virtualMask, int32_t ___1_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetDown_m5491C09889270B683C537503A0C6BF872504AAA8_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_virtualMask), (&___1_controllerMask));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetDown_m5491C09889270B683C537503A0C6BF872504AAA8_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7087));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7088));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7089));
		// return GetResolvedTouchDown(virtualMask, RawTouch.None, controllerMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7090));
		int32_t L_0 = ___0_virtualMask;
		int32_t L_1 = ___1_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7091));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = OVRInput_GetResolvedTouchDown_m66E8EEDD8A035AB53C72094860E4B470B383B6BA(L_0, 0, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7091));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7092));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean OVRInput::GetDown(OVRInput/RawTouch,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetDown_m486EC70E23DEE19E6AB8364AC09CE97AD4EA4AA7 (int32_t ___0_rawMask, int32_t ___1_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetDown_m486EC70E23DEE19E6AB8364AC09CE97AD4EA4AA7_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_rawMask), (&___1_controllerMask));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetDown_m486EC70E23DEE19E6AB8364AC09CE97AD4EA4AA7_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7093));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7094));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7095));
		// return GetResolvedTouchDown(Touch.None, rawMask, controllerMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7096));
		int32_t L_0 = ___0_rawMask;
		int32_t L_1 = ___1_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7097));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = OVRInput_GetResolvedTouchDown_m66E8EEDD8A035AB53C72094860E4B470B383B6BA(0, L_0, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7097));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7098));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean OVRInput::GetResolvedTouchDown(OVRInput/Touch,OVRInput/RawTouch,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetResolvedTouchDown_m66E8EEDD8A035AB53C72094860E4B470B383B6BA (int32_t ___0_virtualMask, int32_t ___1_rawMask, int32_t ___2_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetResolvedTouchDown_m66E8EEDD8A035AB53C72094860E4B470B383B6BA_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&RawTouch_t7D17A388D30D8E3B4FD34FBDAA322D5023CF8BE3_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	int32_t V_2 = 0;
	OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* V_3 = NULL;
	bool V_4 = false;
	int32_t V_5 = 0;
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_virtualMask), (&___1_rawMask), (&___2_controllerMask));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_2), (&V_3), (&V_5));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetResolvedTouchDown_m66E8EEDD8A035AB53C72094860E4B470B383B6BA_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7099));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7100));
	int32_t G_B9_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7101));
		// bool down = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7102));
		V_0 = (bool)0;
		// if ((controllerMask & Controller.Active) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7103));
		int32_t L_0 = ___2_controllerMask;
		V_1 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_0&((int32_t)-2147483648LL)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7104));
		bool L_1 = V_1;
		if (!L_1)
		{
			goto IL_001a;
		}
	}
	{
		// controllerMask |= activeControllerType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7105));
		int32_t L_2 = ___2_controllerMask;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_3 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3;
		___2_controllerMask = ((int32_t)((int32_t)L_2|(int32_t)L_3));
	}

IL_001a:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7106));
		V_2 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7107));
		goto IL_009a;
	}

IL_001e:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7108));
		// OVRControllerBase controller = controllers[i];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7109));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_4 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		int32_t L_5 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7110));
		NullCheck(L_4);
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_6;
		L_6 = List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D(L_4, L_5, List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7110));
		V_3 = L_6;
		// if (ShouldResolveController(controller.controllerType, controllerMask))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7111));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_7 = V_3;
		NullCheck(L_7);
		int32_t L_8 = L_7->___controllerType_0;
		int32_t L_9 = ___2_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7112));
		bool L_10;
		L_10 = OVRInput_ShouldResolveController_m28BB36AA2D586B8F1C75071D26654B77285AA952(L_8, L_9, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7112));
		V_4 = L_10;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7113));
		bool L_11 = V_4;
		if (!L_11)
		{
			goto IL_0095;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7114));
		// RawTouch resolvedMask = rawMask | controller.ResolveToRawMask(virtualMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7115));
		int32_t L_12 = ___1_rawMask;
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_13 = V_3;
		int32_t L_14 = ___0_virtualMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7116));
		NullCheck(L_13);
		int32_t L_15;
		L_15 = OVRControllerBase_ResolveToRawMask_m65F6690080656E738842AC913EF7A7B92A666F07(L_13, L_14, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7116));
		V_5 = ((int32_t)((int32_t)L_12|(int32_t)L_15));
		// if (((RawTouch)controller.previousState.Touches & resolvedMask) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7117));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_16 = V_3;
		NullCheck(L_16);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_17 = (&L_16->___previousState_6);
		uint32_t L_18 = L_17->___Touches_2;
		int32_t L_19 = V_5;
		V_6 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_18&(int32_t)L_19))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7118));
		bool L_20 = V_6;
		if (!L_20)
		{
			goto IL_0066;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7119));
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7120));
		V_7 = (bool)0;
		goto IL_00b5;
	}

IL_0066:
	{
		// if ((((RawTouch)controller.currentState.Touches & resolvedMask) != 0)
		//     && (((RawTouch)controller.previousState.Touches & resolvedMask) == 0))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7121));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_21 = V_3;
		NullCheck(L_21);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_22 = (&L_21->___currentState_7);
		uint32_t L_23 = L_22->___Touches_2;
		int32_t L_24 = V_5;
		if (!((int32_t)((int32_t)L_23&(int32_t)L_24)))
		{
			goto IL_0089;
		}
	}
	{
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_25 = V_3;
		NullCheck(L_25);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_26 = (&L_25->___previousState_6);
		uint32_t L_27 = L_26->___Touches_2;
		int32_t L_28 = V_5;
		G_B9_0 = ((((int32_t)((int32_t)((int32_t)L_27&(int32_t)L_28))) == ((int32_t)0))? 1 : 0);
		goto IL_008a;
	}

IL_0089:
	{
		G_B9_0 = 0;
	}

IL_008a:
	{
		V_8 = (bool)G_B9_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7122));
		bool L_29 = V_8;
		if (!L_29)
		{
			goto IL_0094;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7123));
		// down = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7124));
		V_0 = (bool)1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7125));
	}

IL_0094:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7126));
	}

IL_0095:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7127));
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7128));
		int32_t L_30 = V_2;
		V_2 = ((int32_t)il2cpp_codegen_add(L_30, 1));
	}

IL_009a:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7129));
		int32_t L_31 = V_2;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_32 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7130));
		NullCheck(L_32);
		int32_t L_33;
		L_33 = List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_inline(L_32, List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7130));
		V_9 = (bool)((((int32_t)L_31) < ((int32_t)L_33))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7131));
		bool L_34 = V_9;
		if (L_34)
		{
			goto IL_001e;
		}
	}
	{
		// return down;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7132));
		bool L_35 = V_0;
		V_7 = L_35;
		goto IL_00b5;
	}

IL_00b5:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7133));
		bool L_36 = V_7;
		return L_36;
	}
}
// System.Boolean OVRInput::GetUp(OVRInput/Touch,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetUp_m3E4D89CF77514121520D52DBA85E0376826875D8 (int32_t ___0_virtualMask, int32_t ___1_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetUp_m3E4D89CF77514121520D52DBA85E0376826875D8_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_virtualMask), (&___1_controllerMask));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetUp_m3E4D89CF77514121520D52DBA85E0376826875D8_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7134));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7135));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7136));
		// return GetResolvedTouchUp(virtualMask, RawTouch.None, controllerMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7137));
		int32_t L_0 = ___0_virtualMask;
		int32_t L_1 = ___1_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7138));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = OVRInput_GetResolvedTouchUp_m209C2025FE3912C6A88EBEEC418D28E49CB48C35(L_0, 0, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7138));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7139));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean OVRInput::GetUp(OVRInput/RawTouch,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetUp_mA6D9A9EF681EE249F1128D2EDB8A64492D6088E9 (int32_t ___0_rawMask, int32_t ___1_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetUp_mA6D9A9EF681EE249F1128D2EDB8A64492D6088E9_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_rawMask), (&___1_controllerMask));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetUp_mA6D9A9EF681EE249F1128D2EDB8A64492D6088E9_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7140));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7141));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7142));
		// return GetResolvedTouchUp(Touch.None, rawMask, controllerMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7143));
		int32_t L_0 = ___0_rawMask;
		int32_t L_1 = ___1_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7144));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = OVRInput_GetResolvedTouchUp_m209C2025FE3912C6A88EBEEC418D28E49CB48C35(0, L_0, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7144));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7145));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean OVRInput::GetResolvedTouchUp(OVRInput/Touch,OVRInput/RawTouch,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetResolvedTouchUp_m209C2025FE3912C6A88EBEEC418D28E49CB48C35 (int32_t ___0_virtualMask, int32_t ___1_rawMask, int32_t ___2_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetResolvedTouchUp_m209C2025FE3912C6A88EBEEC418D28E49CB48C35_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&RawTouch_t7D17A388D30D8E3B4FD34FBDAA322D5023CF8BE3_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	int32_t V_2 = 0;
	OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* V_3 = NULL;
	bool V_4 = false;
	int32_t V_5 = 0;
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_virtualMask), (&___1_rawMask), (&___2_controllerMask));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_2), (&V_3), (&V_5));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetResolvedTouchUp_m209C2025FE3912C6A88EBEEC418D28E49CB48C35_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7146));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7147));
	int32_t G_B9_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7148));
		// bool up = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7149));
		V_0 = (bool)0;
		// if ((controllerMask & Controller.Active) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7150));
		int32_t L_0 = ___2_controllerMask;
		V_1 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_0&((int32_t)-2147483648LL)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7151));
		bool L_1 = V_1;
		if (!L_1)
		{
			goto IL_001a;
		}
	}
	{
		// controllerMask |= activeControllerType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7152));
		int32_t L_2 = ___2_controllerMask;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_3 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3;
		___2_controllerMask = ((int32_t)((int32_t)L_2|(int32_t)L_3));
	}

IL_001a:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7153));
		V_2 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7154));
		goto IL_009a;
	}

IL_001e:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7155));
		// OVRControllerBase controller = controllers[i];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7156));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_4 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		int32_t L_5 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7157));
		NullCheck(L_4);
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_6;
		L_6 = List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D(L_4, L_5, List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7157));
		V_3 = L_6;
		// if (ShouldResolveController(controller.controllerType, controllerMask))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7158));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_7 = V_3;
		NullCheck(L_7);
		int32_t L_8 = L_7->___controllerType_0;
		int32_t L_9 = ___2_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7159));
		bool L_10;
		L_10 = OVRInput_ShouldResolveController_m28BB36AA2D586B8F1C75071D26654B77285AA952(L_8, L_9, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7159));
		V_4 = L_10;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7160));
		bool L_11 = V_4;
		if (!L_11)
		{
			goto IL_0095;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7161));
		// RawTouch resolvedMask = rawMask | controller.ResolveToRawMask(virtualMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7162));
		int32_t L_12 = ___1_rawMask;
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_13 = V_3;
		int32_t L_14 = ___0_virtualMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7163));
		NullCheck(L_13);
		int32_t L_15;
		L_15 = OVRControllerBase_ResolveToRawMask_m65F6690080656E738842AC913EF7A7B92A666F07(L_13, L_14, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7163));
		V_5 = ((int32_t)((int32_t)L_12|(int32_t)L_15));
		// if (((RawTouch)controller.currentState.Touches & resolvedMask) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7164));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_16 = V_3;
		NullCheck(L_16);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_17 = (&L_16->___currentState_7);
		uint32_t L_18 = L_17->___Touches_2;
		int32_t L_19 = V_5;
		V_6 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_18&(int32_t)L_19))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7165));
		bool L_20 = V_6;
		if (!L_20)
		{
			goto IL_0066;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7166));
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7167));
		V_7 = (bool)0;
		goto IL_00b5;
	}

IL_0066:
	{
		// if ((((RawTouch)controller.currentState.Touches & resolvedMask) == 0)
		//     && (((RawTouch)controller.previousState.Touches & resolvedMask) != 0))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7168));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_21 = V_3;
		NullCheck(L_21);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_22 = (&L_21->___currentState_7);
		uint32_t L_23 = L_22->___Touches_2;
		int32_t L_24 = V_5;
		if (((int32_t)((int32_t)L_23&(int32_t)L_24)))
		{
			goto IL_0089;
		}
	}
	{
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_25 = V_3;
		NullCheck(L_25);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_26 = (&L_25->___previousState_6);
		uint32_t L_27 = L_26->___Touches_2;
		int32_t L_28 = V_5;
		G_B9_0 = ((!(((uint32_t)((int32_t)((int32_t)L_27&(int32_t)L_28))) <= ((uint32_t)0)))? 1 : 0);
		goto IL_008a;
	}

IL_0089:
	{
		G_B9_0 = 0;
	}

IL_008a:
	{
		V_8 = (bool)G_B9_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7169));
		bool L_29 = V_8;
		if (!L_29)
		{
			goto IL_0094;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7170));
		// up = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7171));
		V_0 = (bool)1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7172));
	}

IL_0094:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7173));
	}

IL_0095:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7174));
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7175));
		int32_t L_30 = V_2;
		V_2 = ((int32_t)il2cpp_codegen_add(L_30, 1));
	}

IL_009a:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7176));
		int32_t L_31 = V_2;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_32 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7177));
		NullCheck(L_32);
		int32_t L_33;
		L_33 = List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_inline(L_32, List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7177));
		V_9 = (bool)((((int32_t)L_31) < ((int32_t)L_33))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7178));
		bool L_34 = V_9;
		if (L_34)
		{
			goto IL_001e;
		}
	}
	{
		// return up;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7179));
		bool L_35 = V_0;
		V_7 = L_35;
		goto IL_00b5;
	}

IL_00b5:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7180));
		bool L_36 = V_7;
		return L_36;
	}
}
// System.Boolean OVRInput::Get(OVRInput/NearTouch,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_Get_m3231F0E900AB4B2AF1BCBCB2045C6D2AF125C0C7 (int32_t ___0_virtualMask, int32_t ___1_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_Get_m3231F0E900AB4B2AF1BCBCB2045C6D2AF125C0C7_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_virtualMask), (&___1_controllerMask));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_Get_m3231F0E900AB4B2AF1BCBCB2045C6D2AF125C0C7_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7181));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7182));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7183));
		// return GetResolvedNearTouch(virtualMask, RawNearTouch.None, controllerMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7184));
		int32_t L_0 = ___0_virtualMask;
		int32_t L_1 = ___1_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7185));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = OVRInput_GetResolvedNearTouch_mED99EAB619BBCBC6C3A1D39EFFE67D1D2882C1A7(L_0, 0, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7185));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7186));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean OVRInput::Get(OVRInput/RawNearTouch,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_Get_mFE6AE2B8D10329B84EDD4D3A6BA08617F5323A87 (int32_t ___0_rawMask, int32_t ___1_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_Get_mFE6AE2B8D10329B84EDD4D3A6BA08617F5323A87_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_rawMask), (&___1_controllerMask));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_Get_mFE6AE2B8D10329B84EDD4D3A6BA08617F5323A87_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7187));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7188));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7189));
		// return GetResolvedNearTouch(NearTouch.None, rawMask, controllerMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7190));
		int32_t L_0 = ___0_rawMask;
		int32_t L_1 = ___1_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7191));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = OVRInput_GetResolvedNearTouch_mED99EAB619BBCBC6C3A1D39EFFE67D1D2882C1A7(0, L_0, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7191));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7192));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean OVRInput::GetResolvedNearTouch(OVRInput/NearTouch,OVRInput/RawNearTouch,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetResolvedNearTouch_mED99EAB619BBCBC6C3A1D39EFFE67D1D2882C1A7 (int32_t ___0_virtualMask, int32_t ___1_rawMask, int32_t ___2_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetResolvedNearTouch_mED99EAB619BBCBC6C3A1D39EFFE67D1D2882C1A7_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&RawNearTouch_t462F7BF4D7758A6C7CCA8DC98652716CF7796ACB_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* V_2 = NULL;
	bool V_3 = false;
	int32_t V_4 = 0;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_virtualMask), (&___1_rawMask), (&___2_controllerMask));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_2), (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetResolvedNearTouch_mED99EAB619BBCBC6C3A1D39EFFE67D1D2882C1A7_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7193));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7194));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7195));
		// if ((controllerMask & Controller.Active) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7196));
		int32_t L_0 = ___2_controllerMask;
		V_0 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_0&((int32_t)-2147483648LL)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7197));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0018;
		}
	}
	{
		// controllerMask |= activeControllerType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7198));
		int32_t L_2 = ___2_controllerMask;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_3 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3;
		___2_controllerMask = ((int32_t)((int32_t)L_2|(int32_t)L_3));
	}

IL_0018:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7199));
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7200));
		goto IL_0068;
	}

IL_001c:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7201));
		// OVRControllerBase controller = controllers[i];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7202));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_4 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		int32_t L_5 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7203));
		NullCheck(L_4);
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_6;
		L_6 = List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D(L_4, L_5, List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7203));
		V_2 = L_6;
		// if (ShouldResolveController(controller.controllerType, controllerMask))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7204));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_7 = V_2;
		NullCheck(L_7);
		int32_t L_8 = L_7->___controllerType_0;
		int32_t L_9 = ___2_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7205));
		bool L_10;
		L_10 = OVRInput_ShouldResolveController_m28BB36AA2D586B8F1C75071D26654B77285AA952(L_8, L_9, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7205));
		V_3 = L_10;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7206));
		bool L_11 = V_3;
		if (!L_11)
		{
			goto IL_0063;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7207));
		// RawNearTouch resolvedMask = rawMask | controller.ResolveToRawMask(virtualMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7208));
		int32_t L_12 = ___1_rawMask;
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_13 = V_2;
		int32_t L_14 = ___0_virtualMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7209));
		NullCheck(L_13);
		int32_t L_15;
		L_15 = OVRControllerBase_ResolveToRawMask_m8D04C93448D2D3438F972AE9796714F134E6BD39(L_13, L_14, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7209));
		V_4 = ((int32_t)((int32_t)L_12|(int32_t)L_15));
		// if (((RawNearTouch)controller.currentState.NearTouches & resolvedMask) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7210));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_16 = V_2;
		NullCheck(L_16);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_17 = (&L_16->___currentState_7);
		uint32_t L_18 = L_17->___NearTouches_3;
		int32_t L_19 = V_4;
		V_5 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_18&(int32_t)L_19))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7211));
		bool L_20 = V_5;
		if (!L_20)
		{
			goto IL_0062;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7212));
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7213));
		V_6 = (bool)1;
		goto IL_0080;
	}

IL_0062:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7214));
	}

IL_0063:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7215));
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7216));
		int32_t L_21 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add(L_21, 1));
	}

IL_0068:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7217));
		int32_t L_22 = V_1;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_23 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7218));
		NullCheck(L_23);
		int32_t L_24;
		L_24 = List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_inline(L_23, List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7218));
		V_7 = (bool)((((int32_t)L_22) < ((int32_t)L_24))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7219));
		bool L_25 = V_7;
		if (L_25)
		{
			goto IL_001c;
		}
	}
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7220));
		V_6 = (bool)0;
		goto IL_0080;
	}

IL_0080:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7221));
		bool L_26 = V_6;
		return L_26;
	}
}
// System.Boolean OVRInput::GetDown(OVRInput/NearTouch,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetDown_m154A3DF72CA4730638205848FA0818BBC8E7C341 (int32_t ___0_virtualMask, int32_t ___1_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetDown_m154A3DF72CA4730638205848FA0818BBC8E7C341_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_virtualMask), (&___1_controllerMask));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetDown_m154A3DF72CA4730638205848FA0818BBC8E7C341_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7222));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7223));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7224));
		// return GetResolvedNearTouchDown(virtualMask, RawNearTouch.None, controllerMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7225));
		int32_t L_0 = ___0_virtualMask;
		int32_t L_1 = ___1_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7226));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = OVRInput_GetResolvedNearTouchDown_m6FD16DD559D5DF8B54918EE7C11D43CCF6345FC1(L_0, 0, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7226));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7227));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean OVRInput::GetDown(OVRInput/RawNearTouch,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetDown_m4ACA316A238725299B4330463494315FDF2A9133 (int32_t ___0_rawMask, int32_t ___1_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetDown_m4ACA316A238725299B4330463494315FDF2A9133_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_rawMask), (&___1_controllerMask));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetDown_m4ACA316A238725299B4330463494315FDF2A9133_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7228));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7229));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7230));
		// return GetResolvedNearTouchDown(NearTouch.None, rawMask, controllerMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7231));
		int32_t L_0 = ___0_rawMask;
		int32_t L_1 = ___1_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7232));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = OVRInput_GetResolvedNearTouchDown_m6FD16DD559D5DF8B54918EE7C11D43CCF6345FC1(0, L_0, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7232));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7233));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean OVRInput::GetResolvedNearTouchDown(OVRInput/NearTouch,OVRInput/RawNearTouch,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetResolvedNearTouchDown_m6FD16DD559D5DF8B54918EE7C11D43CCF6345FC1 (int32_t ___0_virtualMask, int32_t ___1_rawMask, int32_t ___2_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetResolvedNearTouchDown_m6FD16DD559D5DF8B54918EE7C11D43CCF6345FC1_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&RawNearTouch_t462F7BF4D7758A6C7CCA8DC98652716CF7796ACB_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	int32_t V_2 = 0;
	OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* V_3 = NULL;
	bool V_4 = false;
	int32_t V_5 = 0;
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_virtualMask), (&___1_rawMask), (&___2_controllerMask));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_2), (&V_3), (&V_5));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetResolvedNearTouchDown_m6FD16DD559D5DF8B54918EE7C11D43CCF6345FC1_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7234));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7235));
	int32_t G_B9_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7236));
		// bool down = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7237));
		V_0 = (bool)0;
		// if ((controllerMask & Controller.Active) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7238));
		int32_t L_0 = ___2_controllerMask;
		V_1 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_0&((int32_t)-2147483648LL)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7239));
		bool L_1 = V_1;
		if (!L_1)
		{
			goto IL_001a;
		}
	}
	{
		// controllerMask |= activeControllerType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7240));
		int32_t L_2 = ___2_controllerMask;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_3 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3;
		___2_controllerMask = ((int32_t)((int32_t)L_2|(int32_t)L_3));
	}

IL_001a:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7241));
		V_2 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7242));
		goto IL_009a;
	}

IL_001e:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7243));
		// OVRControllerBase controller = controllers[i];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7244));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_4 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		int32_t L_5 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7245));
		NullCheck(L_4);
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_6;
		L_6 = List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D(L_4, L_5, List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7245));
		V_3 = L_6;
		// if (ShouldResolveController(controller.controllerType, controllerMask))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7246));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_7 = V_3;
		NullCheck(L_7);
		int32_t L_8 = L_7->___controllerType_0;
		int32_t L_9 = ___2_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7247));
		bool L_10;
		L_10 = OVRInput_ShouldResolveController_m28BB36AA2D586B8F1C75071D26654B77285AA952(L_8, L_9, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7247));
		V_4 = L_10;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7248));
		bool L_11 = V_4;
		if (!L_11)
		{
			goto IL_0095;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7249));
		// RawNearTouch resolvedMask = rawMask | controller.ResolveToRawMask(virtualMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7250));
		int32_t L_12 = ___1_rawMask;
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_13 = V_3;
		int32_t L_14 = ___0_virtualMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7251));
		NullCheck(L_13);
		int32_t L_15;
		L_15 = OVRControllerBase_ResolveToRawMask_m8D04C93448D2D3438F972AE9796714F134E6BD39(L_13, L_14, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7251));
		V_5 = ((int32_t)((int32_t)L_12|(int32_t)L_15));
		// if (((RawNearTouch)controller.previousState.NearTouches & resolvedMask) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7252));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_16 = V_3;
		NullCheck(L_16);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_17 = (&L_16->___previousState_6);
		uint32_t L_18 = L_17->___NearTouches_3;
		int32_t L_19 = V_5;
		V_6 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_18&(int32_t)L_19))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7253));
		bool L_20 = V_6;
		if (!L_20)
		{
			goto IL_0066;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7254));
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7255));
		V_7 = (bool)0;
		goto IL_00b5;
	}

IL_0066:
	{
		// if ((((RawNearTouch)controller.currentState.NearTouches & resolvedMask) != 0)
		//     && (((RawNearTouch)controller.previousState.NearTouches & resolvedMask) == 0))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7256));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_21 = V_3;
		NullCheck(L_21);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_22 = (&L_21->___currentState_7);
		uint32_t L_23 = L_22->___NearTouches_3;
		int32_t L_24 = V_5;
		if (!((int32_t)((int32_t)L_23&(int32_t)L_24)))
		{
			goto IL_0089;
		}
	}
	{
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_25 = V_3;
		NullCheck(L_25);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_26 = (&L_25->___previousState_6);
		uint32_t L_27 = L_26->___NearTouches_3;
		int32_t L_28 = V_5;
		G_B9_0 = ((((int32_t)((int32_t)((int32_t)L_27&(int32_t)L_28))) == ((int32_t)0))? 1 : 0);
		goto IL_008a;
	}

IL_0089:
	{
		G_B9_0 = 0;
	}

IL_008a:
	{
		V_8 = (bool)G_B9_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7257));
		bool L_29 = V_8;
		if (!L_29)
		{
			goto IL_0094;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7258));
		// down = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7259));
		V_0 = (bool)1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7260));
	}

IL_0094:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7261));
	}

IL_0095:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7262));
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7263));
		int32_t L_30 = V_2;
		V_2 = ((int32_t)il2cpp_codegen_add(L_30, 1));
	}

IL_009a:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7264));
		int32_t L_31 = V_2;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_32 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7265));
		NullCheck(L_32);
		int32_t L_33;
		L_33 = List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_inline(L_32, List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7265));
		V_9 = (bool)((((int32_t)L_31) < ((int32_t)L_33))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7266));
		bool L_34 = V_9;
		if (L_34)
		{
			goto IL_001e;
		}
	}
	{
		// return down;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7267));
		bool L_35 = V_0;
		V_7 = L_35;
		goto IL_00b5;
	}

IL_00b5:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7268));
		bool L_36 = V_7;
		return L_36;
	}
}
// System.Boolean OVRInput::GetUp(OVRInput/NearTouch,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetUp_m31EB27909F84F5A072599C2198E542436692A8F6 (int32_t ___0_virtualMask, int32_t ___1_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetUp_m31EB27909F84F5A072599C2198E542436692A8F6_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_virtualMask), (&___1_controllerMask));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetUp_m31EB27909F84F5A072599C2198E542436692A8F6_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7269));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7270));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7271));
		// return GetResolvedNearTouchUp(virtualMask, RawNearTouch.None, controllerMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7272));
		int32_t L_0 = ___0_virtualMask;
		int32_t L_1 = ___1_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7273));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = OVRInput_GetResolvedNearTouchUp_mF91233ABD8E1D6CC43D2D6929B5EC95D584D3941(L_0, 0, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7273));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7274));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean OVRInput::GetUp(OVRInput/RawNearTouch,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetUp_mC566682F46106E82E01F6FF3F58B55F4293CF9D3 (int32_t ___0_rawMask, int32_t ___1_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetUp_mC566682F46106E82E01F6FF3F58B55F4293CF9D3_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_rawMask), (&___1_controllerMask));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetUp_mC566682F46106E82E01F6FF3F58B55F4293CF9D3_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7275));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7276));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7277));
		// return GetResolvedNearTouchUp(NearTouch.None, rawMask, controllerMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7278));
		int32_t L_0 = ___0_rawMask;
		int32_t L_1 = ___1_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7279));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = OVRInput_GetResolvedNearTouchUp_mF91233ABD8E1D6CC43D2D6929B5EC95D584D3941(0, L_0, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7279));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7280));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean OVRInput::GetResolvedNearTouchUp(OVRInput/NearTouch,OVRInput/RawNearTouch,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_GetResolvedNearTouchUp_mF91233ABD8E1D6CC43D2D6929B5EC95D584D3941 (int32_t ___0_virtualMask, int32_t ___1_rawMask, int32_t ___2_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetResolvedNearTouchUp_mF91233ABD8E1D6CC43D2D6929B5EC95D584D3941_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&RawNearTouch_t462F7BF4D7758A6C7CCA8DC98652716CF7796ACB_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	int32_t V_2 = 0;
	OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* V_3 = NULL;
	bool V_4 = false;
	int32_t V_5 = 0;
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_virtualMask), (&___1_rawMask), (&___2_controllerMask));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_2), (&V_3), (&V_5));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetResolvedNearTouchUp_mF91233ABD8E1D6CC43D2D6929B5EC95D584D3941_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7281));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7282));
	int32_t G_B9_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7283));
		// bool up = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7284));
		V_0 = (bool)0;
		// if ((controllerMask & Controller.Active) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7285));
		int32_t L_0 = ___2_controllerMask;
		V_1 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_0&((int32_t)-2147483648LL)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7286));
		bool L_1 = V_1;
		if (!L_1)
		{
			goto IL_001a;
		}
	}
	{
		// controllerMask |= activeControllerType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7287));
		int32_t L_2 = ___2_controllerMask;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_3 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3;
		___2_controllerMask = ((int32_t)((int32_t)L_2|(int32_t)L_3));
	}

IL_001a:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7288));
		V_2 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7289));
		goto IL_009a;
	}

IL_001e:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7290));
		// OVRControllerBase controller = controllers[i];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7291));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_4 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		int32_t L_5 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7292));
		NullCheck(L_4);
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_6;
		L_6 = List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D(L_4, L_5, List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7292));
		V_3 = L_6;
		// if (ShouldResolveController(controller.controllerType, controllerMask))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7293));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_7 = V_3;
		NullCheck(L_7);
		int32_t L_8 = L_7->___controllerType_0;
		int32_t L_9 = ___2_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7294));
		bool L_10;
		L_10 = OVRInput_ShouldResolveController_m28BB36AA2D586B8F1C75071D26654B77285AA952(L_8, L_9, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7294));
		V_4 = L_10;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7295));
		bool L_11 = V_4;
		if (!L_11)
		{
			goto IL_0095;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7296));
		// RawNearTouch resolvedMask = rawMask | controller.ResolveToRawMask(virtualMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7297));
		int32_t L_12 = ___1_rawMask;
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_13 = V_3;
		int32_t L_14 = ___0_virtualMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7298));
		NullCheck(L_13);
		int32_t L_15;
		L_15 = OVRControllerBase_ResolveToRawMask_m8D04C93448D2D3438F972AE9796714F134E6BD39(L_13, L_14, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7298));
		V_5 = ((int32_t)((int32_t)L_12|(int32_t)L_15));
		// if (((RawNearTouch)controller.currentState.NearTouches & resolvedMask) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7299));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_16 = V_3;
		NullCheck(L_16);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_17 = (&L_16->___currentState_7);
		uint32_t L_18 = L_17->___NearTouches_3;
		int32_t L_19 = V_5;
		V_6 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_18&(int32_t)L_19))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7300));
		bool L_20 = V_6;
		if (!L_20)
		{
			goto IL_0066;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7301));
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7302));
		V_7 = (bool)0;
		goto IL_00b5;
	}

IL_0066:
	{
		// if ((((RawNearTouch)controller.currentState.NearTouches & resolvedMask) == 0)
		//     && (((RawNearTouch)controller.previousState.NearTouches & resolvedMask) != 0))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7303));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_21 = V_3;
		NullCheck(L_21);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_22 = (&L_21->___currentState_7);
		uint32_t L_23 = L_22->___NearTouches_3;
		int32_t L_24 = V_5;
		if (((int32_t)((int32_t)L_23&(int32_t)L_24)))
		{
			goto IL_0089;
		}
	}
	{
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_25 = V_3;
		NullCheck(L_25);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_26 = (&L_25->___previousState_6);
		uint32_t L_27 = L_26->___NearTouches_3;
		int32_t L_28 = V_5;
		G_B9_0 = ((!(((uint32_t)((int32_t)((int32_t)L_27&(int32_t)L_28))) <= ((uint32_t)0)))? 1 : 0);
		goto IL_008a;
	}

IL_0089:
	{
		G_B9_0 = 0;
	}

IL_008a:
	{
		V_8 = (bool)G_B9_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7304));
		bool L_29 = V_8;
		if (!L_29)
		{
			goto IL_0094;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7305));
		// up = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7306));
		V_0 = (bool)1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7307));
	}

IL_0094:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7308));
	}

IL_0095:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7309));
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7310));
		int32_t L_30 = V_2;
		V_2 = ((int32_t)il2cpp_codegen_add(L_30, 1));
	}

IL_009a:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7311));
		int32_t L_31 = V_2;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_32 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7312));
		NullCheck(L_32);
		int32_t L_33;
		L_33 = List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_inline(L_32, List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7312));
		V_9 = (bool)((((int32_t)L_31) < ((int32_t)L_33))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7313));
		bool L_34 = V_9;
		if (L_34)
		{
			goto IL_001e;
		}
	}
	{
		// return up;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7314));
		bool L_35 = V_0;
		V_7 = L_35;
		goto IL_00b5;
	}

IL_00b5:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7315));
		bool L_36 = V_7;
		return L_36;
	}
}
// System.Single OVRInput::Get(OVRInput/Axis1D,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float OVRInput_Get_m1FD85568F358C43019E09E48A7BEBD6CD7F7E5D8 (int32_t ___0_virtualMask, int32_t ___1_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_Get_m1FD85568F358C43019E09E48A7BEBD6CD7F7E5D8_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_virtualMask), (&___1_controllerMask));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_Get_m1FD85568F358C43019E09E48A7BEBD6CD7F7E5D8_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7316));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7317));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7318));
		// return GetResolvedAxis1D(virtualMask, RawAxis1D.None, controllerMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7319));
		int32_t L_0 = ___0_virtualMask;
		int32_t L_1 = ___1_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7320));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_2;
		L_2 = OVRInput_GetResolvedAxis1D_mF5209B0321AE338095757D7353B262549E274EA1(L_0, 0, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7320));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7321));
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single OVRInput::Get(OVRInput/RawAxis1D,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float OVRInput_Get_m012EDBD26DA72A28E233C6067036C4DB52ECB515 (int32_t ___0_rawMask, int32_t ___1_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_Get_m012EDBD26DA72A28E233C6067036C4DB52ECB515_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_rawMask), (&___1_controllerMask));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_Get_m012EDBD26DA72A28E233C6067036C4DB52ECB515_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7322));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7323));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7324));
		// return GetResolvedAxis1D(Axis1D.None, rawMask, controllerMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7325));
		int32_t L_0 = ___0_rawMask;
		int32_t L_1 = ___1_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7326));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_2;
		L_2 = OVRInput_GetResolvedAxis1D_mF5209B0321AE338095757D7353B262549E274EA1(0, L_0, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7326));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7327));
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single OVRInput::GetResolvedAxis1D(OVRInput/Axis1D,OVRInput/RawAxis1D,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float OVRInput_GetResolvedAxis1D_mF5209B0321AE338095757D7353B262549E274EA1 (int32_t ___0_virtualMask, int32_t ___1_rawMask, int32_t ___2_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetResolvedAxis1D_mF5209B0321AE338095757D7353B262549E274EA1_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&RawAxis1D_tAE65BD6B0EB61DDB15F3B28E5D114F8979221BD5_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	bool V_1 = false;
	int32_t V_2 = 0;
	OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* V_3 = NULL;
	bool V_4 = false;
	bool V_5 = false;
	int32_t V_6 = 0;
	bool V_7 = false;
	float V_8 = 0.0f;
	bool V_9 = false;
	bool V_10 = false;
	float V_11 = 0.0f;
	bool V_12 = false;
	bool V_13 = false;
	float V_14 = 0.0f;
	bool V_15 = false;
	bool V_16 = false;
	float V_17 = 0.0f;
	bool V_18 = false;
	bool V_19 = false;
	float V_20 = 0.0f;
	bool V_21 = false;
	float V_22 = 0.0f;
	bool V_23 = false;
	float V_24 = 0.0f;
	bool V_25 = false;
	float V_26 = 0.0f;
	bool V_27 = false;
	float V_28 = 0.0f;
	bool V_29 = false;
	float V_30 = 0.0f;
	bool V_31 = false;
	float V_32 = 0.0f;
	bool V_33 = false;
	float V_34 = 0.0f;
	bool V_35 = false;
	float V_36 = 0.0f;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_virtualMask), (&___1_rawMask), (&___2_controllerMask));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_2), (&V_3), (&V_6), (&V_8), (&V_11), (&V_14), (&V_17), (&V_20), (&V_22), (&V_24), (&V_26), (&V_28), (&V_30), (&V_32), (&V_34));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetResolvedAxis1D_mF5209B0321AE338095757D7353B262549E274EA1_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7328));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7329));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7330));
		// float maxAxis = 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7331));
		V_0 = (0.0f);
		// if ((controllerMask & Controller.Active) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7332));
		int32_t L_0 = ___2_controllerMask;
		V_1 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_0&((int32_t)-2147483648LL)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7333));
		bool L_1 = V_1;
		if (!L_1)
		{
			goto IL_001e;
		}
	}
	{
		// controllerMask |= activeControllerType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7334));
		int32_t L_2 = ___2_controllerMask;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_3 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3;
		___2_controllerMask = ((int32_t)((int32_t)L_2|(int32_t)L_3));
	}

IL_001e:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7335));
		V_2 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7336));
		goto IL_02ac;
	}

IL_0025:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7337));
		// OVRControllerBase controller = controllers[i];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7338));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_4 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		int32_t L_5 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7339));
		NullCheck(L_4);
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_6;
		L_6 = List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D(L_4, L_5, List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7339));
		V_3 = L_6;
		// if (OVRManager.loadedXRDevice != OVRManager.XRDevice.Oculus)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7340));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_7 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___loadedXRDevice_85;
		V_4 = (bool)((((int32_t)((((int32_t)L_7) == ((int32_t)1))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7341));
		bool L_8 = V_4;
		if (!L_8)
		{
			goto IL_004a;
		}
	}
	{
		// controller.shouldApplyDeadzone = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7342));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_9 = V_3;
		NullCheck(L_9);
		L_9->___shouldApplyDeadzone_8 = (bool)0;
	}

IL_004a:
	{
		// if (ShouldResolveController(controller.controllerType, controllerMask))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7343));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_10 = V_3;
		NullCheck(L_10);
		int32_t L_11 = L_10->___controllerType_0;
		int32_t L_12 = ___2_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7344));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		bool L_13;
		L_13 = OVRInput_ShouldResolveController_m28BB36AA2D586B8F1C75071D26654B77285AA952(L_11, L_12, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7344));
		V_5 = L_13;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7345));
		bool L_14 = V_5;
		if (!L_14)
		{
			goto IL_02a7;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7346));
		// RawAxis1D resolvedMask = rawMask | controller.ResolveToRawMask(virtualMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7347));
		int32_t L_15 = ___1_rawMask;
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_16 = V_3;
		int32_t L_17 = ___0_virtualMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7348));
		NullCheck(L_16);
		int32_t L_18;
		L_18 = OVRControllerBase_ResolveToRawMask_m2FA1E268711274A7F9F63F1FC0D614272B8F953E(L_16, L_17, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7348));
		V_6 = ((int32_t)((int32_t)L_15|(int32_t)L_18));
		// if ((RawAxis1D.LIndexTrigger & resolvedMask) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7349));
		int32_t L_19 = V_6;
		V_7 = (bool)((!(((uint32_t)((int32_t)(1&(int32_t)L_19))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7350));
		bool L_20 = V_7;
		if (!L_20)
		{
			goto IL_00aa;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7351));
		// float axis = controller.currentState.LIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7352));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_21 = V_3;
		NullCheck(L_21);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_22 = (&L_21->___currentState_7);
		float L_23 = L_22->___LIndexTrigger_4;
		V_8 = L_23;
		// if (controller.shouldApplyDeadzone)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7353));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_24 = V_3;
		NullCheck(L_24);
		bool L_25 = L_24->___shouldApplyDeadzone_8;
		V_9 = L_25;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7354));
		bool L_26 = V_9;
		if (!L_26)
		{
			goto IL_00a0;
		}
	}
	{
		// axis = CalculateDeadzone(axis, AXIS_DEADZONE_THRESHOLD);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7355));
		float L_27 = V_8;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_28 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___AXIS_DEADZONE_THRESHOLD_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7356));
		float L_29;
		L_29 = OVRInput_CalculateDeadzone_m6BA8FADBF3D06FE95AD5264B167531F78C4AB3C4(L_27, L_28, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7356));
		V_8 = L_29;
	}

IL_00a0:
	{
		// maxAxis = CalculateAbsMax(maxAxis, axis);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7357));
		float L_30 = V_0;
		float L_31 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7358));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_32;
		L_32 = OVRInput_CalculateAbsMax_mC5712340231F606B82E84C5E7BC769E5A4EBA008(L_30, L_31, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7358));
		V_0 = L_32;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7359));
	}

IL_00aa:
	{
		// if ((RawAxis1D.RIndexTrigger & resolvedMask) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7360));
		int32_t L_33 = V_6;
		V_10 = (bool)((!(((uint32_t)((int32_t)(2&(int32_t)L_33))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7361));
		bool L_34 = V_10;
		if (!L_34)
		{
			goto IL_00e9;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7362));
		// float axis = controller.currentState.RIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7363));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_35 = V_3;
		NullCheck(L_35);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_36 = (&L_35->___currentState_7);
		float L_37 = L_36->___RIndexTrigger_5;
		V_11 = L_37;
		// if (controller.shouldApplyDeadzone)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7364));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_38 = V_3;
		NullCheck(L_38);
		bool L_39 = L_38->___shouldApplyDeadzone_8;
		V_12 = L_39;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7365));
		bool L_40 = V_12;
		if (!L_40)
		{
			goto IL_00df;
		}
	}
	{
		// axis = CalculateDeadzone(axis, AXIS_DEADZONE_THRESHOLD);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7366));
		float L_41 = V_11;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_42 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___AXIS_DEADZONE_THRESHOLD_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7367));
		float L_43;
		L_43 = OVRInput_CalculateDeadzone_m6BA8FADBF3D06FE95AD5264B167531F78C4AB3C4(L_41, L_42, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7367));
		V_11 = L_43;
	}

IL_00df:
	{
		// maxAxis = CalculateAbsMax(maxAxis, axis);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7368));
		float L_44 = V_0;
		float L_45 = V_11;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7369));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_46;
		L_46 = OVRInput_CalculateAbsMax_mC5712340231F606B82E84C5E7BC769E5A4EBA008(L_44, L_45, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7369));
		V_0 = L_46;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7370));
	}

IL_00e9:
	{
		// if ((RawAxis1D.LHandTrigger & resolvedMask) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7371));
		int32_t L_47 = V_6;
		V_13 = (bool)((!(((uint32_t)((int32_t)(4&(int32_t)L_47))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7372));
		bool L_48 = V_13;
		if (!L_48)
		{
			goto IL_0128;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7373));
		// float axis = controller.currentState.LHandTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7374));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_49 = V_3;
		NullCheck(L_49);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_50 = (&L_49->___currentState_7);
		float L_51 = L_50->___LHandTrigger_6;
		V_14 = L_51;
		// if (controller.shouldApplyDeadzone)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7375));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_52 = V_3;
		NullCheck(L_52);
		bool L_53 = L_52->___shouldApplyDeadzone_8;
		V_15 = L_53;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7376));
		bool L_54 = V_15;
		if (!L_54)
		{
			goto IL_011e;
		}
	}
	{
		// axis = CalculateDeadzone(axis, AXIS_DEADZONE_THRESHOLD);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7377));
		float L_55 = V_14;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_56 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___AXIS_DEADZONE_THRESHOLD_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7378));
		float L_57;
		L_57 = OVRInput_CalculateDeadzone_m6BA8FADBF3D06FE95AD5264B167531F78C4AB3C4(L_55, L_56, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7378));
		V_14 = L_57;
	}

IL_011e:
	{
		// maxAxis = CalculateAbsMax(maxAxis, axis);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7379));
		float L_58 = V_0;
		float L_59 = V_14;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7380));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_60;
		L_60 = OVRInput_CalculateAbsMax_mC5712340231F606B82E84C5E7BC769E5A4EBA008(L_58, L_59, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7380));
		V_0 = L_60;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7381));
	}

IL_0128:
	{
		// if ((RawAxis1D.RHandTrigger & resolvedMask) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7382));
		int32_t L_61 = V_6;
		V_16 = (bool)((!(((uint32_t)((int32_t)(8&(int32_t)L_61))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7383));
		bool L_62 = V_16;
		if (!L_62)
		{
			goto IL_0167;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7384));
		// float axis = controller.currentState.RHandTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7385));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_63 = V_3;
		NullCheck(L_63);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_64 = (&L_63->___currentState_7);
		float L_65 = L_64->___RHandTrigger_7;
		V_17 = L_65;
		// if (controller.shouldApplyDeadzone)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7386));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_66 = V_3;
		NullCheck(L_66);
		bool L_67 = L_66->___shouldApplyDeadzone_8;
		V_18 = L_67;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7387));
		bool L_68 = V_18;
		if (!L_68)
		{
			goto IL_015d;
		}
	}
	{
		// axis = CalculateDeadzone(axis, AXIS_DEADZONE_THRESHOLD);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7388));
		float L_69 = V_17;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_70 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___AXIS_DEADZONE_THRESHOLD_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7389));
		float L_71;
		L_71 = OVRInput_CalculateDeadzone_m6BA8FADBF3D06FE95AD5264B167531F78C4AB3C4(L_69, L_70, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7389));
		V_17 = L_71;
	}

IL_015d:
	{
		// maxAxis = CalculateAbsMax(maxAxis, axis);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7390));
		float L_72 = V_0;
		float L_73 = V_17;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7391));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_74;
		L_74 = OVRInput_CalculateAbsMax_mC5712340231F606B82E84C5E7BC769E5A4EBA008(L_72, L_73, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7391));
		V_0 = L_74;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7392));
	}

IL_0167:
	{
		// if ((RawAxis1D.LIndexTriggerCurl & resolvedMask) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7393));
		int32_t L_75 = V_6;
		V_19 = (bool)((!(((uint32_t)((int32_t)(((int32_t)16)&(int32_t)L_75))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7394));
		bool L_76 = V_19;
		if (!L_76)
		{
			goto IL_018d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7395));
		// float axis = controller.currentState.LIndexTriggerCurl;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7396));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_77 = V_3;
		NullCheck(L_77);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_78 = (&L_77->___currentState_7);
		float L_79 = L_78->___LIndexTriggerCurl_20;
		V_20 = L_79;
		// maxAxis = CalculateAbsMax(maxAxis, axis);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7397));
		float L_80 = V_0;
		float L_81 = V_20;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7398));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_82;
		L_82 = OVRInput_CalculateAbsMax_mC5712340231F606B82E84C5E7BC769E5A4EBA008(L_80, L_81, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7398));
		V_0 = L_82;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7399));
	}

IL_018d:
	{
		// if ((RawAxis1D.RIndexTriggerCurl & resolvedMask) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7400));
		int32_t L_83 = V_6;
		V_21 = (bool)((!(((uint32_t)((int32_t)(((int32_t)256)&(int32_t)L_83))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7401));
		bool L_84 = V_21;
		if (!L_84)
		{
			goto IL_01b6;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7402));
		// float axis = controller.currentState.RIndexTriggerCurl;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7403));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_85 = V_3;
		NullCheck(L_85);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_86 = (&L_85->___currentState_7);
		float L_87 = L_86->___RIndexTriggerCurl_21;
		V_22 = L_87;
		// maxAxis = CalculateAbsMax(maxAxis, axis);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7404));
		float L_88 = V_0;
		float L_89 = V_22;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7405));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_90;
		L_90 = OVRInput_CalculateAbsMax_mC5712340231F606B82E84C5E7BC769E5A4EBA008(L_88, L_89, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7405));
		V_0 = L_90;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7406));
	}

IL_01b6:
	{
		// if ((RawAxis1D.LIndexTriggerSlide & resolvedMask) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7407));
		int32_t L_91 = V_6;
		V_23 = (bool)((!(((uint32_t)((int32_t)(((int32_t)32)&(int32_t)L_91))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7408));
		bool L_92 = V_23;
		if (!L_92)
		{
			goto IL_01dc;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7409));
		// float axis = controller.currentState.LIndexTriggerSlide;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7410));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_93 = V_3;
		NullCheck(L_93);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_94 = (&L_93->___currentState_7);
		float L_95 = L_94->___LIndexTriggerSlide_22;
		V_24 = L_95;
		// maxAxis = CalculateAbsMax(maxAxis, axis);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7411));
		float L_96 = V_0;
		float L_97 = V_24;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7412));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_98;
		L_98 = OVRInput_CalculateAbsMax_mC5712340231F606B82E84C5E7BC769E5A4EBA008(L_96, L_97, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7412));
		V_0 = L_98;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7413));
	}

IL_01dc:
	{
		// if ((RawAxis1D.RIndexTriggerSlide & resolvedMask) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7414));
		int32_t L_99 = V_6;
		V_25 = (bool)((!(((uint32_t)((int32_t)(((int32_t)512)&(int32_t)L_99))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7415));
		bool L_100 = V_25;
		if (!L_100)
		{
			goto IL_0205;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7416));
		// float axis = controller.currentState.RIndexTriggerSlide;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7417));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_101 = V_3;
		NullCheck(L_101);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_102 = (&L_101->___currentState_7);
		float L_103 = L_102->___RIndexTriggerSlide_23;
		V_26 = L_103;
		// maxAxis = CalculateAbsMax(maxAxis, axis);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7418));
		float L_104 = V_0;
		float L_105 = V_26;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7419));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_106;
		L_106 = OVRInput_CalculateAbsMax_mC5712340231F606B82E84C5E7BC769E5A4EBA008(L_104, L_105, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7419));
		V_0 = L_106;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7420));
	}

IL_0205:
	{
		// if ((RawAxis1D.LThumbRestForce & resolvedMask) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7421));
		int32_t L_107 = V_6;
		V_27 = (bool)((!(((uint32_t)((int32_t)(((int32_t)64)&(int32_t)L_107))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7422));
		bool L_108 = V_27;
		if (!L_108)
		{
			goto IL_022b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7423));
		// float axis = controller.currentState.LThumbRestForce;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7424));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_109 = V_3;
		NullCheck(L_109);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_110 = (&L_109->___currentState_7);
		float L_111 = L_110->___LThumbRestForce_16;
		V_28 = L_111;
		// maxAxis = CalculateAbsMax(maxAxis, axis);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7425));
		float L_112 = V_0;
		float L_113 = V_28;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7426));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_114;
		L_114 = OVRInput_CalculateAbsMax_mC5712340231F606B82E84C5E7BC769E5A4EBA008(L_112, L_113, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7426));
		V_0 = L_114;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7427));
	}

IL_022b:
	{
		// if ((RawAxis1D.RThumbRestForce & resolvedMask) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7428));
		int32_t L_115 = V_6;
		V_29 = (bool)((!(((uint32_t)((int32_t)(((int32_t)1024)&(int32_t)L_115))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7429));
		bool L_116 = V_29;
		if (!L_116)
		{
			goto IL_0254;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7430));
		// float axis = controller.currentState.RThumbRestForce;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7431));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_117 = V_3;
		NullCheck(L_117);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_118 = (&L_117->___currentState_7);
		float L_119 = L_118->___RThumbRestForce_17;
		V_30 = L_119;
		// maxAxis = CalculateAbsMax(maxAxis, axis);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7432));
		float L_120 = V_0;
		float L_121 = V_30;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7433));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_122;
		L_122 = OVRInput_CalculateAbsMax_mC5712340231F606B82E84C5E7BC769E5A4EBA008(L_120, L_121, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7433));
		V_0 = L_122;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7434));
	}

IL_0254:
	{
		// if ((RawAxis1D.LStylusForce & resolvedMask) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7435));
		int32_t L_123 = V_6;
		V_31 = (bool)((!(((uint32_t)((int32_t)(((int32_t)128)&(int32_t)L_123))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7436));
		bool L_124 = V_31;
		if (!L_124)
		{
			goto IL_027d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7437));
		// float axis = controller.currentState.LStylusForce;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7438));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_125 = V_3;
		NullCheck(L_125);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_126 = (&L_125->___currentState_7);
		float L_127 = L_126->___LStylusForce_18;
		V_32 = L_127;
		// maxAxis = CalculateAbsMax(maxAxis, axis);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7439));
		float L_128 = V_0;
		float L_129 = V_32;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7440));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_130;
		L_130 = OVRInput_CalculateAbsMax_mC5712340231F606B82E84C5E7BC769E5A4EBA008(L_128, L_129, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7440));
		V_0 = L_130;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7441));
	}

IL_027d:
	{
		// if ((RawAxis1D.RStylusForce & resolvedMask) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7442));
		int32_t L_131 = V_6;
		V_33 = (bool)((!(((uint32_t)((int32_t)(((int32_t)2048)&(int32_t)L_131))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7443));
		bool L_132 = V_33;
		if (!L_132)
		{
			goto IL_02a6;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7444));
		// float axis = controller.currentState.RStylusForce;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7445));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_133 = V_3;
		NullCheck(L_133);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_134 = (&L_133->___currentState_7);
		float L_135 = L_134->___RStylusForce_19;
		V_34 = L_135;
		// maxAxis = CalculateAbsMax(maxAxis, axis);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7446));
		float L_136 = V_0;
		float L_137 = V_34;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7447));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_138;
		L_138 = OVRInput_CalculateAbsMax_mC5712340231F606B82E84C5E7BC769E5A4EBA008(L_136, L_137, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7447));
		V_0 = L_138;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7448));
	}

IL_02a6:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7449));
	}

IL_02a7:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7450));
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7451));
		int32_t L_139 = V_2;
		V_2 = ((int32_t)il2cpp_codegen_add(L_139, 1));
	}

IL_02ac:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7452));
		int32_t L_140 = V_2;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_141 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7453));
		NullCheck(L_141);
		int32_t L_142;
		L_142 = List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_inline(L_141, List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7453));
		V_35 = (bool)((((int32_t)L_140) < ((int32_t)L_142))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7454));
		bool L_143 = V_35;
		if (L_143)
		{
			goto IL_0025;
		}
	}
	{
		// return maxAxis;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7455));
		float L_144 = V_0;
		V_36 = L_144;
		goto IL_02c7;
	}

IL_02c7:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7456));
		float L_145 = V_36;
		return L_145;
	}
}
// UnityEngine.Vector2 OVRInput::Get(OVRInput/Axis2D,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 OVRInput_Get_mF4EA350D5898449529C641C72B7D440DF81180C8 (int32_t ___0_virtualMask, int32_t ___1_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_Get_mF4EA350D5898449529C641C72B7D440DF81180C8_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_virtualMask), (&___1_controllerMask));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_Get_mF4EA350D5898449529C641C72B7D440DF81180C8_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7457));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7458));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7459));
		// return GetResolvedAxis2D(virtualMask, RawAxis2D.None, controllerMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7460));
		int32_t L_0 = ___0_virtualMask;
		int32_t L_1 = ___1_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7461));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_2;
		L_2 = OVRInput_GetResolvedAxis2D_m906A84A42FEF829D334263869BE8B73F67DBE2BC(L_0, 0, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7461));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7462));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Vector2 OVRInput::Get(OVRInput/RawAxis2D,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 OVRInput_Get_mB457003E7F3A6A8901B7A1D6CB6A167A5829E304 (int32_t ___0_rawMask, int32_t ___1_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_Get_mB457003E7F3A6A8901B7A1D6CB6A167A5829E304_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_rawMask), (&___1_controllerMask));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_Get_mB457003E7F3A6A8901B7A1D6CB6A167A5829E304_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7463));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7464));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7465));
		// return GetResolvedAxis2D(Axis2D.None, rawMask, controllerMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7466));
		int32_t L_0 = ___0_rawMask;
		int32_t L_1 = ___1_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7467));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_2;
		L_2 = OVRInput_GetResolvedAxis2D_m906A84A42FEF829D334263869BE8B73F67DBE2BC(0, L_0, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7467));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7468));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Vector2 OVRInput::GetResolvedAxis2D(OVRInput/Axis2D,OVRInput/RawAxis2D,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 OVRInput_GetResolvedAxis2D_m906A84A42FEF829D334263869BE8B73F67DBE2BC (int32_t ___0_virtualMask, int32_t ___1_rawMask, int32_t ___2_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetResolvedAxis2D_m906A84A42FEF829D334263869BE8B73F67DBE2BC_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&RawAxis2D_t882F928A0CB13BA12DBC6402B64ECA76202DFBA1_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 V_0;
	memset((&V_0), 0, sizeof(V_0));
	bool V_1 = false;
	int32_t V_2 = 0;
	OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* V_3 = NULL;
	bool V_4 = false;
	bool V_5 = false;
	int32_t V_6 = 0;
	bool V_7 = false;
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 V_8;
	memset((&V_8), 0, sizeof(V_8));
	bool V_9 = false;
	bool V_10 = false;
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 V_11;
	memset((&V_11), 0, sizeof(V_11));
	bool V_12 = false;
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 V_13;
	memset((&V_13), 0, sizeof(V_13));
	bool V_14 = false;
	bool V_15 = false;
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 V_16;
	memset((&V_16), 0, sizeof(V_16));
	bool V_17 = false;
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 V_18;
	memset((&V_18), 0, sizeof(V_18));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_virtualMask), (&___1_rawMask), (&___2_controllerMask));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_2), (&V_3), (&V_6), (&V_8), (&V_11), (&V_13), (&V_16));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetResolvedAxis2D_m906A84A42FEF829D334263869BE8B73F67DBE2BC_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7469));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7470));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7471));
		// Vector2 maxAxis = Vector2.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7472));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7473));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_0;
		L_0 = Vector2_get_zero_m32506C40EC2EE7D5D4410BF40D3EE683A3D5F32C_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7473));
		V_0 = L_0;
		// if ((controllerMask & Controller.Active) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7474));
		int32_t L_1 = ___2_controllerMask;
		V_1 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_1&((int32_t)-2147483648LL)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7475));
		bool L_2 = V_1;
		if (!L_2)
		{
			goto IL_001e;
		}
	}
	{
		// controllerMask |= activeControllerType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7476));
		int32_t L_3 = ___2_controllerMask;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_4 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3;
		___2_controllerMask = ((int32_t)((int32_t)L_3|(int32_t)L_4));
	}

IL_001e:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7477));
		V_2 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7478));
		goto IL_01a1;
	}

IL_0025:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7479));
		// OVRControllerBase controller = controllers[i];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7480));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_5 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		int32_t L_6 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7481));
		NullCheck(L_5);
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_7;
		L_7 = List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D(L_5, L_6, List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7481));
		V_3 = L_7;
		// if (OVRManager.loadedXRDevice != OVRManager.XRDevice.Oculus)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7482));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_8 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___loadedXRDevice_85;
		V_4 = (bool)((((int32_t)((((int32_t)L_8) == ((int32_t)1))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7483));
		bool L_9 = V_4;
		if (!L_9)
		{
			goto IL_004a;
		}
	}
	{
		// controller.shouldApplyDeadzone = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7484));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_10 = V_3;
		NullCheck(L_10);
		L_10->___shouldApplyDeadzone_8 = (bool)0;
	}

IL_004a:
	{
		// if (ShouldResolveController(controller.controllerType, controllerMask))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7485));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_11 = V_3;
		NullCheck(L_11);
		int32_t L_12 = L_11->___controllerType_0;
		int32_t L_13 = ___2_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7486));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		bool L_14;
		L_14 = OVRInput_ShouldResolveController_m28BB36AA2D586B8F1C75071D26654B77285AA952(L_12, L_13, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7486));
		V_5 = L_14;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7487));
		bool L_15 = V_5;
		if (!L_15)
		{
			goto IL_019c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7488));
		// RawAxis2D resolvedMask = rawMask | controller.ResolveToRawMask(virtualMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7489));
		int32_t L_16 = ___1_rawMask;
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_17 = V_3;
		int32_t L_18 = ___0_virtualMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7490));
		NullCheck(L_17);
		int32_t L_19;
		L_19 = OVRControllerBase_ResolveToRawMask_m574A6F44565F5D22BF8728447C82AA0A55DC4911(L_17, L_18, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7490));
		V_6 = ((int32_t)((int32_t)L_16|(int32_t)L_19));
		// if ((RawAxis2D.LThumbstick & resolvedMask) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7491));
		int32_t L_20 = V_6;
		V_7 = (bool)((!(((uint32_t)((int32_t)(1&(int32_t)L_20))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7492));
		bool L_21 = V_7;
		if (!L_21)
		{
			goto IL_00c4;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7493));
		// Vector2 axis = new Vector2(
		//     controller.currentState.LThumbstick.x,
		//     controller.currentState.LThumbstick.y);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7494));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_22 = V_3;
		NullCheck(L_22);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_23 = (&L_22->___currentState_7);
		Vector2f_tB2A7770F503276F90D359B6933F0A86D51BA3186* L_24 = (&L_23->___LThumbstick_8);
		float L_25 = L_24->___x_0;
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_26 = V_3;
		NullCheck(L_26);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_27 = (&L_26->___currentState_7);
		Vector2f_tB2A7770F503276F90D359B6933F0A86D51BA3186* L_28 = (&L_27->___LThumbstick_8);
		float L_29 = L_28->___y_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7495));
		Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline((&V_8), L_25, L_29, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7495));
		// if (controller.shouldApplyDeadzone)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7496));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_30 = V_3;
		NullCheck(L_30);
		bool L_31 = L_30->___shouldApplyDeadzone_8;
		V_9 = L_31;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7497));
		bool L_32 = V_9;
		if (!L_32)
		{
			goto IL_00ba;
		}
	}
	{
		// axis = CalculateDeadzone(axis, AXIS_DEADZONE_THRESHOLD);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7498));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_33 = V_8;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_34 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___AXIS_DEADZONE_THRESHOLD_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7499));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_35;
		L_35 = OVRInput_CalculateDeadzone_m62E502D296247D79A188319599508836C0B88D9C(L_33, L_34, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7499));
		V_8 = L_35;
	}

IL_00ba:
	{
		// maxAxis = CalculateAbsMax(maxAxis, axis);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7500));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_36 = V_0;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_37 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7501));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_38;
		L_38 = OVRInput_CalculateAbsMax_m01D62F439662772B8DFACA54195A979A2E151F19(L_36, L_37, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7501));
		V_0 = L_38;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7502));
	}

IL_00c4:
	{
		// if ((RawAxis2D.LTouchpad & resolvedMask) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7503));
		int32_t L_39 = V_6;
		V_10 = (bool)((!(((uint32_t)((int32_t)(4&(int32_t)L_39))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7504));
		bool L_40 = V_10;
		if (!L_40)
		{
			goto IL_0103;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7505));
		// Vector2 axis = new Vector2(
		//     controller.currentState.LTouchpad.x,
		//     controller.currentState.LTouchpad.y);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7506));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_41 = V_3;
		NullCheck(L_41);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_42 = (&L_41->___currentState_7);
		Vector2f_tB2A7770F503276F90D359B6933F0A86D51BA3186* L_43 = (&L_42->___LTouchpad_10);
		float L_44 = L_43->___x_0;
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_45 = V_3;
		NullCheck(L_45);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_46 = (&L_45->___currentState_7);
		Vector2f_tB2A7770F503276F90D359B6933F0A86D51BA3186* L_47 = (&L_46->___LTouchpad_10);
		float L_48 = L_47->___y_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7507));
		Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline((&V_11), L_44, L_48, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7507));
		// maxAxis = CalculateAbsMax(maxAxis, axis);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7508));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_49 = V_0;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_50 = V_11;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7509));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_51;
		L_51 = OVRInput_CalculateAbsMax_m01D62F439662772B8DFACA54195A979A2E151F19(L_49, L_50, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7509));
		V_0 = L_51;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7510));
	}

IL_0103:
	{
		// if ((RawAxis2D.RThumbstick & resolvedMask) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7511));
		int32_t L_52 = V_6;
		V_12 = (bool)((!(((uint32_t)((int32_t)(2&(int32_t)L_52))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7512));
		bool L_53 = V_12;
		if (!L_53)
		{
			goto IL_015c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7513));
		// Vector2 axis = new Vector2(
		//     controller.currentState.RThumbstick.x,
		//     controller.currentState.RThumbstick.y);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7514));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_54 = V_3;
		NullCheck(L_54);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_55 = (&L_54->___currentState_7);
		Vector2f_tB2A7770F503276F90D359B6933F0A86D51BA3186* L_56 = (&L_55->___RThumbstick_9);
		float L_57 = L_56->___x_0;
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_58 = V_3;
		NullCheck(L_58);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_59 = (&L_58->___currentState_7);
		Vector2f_tB2A7770F503276F90D359B6933F0A86D51BA3186* L_60 = (&L_59->___RThumbstick_9);
		float L_61 = L_60->___y_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7515));
		Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline((&V_13), L_57, L_61, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7515));
		// if (controller.shouldApplyDeadzone)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7516));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_62 = V_3;
		NullCheck(L_62);
		bool L_63 = L_62->___shouldApplyDeadzone_8;
		V_14 = L_63;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7517));
		bool L_64 = V_14;
		if (!L_64)
		{
			goto IL_0152;
		}
	}
	{
		// axis = CalculateDeadzone(axis, AXIS_DEADZONE_THRESHOLD);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7518));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_65 = V_13;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_66 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___AXIS_DEADZONE_THRESHOLD_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7519));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_67;
		L_67 = OVRInput_CalculateDeadzone_m62E502D296247D79A188319599508836C0B88D9C(L_65, L_66, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7519));
		V_13 = L_67;
	}

IL_0152:
	{
		// maxAxis = CalculateAbsMax(maxAxis, axis);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7520));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_68 = V_0;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_69 = V_13;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7521));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_70;
		L_70 = OVRInput_CalculateAbsMax_m01D62F439662772B8DFACA54195A979A2E151F19(L_68, L_69, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7521));
		V_0 = L_70;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7522));
	}

IL_015c:
	{
		// if ((RawAxis2D.RTouchpad & resolvedMask) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7523));
		int32_t L_71 = V_6;
		V_15 = (bool)((!(((uint32_t)((int32_t)(8&(int32_t)L_71))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7524));
		bool L_72 = V_15;
		if (!L_72)
		{
			goto IL_019b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7525));
		// Vector2 axis = new Vector2(
		//     controller.currentState.RTouchpad.x,
		//     controller.currentState.RTouchpad.y);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7526));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_73 = V_3;
		NullCheck(L_73);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_74 = (&L_73->___currentState_7);
		Vector2f_tB2A7770F503276F90D359B6933F0A86D51BA3186* L_75 = (&L_74->___RTouchpad_11);
		float L_76 = L_75->___x_0;
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_77 = V_3;
		NullCheck(L_77);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_78 = (&L_77->___currentState_7);
		Vector2f_tB2A7770F503276F90D359B6933F0A86D51BA3186* L_79 = (&L_78->___RTouchpad_11);
		float L_80 = L_79->___y_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7527));
		Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline((&V_16), L_76, L_80, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7527));
		// maxAxis = CalculateAbsMax(maxAxis, axis);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7528));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_81 = V_0;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_82 = V_16;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7529));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_83;
		L_83 = OVRInput_CalculateAbsMax_m01D62F439662772B8DFACA54195A979A2E151F19(L_81, L_82, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7529));
		V_0 = L_83;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7530));
	}

IL_019b:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7531));
	}

IL_019c:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7532));
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7533));
		int32_t L_84 = V_2;
		V_2 = ((int32_t)il2cpp_codegen_add(L_84, 1));
	}

IL_01a1:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7534));
		int32_t L_85 = V_2;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_86 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7535));
		NullCheck(L_86);
		int32_t L_87;
		L_87 = List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_inline(L_86, List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7535));
		V_17 = (bool)((((int32_t)L_85) < ((int32_t)L_87))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7536));
		bool L_88 = V_17;
		if (L_88)
		{
			goto IL_0025;
		}
	}
	{
		// return maxAxis;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7537));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_89 = V_0;
		V_18 = L_89;
		goto IL_01bc;
	}

IL_01bc:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7538));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_90 = V_18;
		return L_90;
	}
}
// OVRInput/Controller OVRInput::GetConnectedControllers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRInput_GetConnectedControllers_m70645A9B001F6880D104D779341958174139332D (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Controller_tBCAA59EAD9BFE2381E974A48B203D044B6CE1ECB_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetConnectedControllers_m70645A9B001F6880D104D779341958174139332D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetConnectedControllers_m70645A9B001F6880D104D779341958174139332D_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7539));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7540));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7541));
		// return connectedControllerTypes;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7542));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_0 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___connectedControllerTypes_4;
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7543));
		int32_t L_1 = V_0;
		return L_1;
	}
}
// System.Boolean OVRInput::IsControllerConnected(OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_IsControllerConnected_mC3BA5BE3D3A5642D36965D4CD82525C989F85E9A (int32_t ___0_controller, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_IsControllerConnected_mC3BA5BE3D3A5642D36965D4CD82525C989F85E9A_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_controller));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_IsControllerConnected_mC3BA5BE3D3A5642D36965D4CD82525C989F85E9A_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7544));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7545));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7546));
		// return (connectedControllerTypes & controller) == controller;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7547));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_0 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___connectedControllerTypes_4;
		int32_t L_1 = ___0_controller;
		int32_t L_2 = ___0_controller;
		V_0 = (bool)((((int32_t)((int32_t)((int32_t)L_0&(int32_t)L_1))) == ((int32_t)L_2))? 1 : 0);
		goto IL_000e;
	}

IL_000e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7548));
		bool L_3 = V_0;
		return L_3;
	}
}
// OVRInput/Controller OVRInput::GetActiveController()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRInput_GetActiveController_m1F0234F8333A98DC3F2BF49A9ECA6530139B6A65 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Controller_tBCAA59EAD9BFE2381E974A48B203D044B6CE1ECB_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetActiveController_m1F0234F8333A98DC3F2BF49A9ECA6530139B6A65_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetActiveController_m1F0234F8333A98DC3F2BF49A9ECA6530139B6A65_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7549));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7550));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7551));
		// return activeControllerType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7552));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_0 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3;
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7553));
		int32_t L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRInput::StartVibration(System.Single,System.Single,UnityEngine.XR.XRNode)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRInput_StartVibration_mC60F6AD7169146CCCC1EE049A1BA447F06E67EBD (float ___0_amplitude, float ___1_duration, int32_t ___2_controllerNode, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_StartVibration_mC60F6AD7169146CCCC1EE049A1BA447F06E67EBD_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_amplitude), (&___1_duration), (&___2_controllerNode));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_StartVibration_mC60F6AD7169146CCCC1EE049A1BA447F06E67EBD_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7554));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7555));
	int32_t G_B3_0 = 0;
	int32_t G_B6_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7556));
		// int index = (controllerNode == Node.LeftHand) ? 0 : 1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7557));
		int32_t L_0 = ___2_controllerNode;
		if ((((int32_t)L_0) == ((int32_t)4)))
		{
			goto IL_0008;
		}
	}
	{
		G_B3_0 = 1;
		goto IL_0009;
	}

IL_0008:
	{
		G_B3_0 = 0;
	}

IL_0009:
	{
		V_0 = G_B3_0;
		// hapticInfos[index].hapticsDurationPlayed = 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7558));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		HapticInfoU5BU5D_tD7F089695199232CD57B8C3C73F549036B5BC2CB* L_1 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___hapticInfos_11;
		int32_t L_2 = V_0;
		NullCheck(L_1);
		int32_t L_3 = L_2;
		HapticInfo_t614DAC0509051DC76FD4D48A1D591505E22DE950* L_4 = (L_1)->GetAt(static_cast<il2cpp_array_size_t>(L_3));
		NullCheck(L_4);
		L_4->___hapticsDurationPlayed_1 = (0.0f);
		// hapticInfos[index].hapticAmplitude = amplitude;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7559));
		HapticInfoU5BU5D_tD7F089695199232CD57B8C3C73F549036B5BC2CB* L_5 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___hapticInfos_11;
		int32_t L_6 = V_0;
		NullCheck(L_5);
		int32_t L_7 = L_6;
		HapticInfo_t614DAC0509051DC76FD4D48A1D591505E22DE950* L_8 = (L_5)->GetAt(static_cast<il2cpp_array_size_t>(L_7));
		float L_9 = ___0_amplitude;
		NullCheck(L_8);
		L_8->___hapticAmplitude_3 = L_9;
		// hapticInfos[index].hapticsDuration = duration;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7560));
		HapticInfoU5BU5D_tD7F089695199232CD57B8C3C73F549036B5BC2CB* L_10 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___hapticInfos_11;
		int32_t L_11 = V_0;
		NullCheck(L_10);
		int32_t L_12 = L_11;
		HapticInfo_t614DAC0509051DC76FD4D48A1D591505E22DE950* L_13 = (L_10)->GetAt(static_cast<il2cpp_array_size_t>(L_12));
		float L_14 = ___1_duration;
		NullCheck(L_13);
		L_13->___hapticsDuration_2 = L_14;
		// hapticInfos[index].playingHaptics = (amplitude != 0.0f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7561));
		HapticInfoU5BU5D_tD7F089695199232CD57B8C3C73F549036B5BC2CB* L_15 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___hapticInfos_11;
		int32_t L_16 = V_0;
		NullCheck(L_15);
		int32_t L_17 = L_16;
		HapticInfo_t614DAC0509051DC76FD4D48A1D591505E22DE950* L_18 = (L_15)->GetAt(static_cast<il2cpp_array_size_t>(L_17));
		float L_19 = ___0_amplitude;
		NullCheck(L_18);
		L_18->___playingHaptics_0 = (bool)((((int32_t)((((float)L_19) == ((float)(0.0f)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		// hapticInfos[index].node = controllerNode;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7562));
		HapticInfoU5BU5D_tD7F089695199232CD57B8C3C73F549036B5BC2CB* L_20 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___hapticInfos_11;
		int32_t L_21 = V_0;
		NullCheck(L_20);
		int32_t L_22 = L_21;
		HapticInfo_t614DAC0509051DC76FD4D48A1D591505E22DE950* L_23 = (L_20)->GetAt(static_cast<il2cpp_array_size_t>(L_22));
		int32_t L_24 = ___2_controllerNode;
		NullCheck(L_23);
		L_23->___node_4 = L_24;
		// if (amplitude <= 0.0f || duration <= 0.0f)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7563));
		float L_25 = ___0_amplitude;
		if ((((float)L_25) <= ((float)(0.0f))))
		{
			goto IL_006e;
		}
	}
	{
		float L_26 = ___1_duration;
		G_B6_0 = ((((int32_t)((!(((float)L_26) <= ((float)(0.0f))))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_006f;
	}

IL_006e:
	{
		G_B6_0 = 1;
	}

IL_006f:
	{
		V_1 = (bool)G_B6_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7564));
		bool L_27 = V_1;
		if (!L_27)
		{
			goto IL_0082;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7565));
		// hapticInfos[index].playingHaptics = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7566));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		HapticInfoU5BU5D_tD7F089695199232CD57B8C3C73F549036B5BC2CB* L_28 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___hapticInfos_11;
		int32_t L_29 = V_0;
		NullCheck(L_28);
		int32_t L_30 = L_29;
		HapticInfo_t614DAC0509051DC76FD4D48A1D591505E22DE950* L_31 = (L_28)->GetAt(static_cast<il2cpp_array_size_t>(L_30));
		NullCheck(L_31);
		L_31->___playingHaptics_0 = (bool)0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7567));
	}

IL_0082:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7568));
		return;
	}
}
// System.Void OVRInput::SetOpenVRLocalPose(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRInput_SetOpenVRLocalPose_m27E4294B7780884FF0BC1A8605403289A12C8894 (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___0_leftPos, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___1_rightPos, Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 ___2_leftRot, Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 ___3_rightRot, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_SetOpenVRLocalPose_m27E4294B7780884FF0BC1A8605403289A12C8894_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_leftPos), (&___1_rightPos), (&___2_leftRot), (&___3_rightRot));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_SetOpenVRLocalPose_m27E4294B7780884FF0BC1A8605403289A12C8894_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7569));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7570));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7571));
		// openVRControllerDetails[0].localPosition = leftPos;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7572));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_0 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_0);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_1 = ___0_leftPos;
		((L_0)->GetAddressAt(static_cast<il2cpp_array_size_t>(0)))->___localPosition_3 = L_1;
		// openVRControllerDetails[0].localOrientation = leftRot;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7573));
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_2 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_2);
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_3 = ___2_leftRot;
		((L_2)->GetAddressAt(static_cast<il2cpp_array_size_t>(0)))->___localOrientation_4 = L_3;
		// openVRControllerDetails[1].localPosition = rightPos;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7574));
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_4 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_4);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_5 = ___1_rightPos;
		((L_4)->GetAddressAt(static_cast<il2cpp_array_size_t>(1)))->___localPosition_3 = L_5;
		// openVRControllerDetails[1].localOrientation = rightRot;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7575));
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_6 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_6);
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_7 = ___3_rightRot;
		((L_6)->GetAddressAt(static_cast<il2cpp_array_size_t>(1)))->___localOrientation_4 = L_7;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7576));
		return;
	}
}
// System.String OVRInput::GetOpenVRStringProperty(OVR.OpenVR.ETrackedDeviceProperty,System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* OVRInput_GetOpenVRStringProperty_m98D9EFA2CF5CB4A3D5B1FBF211792C9BF3694211 (int32_t ___0_prop, uint32_t ___1_deviceId, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&CVRSystem_tD199D16B8A7CC7F19E6E0B5D9AE59156C2312B1A_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ETrackedPropertyError_t17E4B05987C118B2E50C09947BD2B8E1695B2501_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ETrackedPropertyError_t17E4B05987C118B2E50C09947BD2B8E1695B2501_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetOpenVRStringProperty_m98D9EFA2CF5CB4A3D5B1FBF211792C9BF3694211_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&StringBuilder_t_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&StringBuilder_t_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&String_t_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&UInt32_t1833D51FFA667B18A5AA4B8D34DE284F8495D29B_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralB50A1C8D166F6D83589906FA241D44631109E56A);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	CVRSystem_tD199D16B8A7CC7F19E6E0B5D9AE59156C2312B1A* V_1 = NULL;
	bool V_2 = false;
	uint32_t V_3 = 0;
	bool V_4 = false;
	StringBuilder_t* V_5 = NULL;
	String_t* V_6 = NULL;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_prop), (&___1_deviceId));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_3), (&V_5));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetOpenVRStringProperty_m98D9EFA2CF5CB4A3D5B1FBF211792C9BF3694211_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7577));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7578));
	String_t* G_B6_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7579));
		// OVR.OpenVR.ETrackedPropertyError error = OVR.OpenVR.ETrackedPropertyError.TrackedProp_Success;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7580));
		V_0 = 0;
		// OVR.OpenVR.CVRSystem system = OVR.OpenVR.OpenVR.System;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7581));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7582));
		CVRSystem_tD199D16B8A7CC7F19E6E0B5D9AE59156C2312B1A* L_0;
		L_0 = OpenVR_get_System_m3E623FF7D408DACC163D9CB6CD2F9193CB5E51EA(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7582));
		V_1 = L_0;
		// if (system != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7583));
		CVRSystem_tD199D16B8A7CC7F19E6E0B5D9AE59156C2312B1A* L_1 = V_1;
		V_2 = (bool)((!(((RuntimeObject*)(CVRSystem_tD199D16B8A7CC7F19E6E0B5D9AE59156C2312B1A*)L_1) <= ((RuntimeObject*)(RuntimeObject*)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7584));
		bool L_2 = V_2;
		if (!L_2)
		{
			goto IL_0066;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7585));
		// uint capacity = system.GetStringTrackedDeviceProperty(deviceId, prop, null, 0, ref error);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7586));
		CVRSystem_tD199D16B8A7CC7F19E6E0B5D9AE59156C2312B1A* L_3 = V_1;
		uint32_t L_4 = ___1_deviceId;
		int32_t L_5 = ___0_prop;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7587));
		NullCheck(L_3);
		uint32_t L_6;
		L_6 = CVRSystem_GetStringTrackedDeviceProperty_mFEFAEDDF2415565002891E4C84A6EA7C45BAF9A4(L_3, L_4, L_5, (StringBuilder_t*)NULL, 0, (&V_0), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7587));
		V_3 = L_6;
		// if (capacity > 1)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7588));
		uint32_t L_7 = V_3;
		V_4 = (bool)((!(((uint32_t)L_7) <= ((uint32_t)1)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7589));
		bool L_8 = V_4;
		if (!L_8)
		{
			goto IL_004b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7590));
		// var result = new System.Text.StringBuilder((int)capacity);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7591));
		uint32_t L_9 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7592));
		StringBuilder_t* L_10 = (StringBuilder_t*)il2cpp_codegen_object_new(StringBuilder_t_il2cpp_TypeInfo_var);
		NullCheck(L_10);
		StringBuilder__ctor_m2619CA8D2C3476DF1A302D9D941498BB1C6164C5(L_10, L_9, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7592));
		V_5 = L_10;
		// system.GetStringTrackedDeviceProperty(deviceId, prop, result, capacity, ref error);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7593));
		CVRSystem_tD199D16B8A7CC7F19E6E0B5D9AE59156C2312B1A* L_11 = V_1;
		uint32_t L_12 = ___1_deviceId;
		int32_t L_13 = ___0_prop;
		StringBuilder_t* L_14 = V_5;
		uint32_t L_15 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7594));
		NullCheck(L_11);
		uint32_t L_16;
		L_16 = CVRSystem_GetStringTrackedDeviceProperty_mFEFAEDDF2415565002891E4C84A6EA7C45BAF9A4(L_11, L_12, L_13, L_14, L_15, (&V_0), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7594));
		// return result.ToString();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7595));
		StringBuilder_t* L_17 = V_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7596));
		NullCheck(L_17);
		String_t* L_18;
		L_18 = VirtualFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_17);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7596));
		V_6 = L_18;
		goto IL_006f;
	}

IL_004b:
	{
		// return (error != OVR.OpenVR.ETrackedPropertyError.TrackedProp_Success) ? error.ToString() : "<unknown>";
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7597));
		int32_t L_19 = V_0;
		if (L_19)
		{
			goto IL_0055;
		}
	}
	{
		G_B6_0 = _stringLiteralB50A1C8D166F6D83589906FA241D44631109E56A;
		goto IL_0062;
	}

IL_0055:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7598));
		Il2CppFakeBox<int32_t> L_20(ETrackedPropertyError_t17E4B05987C118B2E50C09947BD2B8E1695B2501_il2cpp_TypeInfo_var, (&V_0));
		String_t* L_21;
		L_21 = Enum_ToString_m946B0B83C4470457D0FF555D862022C72BB55741((Enum_t2A1A94B24E3B776EEF4E5E485E290BB9D4D072E2*)(&L_20), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7598));
		G_B6_0 = L_21;
	}

IL_0062:
	{
		V_6 = G_B6_0;
		goto IL_006f;
	}

IL_0066:
	{
		// return "";
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7599));
		V_6 = _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709;
		goto IL_006f;
	}

IL_006f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7600));
		String_t* L_22 = V_6;
		return L_22;
	}
}
// System.Void OVRInput::UpdateXRControllerNodeIds()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRInput_UpdateXRControllerNodeIds_mBADEA537A0EE550060596054C9FE13B8B041E8CA (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&CVRSystem_tD199D16B8A7CC7F19E6E0B5D9AE59156C2312B1A_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ETrackedControllerRole_tDC120308D40FAB9B68F915EA2BF407348AC96109_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ETrackedDeviceClass_tDF5758A6180875876C3754A2868F67487A259571_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Marshal_tD976A56A90263C3CE2B780D4B1CADADE2E70B4A7_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_UpdateXRControllerNodeIds_mBADEA537A0EE550060596054C9FE13B8B041E8CA_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OpenVRController_tA0556936238710C55C0736A0B10D37C8FA0BD9E2_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&String_t_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Type_t_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&UInt32_t1833D51FFA667B18A5AA4B8D34DE284F8495D29B_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VRControllerState_t_t50475AF703AB39117DE2C6CE266154309CD9BD4D_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	CVRSystem_tD199D16B8A7CC7F19E6E0B5D9AE59156C2312B1A* V_1 = NULL;
	bool V_2 = false;
	uint32_t V_3 = 0;
	int32_t V_4 = 0;
	bool V_5 = false;
	uint64_t V_6 = 0;
	String_t* V_7 = NULL;
	int32_t V_8 = 0;
	bool V_9 = false;
	bool V_10 = false;
	bool V_11 = false;
	bool V_12 = false;
	bool V_13 = false;
	bool V_14 = false;
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_3), (&V_4), (&V_6), (&V_7), (&V_8));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_UpdateXRControllerNodeIds_mBADEA537A0EE550060596054C9FE13B8B041E8CA_RuntimeMethod_var, NULL, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7601));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7602));
	int32_t G_B6_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7603));
		// if (OVRManager.loadedXRDevice == OVRManager.XRDevice.OpenVR)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7604));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___loadedXRDevice_85;
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)2))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7605));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_01b1;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7606));
		// openVRControllerDetails[0].deviceID = OVR.OpenVR.OpenVR.k_unMaxTrackedDeviceCount;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7607));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_2 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_2);
		((L_2)->GetAddressAt(static_cast<il2cpp_array_size_t>(0)))->___deviceID_2 = ((int32_t)64);
		// openVRControllerDetails[1].deviceID = OVR.OpenVR.OpenVR.k_unMaxTrackedDeviceCount;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7608));
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_3 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_3);
		((L_3)->GetAddressAt(static_cast<il2cpp_array_size_t>(1)))->___deviceID_2 = ((int32_t)64);
		// OVR.OpenVR.CVRSystem system = OVR.OpenVR.OpenVR.System;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7609));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7610));
		CVRSystem_tD199D16B8A7CC7F19E6E0B5D9AE59156C2312B1A* L_4;
		L_4 = OpenVR_get_System_m3E623FF7D408DACC163D9CB6CD2F9193CB5E51EA(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7610));
		V_1 = L_4;
		// if (system != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7611));
		CVRSystem_tD199D16B8A7CC7F19E6E0B5D9AE59156C2312B1A* L_5 = V_1;
		V_2 = (bool)((!(((RuntimeObject*)(CVRSystem_tD199D16B8A7CC7F19E6E0B5D9AE59156C2312B1A*)L_5) <= ((RuntimeObject*)(RuntimeObject*)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7612));
		bool L_6 = V_2;
		if (!L_6)
		{
			goto IL_01b0;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7613));
		// for (uint id = 0; id < OVR.OpenVR.OpenVR.k_unMaxTrackedDeviceCount; id++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7614));
		V_3 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7615));
		goto IL_01a1;
	}

IL_004e:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7616));
		// OVR.OpenVR.ETrackedDeviceClass deviceClass = system.GetTrackedDeviceClass(id);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7617));
		CVRSystem_tD199D16B8A7CC7F19E6E0B5D9AE59156C2312B1A* L_7 = V_1;
		uint32_t L_8 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7618));
		NullCheck(L_7);
		int32_t L_9;
		L_9 = CVRSystem_GetTrackedDeviceClass_mBCBA6F54A44687E8F540E5EE900B769F8A3CFA97(L_7, L_8, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7618));
		V_4 = L_9;
		// if (deviceClass == OVR.OpenVR.ETrackedDeviceClass.Controller && system.IsTrackedDeviceConnected(id))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7619));
		int32_t L_10 = V_4;
		if ((!(((uint32_t)L_10) == ((uint32_t)2))))
		{
			goto IL_0066;
		}
	}
	{
		CVRSystem_tD199D16B8A7CC7F19E6E0B5D9AE59156C2312B1A* L_11 = V_1;
		uint32_t L_12 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7620));
		NullCheck(L_11);
		bool L_13;
		L_13 = CVRSystem_IsTrackedDeviceConnected_m13950757132ED5FB0ADD7137A0F6BB123F16DDBD(L_11, L_12, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7620));
		G_B6_0 = ((int32_t)(L_13));
		goto IL_0067;
	}

IL_0066:
	{
		G_B6_0 = 0;
	}

IL_0067:
	{
		V_5 = (bool)G_B6_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7621));
		bool L_14 = V_5;
		if (!L_14)
		{
			goto IL_019c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7622));
		// String controllerName = GetOpenVRStringProperty(OVR.OpenVR.ETrackedDeviceProperty.Prop_ControllerType_String, id);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7623));
		uint32_t L_15 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7624));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		String_t* L_16;
		L_16 = OVRInput_GetOpenVRStringProperty_m98D9EFA2CF5CB4A3D5B1FBF211792C9BF3694211(((int32_t)7000), L_15, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7624));
		V_7 = L_16;
		// if (controllerName == OPENVR_TOUCH_NAME)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7625));
		String_t* L_17 = V_7;
		String_t* L_18 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___OPENVR_TOUCH_NAME_14;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7626));
		bool L_19;
		L_19 = String_op_Equality_m030E1B219352228970A076136E455C4E568C02C1(L_17, L_18, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7626));
		V_9 = L_19;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7627));
		bool L_20 = V_9;
		if (!L_20)
		{
			goto IL_0096;
		}
	}
	{
		// controllerType = OpenVRController.OculusTouch;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7628));
		V_6 = ((int64_t)1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7629));
		goto IL_00ca;
	}

IL_0096:
	{
		// else if (controllerName == OPENVR_VIVE_CONTROLLER_NAME)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7630));
		String_t* L_21 = V_7;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		String_t* L_22 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___OPENVR_VIVE_CONTROLLER_NAME_15;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7631));
		bool L_23;
		L_23 = String_op_Equality_m030E1B219352228970A076136E455C4E568C02C1(L_21, L_22, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7631));
		V_10 = L_23;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7632));
		bool L_24 = V_10;
		if (!L_24)
		{
			goto IL_00ae;
		}
	}
	{
		// controllerType = OpenVRController.ViveController;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7633));
		V_6 = ((int64_t)2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7634));
		goto IL_00ca;
	}

IL_00ae:
	{
		// else if (controllerName == OPENVR_WINDOWSMR_CONTROLLER_NAME)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7635));
		String_t* L_25 = V_7;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		String_t* L_26 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___OPENVR_WINDOWSMR_CONTROLLER_NAME_16;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7636));
		bool L_27;
		L_27 = String_op_Equality_m030E1B219352228970A076136E455C4E568C02C1(L_25, L_26, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7636));
		V_11 = L_27;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7637));
		bool L_28 = V_11;
		if (!L_28)
		{
			goto IL_00c6;
		}
	}
	{
		// controllerType = OpenVRController.WindowsMRController;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7638));
		V_6 = ((int64_t)3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7639));
		goto IL_00ca;
	}

IL_00c6:
	{
		// controllerType = OpenVRController.Unknown;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7640));
		V_6 = ((int64_t)0);
	}

IL_00ca:
	{
		// OVR.OpenVR.ETrackedControllerRole role = system.GetControllerRoleForTrackedDeviceIndex(id);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7641));
		CVRSystem_tD199D16B8A7CC7F19E6E0B5D9AE59156C2312B1A* L_29 = V_1;
		uint32_t L_30 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7642));
		NullCheck(L_29);
		int32_t L_31;
		L_31 = CVRSystem_GetControllerRoleForTrackedDeviceIndex_m9B4BE7F863A791CDBA1AE3F57138BD3DBFD6E7BB(L_29, L_30, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7642));
		V_8 = L_31;
		// if (role == OVR.OpenVR.ETrackedControllerRole.LeftHand)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7643));
		int32_t L_32 = V_8;
		V_12 = (bool)((((int32_t)L_32) == ((int32_t)1))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7644));
		bool L_33 = V_12;
		if (!L_33)
		{
			goto IL_0138;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7645));
		// system.GetControllerState(id, ref openVRControllerDetails[0].state, (uint)Marshal.SizeOf(typeof(OVR.OpenVR.VRControllerState_t)));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7646));
		CVRSystem_tD199D16B8A7CC7F19E6E0B5D9AE59156C2312B1A* L_34 = V_1;
		uint32_t L_35 = V_3;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_36 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_36);
		VRControllerState_t_t50475AF703AB39117DE2C6CE266154309CD9BD4D* L_37 = (&((L_36)->GetAddressAt(static_cast<il2cpp_array_size_t>(0)))->___state_0);
		RuntimeTypeHandle_t332A452B8B6179E4469B69525D0FE82A88030F7B L_38 = { reinterpret_cast<intptr_t> (VRControllerState_t_t50475AF703AB39117DE2C6CE266154309CD9BD4D_0_0_0_var) };
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7647));
		il2cpp_codegen_runtime_class_init_inline(Type_t_il2cpp_TypeInfo_var);
		Type_t* L_39;
		L_39 = Type_GetTypeFromHandle_m6062B81682F79A4D6DF2640692EE6D9987858C57(L_38, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7647));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7648));
		il2cpp_codegen_runtime_class_init_inline(Marshal_tD976A56A90263C3CE2B780D4B1CADADE2E70B4A7_il2cpp_TypeInfo_var);
		int32_t L_40;
		L_40 = Marshal_SizeOf_mED64846722033D6F60C2973CA604B7C2D7D4A1B7(L_39, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7648));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7649));
		NullCheck(L_34);
		bool L_41;
		L_41 = CVRSystem_GetControllerState_m67FF86AADBF0ECF15A77544B1A286D96650EF11D(L_34, L_35, L_37, L_40, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7649));
		// openVRControllerDetails[0].deviceID = id;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7650));
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_42 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_42);
		uint32_t L_43 = V_3;
		((L_42)->GetAddressAt(static_cast<il2cpp_array_size_t>(0)))->___deviceID_2 = L_43;
		// openVRControllerDetails[0].controllerType = controllerType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7651));
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_44 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_44);
		uint64_t L_45 = V_6;
		((L_44)->GetAddressAt(static_cast<il2cpp_array_size_t>(0)))->___controllerType_1 = L_45;
		// connectedControllerTypes |= Controller.LTouch;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7652));
		int32_t L_46 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___connectedControllerTypes_4;
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___connectedControllerTypes_4 = ((int32_t)((int32_t)L_46|1));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7653));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7654));
		goto IL_019b;
	}

IL_0138:
	{
		// else if (role == OVR.OpenVR.ETrackedControllerRole.RightHand)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7655));
		int32_t L_47 = V_8;
		V_13 = (bool)((((int32_t)L_47) == ((int32_t)2))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7656));
		bool L_48 = V_13;
		if (!L_48)
		{
			goto IL_019b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7657));
		// system.GetControllerState(id, ref openVRControllerDetails[1].state, (uint)Marshal.SizeOf(typeof(OVR.OpenVR.VRControllerState_t)));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7658));
		CVRSystem_tD199D16B8A7CC7F19E6E0B5D9AE59156C2312B1A* L_49 = V_1;
		uint32_t L_50 = V_3;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_51 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_51);
		VRControllerState_t_t50475AF703AB39117DE2C6CE266154309CD9BD4D* L_52 = (&((L_51)->GetAddressAt(static_cast<il2cpp_array_size_t>(1)))->___state_0);
		RuntimeTypeHandle_t332A452B8B6179E4469B69525D0FE82A88030F7B L_53 = { reinterpret_cast<intptr_t> (VRControllerState_t_t50475AF703AB39117DE2C6CE266154309CD9BD4D_0_0_0_var) };
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7659));
		il2cpp_codegen_runtime_class_init_inline(Type_t_il2cpp_TypeInfo_var);
		Type_t* L_54;
		L_54 = Type_GetTypeFromHandle_m6062B81682F79A4D6DF2640692EE6D9987858C57(L_53, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7659));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7660));
		il2cpp_codegen_runtime_class_init_inline(Marshal_tD976A56A90263C3CE2B780D4B1CADADE2E70B4A7_il2cpp_TypeInfo_var);
		int32_t L_55;
		L_55 = Marshal_SizeOf_mED64846722033D6F60C2973CA604B7C2D7D4A1B7(L_54, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7660));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7661));
		NullCheck(L_49);
		bool L_56;
		L_56 = CVRSystem_GetControllerState_m67FF86AADBF0ECF15A77544B1A286D96650EF11D(L_49, L_50, L_52, L_55, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7661));
		// openVRControllerDetails[1].deviceID = id;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7662));
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_57 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_57);
		uint32_t L_58 = V_3;
		((L_57)->GetAddressAt(static_cast<il2cpp_array_size_t>(1)))->___deviceID_2 = L_58;
		// openVRControllerDetails[1].controllerType = controllerType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7663));
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_59 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_59);
		uint64_t L_60 = V_6;
		((L_59)->GetAddressAt(static_cast<il2cpp_array_size_t>(1)))->___controllerType_1 = L_60;
		// connectedControllerTypes |= Controller.RTouch;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7664));
		int32_t L_61 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___connectedControllerTypes_4;
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___connectedControllerTypes_4 = ((int32_t)((int32_t)L_61|2));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7665));
	}

IL_019b:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7666));
	}

IL_019c:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7667));
		// for (uint id = 0; id < OVR.OpenVR.OpenVR.k_unMaxTrackedDeviceCount; id++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7668));
		uint32_t L_62 = V_3;
		V_3 = ((int32_t)il2cpp_codegen_add((int32_t)L_62, 1));
	}

IL_01a1:
	{
		// for (uint id = 0; id < OVR.OpenVR.OpenVR.k_unMaxTrackedDeviceCount; id++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7669));
		uint32_t L_63 = V_3;
		V_14 = (bool)((!(((uint32_t)L_63) >= ((uint32_t)((int32_t)64))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7670));
		bool L_64 = V_14;
		if (L_64)
		{
			goto IL_004e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7671));
	}

IL_01b0:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7672));
	}

IL_01b1:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7673));
		return;
	}
}
// System.Void OVRInput::UpdateXRControllerHaptics()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRInput_UpdateXRControllerHaptics_m9E0932C8F3F7602C10857A4B6AA0CEFF52F1CC78 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_UpdateXRControllerHaptics_m9E0932C8F3F7602C10857A4B6AA0CEFF52F1CC78_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_UpdateXRControllerHaptics_m9E0932C8F3F7602C10857A4B6AA0CEFF52F1CC78_RuntimeMethod_var, NULL, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7674));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7675));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7676));
		// if (OVRManager.loadedXRDevice == OVRManager.XRDevice.OpenVR)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7677));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___loadedXRDevice_85;
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)2))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7678));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_00a5;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7679));
		// for (int i = 0; i < NUM_HAPTIC_CHANNELS; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7680));
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7681));
		goto IL_0093;
	}

IL_0015:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7682));
		// if (hapticInfos[i].playingHaptics)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7683));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		HapticInfoU5BU5D_tD7F089695199232CD57B8C3C73F549036B5BC2CB* L_2 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___hapticInfos_11;
		int32_t L_3 = V_1;
		NullCheck(L_2);
		int32_t L_4 = L_3;
		HapticInfo_t614DAC0509051DC76FD4D48A1D591505E22DE950* L_5 = (L_2)->GetAt(static_cast<il2cpp_array_size_t>(L_4));
		NullCheck(L_5);
		bool L_6 = L_5->___playingHaptics_0;
		V_2 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7684));
		bool L_7 = V_2;
		if (!L_7)
		{
			goto IL_008e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7685));
		// hapticInfos[i].hapticsDurationPlayed += Time.deltaTime;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7686));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		HapticInfoU5BU5D_tD7F089695199232CD57B8C3C73F549036B5BC2CB* L_8 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___hapticInfos_11;
		int32_t L_9 = V_1;
		NullCheck(L_8);
		int32_t L_10 = L_9;
		HapticInfo_t614DAC0509051DC76FD4D48A1D591505E22DE950* L_11 = (L_8)->GetAt(static_cast<il2cpp_array_size_t>(L_10));
		HapticInfo_t614DAC0509051DC76FD4D48A1D591505E22DE950* L_12 = L_11;
		NullCheck(L_12);
		float L_13 = L_12->___hapticsDurationPlayed_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7687));
		float L_14;
		L_14 = Time_get_deltaTime_mC3195000401F0FD167DD2F948FD2BC58330D0865(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7687));
		NullCheck(L_12);
		L_12->___hapticsDurationPlayed_1 = ((float)il2cpp_codegen_add(L_13, L_14));
		// PlayHapticImpulse(hapticInfos[i].hapticAmplitude, hapticInfos[i].node);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7688));
		HapticInfoU5BU5D_tD7F089695199232CD57B8C3C73F549036B5BC2CB* L_15 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___hapticInfos_11;
		int32_t L_16 = V_1;
		NullCheck(L_15);
		int32_t L_17 = L_16;
		HapticInfo_t614DAC0509051DC76FD4D48A1D591505E22DE950* L_18 = (L_15)->GetAt(static_cast<il2cpp_array_size_t>(L_17));
		NullCheck(L_18);
		float L_19 = L_18->___hapticAmplitude_3;
		HapticInfoU5BU5D_tD7F089695199232CD57B8C3C73F549036B5BC2CB* L_20 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___hapticInfos_11;
		int32_t L_21 = V_1;
		NullCheck(L_20);
		int32_t L_22 = L_21;
		HapticInfo_t614DAC0509051DC76FD4D48A1D591505E22DE950* L_23 = (L_20)->GetAt(static_cast<il2cpp_array_size_t>(L_22));
		NullCheck(L_23);
		int32_t L_24 = L_23->___node_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7689));
		OVRInput_PlayHapticImpulse_m1361B3A6FDE69152D291A4AAC0C0D3537926F77B(L_19, L_24, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7689));
		// if (hapticInfos[i].hapticsDurationPlayed >= hapticInfos[i].hapticsDuration)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7690));
		HapticInfoU5BU5D_tD7F089695199232CD57B8C3C73F549036B5BC2CB* L_25 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___hapticInfos_11;
		int32_t L_26 = V_1;
		NullCheck(L_25);
		int32_t L_27 = L_26;
		HapticInfo_t614DAC0509051DC76FD4D48A1D591505E22DE950* L_28 = (L_25)->GetAt(static_cast<il2cpp_array_size_t>(L_27));
		NullCheck(L_28);
		float L_29 = L_28->___hapticsDurationPlayed_1;
		HapticInfoU5BU5D_tD7F089695199232CD57B8C3C73F549036B5BC2CB* L_30 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___hapticInfos_11;
		int32_t L_31 = V_1;
		NullCheck(L_30);
		int32_t L_32 = L_31;
		HapticInfo_t614DAC0509051DC76FD4D48A1D591505E22DE950* L_33 = (L_30)->GetAt(static_cast<il2cpp_array_size_t>(L_32));
		NullCheck(L_33);
		float L_34 = L_33->___hapticsDuration_2;
		V_3 = (bool)((((int32_t)((!(((float)L_29) >= ((float)L_34)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7691));
		bool L_35 = V_3;
		if (!L_35)
		{
			goto IL_008d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7692));
		// hapticInfos[i].playingHaptics = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7693));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		HapticInfoU5BU5D_tD7F089695199232CD57B8C3C73F549036B5BC2CB* L_36 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___hapticInfos_11;
		int32_t L_37 = V_1;
		NullCheck(L_36);
		int32_t L_38 = L_37;
		HapticInfo_t614DAC0509051DC76FD4D48A1D591505E22DE950* L_39 = (L_36)->GetAt(static_cast<il2cpp_array_size_t>(L_38));
		NullCheck(L_39);
		L_39->___playingHaptics_0 = (bool)0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7694));
	}

IL_008d:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7695));
	}

IL_008e:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7696));
		// for (int i = 0; i < NUM_HAPTIC_CHANNELS; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7697));
		int32_t L_40 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add(L_40, 1));
	}

IL_0093:
	{
		// for (int i = 0; i < NUM_HAPTIC_CHANNELS; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7698));
		int32_t L_41 = V_1;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_42 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___NUM_HAPTIC_CHANNELS_10;
		V_4 = (bool)((((int32_t)L_41) < ((int32_t)L_42))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7699));
		bool L_43 = V_4;
		if (L_43)
		{
			goto IL_0015;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7700));
	}

IL_00a5:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7701));
		return;
	}
}
// System.Void OVRInput::InitHapticInfo()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRInput_InitHapticInfo_mAF5586A61678F7D8D7BA986F970A21226E4FC06F (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&HapticInfoU5BU5D_tD7F089695199232CD57B8C3C73F549036B5BC2CB_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&HapticInfo_t614DAC0509051DC76FD4D48A1D591505E22DE950_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_InitHapticInfo_mAF5586A61678F7D8D7BA986F970A21226E4FC06F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_InitHapticInfo_mAF5586A61678F7D8D7BA986F970A21226E4FC06F_RuntimeMethod_var, NULL, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7702));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7703));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7704));
		// hapticInfos = new HapticInfo[NUM_HAPTIC_CHANNELS];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7705));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_0 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___NUM_HAPTIC_CHANNELS_10;
		HapticInfoU5BU5D_tD7F089695199232CD57B8C3C73F549036B5BC2CB* L_1 = (HapticInfoU5BU5D_tD7F089695199232CD57B8C3C73F549036B5BC2CB*)(HapticInfoU5BU5D_tD7F089695199232CD57B8C3C73F549036B5BC2CB*)SZArrayNew(HapticInfoU5BU5D_tD7F089695199232CD57B8C3C73F549036B5BC2CB_il2cpp_TypeInfo_var, (uint32_t)L_0);
		((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___hapticInfos_11 = L_1;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___hapticInfos_11), (void*)L_1);
		// for (int i = 0; i < NUM_HAPTIC_CHANNELS; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7706));
		V_0 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7707));
		goto IL_0026;
	}

IL_0014:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7708));
		// hapticInfos[i] = new HapticInfo();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7709));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		HapticInfoU5BU5D_tD7F089695199232CD57B8C3C73F549036B5BC2CB* L_2 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___hapticInfos_11;
		int32_t L_3 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7710));
		HapticInfo_t614DAC0509051DC76FD4D48A1D591505E22DE950* L_4 = (HapticInfo_t614DAC0509051DC76FD4D48A1D591505E22DE950*)il2cpp_codegen_object_new(HapticInfo_t614DAC0509051DC76FD4D48A1D591505E22DE950_il2cpp_TypeInfo_var);
		NullCheck(L_4);
		HapticInfo__ctor_m386E367D1A8EB72F22817794BDD0E4EAD8210F0F(L_4, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7710));
		NullCheck(L_2);
		ArrayElementTypeCheck (L_2, L_4);
		(L_2)->SetAt(static_cast<il2cpp_array_size_t>(L_3), (HapticInfo_t614DAC0509051DC76FD4D48A1D591505E22DE950*)L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7711));
		// for (int i = 0; i < NUM_HAPTIC_CHANNELS; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7712));
		int32_t L_5 = V_0;
		V_0 = ((int32_t)il2cpp_codegen_add(L_5, 1));
	}

IL_0026:
	{
		// for (int i = 0; i < NUM_HAPTIC_CHANNELS; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7713));
		int32_t L_6 = V_0;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_7 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___NUM_HAPTIC_CHANNELS_10;
		V_1 = (bool)((((int32_t)L_6) < ((int32_t)L_7))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7714));
		bool L_8 = V_1;
		if (L_8)
		{
			goto IL_0014;
		}
	}
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7715));
		return;
	}
}
// System.Void OVRInput::PlayHapticImpulse(System.Single,UnityEngine.XR.XRNode)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRInput_PlayHapticImpulse_m1361B3A6FDE69152D291A4AAC0C0D3537926F77B (float ___0_amplitude, int32_t ___1_deviceNode, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&CVRSystem_tD199D16B8A7CC7F19E6E0B5D9AE59156C2312B1A_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_PlayHapticImpulse_m1361B3A6FDE69152D291A4AAC0C0D3537926F77B_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&UInt32_t1833D51FFA667B18A5AA4B8D34DE284F8495D29B_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	CVRSystem_tD199D16B8A7CC7F19E6E0B5D9AE59156C2312B1A* V_0 = NULL;
	bool V_1 = false;
	uint32_t V_2 = 0;
	bool V_3 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_amplitude), (&___1_deviceNode));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_PlayHapticImpulse_m1361B3A6FDE69152D291A4AAC0C0D3537926F77B_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7716));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7717));
	int32_t G_B3_0 = 0;
	uint32_t G_B7_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7718));
		// OVR.OpenVR.CVRSystem system = OVR.OpenVR.OpenVR.System;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7719));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7720));
		CVRSystem_tD199D16B8A7CC7F19E6E0B5D9AE59156C2312B1A* L_0;
		L_0 = OpenVR_get_System_m3E623FF7D408DACC163D9CB6CD2F9193CB5E51EA(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7720));
		V_0 = L_0;
		// if (system != null && amplitude != 0.0f)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7721));
		CVRSystem_tD199D16B8A7CC7F19E6E0B5D9AE59156C2312B1A* L_1 = V_0;
		if (!L_1)
		{
			goto IL_0017;
		}
	}
	{
		float L_2 = ___0_amplitude;
		G_B3_0 = ((((int32_t)((((float)L_2) == ((float)(0.0f)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_0018;
	}

IL_0017:
	{
		G_B3_0 = 0;
	}

IL_0018:
	{
		V_1 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7722));
		bool L_3 = V_1;
		if (!L_3)
		{
			goto IL_0060;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7723));
		// uint controllerId = (deviceNode == Node.LeftHand) ? openVRControllerDetails[0].deviceID : openVRControllerDetails[1].deviceID;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7724));
		int32_t L_4 = ___1_deviceNode;
		if ((((int32_t)L_4) == ((int32_t)4)))
		{
			goto IL_0033;
		}
	}
	{
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_5 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_5);
		uint32_t L_6 = ((L_5)->GetAddressAt(static_cast<il2cpp_array_size_t>(1)))->___deviceID_2;
		G_B7_0 = L_6;
		goto IL_0043;
	}

IL_0033:
	{
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_7 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_7);
		uint32_t L_8 = ((L_7)->GetAddressAt(static_cast<il2cpp_array_size_t>(0)))->___deviceID_2;
		G_B7_0 = L_8;
	}

IL_0043:
	{
		V_2 = G_B7_0;
		// if (IsValidOpenVRDevice(controllerId))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7725));
		uint32_t L_9 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7726));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		bool L_10;
		L_10 = OVRInput_IsValidOpenVRDevice_m7ADD9AC581CBA6737A77731FEB481BD1E9D75B64(L_9, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7726));
		V_3 = L_10;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7727));
		bool L_11 = V_3;
		if (!L_11)
		{
			goto IL_005f;
		}
	}
	{
		// system.TriggerHapticPulse(controllerId, 0, (char)(OPENVR_MAX_HAPTIC_AMPLITUDE * amplitude));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7728));
		CVRSystem_tD199D16B8A7CC7F19E6E0B5D9AE59156C2312B1A* L_12 = V_0;
		uint32_t L_13 = V_2;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_14 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___OPENVR_MAX_HAPTIC_AMPLITUDE_12;
		float L_15 = ___0_amplitude;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7729));
		NullCheck(L_12);
		CVRSystem_TriggerHapticPulse_m18A6EF5A5B80D838BC186A057C11A45151D8FA7B(L_12, L_13, 0, (uint16_t)il2cpp_codegen_cast_floating_point<uint16_t, int32_t, float>(((float)il2cpp_codegen_multiply(L_14, L_15))), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7729));
	}

IL_005f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7730));
	}

IL_0060:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7731));
		return;
	}
}
// System.Boolean OVRInput::IsValidOpenVRDevice(System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_IsValidOpenVRDevice_m7ADD9AC581CBA6737A77731FEB481BD1E9D75B64 (uint32_t ___0_deviceId, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_IsValidOpenVRDevice_m7ADD9AC581CBA6737A77731FEB481BD1E9D75B64_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_deviceId));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_IsValidOpenVRDevice_m7ADD9AC581CBA6737A77731FEB481BD1E9D75B64_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7732));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7733));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7734));
		// return (deviceId >= 0 && deviceId < OVR.OpenVR.OpenVR.k_unMaxTrackedDeviceCount);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7735));
		uint32_t L_0 = ___0_deviceId;
		if (false)
		{
			goto IL_000c;
		}
	}
	{
		uint32_t L_1 = ___0_deviceId;
		G_B3_0 = ((!(((uint32_t)L_1) >= ((uint32_t)((int32_t)64))))? 1 : 0);
		goto IL_000d;
	}

IL_000c:
	{
		G_B3_0 = 0;
	}

IL_000d:
	{
		V_0 = (bool)G_B3_0;
		goto IL_0010;
	}

IL_0010:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7736));
		bool L_2 = V_0;
		return L_2;
	}
}
// System.Void OVRInput::SetControllerVibration(System.Single,System.Single,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRInput_SetControllerVibration_m7DE7256047DAAB0F6F5E327250A23B9D7074871E (float ___0_frequency, float ___1_amplitude, int32_t ___2_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_SetControllerVibration_m7DE7256047DAAB0F6F5E327250A23B9D7074871E_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&XRNode_t41F4B2F0EDD99DB33C49EC731C8C7F9DF142B5FF_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	int32_t V_2 = 0;
	OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* V_3 = NULL;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	int32_t V_8 = 0;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_frequency), (&___1_amplitude), (&___2_controllerMask));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2), (&V_3), (&V_8));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_SetControllerVibration_m7DE7256047DAAB0F6F5E327250A23B9D7074871E_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7737));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7738));
	int32_t G_B13_0 = 0;
	int32_t G_B17_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7739));
		// if (OVRManager.loadedXRDevice == OVRManager.XRDevice.Oculus)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7740));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___loadedXRDevice_85;
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)1))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7741));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_006e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7742));
		// if ((controllerMask & Controller.Active) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7743));
		int32_t L_2 = ___2_controllerMask;
		V_1 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_2&((int32_t)-2147483648LL)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7744));
		bool L_3 = V_1;
		if (!L_3)
		{
			goto IL_0025;
		}
	}
	{
		// controllerMask |= activeControllerType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7745));
		int32_t L_4 = ___2_controllerMask;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_5 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3;
		___2_controllerMask = ((int32_t)((int32_t)L_4|(int32_t)L_5));
	}

IL_0025:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7746));
		V_2 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7747));
		goto IL_0058;
	}

IL_0029:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7748));
		// OVRControllerBase controller = controllers[i];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7749));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_6 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		int32_t L_7 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7750));
		NullCheck(L_6);
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_8;
		L_8 = List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D(L_6, L_7, List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7750));
		V_3 = L_8;
		// if (ShouldResolveController(controller.controllerType, controllerMask))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7751));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_9 = V_3;
		NullCheck(L_9);
		int32_t L_10 = L_9->___controllerType_0;
		int32_t L_11 = ___2_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7752));
		bool L_12;
		L_12 = OVRInput_ShouldResolveController_m28BB36AA2D586B8F1C75071D26654B77285AA952(L_10, L_11, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7752));
		V_4 = L_12;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7753));
		bool L_13 = V_4;
		if (!L_13)
		{
			goto IL_0053;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7754));
		// controller.SetControllerVibration(frequency, amplitude);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7755));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_14 = V_3;
		float L_15 = ___0_frequency;
		float L_16 = ___1_amplitude;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7756));
		NullCheck(L_14);
		VirtualActionInvoker2< float, float >::Invoke(5 /* System.Void OVRInput/OVRControllerBase::SetControllerVibration(System.Single,System.Single) */, L_14, L_15, L_16);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7756));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7757));
	}

IL_0053:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7758));
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7759));
		int32_t L_17 = V_2;
		V_2 = ((int32_t)il2cpp_codegen_add(L_17, 1));
	}

IL_0058:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7760));
		int32_t L_18 = V_2;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_19 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7761));
		NullCheck(L_19);
		int32_t L_20;
		L_20 = List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_inline(L_19, List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7761));
		V_5 = (bool)((((int32_t)L_18) < ((int32_t)L_20))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7762));
		bool L_21 = V_5;
		if (L_21)
		{
			goto IL_0029;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7763));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7764));
		goto IL_00a9;
	}

IL_006e:
	{
		// else if (OVRManager.loadedXRDevice == OVRManager.XRDevice.OpenVR)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7765));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_22 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___loadedXRDevice_85;
		V_6 = (bool)((((int32_t)L_22) == ((int32_t)2))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7766));
		bool L_23 = V_6;
		if (!L_23)
		{
			goto IL_00a9;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7767));
		// if (controllerMask == Controller.LTouch || controllerMask == Controller.RTouch)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7768));
		int32_t L_24 = ___2_controllerMask;
		if ((((int32_t)L_24) == ((int32_t)1)))
		{
			goto IL_0087;
		}
	}
	{
		int32_t L_25 = ___2_controllerMask;
		G_B13_0 = ((((int32_t)L_25) == ((int32_t)2))? 1 : 0);
		goto IL_0088;
	}

IL_0087:
	{
		G_B13_0 = 1;
	}

IL_0088:
	{
		V_7 = (bool)G_B13_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7769));
		bool L_26 = V_7;
		if (!L_26)
		{
			goto IL_00a8;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7770));
		// Node controllerNode = (controllerMask == Controller.LTouch) ? Node.LeftHand : Node.RightHand;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7771));
		int32_t L_27 = ___2_controllerMask;
		if ((((int32_t)L_27) == ((int32_t)1)))
		{
			goto IL_0096;
		}
	}
	{
		G_B17_0 = 5;
		goto IL_0097;
	}

IL_0096:
	{
		G_B17_0 = 4;
	}

IL_0097:
	{
		V_8 = G_B17_0;
		// StartVibration(amplitude, HAPTIC_VIBRATION_DURATION_SECONDS, controllerNode);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7772));
		float L_28 = ___1_amplitude;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_29 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___HAPTIC_VIBRATION_DURATION_SECONDS_13;
		int32_t L_30 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7773));
		OVRInput_StartVibration_mC60F6AD7169146CCCC1EE049A1BA447F06E67EBD(L_28, L_29, L_30, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7773));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7774));
	}

IL_00a8:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7775));
	}

IL_00a9:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7776));
		return;
	}
}
// System.Void OVRInput::SetControllerLocalizedVibration(OVRInput/HapticsLocation,System.Single,System.Single,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRInput_SetControllerLocalizedVibration_mF1846D6CABEE3F890D7D2E6F25F0E3A7CBF75F99 (int32_t ___0_hapticsLocationMask, float ___1_frequency, float ___2_amplitude, int32_t ___3_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_SetControllerLocalizedVibration_mF1846D6CABEE3F890D7D2E6F25F0E3A7CBF75F99_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	int32_t V_2 = 0;
	OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* V_3 = NULL;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_hapticsLocationMask), (&___1_frequency), (&___2_amplitude), (&___3_controllerMask));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_SetControllerLocalizedVibration_mF1846D6CABEE3F890D7D2E6F25F0E3A7CBF75F99_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7777));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7778));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7779));
		// if (OVRManager.loadedXRDevice == OVRManager.XRDevice.Oculus)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7780));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___loadedXRDevice_85;
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)1))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7781));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_006f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7782));
		// if ((controllerMask & Controller.Active) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7783));
		int32_t L_2 = ___3_controllerMask;
		V_1 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_2&((int32_t)-2147483648LL)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7784));
		bool L_3 = V_1;
		if (!L_3)
		{
			goto IL_0025;
		}
	}
	{
		// controllerMask |= activeControllerType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7785));
		int32_t L_4 = ___3_controllerMask;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_5 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3;
		___3_controllerMask = ((int32_t)((int32_t)L_4|(int32_t)L_5));
	}

IL_0025:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7786));
		V_2 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7787));
		goto IL_0059;
	}

IL_0029:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7788));
		// OVRControllerBase controller = controllers[i];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7789));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_6 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		int32_t L_7 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7790));
		NullCheck(L_6);
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_8;
		L_8 = List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D(L_6, L_7, List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7790));
		V_3 = L_8;
		// if (ShouldResolveController(controller.controllerType, controllerMask))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7791));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_9 = V_3;
		NullCheck(L_9);
		int32_t L_10 = L_9->___controllerType_0;
		int32_t L_11 = ___3_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7792));
		bool L_12;
		L_12 = OVRInput_ShouldResolveController_m28BB36AA2D586B8F1C75071D26654B77285AA952(L_10, L_11, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7792));
		V_4 = L_12;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7793));
		bool L_13 = V_4;
		if (!L_13)
		{
			goto IL_0054;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7794));
		// controller.SetControllerLocalizedVibration(hapticsLocationMask, frequency, amplitude);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7795));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_14 = V_3;
		int32_t L_15 = ___0_hapticsLocationMask;
		float L_16 = ___1_frequency;
		float L_17 = ___2_amplitude;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7796));
		NullCheck(L_14);
		VirtualActionInvoker3< int32_t, float, float >::Invoke(6 /* System.Void OVRInput/OVRControllerBase::SetControllerLocalizedVibration(OVRInput/HapticsLocation,System.Single,System.Single) */, L_14, L_15, L_16, L_17);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7796));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7797));
	}

IL_0054:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7798));
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7799));
		int32_t L_18 = V_2;
		V_2 = ((int32_t)il2cpp_codegen_add(L_18, 1));
	}

IL_0059:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7800));
		int32_t L_19 = V_2;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_20 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7801));
		NullCheck(L_20);
		int32_t L_21;
		L_21 = List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_inline(L_20, List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7801));
		V_5 = (bool)((((int32_t)L_19) < ((int32_t)L_21))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7802));
		bool L_22 = V_5;
		if (L_22)
		{
			goto IL_0029;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7803));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7804));
		goto IL_0096;
	}

IL_006f:
	{
		// else if (OVRManager.loadedXRDevice == OVRManager.XRDevice.OpenVR)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7805));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_23 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___loadedXRDevice_85;
		V_6 = (bool)((((int32_t)L_23) == ((int32_t)2))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7806));
		bool L_24 = V_6;
		if (!L_24)
		{
			goto IL_0096;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7807));
		// if ((hapticsLocationMask & HapticsLocation.Hand) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7808));
		int32_t L_25 = ___0_hapticsLocationMask;
		V_7 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_25&1))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7809));
		bool L_26 = V_7;
		if (!L_26)
		{
			goto IL_0095;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7810));
		// SetControllerVibration(frequency, amplitude, controllerMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7811));
		float L_27 = ___1_frequency;
		float L_28 = ___2_amplitude;
		int32_t L_29 = ___3_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7812));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		OVRInput_SetControllerVibration_m7DE7256047DAAB0F6F5E327250A23B9D7074871E(L_27, L_28, L_29, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7812));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7813));
	}

IL_0095:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7814));
	}

IL_0096:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7815));
		return;
	}
}
// System.Void OVRInput::SetControllerHapticsAmplitudeEnvelope(OVRInput/HapticsAmplitudeEnvelopeVibration,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRInput_SetControllerHapticsAmplitudeEnvelope_m43A590CEBE1656CEA89BFFFA12EB4E10C8E54C0E (HapticsAmplitudeEnvelopeVibration_t2EDF01B96CFAC2D09DDCAACEDEA5C2F534F252C9 ___0_hapticsVibration, int32_t ___1_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_SetControllerHapticsAmplitudeEnvelope_m43A590CEBE1656CEA89BFFFA12EB4E10C8E54C0E_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* V_2 = NULL;
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_hapticsVibration), (&___1_controllerMask));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_SetControllerHapticsAmplitudeEnvelope_m43A590CEBE1656CEA89BFFFA12EB4E10C8E54C0E_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7816));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7817));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7818));
		// if ((controllerMask & Controller.Active) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7819));
		int32_t L_0 = ___1_controllerMask;
		V_0 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_0&((int32_t)-2147483648LL)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7820));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0018;
		}
	}
	{
		// controllerMask |= activeControllerType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7821));
		int32_t L_2 = ___1_controllerMask;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_3 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3;
		___1_controllerMask = ((int32_t)((int32_t)L_2|(int32_t)L_3));
	}

IL_0018:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7822));
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7823));
		goto IL_0048;
	}

IL_001c:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7824));
		// OVRControllerBase controller = controllers[i];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7825));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_4 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		int32_t L_5 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7826));
		NullCheck(L_4);
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_6;
		L_6 = List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D(L_4, L_5, List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7826));
		V_2 = L_6;
		// if (ShouldResolveController(controller.controllerType, controllerMask))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7827));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_7 = V_2;
		NullCheck(L_7);
		int32_t L_8 = L_7->___controllerType_0;
		int32_t L_9 = ___1_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7828));
		bool L_10;
		L_10 = OVRInput_ShouldResolveController_m28BB36AA2D586B8F1C75071D26654B77285AA952(L_8, L_9, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7828));
		V_3 = L_10;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7829));
		bool L_11 = V_3;
		if (!L_11)
		{
			goto IL_0043;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7830));
		// controller.SetControllerHapticsAmplitudeEnvelope(hapticsVibration);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7831));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_12 = V_2;
		HapticsAmplitudeEnvelopeVibration_t2EDF01B96CFAC2D09DDCAACEDEA5C2F534F252C9 L_13 = ___0_hapticsVibration;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7832));
		NullCheck(L_12);
		VirtualActionInvoker1< HapticsAmplitudeEnvelopeVibration_t2EDF01B96CFAC2D09DDCAACEDEA5C2F534F252C9 >::Invoke(7 /* System.Void OVRInput/OVRControllerBase::SetControllerHapticsAmplitudeEnvelope(OVRInput/HapticsAmplitudeEnvelopeVibration) */, L_12, L_13);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7832));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7833));
	}

IL_0043:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7834));
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7835));
		int32_t L_14 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add(L_14, 1));
	}

IL_0048:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7836));
		int32_t L_15 = V_1;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_16 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7837));
		NullCheck(L_16);
		int32_t L_17;
		L_17 = List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_inline(L_16, List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7837));
		V_4 = (bool)((((int32_t)L_15) < ((int32_t)L_17))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7838));
		bool L_18 = V_4;
		if (L_18)
		{
			goto IL_001c;
		}
	}
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7839));
		return;
	}
}
// System.Int32 OVRInput::SetControllerHapticsPcm(OVRInput/HapticsPcmVibration,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRInput_SetControllerHapticsPcm_m31725A99F6F5CD2BCC2FF64696F70BB805C70556 (HapticsPcmVibration_tA67530C77AF893E2DAE4AC825EB6477B76251781 ___0_hapticsVibration, int32_t ___1_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_SetControllerHapticsPcm_m31725A99F6F5CD2BCC2FF64696F70BB805C70556_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	int32_t V_2 = 0;
	OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* V_3 = NULL;
	bool V_4 = false;
	bool V_5 = false;
	int32_t V_6 = 0;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_hapticsVibration), (&___1_controllerMask));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_2), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_SetControllerHapticsPcm_m31725A99F6F5CD2BCC2FF64696F70BB805C70556_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7840));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7841));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7842));
		// if ((controllerMask & Controller.Active) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7843));
		int32_t L_0 = ___1_controllerMask;
		V_1 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_0&((int32_t)-2147483648LL)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7844));
		bool L_1 = V_1;
		if (!L_1)
		{
			goto IL_0018;
		}
	}
	{
		// controllerMask |= activeControllerType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7845));
		int32_t L_2 = ___1_controllerMask;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_3 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3;
		___1_controllerMask = ((int32_t)((int32_t)L_2|(int32_t)L_3));
	}

IL_0018:
	{
		// int samplesConsumed = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7846));
		V_0 = 0;
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7847));
		V_2 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7848));
		goto IL_004c;
	}

IL_001e:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7849));
		// OVRControllerBase controller = controllers[i];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7850));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_4 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		int32_t L_5 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7851));
		NullCheck(L_4);
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_6;
		L_6 = List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D(L_4, L_5, List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7851));
		V_3 = L_6;
		// if (ShouldResolveController(controller.controllerType, controllerMask))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7852));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_7 = V_3;
		NullCheck(L_7);
		int32_t L_8 = L_7->___controllerType_0;
		int32_t L_9 = ___1_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7853));
		bool L_10;
		L_10 = OVRInput_ShouldResolveController_m28BB36AA2D586B8F1C75071D26654B77285AA952(L_8, L_9, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7853));
		V_4 = L_10;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7854));
		bool L_11 = V_4;
		if (!L_11)
		{
			goto IL_0047;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7855));
		// samplesConsumed = controller.SetControllerHapticsPcm(hapticsVibration);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7856));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_12 = V_3;
		HapticsPcmVibration_tA67530C77AF893E2DAE4AC825EB6477B76251781 L_13 = ___0_hapticsVibration;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7857));
		NullCheck(L_12);
		int32_t L_14;
		L_14 = VirtualFuncInvoker1< int32_t, HapticsPcmVibration_tA67530C77AF893E2DAE4AC825EB6477B76251781 >::Invoke(8 /* System.Int32 OVRInput/OVRControllerBase::SetControllerHapticsPcm(OVRInput/HapticsPcmVibration) */, L_12, L_13);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7857));
		V_0 = L_14;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7858));
	}

IL_0047:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7859));
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7860));
		int32_t L_15 = V_2;
		V_2 = ((int32_t)il2cpp_codegen_add(L_15, 1));
	}

IL_004c:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7861));
		int32_t L_16 = V_2;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_17 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7862));
		NullCheck(L_17);
		int32_t L_18;
		L_18 = List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_inline(L_17, List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7862));
		V_5 = (bool)((((int32_t)L_16) < ((int32_t)L_18))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7863));
		bool L_19 = V_5;
		if (L_19)
		{
			goto IL_001e;
		}
	}
	{
		// return samplesConsumed;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7864));
		int32_t L_20 = V_0;
		V_6 = L_20;
		goto IL_0064;
	}

IL_0064:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7865));
		int32_t L_21 = V_6;
		return L_21;
	}
}
// System.Single OVRInput::GetControllerSampleRateHz(OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float OVRInput_GetControllerSampleRateHz_m16BB642442086EAECDC611A1E404A1356D308E59 (int32_t ___0_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetControllerSampleRateHz_m16BB642442086EAECDC611A1E404A1356D308E59_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* V_2 = NULL;
	bool V_3 = false;
	float V_4 = 0.0f;
	bool V_5 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_controllerMask));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetControllerSampleRateHz_m16BB642442086EAECDC611A1E404A1356D308E59_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7866));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7867));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7868));
		// if ((controllerMask & Controller.Active) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7869));
		int32_t L_0 = ___0_controllerMask;
		V_0 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_0&((int32_t)-2147483648LL)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7870));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0018;
		}
	}
	{
		// controllerMask |= activeControllerType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7871));
		int32_t L_2 = ___0_controllerMask;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_3 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3;
		___0_controllerMask = ((int32_t)((int32_t)L_2|(int32_t)L_3));
	}

IL_0018:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7872));
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7873));
		goto IL_0049;
	}

IL_001c:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7874));
		// OVRControllerBase controller = controllers[i];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7875));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_4 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		int32_t L_5 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7876));
		NullCheck(L_4);
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_6;
		L_6 = List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D(L_4, L_5, List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7876));
		V_2 = L_6;
		// if (ShouldResolveController(controller.controllerType, controllerMask))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7877));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_7 = V_2;
		NullCheck(L_7);
		int32_t L_8 = L_7->___controllerType_0;
		int32_t L_9 = ___0_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7878));
		bool L_10;
		L_10 = OVRInput_ShouldResolveController_m28BB36AA2D586B8F1C75071D26654B77285AA952(L_8, L_9, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7878));
		V_3 = L_10;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7879));
		bool L_11 = V_3;
		if (!L_11)
		{
			goto IL_0044;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7880));
		// return controller.GetControllerSampleRateHz();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7881));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_12 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7882));
		NullCheck(L_12);
		float L_13;
		L_13 = VirtualFuncInvoker0< float >::Invoke(9 /* System.Single OVRInput/OVRControllerBase::GetControllerSampleRateHz() */, L_12);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7882));
		V_4 = L_13;
		goto IL_0065;
	}

IL_0044:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7883));
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7884));
		int32_t L_14 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add(L_14, 1));
	}

IL_0049:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7885));
		int32_t L_15 = V_1;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_16 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7886));
		NullCheck(L_16);
		int32_t L_17;
		L_17 = List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_inline(L_16, List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7886));
		V_5 = (bool)((((int32_t)L_15) < ((int32_t)L_17))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7887));
		bool L_18 = V_5;
		if (L_18)
		{
			goto IL_001c;
		}
	}
	{
		// return 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7888));
		V_4 = (0.0f);
		goto IL_0065;
	}

IL_0065:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7889));
		float L_19 = V_4;
		return L_19;
	}
}
// System.Byte OVRInput::GetControllerBatteryPercentRemaining(OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint8_t OVRInput_GetControllerBatteryPercentRemaining_m71749CA732247A262C0274C88BCE39BE6F48FF08 (int32_t ___0_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Byte_t94D9231AC217BE4D2E004C4CD32DF6D099EA41A3_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_GetControllerBatteryPercentRemaining_m71749CA732247A262C0274C88BCE39BE6F48FF08_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	uint8_t V_0 = 0x0;
	bool V_1 = false;
	int32_t V_2 = 0;
	OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* V_3 = NULL;
	bool V_4 = false;
	bool V_5 = false;
	uint8_t V_6 = 0x0;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_controllerMask));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_2), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_GetControllerBatteryPercentRemaining_m71749CA732247A262C0274C88BCE39BE6F48FF08_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7890));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7891));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7892));
		// if ((controllerMask & Controller.Active) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7893));
		int32_t L_0 = ___0_controllerMask;
		V_1 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_0&((int32_t)-2147483648LL)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7894));
		bool L_1 = V_1;
		if (!L_1)
		{
			goto IL_0018;
		}
	}
	{
		// controllerMask |= activeControllerType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7895));
		int32_t L_2 = ___0_controllerMask;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		int32_t L_3 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___activeControllerType_3;
		___0_controllerMask = ((int32_t)((int32_t)L_2|(int32_t)L_3));
	}

IL_0018:
	{
		// byte battery = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7896));
		V_0 = (uint8_t)0;
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7897));
		V_2 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7898));
		goto IL_004c;
	}

IL_001e:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7899));
		// OVRControllerBase controller = controllers[i];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7900));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_4 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		int32_t L_5 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7901));
		NullCheck(L_4);
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_6;
		L_6 = List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D(L_4, L_5, List_1_get_Item_m777E4EB80673BC010F26A9D7A4FD3B337F82D53D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7901));
		V_3 = L_6;
		// if (ShouldResolveController(controller.controllerType, controllerMask))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7902));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_7 = V_3;
		NullCheck(L_7);
		int32_t L_8 = L_7->___controllerType_0;
		int32_t L_9 = ___0_controllerMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7903));
		bool L_10;
		L_10 = OVRInput_ShouldResolveController_m28BB36AA2D586B8F1C75071D26654B77285AA952(L_8, L_9, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7903));
		V_4 = L_10;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7904));
		bool L_11 = V_4;
		if (!L_11)
		{
			goto IL_0047;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7905));
		// battery = controller.GetBatteryPercentRemaining();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7906));
		OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* L_12 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7907));
		NullCheck(L_12);
		uint8_t L_13;
		L_13 = VirtualFuncInvoker0< uint8_t >::Invoke(10 /* System.Byte OVRInput/OVRControllerBase::GetBatteryPercentRemaining() */, L_12);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7907));
		V_0 = L_13;
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7908));
		goto IL_005f;
	}

IL_0047:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7909));
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7910));
		int32_t L_14 = V_2;
		V_2 = ((int32_t)il2cpp_codegen_add(L_14, 1));
	}

IL_004c:
	{
		// for (int i = 0; i < controllers.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7911));
		int32_t L_15 = V_2;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		List_1_t86E75F5042EFDDED6CC644C92E125E248E01D577* L_16 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___controllers_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7912));
		NullCheck(L_16);
		int32_t L_17;
		L_17 = List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_inline(L_16, List_1_get_Count_m116096640A45DC97925281D1AEBE76CC3A0042E3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7912));
		V_5 = (bool)((((int32_t)L_15) < ((int32_t)L_17))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7913));
		bool L_18 = V_5;
		if (L_18)
		{
			goto IL_001e;
		}
	}

IL_005f:
	{
		// return battery;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7914));
		uint8_t L_19 = V_0;
		V_6 = L_19;
		goto IL_0064;
	}

IL_0064:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7915));
		uint8_t L_20 = V_6;
		return L_20;
	}
}
// UnityEngine.Vector2 OVRInput::CalculateAbsMax(UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 OVRInput_CalculateAbsMax_m01D62F439662772B8DFACA54195A979A2E151F19 (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___0_a, Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___1_b, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_CalculateAbsMax_m01D62F439662772B8DFACA54195A979A2E151F19_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	float V_1 = 0.0f;
	bool V_2 = false;
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 V_3;
	memset((&V_3), 0, sizeof(V_3));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_a), (&___1_b));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_CalculateAbsMax_m01D62F439662772B8DFACA54195A979A2E151F19_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7916));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7917));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7918));
		// float absA = a.sqrMagnitude;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7919));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7920));
		float L_0;
		L_0 = Vector2_get_sqrMagnitude_mA16336720C14EEF8BA9B55AE33B98C9EE2082BDC_inline((&___0_a), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7920));
		V_0 = L_0;
		// float absB = b.sqrMagnitude;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7921));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7922));
		float L_1;
		L_1 = Vector2_get_sqrMagnitude_mA16336720C14EEF8BA9B55AE33B98C9EE2082BDC_inline((&___1_b), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7922));
		V_1 = L_1;
		// if (absA >= absB)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7923));
		float L_2 = V_0;
		float L_3 = V_1;
		V_2 = (bool)((((int32_t)((!(((float)L_2) >= ((float)L_3)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7924));
		bool L_4 = V_2;
		if (!L_4)
		{
			goto IL_0020;
		}
	}
	{
		// return a;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7925));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_5 = ___0_a;
		V_3 = L_5;
		goto IL_0024;
	}

IL_0020:
	{
		// return b;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7926));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_6 = ___1_b;
		V_3 = L_6;
		goto IL_0024;
	}

IL_0024:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7927));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_7 = V_3;
		return L_7;
	}
}
// System.Single OVRInput::CalculateAbsMax(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float OVRInput_CalculateAbsMax_mC5712340231F606B82E84C5E7BC769E5A4EBA008 (float ___0_a, float ___1_b, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_CalculateAbsMax_mC5712340231F606B82E84C5E7BC769E5A4EBA008_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	float V_1 = 0.0f;
	bool V_2 = false;
	float V_3 = 0.0f;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_a), (&___1_b));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_CalculateAbsMax_mC5712340231F606B82E84C5E7BC769E5A4EBA008_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7928));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7929));
	float G_B3_0 = 0.0f;
	float G_B6_0 = 0.0f;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7930));
		// float absA = (a >= 0) ? a : -a;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7931));
		float L_0 = ___0_a;
		if ((((float)L_0) >= ((float)(0.0f))))
		{
			goto IL_000d;
		}
	}
	{
		float L_1 = ___0_a;
		G_B3_0 = ((-L_1));
		goto IL_000e;
	}

IL_000d:
	{
		float L_2 = ___0_a;
		G_B3_0 = L_2;
	}

IL_000e:
	{
		V_0 = G_B3_0;
		// float absB = (b >= 0) ? b : -b;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7932));
		float L_3 = ___1_b;
		if ((((float)L_3) >= ((float)(0.0f))))
		{
			goto IL_001b;
		}
	}
	{
		float L_4 = ___1_b;
		G_B6_0 = ((-L_4));
		goto IL_001c;
	}

IL_001b:
	{
		float L_5 = ___1_b;
		G_B6_0 = L_5;
	}

IL_001c:
	{
		V_1 = G_B6_0;
		// if (absA >= absB)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7933));
		float L_6 = V_0;
		float L_7 = V_1;
		V_2 = (bool)((((int32_t)((!(((float)L_6) >= ((float)L_7)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7934));
		bool L_8 = V_2;
		if (!L_8)
		{
			goto IL_002c;
		}
	}
	{
		// return a;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7935));
		float L_9 = ___0_a;
		V_3 = L_9;
		goto IL_0030;
	}

IL_002c:
	{
		// return b;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7936));
		float L_10 = ___1_b;
		V_3 = L_10;
		goto IL_0030;
	}

IL_0030:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7937));
		float L_11 = V_3;
		return L_11;
	}
}
// UnityEngine.Vector2 OVRInput::CalculateDeadzone(UnityEngine.Vector2,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 OVRInput_CalculateDeadzone_m62E502D296247D79A188319599508836C0B88D9C (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___0_a, float ___1_deadzone, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_CalculateDeadzone_m62E502D296247D79A188319599508836C0B88D9C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_a), (&___1_deadzone));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_CalculateDeadzone_m62E502D296247D79A188319599508836C0B88D9C_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7938));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7939));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7940));
		// if (a.sqrMagnitude <= (deadzone * deadzone))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7941));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7942));
		float L_0;
		L_0 = Vector2_get_sqrMagnitude_mA16336720C14EEF8BA9B55AE33B98C9EE2082BDC_inline((&___0_a), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7942));
		float L_1 = ___1_deadzone;
		float L_2 = ___1_deadzone;
		V_0 = (bool)((((int32_t)((!(((float)L_0) <= ((float)((float)il2cpp_codegen_multiply(L_1, L_2)))))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7943));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_001c;
		}
	}
	{
		// return Vector2.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7944));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7945));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_4;
		L_4 = Vector2_get_zero_m32506C40EC2EE7D5D4410BF40D3EE683A3D5F32C_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7945));
		V_1 = L_4;
		goto IL_0055;
	}

IL_001c:
	{
		// a *= ((a.magnitude - deadzone) / (1.0f - deadzone));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7946));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_5 = ___0_a;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7947));
		float L_6;
		L_6 = Vector2_get_magnitude_m5C59B4056420AEFDB291AD0914A3F675330A75CE_inline((&___0_a), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7947));
		float L_7 = ___1_deadzone;
		float L_8 = ___1_deadzone;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7948));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_9;
		L_9 = Vector2_op_Multiply_m2D984B613020089BF5165BA4CA10988E2DC771FE_inline(L_5, ((float)(((float)il2cpp_codegen_subtract(L_6, L_7))/((float)il2cpp_codegen_subtract((1.0f), L_8)))), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7948));
		___0_a = L_9;
		// if (a.sqrMagnitude > 1.0f)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7949));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7950));
		float L_10;
		L_10 = Vector2_get_sqrMagnitude_mA16336720C14EEF8BA9B55AE33B98C9EE2082BDC_inline((&___0_a), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7950));
		V_2 = (bool)((((float)L_10) > ((float)(1.0f)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7951));
		bool L_11 = V_2;
		if (!L_11)
		{
			goto IL_0051;
		}
	}
	{
		// return a.normalized;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7952));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7953));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_12;
		L_12 = Vector2_get_normalized_mF6722883AEFB5027690A778DF8ACC20F0FA65297_inline((&___0_a), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7953));
		V_1 = L_12;
		goto IL_0055;
	}

IL_0051:
	{
		// return a;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7954));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_13 = ___0_a;
		V_1 = L_13;
		goto IL_0055;
	}

IL_0055:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7955));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_14 = V_1;
		return L_14;
	}
}
// System.Single OVRInput::CalculateDeadzone(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float OVRInput_CalculateDeadzone_m6BA8FADBF3D06FE95AD5264B167531F78C4AB3C4 (float ___0_a, float ___1_deadzone, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_CalculateDeadzone_m6BA8FADBF3D06FE95AD5264B167531F78C4AB3C4_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	bool V_1 = false;
	float V_2 = 0.0f;
	bool V_3 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_a), (&___1_deadzone));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_CalculateDeadzone_m6BA8FADBF3D06FE95AD5264B167531F78C4AB3C4_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7956));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7957));
	float G_B3_0 = 0.0f;
	float G_B9_0 = 0.0f;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7958));
		// float mag = (a >= 0) ? a : -a;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7959));
		float L_0 = ___0_a;
		if ((((float)L_0) >= ((float)(0.0f))))
		{
			goto IL_000d;
		}
	}
	{
		float L_1 = ___0_a;
		G_B3_0 = ((-L_1));
		goto IL_000e;
	}

IL_000d:
	{
		float L_2 = ___0_a;
		G_B3_0 = L_2;
	}

IL_000e:
	{
		V_0 = G_B3_0;
		// if (mag <= deadzone)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7960));
		float L_3 = V_0;
		float L_4 = ___1_deadzone;
		V_1 = (bool)((((int32_t)((!(((float)L_3) <= ((float)L_4)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7961));
		bool L_5 = V_1;
		if (!L_5)
		{
			goto IL_0022;
		}
	}
	{
		// return 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7962));
		V_2 = (0.0f);
		goto IL_005a;
	}

IL_0022:
	{
		// a *= (mag - deadzone) / (1.0f - deadzone);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7963));
		float L_6 = ___0_a;
		float L_7 = V_0;
		float L_8 = ___1_deadzone;
		float L_9 = ___1_deadzone;
		___0_a = ((float)il2cpp_codegen_multiply(L_6, ((float)(((float)il2cpp_codegen_subtract(L_7, L_8))/((float)il2cpp_codegen_subtract((1.0f), L_9))))));
		// if ((a * a) > 1.0f)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7964));
		float L_10 = ___0_a;
		float L_11 = ___0_a;
		V_3 = (bool)((((float)((float)il2cpp_codegen_multiply(L_10, L_11))) > ((float)(1.0f)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7965));
		bool L_12 = V_3;
		if (!L_12)
		{
			goto IL_0056;
		}
	}
	{
		// return (a >= 0) ? 1.0f : -1.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7966));
		float L_13 = ___0_a;
		if ((((float)L_13) >= ((float)(0.0f))))
		{
			goto IL_004e;
		}
	}
	{
		G_B9_0 = (-1.0f);
		goto IL_0053;
	}

IL_004e:
	{
		G_B9_0 = (1.0f);
	}

IL_0053:
	{
		V_2 = G_B9_0;
		goto IL_005a;
	}

IL_0056:
	{
		// return a;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7967));
		float L_14 = ___0_a;
		V_2 = L_14;
		goto IL_005a;
	}

IL_005a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7968));
		float L_15 = V_2;
		return L_15;
	}
}
// System.Boolean OVRInput::ShouldResolveController(OVRInput/Controller,OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRInput_ShouldResolveController_m28BB36AA2D586B8F1C75071D26654B77285AA952 (int32_t ___0_controllerType, int32_t ___1_controllerMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_ShouldResolveController_m28BB36AA2D586B8F1C75071D26654B77285AA952_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_controllerType), (&___1_controllerMask));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRInput_ShouldResolveController_m28BB36AA2D586B8F1C75071D26654B77285AA952_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7969));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7970));
	int32_t G_B6_0 = 0;
	int32_t G_B12_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7971));
		// bool isValid = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7972));
		V_0 = (bool)0;
		// if ((controllerType & controllerMask) == controllerType)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7973));
		int32_t L_0 = ___0_controllerType;
		int32_t L_1 = ___1_controllerMask;
		int32_t L_2 = ___0_controllerType;
		V_1 = (bool)((((int32_t)((int32_t)((int32_t)L_0&(int32_t)L_1))) == ((int32_t)L_2))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7974));
		bool L_3 = V_1;
		if (!L_3)
		{
			goto IL_0011;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7975));
		// isValid = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7976));
		V_0 = (bool)1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7977));
	}

IL_0011:
	{
		// if (((controllerMask & Controller.Touch) == Controller.Touch)
		//     && ((controllerType & Controller.Touch) != 0)
		//     && ((controllerType & Controller.Touch) != Controller.Touch))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7978));
		int32_t L_4 = ___1_controllerMask;
		if ((!(((uint32_t)((int32_t)((int32_t)L_4&3))) == ((uint32_t)3))))
		{
			goto IL_0027;
		}
	}
	{
		int32_t L_5 = ___0_controllerType;
		if (!((int32_t)((int32_t)L_5&3)))
		{
			goto IL_0027;
		}
	}
	{
		int32_t L_6 = ___0_controllerType;
		G_B6_0 = ((((int32_t)((((int32_t)((int32_t)((int32_t)L_6&3))) == ((int32_t)3))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_0028;
	}

IL_0027:
	{
		G_B6_0 = 0;
	}

IL_0028:
	{
		V_2 = (bool)G_B6_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7979));
		bool L_7 = V_2;
		if (!L_7)
		{
			goto IL_0030;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7980));
		// isValid = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7981));
		V_0 = (bool)0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7982));
	}

IL_0030:
	{
		// if (((controllerMask & Controller.Hands) == Controller.Hands)
		//     && ((controllerType & Controller.Hands) != 0)
		//     && ((controllerType & Controller.Hands) != Controller.Hands))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7983));
		int32_t L_8 = ___1_controllerMask;
		if ((!(((uint32_t)((int32_t)((int32_t)L_8&((int32_t)96)))) == ((uint32_t)((int32_t)96)))))
		{
			goto IL_004b;
		}
	}
	{
		int32_t L_9 = ___0_controllerType;
		if (!((int32_t)((int32_t)L_9&((int32_t)96))))
		{
			goto IL_004b;
		}
	}
	{
		int32_t L_10 = ___0_controllerType;
		G_B12_0 = ((((int32_t)((((int32_t)((int32_t)((int32_t)L_10&((int32_t)96)))) == ((int32_t)((int32_t)96)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_004c;
	}

IL_004b:
	{
		G_B12_0 = 0;
	}

IL_004c:
	{
		V_3 = (bool)G_B12_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7984));
		bool L_11 = V_3;
		if (!L_11)
		{
			goto IL_0054;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7985));
		// isValid = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7986));
		V_0 = (bool)0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7987));
	}

IL_0054:
	{
		// return isValid;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7988));
		bool L_12 = V_0;
		V_4 = L_12;
		goto IL_0059;
	}

IL_0059:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7989));
		bool L_13 = V_4;
		return L_13;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: OVRInput/HapticsAmplitudeEnvelopeVibration
IL2CPP_EXTERN_C void HapticsAmplitudeEnvelopeVibration_t2EDF01B96CFAC2D09DDCAACEDEA5C2F534F252C9_marshal_pinvoke(const HapticsAmplitudeEnvelopeVibration_t2EDF01B96CFAC2D09DDCAACEDEA5C2F534F252C9& unmarshaled, HapticsAmplitudeEnvelopeVibration_t2EDF01B96CFAC2D09DDCAACEDEA5C2F534F252C9_marshaled_pinvoke& marshaled)
{
	marshaled.___SamplesCount_0 = unmarshaled.___SamplesCount_0;
	marshaled.___Samples_1 = il2cpp_codegen_com_marshal_safe_array(IL2CPP_VT_R4, unmarshaled.___Samples_1);
	marshaled.___Duration_2 = unmarshaled.___Duration_2;
}
IL2CPP_EXTERN_C void HapticsAmplitudeEnvelopeVibration_t2EDF01B96CFAC2D09DDCAACEDEA5C2F534F252C9_marshal_pinvoke_back(const HapticsAmplitudeEnvelopeVibration_t2EDF01B96CFAC2D09DDCAACEDEA5C2F534F252C9_marshaled_pinvoke& marshaled, HapticsAmplitudeEnvelopeVibration_t2EDF01B96CFAC2D09DDCAACEDEA5C2F534F252C9& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t unmarshaledSamplesCount_temp_0 = 0;
	unmarshaledSamplesCount_temp_0 = marshaled.___SamplesCount_0;
	unmarshaled.___SamplesCount_0 = unmarshaledSamplesCount_temp_0;
	unmarshaled.___Samples_1 = (SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C*)il2cpp_codegen_com_marshal_safe_array_result(IL2CPP_VT_R4, Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_il2cpp_TypeInfo_var, marshaled.___Samples_1);
	Il2CppCodeGenWriteBarrier((void**)(&unmarshaled.___Samples_1), (void*)(SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C*)il2cpp_codegen_com_marshal_safe_array_result(IL2CPP_VT_R4, Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_il2cpp_TypeInfo_var, marshaled.___Samples_1));
	float unmarshaledDuration_temp_2 = 0.0f;
	unmarshaledDuration_temp_2 = marshaled.___Duration_2;
	unmarshaled.___Duration_2 = unmarshaledDuration_temp_2;
}
// Conversion method for clean up from marshalling of: OVRInput/HapticsAmplitudeEnvelopeVibration
IL2CPP_EXTERN_C void HapticsAmplitudeEnvelopeVibration_t2EDF01B96CFAC2D09DDCAACEDEA5C2F534F252C9_marshal_pinvoke_cleanup(HapticsAmplitudeEnvelopeVibration_t2EDF01B96CFAC2D09DDCAACEDEA5C2F534F252C9_marshaled_pinvoke& marshaled)
{
	il2cpp_codegen_com_destroy_safe_array(marshaled.___Samples_1);
	marshaled.___Samples_1 = NULL;
}
// Conversion methods for marshalling of: OVRInput/HapticsAmplitudeEnvelopeVibration
IL2CPP_EXTERN_C void HapticsAmplitudeEnvelopeVibration_t2EDF01B96CFAC2D09DDCAACEDEA5C2F534F252C9_marshal_com(const HapticsAmplitudeEnvelopeVibration_t2EDF01B96CFAC2D09DDCAACEDEA5C2F534F252C9& unmarshaled, HapticsAmplitudeEnvelopeVibration_t2EDF01B96CFAC2D09DDCAACEDEA5C2F534F252C9_marshaled_com& marshaled)
{
	marshaled.___SamplesCount_0 = unmarshaled.___SamplesCount_0;
	marshaled.___Samples_1 = il2cpp_codegen_com_marshal_safe_array(IL2CPP_VT_R4, unmarshaled.___Samples_1);
	marshaled.___Duration_2 = unmarshaled.___Duration_2;
}
IL2CPP_EXTERN_C void HapticsAmplitudeEnvelopeVibration_t2EDF01B96CFAC2D09DDCAACEDEA5C2F534F252C9_marshal_com_back(const HapticsAmplitudeEnvelopeVibration_t2EDF01B96CFAC2D09DDCAACEDEA5C2F534F252C9_marshaled_com& marshaled, HapticsAmplitudeEnvelopeVibration_t2EDF01B96CFAC2D09DDCAACEDEA5C2F534F252C9& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t unmarshaledSamplesCount_temp_0 = 0;
	unmarshaledSamplesCount_temp_0 = marshaled.___SamplesCount_0;
	unmarshaled.___SamplesCount_0 = unmarshaledSamplesCount_temp_0;
	unmarshaled.___Samples_1 = (SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C*)il2cpp_codegen_com_marshal_safe_array_result(IL2CPP_VT_R4, Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_il2cpp_TypeInfo_var, marshaled.___Samples_1);
	Il2CppCodeGenWriteBarrier((void**)(&unmarshaled.___Samples_1), (void*)(SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C*)il2cpp_codegen_com_marshal_safe_array_result(IL2CPP_VT_R4, Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_il2cpp_TypeInfo_var, marshaled.___Samples_1));
	float unmarshaledDuration_temp_2 = 0.0f;
	unmarshaledDuration_temp_2 = marshaled.___Duration_2;
	unmarshaled.___Duration_2 = unmarshaledDuration_temp_2;
}
// Conversion method for clean up from marshalling of: OVRInput/HapticsAmplitudeEnvelopeVibration
IL2CPP_EXTERN_C void HapticsAmplitudeEnvelopeVibration_t2EDF01B96CFAC2D09DDCAACEDEA5C2F534F252C9_marshal_com_cleanup(HapticsAmplitudeEnvelopeVibration_t2EDF01B96CFAC2D09DDCAACEDEA5C2F534F252C9_marshaled_com& marshaled)
{
	il2cpp_codegen_com_destroy_safe_array(marshaled.___Samples_1);
	marshaled.___Samples_1 = NULL;
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: OVRInput/HapticsPcmVibration
IL2CPP_EXTERN_C void HapticsPcmVibration_tA67530C77AF893E2DAE4AC825EB6477B76251781_marshal_pinvoke(const HapticsPcmVibration_tA67530C77AF893E2DAE4AC825EB6477B76251781& unmarshaled, HapticsPcmVibration_tA67530C77AF893E2DAE4AC825EB6477B76251781_marshaled_pinvoke& marshaled)
{
	marshaled.___SamplesCount_0 = unmarshaled.___SamplesCount_0;
	marshaled.___Samples_1 = il2cpp_codegen_com_marshal_safe_array(IL2CPP_VT_R4, unmarshaled.___Samples_1);
	marshaled.___SampleRateHz_2 = unmarshaled.___SampleRateHz_2;
	marshaled.___Append_3 = static_cast<int32_t>(unmarshaled.___Append_3);
}
IL2CPP_EXTERN_C void HapticsPcmVibration_tA67530C77AF893E2DAE4AC825EB6477B76251781_marshal_pinvoke_back(const HapticsPcmVibration_tA67530C77AF893E2DAE4AC825EB6477B76251781_marshaled_pinvoke& marshaled, HapticsPcmVibration_tA67530C77AF893E2DAE4AC825EB6477B76251781& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t unmarshaledSamplesCount_temp_0 = 0;
	unmarshaledSamplesCount_temp_0 = marshaled.___SamplesCount_0;
	unmarshaled.___SamplesCount_0 = unmarshaledSamplesCount_temp_0;
	unmarshaled.___Samples_1 = (SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C*)il2cpp_codegen_com_marshal_safe_array_result(IL2CPP_VT_R4, Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_il2cpp_TypeInfo_var, marshaled.___Samples_1);
	Il2CppCodeGenWriteBarrier((void**)(&unmarshaled.___Samples_1), (void*)(SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C*)il2cpp_codegen_com_marshal_safe_array_result(IL2CPP_VT_R4, Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_il2cpp_TypeInfo_var, marshaled.___Samples_1));
	float unmarshaledSampleRateHz_temp_2 = 0.0f;
	unmarshaledSampleRateHz_temp_2 = marshaled.___SampleRateHz_2;
	unmarshaled.___SampleRateHz_2 = unmarshaledSampleRateHz_temp_2;
	bool unmarshaledAppend_temp_3 = false;
	unmarshaledAppend_temp_3 = static_cast<bool>(marshaled.___Append_3);
	unmarshaled.___Append_3 = unmarshaledAppend_temp_3;
}
// Conversion method for clean up from marshalling of: OVRInput/HapticsPcmVibration
IL2CPP_EXTERN_C void HapticsPcmVibration_tA67530C77AF893E2DAE4AC825EB6477B76251781_marshal_pinvoke_cleanup(HapticsPcmVibration_tA67530C77AF893E2DAE4AC825EB6477B76251781_marshaled_pinvoke& marshaled)
{
	il2cpp_codegen_com_destroy_safe_array(marshaled.___Samples_1);
	marshaled.___Samples_1 = NULL;
}
// Conversion methods for marshalling of: OVRInput/HapticsPcmVibration
IL2CPP_EXTERN_C void HapticsPcmVibration_tA67530C77AF893E2DAE4AC825EB6477B76251781_marshal_com(const HapticsPcmVibration_tA67530C77AF893E2DAE4AC825EB6477B76251781& unmarshaled, HapticsPcmVibration_tA67530C77AF893E2DAE4AC825EB6477B76251781_marshaled_com& marshaled)
{
	marshaled.___SamplesCount_0 = unmarshaled.___SamplesCount_0;
	marshaled.___Samples_1 = il2cpp_codegen_com_marshal_safe_array(IL2CPP_VT_R4, unmarshaled.___Samples_1);
	marshaled.___SampleRateHz_2 = unmarshaled.___SampleRateHz_2;
	marshaled.___Append_3 = static_cast<int32_t>(unmarshaled.___Append_3);
}
IL2CPP_EXTERN_C void HapticsPcmVibration_tA67530C77AF893E2DAE4AC825EB6477B76251781_marshal_com_back(const HapticsPcmVibration_tA67530C77AF893E2DAE4AC825EB6477B76251781_marshaled_com& marshaled, HapticsPcmVibration_tA67530C77AF893E2DAE4AC825EB6477B76251781& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t unmarshaledSamplesCount_temp_0 = 0;
	unmarshaledSamplesCount_temp_0 = marshaled.___SamplesCount_0;
	unmarshaled.___SamplesCount_0 = unmarshaledSamplesCount_temp_0;
	unmarshaled.___Samples_1 = (SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C*)il2cpp_codegen_com_marshal_safe_array_result(IL2CPP_VT_R4, Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_il2cpp_TypeInfo_var, marshaled.___Samples_1);
	Il2CppCodeGenWriteBarrier((void**)(&unmarshaled.___Samples_1), (void*)(SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C*)il2cpp_codegen_com_marshal_safe_array_result(IL2CPP_VT_R4, Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_il2cpp_TypeInfo_var, marshaled.___Samples_1));
	float unmarshaledSampleRateHz_temp_2 = 0.0f;
	unmarshaledSampleRateHz_temp_2 = marshaled.___SampleRateHz_2;
	unmarshaled.___SampleRateHz_2 = unmarshaledSampleRateHz_temp_2;
	bool unmarshaledAppend_temp_3 = false;
	unmarshaledAppend_temp_3 = static_cast<bool>(marshaled.___Append_3);
	unmarshaled.___Append_3 = unmarshaledAppend_temp_3;
}
// Conversion method for clean up from marshalling of: OVRInput/HapticsPcmVibration
IL2CPP_EXTERN_C void HapticsPcmVibration_tA67530C77AF893E2DAE4AC825EB6477B76251781_marshal_com_cleanup(HapticsPcmVibration_tA67530C77AF893E2DAE4AC825EB6477B76251781_marshaled_com& marshaled)
{
	il2cpp_codegen_com_destroy_safe_array(marshaled.___Samples_1);
	marshaled.___Samples_1 = NULL;
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void OVRInput/HapticInfo::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HapticInfo__ctor_m386E367D1A8EB72F22817794BDD0E4EAD8210F0F (HapticInfo_t614DAC0509051DC76FD4D48A1D591505E22DE950* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&HapticInfo__ctor_m386E367D1A8EB72F22817794BDD0E4EAD8210F0F_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HapticInfo__ctor_m386E367D1A8EB72F22817794BDD0E4EAD8210F0F_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void OVRInput/OVRControllerBase::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerBase__ctor_m19E323A6D3242829EDFA1879B8B8C0525806A124 (OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase__ctor_m19E323A6D3242829EDFA1879B8B8C0525806A124_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&UInt32U5BU5D_t02FBD658AD156A17574ECE6106CF1FBFCC9807FA_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerBase__ctor_m19E323A6D3242829EDFA1879B8B8C0525806A124_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7990));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 7991));
	{
		// public Controller controllerType = Controller.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7992));
		__this->___controllerType_0 = 0;
		// public VirtualButtonMap buttonMap = new VirtualButtonMap();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7993));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7994));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_0 = (VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6*)il2cpp_codegen_object_new(VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6_il2cpp_TypeInfo_var);
		NullCheck(L_0);
		VirtualButtonMap__ctor_m84849058BF5B2AE16FBEA486FC58B59641A134D5(L_0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7994));
		__this->___buttonMap_1 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___buttonMap_1), (void*)L_0);
		// public VirtualTouchMap touchMap = new VirtualTouchMap();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7995));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7996));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_1 = (VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169*)il2cpp_codegen_object_new(VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169_il2cpp_TypeInfo_var);
		NullCheck(L_1);
		VirtualTouchMap__ctor_mF8C09D67EE6EF2B426DFE0AF08FE81B9CD38CDCA(L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7996));
		__this->___touchMap_2 = L_1;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___touchMap_2), (void*)L_1);
		// public VirtualNearTouchMap nearTouchMap = new VirtualNearTouchMap();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7997));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7998));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_2 = (VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3*)il2cpp_codegen_object_new(VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3_il2cpp_TypeInfo_var);
		NullCheck(L_2);
		VirtualNearTouchMap__ctor_m29091026E28CD564A8098B5BB557397C2B8A4B86(L_2, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7998));
		__this->___nearTouchMap_3 = L_2;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___nearTouchMap_3), (void*)L_2);
		// public VirtualAxis1DMap axis1DMap = new VirtualAxis1DMap();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 7999));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8000));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_3 = (VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD*)il2cpp_codegen_object_new(VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD_il2cpp_TypeInfo_var);
		NullCheck(L_3);
		VirtualAxis1DMap__ctor_m7AF1E2FD0D217CE37E1C60CE9F873E253CB7ADFB(L_3, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8000));
		__this->___axis1DMap_4 = L_3;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___axis1DMap_4), (void*)L_3);
		// public VirtualAxis2DMap axis2DMap = new VirtualAxis2DMap();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8001));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8002));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_4 = (VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10*)il2cpp_codegen_object_new(VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10_il2cpp_TypeInfo_var);
		NullCheck(L_4);
		VirtualAxis2DMap__ctor_m53A66F09A2A2B816DEDE021C7781DA2422E64C92(L_4, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8002));
		__this->___axis2DMap_5 = L_4;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___axis2DMap_5), (void*)L_4);
		// public OVRPlugin.ControllerState5 previousState = new OVRPlugin.ControllerState5();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8003));
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_5 = (&__this->___previousState_6);
		il2cpp_codegen_initobj(L_5, sizeof(ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA));
		// public OVRPlugin.ControllerState5 currentState = new OVRPlugin.ControllerState5();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8004));
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_6 = (&__this->___currentState_7);
		il2cpp_codegen_initobj(L_6, sizeof(ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA));
		// public bool shouldApplyDeadzone = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8005));
		__this->___shouldApplyDeadzone_8 = (bool)1;
		// private UInt32[] HapticsPcmSamplesConsumedCache = new UInt32[1];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8006));
		UInt32U5BU5D_t02FBD658AD156A17574ECE6106CF1FBFCC9807FA* L_7 = (UInt32U5BU5D_t02FBD658AD156A17574ECE6106CF1FBFCC9807FA*)(UInt32U5BU5D_t02FBD658AD156A17574ECE6106CF1FBFCC9807FA*)SZArrayNew(UInt32U5BU5D_t02FBD658AD156A17574ECE6106CF1FBFCC9807FA_il2cpp_TypeInfo_var, (uint32_t)1);
		__this->___HapticsPcmSamplesConsumedCache_9 = L_7;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___HapticsPcmSamplesConsumedCache_9), (void*)L_7);
		// public OVRControllerBase()
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8007));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8008));
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8008));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8009));
		// ConfigureButtonMap();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8010));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8011));
		VirtualActionInvoker0::Invoke(11 /* System.Void OVRInput/OVRControllerBase::ConfigureButtonMap() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8011));
		// ConfigureTouchMap();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8012));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8013));
		VirtualActionInvoker0::Invoke(12 /* System.Void OVRInput/OVRControllerBase::ConfigureTouchMap() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8013));
		// ConfigureNearTouchMap();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8014));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8015));
		VirtualActionInvoker0::Invoke(13 /* System.Void OVRInput/OVRControllerBase::ConfigureNearTouchMap() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8015));
		// ConfigureAxis1DMap();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8016));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8017));
		VirtualActionInvoker0::Invoke(14 /* System.Void OVRInput/OVRControllerBase::ConfigureAxis1DMap() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8017));
		// ConfigureAxis2DMap();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8018));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8019));
		VirtualActionInvoker0::Invoke(15 /* System.Void OVRInput/OVRControllerBase::ConfigureAxis2DMap() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8019));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8020));
		return;
	}
}
// OVRInput/Controller OVRInput/OVRControllerBase::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRControllerBase_Update_m83F4E43964468AD8FA7FCD721B62297D8A8E18B9 (OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Controller_tBCAA59EAD9BFE2381E974A48B203D044B6CE1ECB_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_Update_m83F4E43964468AD8FA7FCD721B62297D8A8E18B9_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA V_0;
	memset((&V_0), 0, sizeof(V_0));
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	bool V_10 = false;
	bool V_11 = false;
	bool V_12 = false;
	bool V_13 = false;
	int32_t V_14 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerBase_Update_m83F4E43964468AD8FA7FCD721B62297D8A8E18B9_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8021));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8022));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8023));
		// if (OVRManager.loadedXRDevice == OVRManager.XRDevice.OpenVR && ( (controllerType & Controller.Touch) != 0) )
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8024));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___loadedXRDevice_85;
		if ((!(((uint32_t)L_0) == ((uint32_t)2))))
		{
			goto IL_0016;
		}
	}
	{
		int32_t L_1 = __this->___controllerType_0;
		G_B3_0 = ((!(((uint32_t)((int32_t)((int32_t)L_1&3))) <= ((uint32_t)0)))? 1 : 0);
		goto IL_0017;
	}

IL_0016:
	{
		G_B3_0 = 0;
	}

IL_0017:
	{
		V_1 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8025));
		bool L_2 = V_1;
		if (!L_2)
		{
			goto IL_002a;
		}
	}
	{
		// state = GetOpenVRControllerState(controllerType);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8026));
		int32_t L_3 = __this->___controllerType_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8027));
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA L_4;
		L_4 = OVRControllerBase_GetOpenVRControllerState_mF56623CE6E48517ACE0CF8862C0B6377669DEE03(__this, L_3, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8027));
		V_0 = L_4;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8028));
		goto IL_0036;
	}

IL_002a:
	{
		// state = OVRPlugin.GetControllerState5((uint)controllerType);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8029));
		int32_t L_5 = __this->___controllerType_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8030));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA L_6;
		L_6 = OVRPlugin_GetControllerState5_mAA377A20B26D6410B559B2C579384E0E80F2A2F3(L_5, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8030));
		V_0 = L_6;
	}

IL_0036:
	{
		// if (state.LIndexTrigger >= AXIS_AS_BUTTON_THRESHOLD)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8031));
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA L_7 = V_0;
		float L_8 = L_7.___LIndexTrigger_4;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_9 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___AXIS_AS_BUTTON_THRESHOLD_0;
		V_2 = (bool)((((int32_t)((!(((float)L_8) >= ((float)L_9)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8032));
		bool L_10 = V_2;
		if (!L_10)
		{
			goto IL_005a;
		}
	}
	{
		// state.Buttons |= (uint)RawButton.LIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8033));
		uint32_t* L_11 = (&(&V_0)->___Buttons_1);
		uint32_t* L_12 = L_11;
		int32_t L_13 = *((uint32_t*)L_12);
		*((int32_t*)L_12) = (int32_t)((int32_t)(L_13|((int32_t)268435456)));
	}

IL_005a:
	{
		// if (state.LHandTrigger >= AXIS_AS_BUTTON_THRESHOLD)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8034));
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA L_14 = V_0;
		float L_15 = L_14.___LHandTrigger_6;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_16 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___AXIS_AS_BUTTON_THRESHOLD_0;
		V_3 = (bool)((((int32_t)((!(((float)L_15) >= ((float)L_16)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8035));
		bool L_17 = V_3;
		if (!L_17)
		{
			goto IL_007e;
		}
	}
	{
		// state.Buttons |= (uint)RawButton.LHandTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8036));
		uint32_t* L_18 = (&(&V_0)->___Buttons_1);
		uint32_t* L_19 = L_18;
		int32_t L_20 = *((uint32_t*)L_19);
		*((int32_t*)L_19) = (int32_t)((int32_t)(L_20|((int32_t)536870912)));
	}

IL_007e:
	{
		// if (state.LThumbstick.y >= AXIS_AS_BUTTON_THRESHOLD)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8037));
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA L_21 = V_0;
		Vector2f_tB2A7770F503276F90D359B6933F0A86D51BA3186 L_22 = L_21.___LThumbstick_8;
		float L_23 = L_22.___y_1;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_24 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___AXIS_AS_BUTTON_THRESHOLD_0;
		V_4 = (bool)((((int32_t)((!(((float)L_23) >= ((float)L_24)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8038));
		bool L_25 = V_4;
		if (!L_25)
		{
			goto IL_00a6;
		}
	}
	{
		// state.Buttons |= (uint)RawButton.LThumbstickUp;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8039));
		uint32_t* L_26 = (&(&V_0)->___Buttons_1);
		uint32_t* L_27 = L_26;
		int32_t L_28 = *((uint32_t*)L_27);
		*((int32_t*)L_27) = (int32_t)((int32_t)(L_28|((int32_t)16)));
	}

IL_00a6:
	{
		// if (state.LThumbstick.y <= -AXIS_AS_BUTTON_THRESHOLD)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8040));
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA L_29 = V_0;
		Vector2f_tB2A7770F503276F90D359B6933F0A86D51BA3186 L_30 = L_29.___LThumbstick_8;
		float L_31 = L_30.___y_1;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_32 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___AXIS_AS_BUTTON_THRESHOLD_0;
		V_5 = (bool)((((int32_t)((!(((float)L_31) <= ((float)((-L_32)))))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8041));
		bool L_33 = V_5;
		if (!L_33)
		{
			goto IL_00cf;
		}
	}
	{
		// state.Buttons |= (uint)RawButton.LThumbstickDown;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8042));
		uint32_t* L_34 = (&(&V_0)->___Buttons_1);
		uint32_t* L_35 = L_34;
		int32_t L_36 = *((uint32_t*)L_35);
		*((int32_t*)L_35) = (int32_t)((int32_t)(L_36|((int32_t)32)));
	}

IL_00cf:
	{
		// if (state.LThumbstick.x <= -AXIS_AS_BUTTON_THRESHOLD)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8043));
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA L_37 = V_0;
		Vector2f_tB2A7770F503276F90D359B6933F0A86D51BA3186 L_38 = L_37.___LThumbstick_8;
		float L_39 = L_38.___x_0;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_40 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___AXIS_AS_BUTTON_THRESHOLD_0;
		V_6 = (bool)((((int32_t)((!(((float)L_39) <= ((float)((-L_40)))))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8044));
		bool L_41 = V_6;
		if (!L_41)
		{
			goto IL_00f8;
		}
	}
	{
		// state.Buttons |= (uint)RawButton.LThumbstickLeft;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8045));
		uint32_t* L_42 = (&(&V_0)->___Buttons_1);
		uint32_t* L_43 = L_42;
		int32_t L_44 = *((uint32_t*)L_43);
		*((int32_t*)L_43) = (int32_t)((int32_t)(L_44|((int32_t)64)));
	}

IL_00f8:
	{
		// if (state.LThumbstick.x >= AXIS_AS_BUTTON_THRESHOLD)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8046));
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA L_45 = V_0;
		Vector2f_tB2A7770F503276F90D359B6933F0A86D51BA3186 L_46 = L_45.___LThumbstick_8;
		float L_47 = L_46.___x_0;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_48 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___AXIS_AS_BUTTON_THRESHOLD_0;
		V_7 = (bool)((((int32_t)((!(((float)L_47) >= ((float)L_48)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8047));
		bool L_49 = V_7;
		if (!L_49)
		{
			goto IL_0123;
		}
	}
	{
		// state.Buttons |= (uint)RawButton.LThumbstickRight;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8048));
		uint32_t* L_50 = (&(&V_0)->___Buttons_1);
		uint32_t* L_51 = L_50;
		int32_t L_52 = *((uint32_t*)L_51);
		*((int32_t*)L_51) = (int32_t)((int32_t)(L_52|((int32_t)128)));
	}

IL_0123:
	{
		// if (state.RIndexTrigger >= AXIS_AS_BUTTON_THRESHOLD)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8049));
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA L_53 = V_0;
		float L_54 = L_53.___RIndexTrigger_5;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_55 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___AXIS_AS_BUTTON_THRESHOLD_0;
		V_8 = (bool)((((int32_t)((!(((float)L_54) >= ((float)L_55)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8050));
		bool L_56 = V_8;
		if (!L_56)
		{
			goto IL_0149;
		}
	}
	{
		// state.Buttons |= (uint)RawButton.RIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8051));
		uint32_t* L_57 = (&(&V_0)->___Buttons_1);
		uint32_t* L_58 = L_57;
		int32_t L_59 = *((uint32_t*)L_58);
		*((int32_t*)L_58) = (int32_t)((int32_t)(L_59|((int32_t)67108864)));
	}

IL_0149:
	{
		// if (state.RHandTrigger >= AXIS_AS_BUTTON_THRESHOLD)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8052));
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA L_60 = V_0;
		float L_61 = L_60.___RHandTrigger_7;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_62 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___AXIS_AS_BUTTON_THRESHOLD_0;
		V_9 = (bool)((((int32_t)((!(((float)L_61) >= ((float)L_62)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8053));
		bool L_63 = V_9;
		if (!L_63)
		{
			goto IL_016f;
		}
	}
	{
		// state.Buttons |= (uint)RawButton.RHandTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8054));
		uint32_t* L_64 = (&(&V_0)->___Buttons_1);
		uint32_t* L_65 = L_64;
		int32_t L_66 = *((uint32_t*)L_65);
		*((int32_t*)L_65) = (int32_t)((int32_t)(L_66|((int32_t)134217728)));
	}

IL_016f:
	{
		// if (state.RThumbstick.y >= AXIS_AS_BUTTON_THRESHOLD)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8055));
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA L_67 = V_0;
		Vector2f_tB2A7770F503276F90D359B6933F0A86D51BA3186 L_68 = L_67.___RThumbstick_9;
		float L_69 = L_68.___y_1;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_70 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___AXIS_AS_BUTTON_THRESHOLD_0;
		V_10 = (bool)((((int32_t)((!(((float)L_69) >= ((float)L_70)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8056));
		bool L_71 = V_10;
		if (!L_71)
		{
			goto IL_019a;
		}
	}
	{
		// state.Buttons |= (uint)RawButton.RThumbstickUp;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8057));
		uint32_t* L_72 = (&(&V_0)->___Buttons_1);
		uint32_t* L_73 = L_72;
		int32_t L_74 = *((uint32_t*)L_73);
		*((int32_t*)L_73) = (int32_t)((int32_t)(L_74|((int32_t)4096)));
	}

IL_019a:
	{
		// if (state.RThumbstick.y <= -AXIS_AS_BUTTON_THRESHOLD)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8058));
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA L_75 = V_0;
		Vector2f_tB2A7770F503276F90D359B6933F0A86D51BA3186 L_76 = L_75.___RThumbstick_9;
		float L_77 = L_76.___y_1;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_78 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___AXIS_AS_BUTTON_THRESHOLD_0;
		V_11 = (bool)((((int32_t)((!(((float)L_77) <= ((float)((-L_78)))))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8059));
		bool L_79 = V_11;
		if (!L_79)
		{
			goto IL_01c6;
		}
	}
	{
		// state.Buttons |= (uint)RawButton.RThumbstickDown;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8060));
		uint32_t* L_80 = (&(&V_0)->___Buttons_1);
		uint32_t* L_81 = L_80;
		int32_t L_82 = *((uint32_t*)L_81);
		*((int32_t*)L_81) = (int32_t)((int32_t)(L_82|((int32_t)8192)));
	}

IL_01c6:
	{
		// if (state.RThumbstick.x <= -AXIS_AS_BUTTON_THRESHOLD)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8061));
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA L_83 = V_0;
		Vector2f_tB2A7770F503276F90D359B6933F0A86D51BA3186 L_84 = L_83.___RThumbstick_9;
		float L_85 = L_84.___x_0;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_86 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___AXIS_AS_BUTTON_THRESHOLD_0;
		V_12 = (bool)((((int32_t)((!(((float)L_85) <= ((float)((-L_86)))))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8062));
		bool L_87 = V_12;
		if (!L_87)
		{
			goto IL_01f2;
		}
	}
	{
		// state.Buttons |= (uint)RawButton.RThumbstickLeft;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8063));
		uint32_t* L_88 = (&(&V_0)->___Buttons_1);
		uint32_t* L_89 = L_88;
		int32_t L_90 = *((uint32_t*)L_89);
		*((int32_t*)L_89) = (int32_t)((int32_t)(L_90|((int32_t)16384)));
	}

IL_01f2:
	{
		// if (state.RThumbstick.x >= AXIS_AS_BUTTON_THRESHOLD)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8064));
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA L_91 = V_0;
		Vector2f_tB2A7770F503276F90D359B6933F0A86D51BA3186 L_92 = L_91.___RThumbstick_9;
		float L_93 = L_92.___x_0;
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		float L_94 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___AXIS_AS_BUTTON_THRESHOLD_0;
		V_13 = (bool)((((int32_t)((!(((float)L_93) >= ((float)L_94)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8065));
		bool L_95 = V_13;
		if (!L_95)
		{
			goto IL_021d;
		}
	}
	{
		// state.Buttons |= (uint)RawButton.RThumbstickRight;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8066));
		uint32_t* L_96 = (&(&V_0)->___Buttons_1);
		uint32_t* L_97 = L_96;
		int32_t L_98 = *((uint32_t*)L_97);
		*((int32_t*)L_97) = (int32_t)((int32_t)(L_98|((int32_t)32768)));
	}

IL_021d:
	{
		// previousState = currentState;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8067));
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA L_99 = __this->___currentState_7;
		__this->___previousState_6 = L_99;
		// currentState = state;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8068));
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA L_100 = V_0;
		__this->___currentState_7 = L_100;
		// return ((Controller)currentState.ConnectedControllers & controllerType);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8069));
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_101 = (&__this->___currentState_7);
		uint32_t L_102 = L_101->___ConnectedControllers_0;
		int32_t L_103 = __this->___controllerType_0;
		V_14 = ((int32_t)((int32_t)L_102&(int32_t)L_103));
		goto IL_0246;
	}

IL_0246:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8070));
		int32_t L_104 = V_14;
		return L_104;
	}
}
// OVRPlugin/ControllerState5 OVRInput/OVRControllerBase::GetOpenVRControllerState(OVRInput/Controller)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA OVRControllerBase_GetOpenVRControllerState_mF56623CE6E48517ACE0CF8862C0B6377669DEE03 (OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* __this, int32_t ___0_controllerType, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_GetOpenVRControllerState_mF56623CE6E48517ACE0CF8862C0B6377669DEE03_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VRControllerState_t_t50475AF703AB39117DE2C6CE266154309CD9BD4D_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA V_0;
	memset((&V_0), 0, sizeof(V_0));
	bool V_1 = false;
	VRControllerState_t_t50475AF703AB39117DE2C6CE266154309CD9BD4D V_2;
	memset((&V_2), 0, sizeof(V_2));
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	VRControllerState_t_t50475AF703AB39117DE2C6CE266154309CD9BD4D V_10;
	memset((&V_10), 0, sizeof(V_10));
	bool V_11 = false;
	bool V_12 = false;
	bool V_13 = false;
	bool V_14 = false;
	bool V_15 = false;
	bool V_16 = false;
	ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA V_17;
	memset((&V_17), 0, sizeof(V_17));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_controllerType));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_2), (&V_10));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerBase_GetOpenVRControllerState_mF56623CE6E48517ACE0CF8862C0B6377669DEE03_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8071));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8072));
	int32_t G_B3_0 = 0;
	int32_t G_B11_0 = 0;
	int32_t G_B20_0 = 0;
	ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* G_B23_0 = NULL;
	ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* G_B22_0 = NULL;
	int32_t G_B24_0 = 0;
	ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* G_B24_1 = NULL;
	int32_t G_B29_0 = 0;
	int32_t G_B37_0 = 0;
	int32_t G_B46_0 = 0;
	ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* G_B49_0 = NULL;
	ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* G_B48_0 = NULL;
	int32_t G_B50_0 = 0;
	ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* G_B50_1 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8073));
		// OVRPlugin.ControllerState5 state = new OVRPlugin.ControllerState5();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8074));
		il2cpp_codegen_initobj((&V_0), sizeof(ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA));
		// if ((controllerType & Controller.LTouch) == Controller.LTouch && IsValidOpenVRDevice(openVRControllerDetails[0].deviceID))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8075));
		int32_t L_0 = ___0_controllerType;
		if ((!(((uint32_t)((int32_t)((int32_t)L_0&1))) == ((uint32_t)1))))
		{
			goto IL_0026;
		}
	}
	{
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_1 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_1);
		uint32_t L_2 = ((L_1)->GetAddressAt(static_cast<il2cpp_array_size_t>(0)))->___deviceID_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8076));
		bool L_3;
		L_3 = OVRInput_IsValidOpenVRDevice_m7ADD9AC581CBA6737A77731FEB481BD1E9D75B64(L_2, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8076));
		G_B3_0 = ((int32_t)(L_3));
		goto IL_0027;
	}

IL_0026:
	{
		G_B3_0 = 0;
	}

IL_0027:
	{
		V_1 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8077));
		bool L_4 = V_1;
		if (!L_4)
		{
			goto IL_01ca;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8078));
		// OVR.OpenVR.VRControllerState_t leftControllerState = openVRControllerDetails[0].state;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8079));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_5 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_5);
		VRControllerState_t_t50475AF703AB39117DE2C6CE266154309CD9BD4D L_6 = ((L_5)->GetAddressAt(static_cast<il2cpp_array_size_t>(0)))->___state_0;
		V_2 = L_6;
		// if ((leftControllerState.ulButtonPressed & ((ulong)OpenVRButton.Two)) == (ulong)OpenVRButton.Two)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8080));
		VRControllerState_t_t50475AF703AB39117DE2C6CE266154309CD9BD4D L_7 = V_2;
		uint64_t L_8 = L_7.___ulButtonPressed_1;
		V_3 = (bool)((((int64_t)((int64_t)((int64_t)L_8&((int64_t)2)))) == ((int64_t)((int64_t)2)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8081));
		bool L_9 = V_3;
		if (!L_9)
		{
			goto IL_0061;
		}
	}
	{
		// state.Buttons |= (uint)RawButton.Y;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8082));
		uint32_t* L_10 = (&(&V_0)->___Buttons_1);
		uint32_t* L_11 = L_10;
		int32_t L_12 = *((uint32_t*)L_11);
		*((int32_t*)L_11) = (int32_t)((int32_t)(L_12|((int32_t)512)));
	}

IL_0061:
	{
		// if ((leftControllerState.ulButtonPressed & ((ulong)OpenVRButton.Thumbstick)) == (ulong)OpenVRButton.Thumbstick)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8083));
		VRControllerState_t_t50475AF703AB39117DE2C6CE266154309CD9BD4D L_13 = V_2;
		uint64_t L_14 = L_13.___ulButtonPressed_1;
		V_4 = (bool)((((int64_t)((int64_t)((int64_t)L_14&((int64_t)4294967296LL)))) == ((int64_t)((int64_t)4294967296LL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8084));
		bool L_15 = V_4;
		if (!L_15)
		{
			goto IL_0092;
		}
	}
	{
		// state.Buttons |= (uint)RawButton.LThumbstick;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8085));
		uint32_t* L_16 = (&(&V_0)->___Buttons_1);
		uint32_t* L_17 = L_16;
		int32_t L_18 = *((uint32_t*)L_17);
		*((int32_t*)L_17) = (int32_t)((int32_t)(L_18|((int32_t)1024)));
	}

IL_0092:
	{
		// state.LIndexTrigger = leftControllerState.rAxis1.x;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8086));
		VRControllerState_t_t50475AF703AB39117DE2C6CE266154309CD9BD4D L_19 = V_2;
		VRControllerAxis_t_t7A458D676363300CD993C97644DD786720A9C7E4 L_20 = L_19.___rAxis1_4;
		float L_21 = L_20.___x_0;
		(&V_0)->___LIndexTrigger_4 = L_21;
		// if (openVRControllerDetails[0].controllerType == OpenVRController.OculusTouch || openVRControllerDetails[0].controllerType == OpenVRController.ViveController)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8087));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_22 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_22);
		uint64_t L_23 = ((L_22)->GetAddressAt(static_cast<il2cpp_array_size_t>(0)))->___controllerType_1;
		if ((((int64_t)L_23) == ((int64_t)((int64_t)1))))
		{
			goto IL_00ce;
		}
	}
	{
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_24 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_24);
		uint64_t L_25 = ((L_24)->GetAddressAt(static_cast<il2cpp_array_size_t>(0)))->___controllerType_1;
		G_B11_0 = ((((int64_t)L_25) == ((int64_t)((int64_t)2)))? 1 : 0);
		goto IL_00cf;
	}

IL_00ce:
	{
		G_B11_0 = 1;
	}

IL_00cf:
	{
		V_5 = (bool)G_B11_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8088));
		bool L_26 = V_5;
		if (!L_26)
		{
			goto IL_0107;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8089));
		// state.LThumbstick.x = leftControllerState.rAxis0.x;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8090));
		Vector2f_tB2A7770F503276F90D359B6933F0A86D51BA3186* L_27 = (&(&V_0)->___LThumbstick_8);
		VRControllerState_t_t50475AF703AB39117DE2C6CE266154309CD9BD4D L_28 = V_2;
		VRControllerAxis_t_t7A458D676363300CD993C97644DD786720A9C7E4 L_29 = L_28.___rAxis0_3;
		float L_30 = L_29.___x_0;
		L_27->___x_0 = L_30;
		// state.LThumbstick.y = leftControllerState.rAxis0.y;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8091));
		Vector2f_tB2A7770F503276F90D359B6933F0A86D51BA3186* L_31 = (&(&V_0)->___LThumbstick_8);
		VRControllerState_t_t50475AF703AB39117DE2C6CE266154309CD9BD4D L_32 = V_2;
		VRControllerAxis_t_t7A458D676363300CD993C97644DD786720A9C7E4 L_33 = L_32.___rAxis0_3;
		float L_34 = L_33.___y_1;
		L_31->___y_1 = L_34;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8092));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8093));
		goto IL_0151;
	}

IL_0107:
	{
		// else if (openVRControllerDetails[0].controllerType == OpenVRController.WindowsMRController)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8094));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_35 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_35);
		uint64_t L_36 = ((L_35)->GetAddressAt(static_cast<il2cpp_array_size_t>(0)))->___controllerType_1;
		V_6 = (bool)((((int64_t)L_36) == ((int64_t)((int64_t)3)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8095));
		bool L_37 = V_6;
		if (!L_37)
		{
			goto IL_0151;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8096));
		// state.LThumbstick.x = leftControllerState.rAxis2.x;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8097));
		Vector2f_tB2A7770F503276F90D359B6933F0A86D51BA3186* L_38 = (&(&V_0)->___LThumbstick_8);
		VRControllerState_t_t50475AF703AB39117DE2C6CE266154309CD9BD4D L_39 = V_2;
		VRControllerAxis_t_t7A458D676363300CD993C97644DD786720A9C7E4 L_40 = L_39.___rAxis2_5;
		float L_41 = L_40.___x_0;
		L_38->___x_0 = L_41;
		// state.LThumbstick.y = leftControllerState.rAxis2.y;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8098));
		Vector2f_tB2A7770F503276F90D359B6933F0A86D51BA3186* L_42 = (&(&V_0)->___LThumbstick_8);
		VRControllerState_t_t50475AF703AB39117DE2C6CE266154309CD9BD4D L_43 = V_2;
		VRControllerAxis_t_t7A458D676363300CD993C97644DD786720A9C7E4 L_44 = L_43.___rAxis2_5;
		float L_45 = L_44.___y_1;
		L_42->___y_1 = L_45;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8099));
	}

IL_0151:
	{
		// if (openVRControllerDetails[0].controllerType == OpenVRController.OculusTouch)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8100));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_46 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_46);
		uint64_t L_47 = ((L_46)->GetAddressAt(static_cast<il2cpp_array_size_t>(0)))->___controllerType_1;
		V_7 = (bool)((((int64_t)L_47) == ((int64_t)((int64_t)1)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8101));
		bool L_48 = V_7;
		if (!L_48)
		{
			goto IL_017f;
		}
	}
	{
		// state.LHandTrigger = leftControllerState.rAxis2.x;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8102));
		VRControllerState_t_t50475AF703AB39117DE2C6CE266154309CD9BD4D L_49 = V_2;
		VRControllerAxis_t_t7A458D676363300CD993C97644DD786720A9C7E4 L_50 = L_49.___rAxis2_5;
		float L_51 = L_50.___x_0;
		(&V_0)->___LHandTrigger_6 = L_51;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8103));
		goto IL_01c9;
	}

IL_017f:
	{
		// else if (openVRControllerDetails[0].controllerType == OpenVRController.ViveController || openVRControllerDetails[0].controllerType == OpenVRController.WindowsMRController)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8104));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_52 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_52);
		uint64_t L_53 = ((L_52)->GetAddressAt(static_cast<il2cpp_array_size_t>(0)))->___controllerType_1;
		if ((((int64_t)L_53) == ((int64_t)((int64_t)2))))
		{
			goto IL_01a9;
		}
	}
	{
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_54 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_54);
		uint64_t L_55 = ((L_54)->GetAddressAt(static_cast<il2cpp_array_size_t>(0)))->___controllerType_1;
		G_B20_0 = ((((int64_t)L_55) == ((int64_t)((int64_t)3)))? 1 : 0);
		goto IL_01aa;
	}

IL_01a9:
	{
		G_B20_0 = 1;
	}

IL_01aa:
	{
		V_8 = (bool)G_B20_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8105));
		bool L_56 = V_8;
		if (!L_56)
		{
			goto IL_01c9;
		}
	}
	{
		// state.LHandTrigger = ((leftControllerState.ulButtonPressed & ((ulong)OpenVRButton.Grip)) == ((ulong)OpenVRButton.Grip)) ? 1 : 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8106));
		VRControllerState_t_t50475AF703AB39117DE2C6CE266154309CD9BD4D L_57 = V_2;
		uint64_t L_58 = L_57.___ulButtonPressed_1;
		G_B22_0 = (&V_0);
		if ((((int64_t)((int64_t)((int64_t)L_58&((int64_t)4)))) == ((int64_t)((int64_t)4))))
		{
			G_B23_0 = (&V_0);
			goto IL_01c2;
		}
	}
	{
		G_B24_0 = 0;
		G_B24_1 = G_B22_0;
		goto IL_01c3;
	}

IL_01c2:
	{
		G_B24_0 = 1;
		G_B24_1 = G_B23_0;
	}

IL_01c3:
	{
		G_B24_1->___LHandTrigger_6 = ((float)G_B24_0);
	}

IL_01c9:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8107));
	}

IL_01ca:
	{
		// if ((controllerType & Controller.RTouch) == Controller.RTouch && IsValidOpenVRDevice(openVRControllerDetails[1].deviceID))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8108));
		int32_t L_59 = ___0_controllerType;
		if ((!(((uint32_t)((int32_t)((int32_t)L_59&2))) == ((uint32_t)2))))
		{
			goto IL_01e7;
		}
	}
	{
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_60 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_60);
		uint32_t L_61 = ((L_60)->GetAddressAt(static_cast<il2cpp_array_size_t>(1)))->___deviceID_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8109));
		bool L_62;
		L_62 = OVRInput_IsValidOpenVRDevice_m7ADD9AC581CBA6737A77731FEB481BD1E9D75B64(L_61, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8109));
		G_B29_0 = ((int32_t)(L_62));
		goto IL_01e8;
	}

IL_01e7:
	{
		G_B29_0 = 0;
	}

IL_01e8:
	{
		V_9 = (bool)G_B29_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8110));
		bool L_63 = V_9;
		if (!L_63)
		{
			goto IL_0391;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8111));
		// OVR.OpenVR.VRControllerState_t rightControllerState = openVRControllerDetails[1].state;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8112));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_64 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_64);
		VRControllerState_t_t50475AF703AB39117DE2C6CE266154309CD9BD4D L_65 = ((L_64)->GetAddressAt(static_cast<il2cpp_array_size_t>(1)))->___state_0;
		V_10 = L_65;
		// if ((rightControllerState.ulButtonPressed & ((ulong)OpenVRButton.Two)) == (ulong)OpenVRButton.Two)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8113));
		VRControllerState_t_t50475AF703AB39117DE2C6CE266154309CD9BD4D L_66 = V_10;
		uint64_t L_67 = L_66.___ulButtonPressed_1;
		V_11 = (bool)((((int64_t)((int64_t)((int64_t)L_67&((int64_t)2)))) == ((int64_t)((int64_t)2)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8114));
		bool L_68 = V_11;
		if (!L_68)
		{
			goto IL_0224;
		}
	}
	{
		// state.Buttons |= (uint)RawButton.B;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8115));
		uint32_t* L_69 = (&(&V_0)->___Buttons_1);
		uint32_t* L_70 = L_69;
		int32_t L_71 = *((uint32_t*)L_70);
		*((int32_t*)L_70) = (int32_t)((int32_t)(L_71|2));
	}

IL_0224:
	{
		// if ((rightControllerState.ulButtonPressed & ((ulong)OpenVRButton.Thumbstick)) == (ulong)OpenVRButton.Thumbstick)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8116));
		VRControllerState_t_t50475AF703AB39117DE2C6CE266154309CD9BD4D L_72 = V_10;
		uint64_t L_73 = L_72.___ulButtonPressed_1;
		V_12 = (bool)((((int64_t)((int64_t)((int64_t)L_73&((int64_t)4294967296LL)))) == ((int64_t)((int64_t)4294967296LL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8117));
		bool L_74 = V_12;
		if (!L_74)
		{
			goto IL_0252;
		}
	}
	{
		// state.Buttons |= (uint)RawButton.RThumbstick;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8118));
		uint32_t* L_75 = (&(&V_0)->___Buttons_1);
		uint32_t* L_76 = L_75;
		int32_t L_77 = *((uint32_t*)L_76);
		*((int32_t*)L_76) = (int32_t)((int32_t)(L_77|4));
	}

IL_0252:
	{
		// state.RIndexTrigger = rightControllerState.rAxis1.x;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8119));
		VRControllerState_t_t50475AF703AB39117DE2C6CE266154309CD9BD4D L_78 = V_10;
		VRControllerAxis_t_t7A458D676363300CD993C97644DD786720A9C7E4 L_79 = L_78.___rAxis1_4;
		float L_80 = L_79.___x_0;
		(&V_0)->___RIndexTrigger_5 = L_80;
		// if (openVRControllerDetails[1].controllerType == OpenVRController.OculusTouch || openVRControllerDetails[1].controllerType == OpenVRController.ViveController)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8120));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_81 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_81);
		uint64_t L_82 = ((L_81)->GetAddressAt(static_cast<il2cpp_array_size_t>(1)))->___controllerType_1;
		if ((((int64_t)L_82) == ((int64_t)((int64_t)1))))
		{
			goto IL_028f;
		}
	}
	{
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_83 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_83);
		uint64_t L_84 = ((L_83)->GetAddressAt(static_cast<il2cpp_array_size_t>(1)))->___controllerType_1;
		G_B37_0 = ((((int64_t)L_84) == ((int64_t)((int64_t)2)))? 1 : 0);
		goto IL_0290;
	}

IL_028f:
	{
		G_B37_0 = 1;
	}

IL_0290:
	{
		V_13 = (bool)G_B37_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8121));
		bool L_85 = V_13;
		if (!L_85)
		{
			goto IL_02ca;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8122));
		// state.RThumbstick.x = rightControllerState.rAxis0.x;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8123));
		Vector2f_tB2A7770F503276F90D359B6933F0A86D51BA3186* L_86 = (&(&V_0)->___RThumbstick_9);
		VRControllerState_t_t50475AF703AB39117DE2C6CE266154309CD9BD4D L_87 = V_10;
		VRControllerAxis_t_t7A458D676363300CD993C97644DD786720A9C7E4 L_88 = L_87.___rAxis0_3;
		float L_89 = L_88.___x_0;
		L_86->___x_0 = L_89;
		// state.RThumbstick.y = rightControllerState.rAxis0.y;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8124));
		Vector2f_tB2A7770F503276F90D359B6933F0A86D51BA3186* L_90 = (&(&V_0)->___RThumbstick_9);
		VRControllerState_t_t50475AF703AB39117DE2C6CE266154309CD9BD4D L_91 = V_10;
		VRControllerAxis_t_t7A458D676363300CD993C97644DD786720A9C7E4 L_92 = L_91.___rAxis0_3;
		float L_93 = L_92.___y_1;
		L_90->___y_1 = L_93;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8125));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8126));
		goto IL_0316;
	}

IL_02ca:
	{
		// else if (openVRControllerDetails[1].controllerType == OpenVRController.WindowsMRController)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8127));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_94 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_94);
		uint64_t L_95 = ((L_94)->GetAddressAt(static_cast<il2cpp_array_size_t>(1)))->___controllerType_1;
		V_14 = (bool)((((int64_t)L_95) == ((int64_t)((int64_t)3)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8128));
		bool L_96 = V_14;
		if (!L_96)
		{
			goto IL_0316;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8129));
		// state.RThumbstick.x = rightControllerState.rAxis2.x;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8130));
		Vector2f_tB2A7770F503276F90D359B6933F0A86D51BA3186* L_97 = (&(&V_0)->___RThumbstick_9);
		VRControllerState_t_t50475AF703AB39117DE2C6CE266154309CD9BD4D L_98 = V_10;
		VRControllerAxis_t_t7A458D676363300CD993C97644DD786720A9C7E4 L_99 = L_98.___rAxis2_5;
		float L_100 = L_99.___x_0;
		L_97->___x_0 = L_100;
		// state.RThumbstick.y = rightControllerState.rAxis2.y;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8131));
		Vector2f_tB2A7770F503276F90D359B6933F0A86D51BA3186* L_101 = (&(&V_0)->___RThumbstick_9);
		VRControllerState_t_t50475AF703AB39117DE2C6CE266154309CD9BD4D L_102 = V_10;
		VRControllerAxis_t_t7A458D676363300CD993C97644DD786720A9C7E4 L_103 = L_102.___rAxis2_5;
		float L_104 = L_103.___y_1;
		L_101->___y_1 = L_104;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8132));
	}

IL_0316:
	{
		// if (openVRControllerDetails[1].controllerType == OpenVRController.OculusTouch)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8133));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_105 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_105);
		uint64_t L_106 = ((L_105)->GetAddressAt(static_cast<il2cpp_array_size_t>(1)))->___controllerType_1;
		V_15 = (bool)((((int64_t)L_106) == ((int64_t)((int64_t)1)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8134));
		bool L_107 = V_15;
		if (!L_107)
		{
			goto IL_0345;
		}
	}
	{
		// state.RHandTrigger = rightControllerState.rAxis2.x;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8135));
		VRControllerState_t_t50475AF703AB39117DE2C6CE266154309CD9BD4D L_108 = V_10;
		VRControllerAxis_t_t7A458D676363300CD993C97644DD786720A9C7E4 L_109 = L_108.___rAxis2_5;
		float L_110 = L_109.___x_0;
		(&V_0)->___RHandTrigger_7 = L_110;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8136));
		goto IL_0390;
	}

IL_0345:
	{
		// else if (openVRControllerDetails[1].controllerType == OpenVRController.ViveController || openVRControllerDetails[1].controllerType == OpenVRController.WindowsMRController)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8137));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_111 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_111);
		uint64_t L_112 = ((L_111)->GetAddressAt(static_cast<il2cpp_array_size_t>(1)))->___controllerType_1;
		if ((((int64_t)L_112) == ((int64_t)((int64_t)2))))
		{
			goto IL_036f;
		}
	}
	{
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_113 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		NullCheck(L_113);
		uint64_t L_114 = ((L_113)->GetAddressAt(static_cast<il2cpp_array_size_t>(1)))->___controllerType_1;
		G_B46_0 = ((((int64_t)L_114) == ((int64_t)((int64_t)3)))? 1 : 0);
		goto IL_0370;
	}

IL_036f:
	{
		G_B46_0 = 1;
	}

IL_0370:
	{
		V_16 = (bool)G_B46_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8138));
		bool L_115 = V_16;
		if (!L_115)
		{
			goto IL_0390;
		}
	}
	{
		// state.RHandTrigger = ((rightControllerState.ulButtonPressed & ((ulong)OpenVRButton.Grip)) == ((ulong)OpenVRButton.Grip)) ? 1 : 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8139));
		VRControllerState_t_t50475AF703AB39117DE2C6CE266154309CD9BD4D L_116 = V_10;
		uint64_t L_117 = L_116.___ulButtonPressed_1;
		G_B48_0 = (&V_0);
		if ((((int64_t)((int64_t)((int64_t)L_117&((int64_t)4)))) == ((int64_t)((int64_t)4))))
		{
			G_B49_0 = (&V_0);
			goto IL_0389;
		}
	}
	{
		G_B50_0 = 0;
		G_B50_1 = G_B48_0;
		goto IL_038a;
	}

IL_0389:
	{
		G_B50_0 = 1;
		G_B50_1 = G_B49_0;
	}

IL_038a:
	{
		G_B50_1->___RHandTrigger_7 = ((float)G_B50_0);
	}

IL_0390:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8140));
	}

IL_0391:
	{
		// return state;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8141));
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA L_118 = V_0;
		V_17 = L_118;
		goto IL_0396;
	}

IL_0396:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8142));
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA L_119 = V_17;
		return L_119;
	}
}
// System.Void OVRInput/OVRControllerBase::SetControllerVibration(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerBase_SetControllerVibration_mA65313D1C9D3B164DFA6DE58ACBD134FAF6B834C (OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* __this, float ___0_frequency, float ___1_amplitude, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_SetControllerVibration_mA65313D1C9D3B164DFA6DE58ACBD134FAF6B834C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_frequency), (&___1_amplitude));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerBase_SetControllerVibration_mA65313D1C9D3B164DFA6DE58ACBD134FAF6B834C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8143));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8144));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8145));
		// OVRPlugin.SetControllerVibration((uint)controllerType, frequency, amplitude);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8146));
		int32_t L_0 = __this->___controllerType_0;
		float L_1 = ___0_frequency;
		float L_2 = ___1_amplitude;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8147));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_3;
		L_3 = OVRPlugin_SetControllerVibration_mAE3456564B4AEF71F875080A33A62AD05C3A71E6(L_0, L_1, L_2, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8147));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8148));
		return;
	}
}
// System.Void OVRInput/OVRControllerBase::SetControllerLocalizedVibration(OVRInput/HapticsLocation,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerBase_SetControllerLocalizedVibration_m0973B2DD0C688614EF802445615A01EE4EB32F25 (OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* __this, int32_t ___0_hapticsLocationMask, float ___1_frequency, float ___2_amplitude, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_SetControllerLocalizedVibration_m0973B2DD0C688614EF802445615A01EE4EB32F25_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_hapticsLocationMask), (&___1_frequency), (&___2_amplitude));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerBase_SetControllerLocalizedVibration_m0973B2DD0C688614EF802445615A01EE4EB32F25_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8149));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8150));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8151));
		// OVRPlugin.SetControllerLocalizedVibration((OVRPlugin.Controller)controllerType, (OVRPlugin.HapticsLocation)hapticsLocationMask, frequency, amplitude);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8152));
		int32_t L_0 = __this->___controllerType_0;
		int32_t L_1 = ___0_hapticsLocationMask;
		float L_2 = ___1_frequency;
		float L_3 = ___2_amplitude;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8153));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_4;
		L_4 = OVRPlugin_SetControllerLocalizedVibration_m46F01F87698AA2924076D09E9910ECF1ABC22F61(L_0, L_1, L_2, L_3, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8153));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8154));
		return;
	}
}
// System.Void OVRInput/OVRControllerBase::SetControllerHapticsAmplitudeEnvelope(OVRInput/HapticsAmplitudeEnvelopeVibration)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerBase_SetControllerHapticsAmplitudeEnvelope_m7399FA64FE3420F868C609805821CCC27AFB58F0 (OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* __this, HapticsAmplitudeEnvelopeVibration_t2EDF01B96CFAC2D09DDCAACEDEA5C2F534F252C9 ___0_hapticsVibration, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GCHandle_tC44F6F72EE68BD4CFABA24309DA7A179D41127DC_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&HapticsAmplitudeEnvelopeVibration_t72F2EFB43EF23B078F28C324C8D12EBD9B84A00A_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_SetControllerHapticsAmplitudeEnvelope_m7399FA64FE3420F868C609805821CCC27AFB58F0_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	GCHandle_tC44F6F72EE68BD4CFABA24309DA7A179D41127DC V_0;
	memset((&V_0), 0, sizeof(V_0));
	HapticsAmplitudeEnvelopeVibration_t72F2EFB43EF23B078F28C324C8D12EBD9B84A00A V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_hapticsVibration));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerBase_SetControllerHapticsAmplitudeEnvelope_m7399FA64FE3420F868C609805821CCC27AFB58F0_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8155));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8156));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8157));
		// GCHandle pinnedSamples = GCHandle.Alloc(hapticsVibration.Samples, GCHandleType.Pinned);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8158));
		HapticsAmplitudeEnvelopeVibration_t2EDF01B96CFAC2D09DDCAACEDEA5C2F534F252C9 L_0 = ___0_hapticsVibration;
		SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* L_1 = L_0.___Samples_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8159));
		GCHandle_tC44F6F72EE68BD4CFABA24309DA7A179D41127DC L_2;
		L_2 = GCHandle_Alloc_m3BFD398427352FC756FFE078F01A504B681352EC((RuntimeObject*)L_1, 3, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8159));
		V_0 = L_2;
	}
	{
		auto __finallyBlock = il2cpp::utils::Finally([&]
		{

FINALLY_0047:
			{// begin finally (depth: 1)
				STORE_TRY_ID(methodExecutionContext, -1);
				{
					CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8168));
					// if (pinnedSamples.IsAllocated)
					CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8169));
					STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8170));
					bool L_3;
					L_3 = GCHandle_get_IsAllocated_m241908103D8D867E11CCAB73C918729825E86843((&V_0), NULL);
					CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8170));
					V_2 = L_3;
					CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8171));
					bool L_4 = V_2;
					if (!L_4)
					{
						goto IL_005d;
					}
				}
				{
					CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8172));
					// pinnedSamples.Free();
					CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8173));
					STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8174));
					GCHandle_Free_m1320A260E487EB1EA6D95F9E54BFFCB5A4EF83A3((&V_0), NULL);
					CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8174));
					CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8175));
				}

IL_005d:
				{
					CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8176));
					return;
				}
			}// end finally (depth: 1)
		});
		try
		{// begin try (depth: 1)
			STORE_TRY_ID(methodExecutionContext, 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8160));
			// vibration.AmplitudeCount = (UInt32)hapticsVibration.SamplesCount;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8161));
			HapticsAmplitudeEnvelopeVibration_t2EDF01B96CFAC2D09DDCAACEDEA5C2F534F252C9 L_5 = ___0_hapticsVibration;
			int32_t L_6 = L_5.___SamplesCount_0;
			(&V_1)->___AmplitudeCount_1 = L_6;
			// vibration.Amplitudes = pinnedSamples.AddrOfPinnedObject();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8162));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8163));
			intptr_t L_7;
			L_7 = GCHandle_AddrOfPinnedObject_m9C047E154D6F0FE66BE003AB99F0B67A2CA953A6((&V_0), NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8163));
			(&V_1)->___Amplitudes_2 = L_7;
			// vibration.Duration = hapticsVibration.Duration;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8164));
			HapticsAmplitudeEnvelopeVibration_t2EDF01B96CFAC2D09DDCAACEDEA5C2F534F252C9 L_8 = ___0_hapticsVibration;
			float L_9 = L_8.___Duration_2;
			(&V_1)->___Duration_0 = L_9;
			// OVRPlugin.SetControllerHapticsAmplitudeEnvelope((OVRPlugin.Controller)controllerType, vibration);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8165));
			int32_t L_10 = __this->___controllerType_0;
			HapticsAmplitudeEnvelopeVibration_t72F2EFB43EF23B078F28C324C8D12EBD9B84A00A L_11 = V_1;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8166));
			il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
			bool L_12;
			L_12 = OVRPlugin_SetControllerHapticsAmplitudeEnvelope_m03AE2E3837BCC71E17E006E5CC2E6954960CCEB8(L_10, L_11, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8166));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8167));
			goto IL_005f;
		}// end try (depth: 1)
		catch(Il2CppExceptionWrapper& e)
		{
			__finallyBlock.StoreException(e.ex);
		}
	}

IL_005f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8177));
		return;
	}
}
// System.Int32 OVRInput/OVRControllerBase::SetControllerHapticsPcm(OVRInput/HapticsPcmVibration)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRControllerBase_SetControllerHapticsPcm_mBA1C090F8AEBE93E707EB31535042EDF35E54A19 (OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* __this, HapticsPcmVibration_tA67530C77AF893E2DAE4AC825EB6477B76251781 ___0_hapticsVibration, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GCHandle_tC44F6F72EE68BD4CFABA24309DA7A179D41127DC_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&HapticsPcmVibration_tE63FF2450048F8B5C0EF36A26C0E61346CAE8CBB_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Marshal_tD976A56A90263C3CE2B780D4B1CADADE2E70B4A7_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_SetControllerHapticsPcm_mBA1C090F8AEBE93E707EB31535042EDF35E54A19_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	GCHandle_tC44F6F72EE68BD4CFABA24309DA7A179D41127DC V_0;
	memset((&V_0), 0, sizeof(V_0));
	GCHandle_tC44F6F72EE68BD4CFABA24309DA7A179D41127DC V_1;
	memset((&V_1), 0, sizeof(V_1));
	int32_t V_2 = 0;
	HapticsPcmVibration_tE63FF2450048F8B5C0EF36A26C0E61346CAE8CBB V_3;
	memset((&V_3), 0, sizeof(V_3));
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	int32_t V_7 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_hapticsVibration));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerBase_SetControllerHapticsPcm_mBA1C090F8AEBE93E707EB31535042EDF35E54A19_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8178));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8179));
	HapticsPcmVibration_tE63FF2450048F8B5C0EF36A26C0E61346CAE8CBB* G_B3_0 = NULL;
	HapticsPcmVibration_tE63FF2450048F8B5C0EF36A26C0E61346CAE8CBB* G_B2_0 = NULL;
	int32_t G_B4_0 = 0;
	HapticsPcmVibration_tE63FF2450048F8B5C0EF36A26C0E61346CAE8CBB* G_B4_1 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8180));
		// GCHandle pinnedSamples = GCHandle.Alloc(hapticsVibration.Samples, GCHandleType.Pinned);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8181));
		HapticsPcmVibration_tA67530C77AF893E2DAE4AC825EB6477B76251781 L_0 = ___0_hapticsVibration;
		SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* L_1 = L_0.___Samples_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8182));
		GCHandle_tC44F6F72EE68BD4CFABA24309DA7A179D41127DC L_2;
		L_2 = GCHandle_Alloc_m3BFD398427352FC756FFE078F01A504B681352EC((RuntimeObject*)L_1, 3, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8182));
		V_0 = L_2;
		// GCHandle pinnedSamplesConsumed = GCHandle.Alloc(HapticsPcmSamplesConsumedCache, GCHandleType.Pinned);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8183));
		UInt32U5BU5D_t02FBD658AD156A17574ECE6106CF1FBFCC9807FA* L_3 = __this->___HapticsPcmSamplesConsumedCache_9;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8184));
		GCHandle_tC44F6F72EE68BD4CFABA24309DA7A179D41127DC L_4;
		L_4 = GCHandle_Alloc_m3BFD398427352FC756FFE078F01A504B681352EC((RuntimeObject*)L_3, 3, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8184));
		V_1 = L_4;
		// int samplesConsumed = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8185));
		V_2 = 0;
	}
	{
		auto __finallyBlock = il2cpp::utils::Finally([&]
		{

FINALLY_008a:
			{// begin finally (depth: 1)
				STORE_TRY_ID(methodExecutionContext, -1);
				{
					CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8202));
					// if (pinnedSamples.IsAllocated)
					CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8203));
					STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8204));
					bool L_5;
					L_5 = GCHandle_get_IsAllocated_m241908103D8D867E11CCAB73C918729825E86843((&V_0), NULL);
					CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8204));
					V_5 = L_5;
					CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8205));
					bool L_6 = V_5;
					if (!L_6)
					{
						goto IL_00a2;
					}
				}
				{
					CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8206));
					// pinnedSamples.Free();
					CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8207));
					STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8208));
					GCHandle_Free_m1320A260E487EB1EA6D95F9E54BFFCB5A4EF83A3((&V_0), NULL);
					CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8208));
					CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8209));
				}

IL_00a2:
				{
					// if (pinnedSamplesConsumed.IsAllocated)
					CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8210));
					STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8211));
					bool L_7;
					L_7 = GCHandle_get_IsAllocated_m241908103D8D867E11CCAB73C918729825E86843((&V_1), NULL);
					CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8211));
					V_6 = L_7;
					CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8212));
					bool L_8 = V_6;
					if (!L_8)
					{
						goto IL_00b9;
					}
				}
				{
					CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8213));
					// pinnedSamplesConsumed.Free();
					CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8214));
					STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8215));
					GCHandle_Free_m1320A260E487EB1EA6D95F9E54BFFCB5A4EF83A3((&V_1), NULL);
					CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8215));
					CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8216));
				}

IL_00b9:
				{
					CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8217));
					return;
				}
			}// end finally (depth: 1)
		});
		try
		{// begin try (depth: 1)
			STORE_TRY_ID(methodExecutionContext, 0);
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8186));
				// vibration.BufferSize = (UInt32)hapticsVibration.SamplesCount;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8187));
				HapticsPcmVibration_tA67530C77AF893E2DAE4AC825EB6477B76251781 L_9 = ___0_hapticsVibration;
				int32_t L_10 = L_9.___SamplesCount_0;
				(&V_3)->___BufferSize_0 = L_10;
				// vibration.Buffer = pinnedSamples.AddrOfPinnedObject();
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8188));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8189));
				intptr_t L_11;
				L_11 = GCHandle_AddrOfPinnedObject_m9C047E154D6F0FE66BE003AB99F0B67A2CA953A6((&V_0), NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8189));
				(&V_3)->___Buffer_1 = L_11;
				// vibration.SampleRateHz = hapticsVibration.SampleRateHz;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8190));
				HapticsPcmVibration_tA67530C77AF893E2DAE4AC825EB6477B76251781 L_12 = ___0_hapticsVibration;
				float L_13 = L_12.___SampleRateHz_2;
				(&V_3)->___SampleRateHz_2 = L_13;
				// vibration.Append = hapticsVibration.Append ? OVRPlugin.Bool.True : OVRPlugin.Bool.False;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8191));
				HapticsPcmVibration_tA67530C77AF893E2DAE4AC825EB6477B76251781 L_14 = ___0_hapticsVibration;
				bool L_15 = L_14.___Append_3;
				G_B2_0 = (&V_3);
				if (L_15)
				{
					G_B3_0 = (&V_3);
					goto IL_0053_1;
				}
			}
			{
				G_B4_0 = 0;
				G_B4_1 = G_B2_0;
				goto IL_0054_1;
			}

IL_0053_1:
			{
				G_B4_0 = 1;
				G_B4_1 = G_B3_0;
			}

IL_0054_1:
			{
				G_B4_1->___Append_3 = G_B4_0;
				// vibration.SamplesConsumed = pinnedSamplesConsumed.AddrOfPinnedObject();
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8192));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8193));
				intptr_t L_16;
				L_16 = GCHandle_AddrOfPinnedObject_m9C047E154D6F0FE66BE003AB99F0B67A2CA953A6((&V_1), NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8193));
				(&V_3)->___SamplesConsumed_4 = L_16;
				// if (OVRPlugin.SetControllerHapticsPcm((OVRPlugin.Controller)controllerType, vibration))
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8194));
				int32_t L_17 = __this->___controllerType_0;
				HapticsPcmVibration_tE63FF2450048F8B5C0EF36A26C0E61346CAE8CBB L_18 = V_3;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8195));
				il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
				bool L_19;
				L_19 = OVRPlugin_SetControllerHapticsPcm_mFEAD0169FAE82422B3DF28F992C79BDFA9BC73E1(L_17, L_18, NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8195));
				V_4 = L_19;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8196));
				bool L_20 = V_4;
				if (!L_20)
				{
					goto IL_0087_1;
				}
			}
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8197));
				// samplesConsumed = Marshal.ReadInt32(vibration.SamplesConsumed);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8198));
				HapticsPcmVibration_tE63FF2450048F8B5C0EF36A26C0E61346CAE8CBB L_21 = V_3;
				intptr_t L_22 = L_21.___SamplesConsumed_4;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8199));
				il2cpp_codegen_runtime_class_init_inline(Marshal_tD976A56A90263C3CE2B780D4B1CADADE2E70B4A7_il2cpp_TypeInfo_var);
				int32_t L_23;
				L_23 = Marshal_ReadInt32_mDF5F7A01E6F50C03DBB936ACF229CE5345B0DE18(L_22, NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8199));
				V_2 = L_23;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8200));
			}

IL_0087_1:
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8201));
				goto IL_00bb;
			}
		}// end try (depth: 1)
		catch(Il2CppExceptionWrapper& e)
		{
			__finallyBlock.StoreException(e.ex);
		}
	}

IL_00bb:
	{
		// return samplesConsumed;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8218));
		int32_t L_24 = V_2;
		V_7 = L_24;
		goto IL_00c0;
	}

IL_00c0:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8219));
		int32_t L_25 = V_7;
		return L_25;
	}
}
// System.Single OVRInput/OVRControllerBase::GetControllerSampleRateHz()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float OVRControllerBase_GetControllerSampleRateHz_mE0279CC1B6ABAAA4DC60595A9C2CC6CC5DE13B62 (OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_GetControllerSampleRateHz_mE0279CC1B6ABAAA4DC60595A9C2CC6CC5DE13B62_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	float V_1 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerBase_GetControllerSampleRateHz_mE0279CC1B6ABAAA4DC60595A9C2CC6CC5DE13B62_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8220));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8221));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8222));
		// OVRPlugin.GetControllerSampleRateHz((OVRPlugin.Controller)controllerType, out float sampleRateHz);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8223));
		int32_t L_0 = __this->___controllerType_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8224));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_1;
		L_1 = OVRPlugin_GetControllerSampleRateHz_m55D647A56ADF5D9DA644D8D87D8766B52E6E86B9(L_0, (&V_0), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8224));
		// return sampleRateHz;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8225));
		float L_2 = V_0;
		V_1 = L_2;
		goto IL_0013;
	}

IL_0013:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8226));
		float L_3 = V_1;
		return L_3;
	}
}
// System.Byte OVRInput/OVRControllerBase::GetBatteryPercentRemaining()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint8_t OVRControllerBase_GetBatteryPercentRemaining_m35AEC716C3B0153E1A8A83306C85DF4697A86CAE (OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Byte_t94D9231AC217BE4D2E004C4CD32DF6D099EA41A3_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_GetBatteryPercentRemaining_m35AEC716C3B0153E1A8A83306C85DF4697A86CAE_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	uint8_t V_0 = 0x0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerBase_GetBatteryPercentRemaining_m35AEC716C3B0153E1A8A83306C85DF4697A86CAE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8227));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8228));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8229));
		// return 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8230));
		V_0 = (uint8_t)0;
		goto IL_0005;
	}

IL_0005:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8231));
		uint8_t L_0 = V_0;
		return L_0;
	}
}
// OVRInput/RawButton OVRInput/OVRControllerBase::ResolveToRawMask(OVRInput/Button)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRControllerBase_ResolveToRawMask_m86055AF4DE44D6FB48EC67A0C7E69F6A9744750B (OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* __this, int32_t ___0_virtualMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_ResolveToRawMask_m86055AF4DE44D6FB48EC67A0C7E69F6A9744750B_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&RawButton_tCD95D496C88D49C316A04BE1354D128EF7DB23AF_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_virtualMask));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerBase_ResolveToRawMask_m86055AF4DE44D6FB48EC67A0C7E69F6A9744750B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8232));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8233));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8234));
		// return buttonMap.ToRawMask(virtualMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8235));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_0 = __this->___buttonMap_1;
		int32_t L_1 = ___0_virtualMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8236));
		NullCheck(L_0);
		int32_t L_2;
		L_2 = VirtualButtonMap_ToRawMask_m0B0D32BAC0DBFD08BD5E575A3676C9430C60D5AA(L_0, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8236));
		V_0 = L_2;
		goto IL_0010;
	}

IL_0010:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8237));
		int32_t L_3 = V_0;
		return L_3;
	}
}
// OVRInput/RawTouch OVRInput/OVRControllerBase::ResolveToRawMask(OVRInput/Touch)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRControllerBase_ResolveToRawMask_m65F6690080656E738842AC913EF7A7B92A666F07 (OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* __this, int32_t ___0_virtualMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_ResolveToRawMask_m65F6690080656E738842AC913EF7A7B92A666F07_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&RawTouch_t7D17A388D30D8E3B4FD34FBDAA322D5023CF8BE3_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_virtualMask));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerBase_ResolveToRawMask_m65F6690080656E738842AC913EF7A7B92A666F07_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8238));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8239));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8240));
		// return touchMap.ToRawMask(virtualMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8241));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_0 = __this->___touchMap_2;
		int32_t L_1 = ___0_virtualMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8242));
		NullCheck(L_0);
		int32_t L_2;
		L_2 = VirtualTouchMap_ToRawMask_mCF2939C4B09B3FE0367B3F73003D4D3EC7F78EB7(L_0, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8242));
		V_0 = L_2;
		goto IL_0010;
	}

IL_0010:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8243));
		int32_t L_3 = V_0;
		return L_3;
	}
}
// OVRInput/RawNearTouch OVRInput/OVRControllerBase::ResolveToRawMask(OVRInput/NearTouch)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRControllerBase_ResolveToRawMask_m8D04C93448D2D3438F972AE9796714F134E6BD39 (OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* __this, int32_t ___0_virtualMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_ResolveToRawMask_m8D04C93448D2D3438F972AE9796714F134E6BD39_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&RawNearTouch_t462F7BF4D7758A6C7CCA8DC98652716CF7796ACB_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_virtualMask));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerBase_ResolveToRawMask_m8D04C93448D2D3438F972AE9796714F134E6BD39_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8244));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8245));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8246));
		// return nearTouchMap.ToRawMask(virtualMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8247));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_0 = __this->___nearTouchMap_3;
		int32_t L_1 = ___0_virtualMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8248));
		NullCheck(L_0);
		int32_t L_2;
		L_2 = VirtualNearTouchMap_ToRawMask_mE743414574E2B9D84BD84B2B4E9156973F2A57EA(L_0, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8248));
		V_0 = L_2;
		goto IL_0010;
	}

IL_0010:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8249));
		int32_t L_3 = V_0;
		return L_3;
	}
}
// OVRInput/RawAxis1D OVRInput/OVRControllerBase::ResolveToRawMask(OVRInput/Axis1D)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRControllerBase_ResolveToRawMask_m2FA1E268711274A7F9F63F1FC0D614272B8F953E (OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* __this, int32_t ___0_virtualMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_ResolveToRawMask_m2FA1E268711274A7F9F63F1FC0D614272B8F953E_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&RawAxis1D_tAE65BD6B0EB61DDB15F3B28E5D114F8979221BD5_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_virtualMask));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerBase_ResolveToRawMask_m2FA1E268711274A7F9F63F1FC0D614272B8F953E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8250));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8251));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8252));
		// return axis1DMap.ToRawMask(virtualMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8253));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_0 = __this->___axis1DMap_4;
		int32_t L_1 = ___0_virtualMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8254));
		NullCheck(L_0);
		int32_t L_2;
		L_2 = VirtualAxis1DMap_ToRawMask_m977A6C4A989DD010BC7C844700E7CF2A2E35AA51(L_0, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8254));
		V_0 = L_2;
		goto IL_0010;
	}

IL_0010:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8255));
		int32_t L_3 = V_0;
		return L_3;
	}
}
// OVRInput/RawAxis2D OVRInput/OVRControllerBase::ResolveToRawMask(OVRInput/Axis2D)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRControllerBase_ResolveToRawMask_m574A6F44565F5D22BF8728447C82AA0A55DC4911 (OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83* __this, int32_t ___0_virtualMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_ResolveToRawMask_m574A6F44565F5D22BF8728447C82AA0A55DC4911_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&RawAxis2D_t882F928A0CB13BA12DBC6402B64ECA76202DFBA1_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_virtualMask));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerBase_ResolveToRawMask_m574A6F44565F5D22BF8728447C82AA0A55DC4911_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8256));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8257));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8258));
		// return axis2DMap.ToRawMask(virtualMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8259));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_0 = __this->___axis2DMap_5;
		int32_t L_1 = ___0_virtualMask;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8260));
		NullCheck(L_0);
		int32_t L_2;
		L_2 = VirtualAxis2DMap_ToRawMask_m9C9827F9F56AF946108A8A9A8504299BAC8BCC44(L_0, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8260));
		V_0 = L_2;
		goto IL_0010;
	}

IL_0010:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8261));
		int32_t L_3 = V_0;
		return L_3;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// OVRInput/RawButton OVRInput/OVRControllerBase/VirtualButtonMap::ToRawMask(OVRInput/Button)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t VirtualButtonMap_ToRawMask_m0B0D32BAC0DBFD08BD5E575A3676C9430C60D5AA (VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* __this, int32_t ___0_virtualMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&RawButton_tCD95D496C88D49C316A04BE1354D128EF7DB23AF_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VirtualButtonMap_ToRawMask_m0B0D32BAC0DBFD08BD5E575A3676C9430C60D5AA_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	int32_t V_2 = 0;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	bool V_10 = false;
	bool V_11 = false;
	bool V_12 = false;
	bool V_13 = false;
	bool V_14 = false;
	bool V_15 = false;
	bool V_16 = false;
	bool V_17 = false;
	bool V_18 = false;
	bool V_19 = false;
	bool V_20 = false;
	bool V_21 = false;
	bool V_22 = false;
	bool V_23 = false;
	bool V_24 = false;
	bool V_25 = false;
	bool V_26 = false;
	bool V_27 = false;
	bool V_28 = false;
	bool V_29 = false;
	bool V_30 = false;
	bool V_31 = false;
	bool V_32 = false;
	bool V_33 = false;
	bool V_34 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_virtualMask));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, VirtualButtonMap_ToRawMask_m0B0D32BAC0DBFD08BD5E575A3676C9430C60D5AA_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8262));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8263));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8264));
		// RawButton rawMask = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8265));
		V_0 = 0;
		// if (virtualMask == Button.None)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8266));
		int32_t L_0 = ___0_virtualMask;
		V_1 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8267));
		bool L_1 = V_1;
		if (!L_1)
		{
			goto IL_0012;
		}
	}
	{
		// return RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8268));
		V_2 = 0;
		goto IL_031b;
	}

IL_0012:
	{
		// if ((virtualMask & Button.One) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8269));
		int32_t L_2 = ___0_virtualMask;
		V_3 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_2&1))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8270));
		bool L_3 = V_3;
		if (!L_3)
		{
			goto IL_0025;
		}
	}
	{
		// rawMask |= One;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8271));
		int32_t L_4 = V_0;
		int32_t L_5 = __this->___One_1;
		V_0 = ((int32_t)((int32_t)L_4|(int32_t)L_5));
	}

IL_0025:
	{
		// if ((virtualMask & Button.Two) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8272));
		int32_t L_6 = ___0_virtualMask;
		V_4 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_6&2))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8273));
		bool L_7 = V_4;
		if (!L_7)
		{
			goto IL_003a;
		}
	}
	{
		// rawMask |= Two;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8274));
		int32_t L_8 = V_0;
		int32_t L_9 = __this->___Two_2;
		V_0 = ((int32_t)((int32_t)L_8|(int32_t)L_9));
	}

IL_003a:
	{
		// if ((virtualMask & Button.Three) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8275));
		int32_t L_10 = ___0_virtualMask;
		V_5 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_10&4))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8276));
		bool L_11 = V_5;
		if (!L_11)
		{
			goto IL_004f;
		}
	}
	{
		// rawMask |= Three;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8277));
		int32_t L_12 = V_0;
		int32_t L_13 = __this->___Three_3;
		V_0 = ((int32_t)((int32_t)L_12|(int32_t)L_13));
	}

IL_004f:
	{
		// if ((virtualMask & Button.Four) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8278));
		int32_t L_14 = ___0_virtualMask;
		V_6 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_14&8))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8279));
		bool L_15 = V_6;
		if (!L_15)
		{
			goto IL_0064;
		}
	}
	{
		// rawMask |= Four;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8280));
		int32_t L_16 = V_0;
		int32_t L_17 = __this->___Four_4;
		V_0 = ((int32_t)((int32_t)L_16|(int32_t)L_17));
	}

IL_0064:
	{
		// if ((virtualMask & Button.Start) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8281));
		int32_t L_18 = ___0_virtualMask;
		V_7 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_18&((int32_t)256)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8282));
		bool L_19 = V_7;
		if (!L_19)
		{
			goto IL_007d;
		}
	}
	{
		// rawMask |= Start;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8283));
		int32_t L_20 = V_0;
		int32_t L_21 = __this->___Start_5;
		V_0 = ((int32_t)((int32_t)L_20|(int32_t)L_21));
	}

IL_007d:
	{
		// if ((virtualMask & Button.Back) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8284));
		int32_t L_22 = ___0_virtualMask;
		V_8 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_22&((int32_t)512)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8285));
		bool L_23 = V_8;
		if (!L_23)
		{
			goto IL_0096;
		}
	}
	{
		// rawMask |= Back;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8286));
		int32_t L_24 = V_0;
		int32_t L_25 = __this->___Back_6;
		V_0 = ((int32_t)((int32_t)L_24|(int32_t)L_25));
	}

IL_0096:
	{
		// if ((virtualMask & Button.PrimaryShoulder) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8287));
		int32_t L_26 = ___0_virtualMask;
		V_9 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_26&((int32_t)4096)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8288));
		bool L_27 = V_9;
		if (!L_27)
		{
			goto IL_00af;
		}
	}
	{
		// rawMask |= PrimaryShoulder;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8289));
		int32_t L_28 = V_0;
		int32_t L_29 = __this->___PrimaryShoulder_7;
		V_0 = ((int32_t)((int32_t)L_28|(int32_t)L_29));
	}

IL_00af:
	{
		// if ((virtualMask & Button.PrimaryIndexTrigger) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8290));
		int32_t L_30 = ___0_virtualMask;
		V_10 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_30&((int32_t)8192)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8291));
		bool L_31 = V_10;
		if (!L_31)
		{
			goto IL_00c8;
		}
	}
	{
		// rawMask |= PrimaryIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8292));
		int32_t L_32 = V_0;
		int32_t L_33 = __this->___PrimaryIndexTrigger_8;
		V_0 = ((int32_t)((int32_t)L_32|(int32_t)L_33));
	}

IL_00c8:
	{
		// if ((virtualMask & Button.PrimaryHandTrigger) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8293));
		int32_t L_34 = ___0_virtualMask;
		V_11 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_34&((int32_t)16384)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8294));
		bool L_35 = V_11;
		if (!L_35)
		{
			goto IL_00e1;
		}
	}
	{
		// rawMask |= PrimaryHandTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8295));
		int32_t L_36 = V_0;
		int32_t L_37 = __this->___PrimaryHandTrigger_9;
		V_0 = ((int32_t)((int32_t)L_36|(int32_t)L_37));
	}

IL_00e1:
	{
		// if ((virtualMask & Button.PrimaryThumbstick) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8296));
		int32_t L_38 = ___0_virtualMask;
		V_12 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_38&((int32_t)32768)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8297));
		bool L_39 = V_12;
		if (!L_39)
		{
			goto IL_00fa;
		}
	}
	{
		// rawMask |= PrimaryThumbstick;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8298));
		int32_t L_40 = V_0;
		int32_t L_41 = __this->___PrimaryThumbstick_10;
		V_0 = ((int32_t)((int32_t)L_40|(int32_t)L_41));
	}

IL_00fa:
	{
		// if ((virtualMask & Button.PrimaryThumbstickUp) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8299));
		int32_t L_42 = ___0_virtualMask;
		V_13 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_42&((int32_t)65536)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8300));
		bool L_43 = V_13;
		if (!L_43)
		{
			goto IL_0113;
		}
	}
	{
		// rawMask |= PrimaryThumbstickUp;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8301));
		int32_t L_44 = V_0;
		int32_t L_45 = __this->___PrimaryThumbstickUp_11;
		V_0 = ((int32_t)((int32_t)L_44|(int32_t)L_45));
	}

IL_0113:
	{
		// if ((virtualMask & Button.PrimaryThumbstickDown) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8302));
		int32_t L_46 = ___0_virtualMask;
		V_14 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_46&((int32_t)131072)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8303));
		bool L_47 = V_14;
		if (!L_47)
		{
			goto IL_012c;
		}
	}
	{
		// rawMask |= PrimaryThumbstickDown;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8304));
		int32_t L_48 = V_0;
		int32_t L_49 = __this->___PrimaryThumbstickDown_12;
		V_0 = ((int32_t)((int32_t)L_48|(int32_t)L_49));
	}

IL_012c:
	{
		// if ((virtualMask & Button.PrimaryThumbstickLeft) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8305));
		int32_t L_50 = ___0_virtualMask;
		V_15 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_50&((int32_t)262144)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8306));
		bool L_51 = V_15;
		if (!L_51)
		{
			goto IL_0145;
		}
	}
	{
		// rawMask |= PrimaryThumbstickLeft;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8307));
		int32_t L_52 = V_0;
		int32_t L_53 = __this->___PrimaryThumbstickLeft_13;
		V_0 = ((int32_t)((int32_t)L_52|(int32_t)L_53));
	}

IL_0145:
	{
		// if ((virtualMask & Button.PrimaryThumbstickRight) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8308));
		int32_t L_54 = ___0_virtualMask;
		V_16 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_54&((int32_t)524288)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8309));
		bool L_55 = V_16;
		if (!L_55)
		{
			goto IL_015e;
		}
	}
	{
		// rawMask |= PrimaryThumbstickRight;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8310));
		int32_t L_56 = V_0;
		int32_t L_57 = __this->___PrimaryThumbstickRight_14;
		V_0 = ((int32_t)((int32_t)L_56|(int32_t)L_57));
	}

IL_015e:
	{
		// if ((virtualMask & Button.PrimaryTouchpad) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8311));
		int32_t L_58 = ___0_virtualMask;
		V_17 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_58&((int32_t)1024)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8312));
		bool L_59 = V_17;
		if (!L_59)
		{
			goto IL_0177;
		}
	}
	{
		// rawMask |= PrimaryTouchpad;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8313));
		int32_t L_60 = V_0;
		int32_t L_61 = __this->___PrimaryTouchpad_15;
		V_0 = ((int32_t)((int32_t)L_60|(int32_t)L_61));
	}

IL_0177:
	{
		// if ((virtualMask & Button.SecondaryShoulder) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8314));
		int32_t L_62 = ___0_virtualMask;
		V_18 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_62&((int32_t)1048576)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8315));
		bool L_63 = V_18;
		if (!L_63)
		{
			goto IL_0190;
		}
	}
	{
		// rawMask |= SecondaryShoulder;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8316));
		int32_t L_64 = V_0;
		int32_t L_65 = __this->___SecondaryShoulder_16;
		V_0 = ((int32_t)((int32_t)L_64|(int32_t)L_65));
	}

IL_0190:
	{
		// if ((virtualMask & Button.SecondaryIndexTrigger) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8317));
		int32_t L_66 = ___0_virtualMask;
		V_19 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_66&((int32_t)2097152)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8318));
		bool L_67 = V_19;
		if (!L_67)
		{
			goto IL_01a9;
		}
	}
	{
		// rawMask |= SecondaryIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8319));
		int32_t L_68 = V_0;
		int32_t L_69 = __this->___SecondaryIndexTrigger_17;
		V_0 = ((int32_t)((int32_t)L_68|(int32_t)L_69));
	}

IL_01a9:
	{
		// if ((virtualMask & Button.SecondaryHandTrigger) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8320));
		int32_t L_70 = ___0_virtualMask;
		V_20 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_70&((int32_t)4194304)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8321));
		bool L_71 = V_20;
		if (!L_71)
		{
			goto IL_01c2;
		}
	}
	{
		// rawMask |= SecondaryHandTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8322));
		int32_t L_72 = V_0;
		int32_t L_73 = __this->___SecondaryHandTrigger_18;
		V_0 = ((int32_t)((int32_t)L_72|(int32_t)L_73));
	}

IL_01c2:
	{
		// if ((virtualMask & Button.SecondaryThumbstick) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8323));
		int32_t L_74 = ___0_virtualMask;
		V_21 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_74&((int32_t)8388608)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8324));
		bool L_75 = V_21;
		if (!L_75)
		{
			goto IL_01db;
		}
	}
	{
		// rawMask |= SecondaryThumbstick;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8325));
		int32_t L_76 = V_0;
		int32_t L_77 = __this->___SecondaryThumbstick_19;
		V_0 = ((int32_t)((int32_t)L_76|(int32_t)L_77));
	}

IL_01db:
	{
		// if ((virtualMask & Button.SecondaryThumbstickUp) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8326));
		int32_t L_78 = ___0_virtualMask;
		V_22 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_78&((int32_t)16777216)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8327));
		bool L_79 = V_22;
		if (!L_79)
		{
			goto IL_01f4;
		}
	}
	{
		// rawMask |= SecondaryThumbstickUp;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8328));
		int32_t L_80 = V_0;
		int32_t L_81 = __this->___SecondaryThumbstickUp_20;
		V_0 = ((int32_t)((int32_t)L_80|(int32_t)L_81));
	}

IL_01f4:
	{
		// if ((virtualMask & Button.SecondaryThumbstickDown) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8329));
		int32_t L_82 = ___0_virtualMask;
		V_23 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_82&((int32_t)33554432)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8330));
		bool L_83 = V_23;
		if (!L_83)
		{
			goto IL_020d;
		}
	}
	{
		// rawMask |= SecondaryThumbstickDown;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8331));
		int32_t L_84 = V_0;
		int32_t L_85 = __this->___SecondaryThumbstickDown_21;
		V_0 = ((int32_t)((int32_t)L_84|(int32_t)L_85));
	}

IL_020d:
	{
		// if ((virtualMask & Button.SecondaryThumbstickLeft) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8332));
		int32_t L_86 = ___0_virtualMask;
		V_24 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_86&((int32_t)67108864)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8333));
		bool L_87 = V_24;
		if (!L_87)
		{
			goto IL_0226;
		}
	}
	{
		// rawMask |= SecondaryThumbstickLeft;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8334));
		int32_t L_88 = V_0;
		int32_t L_89 = __this->___SecondaryThumbstickLeft_22;
		V_0 = ((int32_t)((int32_t)L_88|(int32_t)L_89));
	}

IL_0226:
	{
		// if ((virtualMask & Button.SecondaryThumbstickRight) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8335));
		int32_t L_90 = ___0_virtualMask;
		V_25 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_90&((int32_t)134217728)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8336));
		bool L_91 = V_25;
		if (!L_91)
		{
			goto IL_023f;
		}
	}
	{
		// rawMask |= SecondaryThumbstickRight;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8337));
		int32_t L_92 = V_0;
		int32_t L_93 = __this->___SecondaryThumbstickRight_23;
		V_0 = ((int32_t)((int32_t)L_92|(int32_t)L_93));
	}

IL_023f:
	{
		// if ((virtualMask & Button.SecondaryTouchpad) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8338));
		int32_t L_94 = ___0_virtualMask;
		V_26 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_94&((int32_t)2048)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8339));
		bool L_95 = V_26;
		if (!L_95)
		{
			goto IL_0258;
		}
	}
	{
		// rawMask |= SecondaryTouchpad;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8340));
		int32_t L_96 = V_0;
		int32_t L_97 = __this->___SecondaryTouchpad_24;
		V_0 = ((int32_t)((int32_t)L_96|(int32_t)L_97));
	}

IL_0258:
	{
		// if ((virtualMask & Button.DpadUp) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8341));
		int32_t L_98 = ___0_virtualMask;
		V_27 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_98&((int32_t)16)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8342));
		bool L_99 = V_27;
		if (!L_99)
		{
			goto IL_026e;
		}
	}
	{
		// rawMask |= DpadUp;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8343));
		int32_t L_100 = V_0;
		int32_t L_101 = __this->___DpadUp_25;
		V_0 = ((int32_t)((int32_t)L_100|(int32_t)L_101));
	}

IL_026e:
	{
		// if ((virtualMask & Button.DpadDown) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8344));
		int32_t L_102 = ___0_virtualMask;
		V_28 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_102&((int32_t)32)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8345));
		bool L_103 = V_28;
		if (!L_103)
		{
			goto IL_0284;
		}
	}
	{
		// rawMask |= DpadDown;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8346));
		int32_t L_104 = V_0;
		int32_t L_105 = __this->___DpadDown_26;
		V_0 = ((int32_t)((int32_t)L_104|(int32_t)L_105));
	}

IL_0284:
	{
		// if ((virtualMask & Button.DpadLeft) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8347));
		int32_t L_106 = ___0_virtualMask;
		V_29 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_106&((int32_t)64)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8348));
		bool L_107 = V_29;
		if (!L_107)
		{
			goto IL_029a;
		}
	}
	{
		// rawMask |= DpadLeft;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8349));
		int32_t L_108 = V_0;
		int32_t L_109 = __this->___DpadLeft_27;
		V_0 = ((int32_t)((int32_t)L_108|(int32_t)L_109));
	}

IL_029a:
	{
		// if ((virtualMask & Button.DpadRight) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8350));
		int32_t L_110 = ___0_virtualMask;
		V_30 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_110&((int32_t)128)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8351));
		bool L_111 = V_30;
		if (!L_111)
		{
			goto IL_02b3;
		}
	}
	{
		// rawMask |= DpadRight;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8352));
		int32_t L_112 = V_0;
		int32_t L_113 = __this->___DpadRight_28;
		V_0 = ((int32_t)((int32_t)L_112|(int32_t)L_113));
	}

IL_02b3:
	{
		// if ((virtualMask & Button.Up) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8353));
		int32_t L_114 = ___0_virtualMask;
		V_31 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_114&((int32_t)268435456)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8354));
		bool L_115 = V_31;
		if (!L_115)
		{
			goto IL_02cc;
		}
	}
	{
		// rawMask |= Up;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8355));
		int32_t L_116 = V_0;
		int32_t L_117 = __this->___Up_29;
		V_0 = ((int32_t)((int32_t)L_116|(int32_t)L_117));
	}

IL_02cc:
	{
		// if ((virtualMask & Button.Down) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8356));
		int32_t L_118 = ___0_virtualMask;
		V_32 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_118&((int32_t)536870912)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8357));
		bool L_119 = V_32;
		if (!L_119)
		{
			goto IL_02e5;
		}
	}
	{
		// rawMask |= Down;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8358));
		int32_t L_120 = V_0;
		int32_t L_121 = __this->___Down_30;
		V_0 = ((int32_t)((int32_t)L_120|(int32_t)L_121));
	}

IL_02e5:
	{
		// if ((virtualMask & Button.Left) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8359));
		int32_t L_122 = ___0_virtualMask;
		V_33 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_122&((int32_t)1073741824)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8360));
		bool L_123 = V_33;
		if (!L_123)
		{
			goto IL_02fe;
		}
	}
	{
		// rawMask |= Left;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8361));
		int32_t L_124 = V_0;
		int32_t L_125 = __this->___Left_31;
		V_0 = ((int32_t)((int32_t)L_124|(int32_t)L_125));
	}

IL_02fe:
	{
		// if ((virtualMask & Button.Right) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8362));
		int32_t L_126 = ___0_virtualMask;
		V_34 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_126&((int32_t)-2147483648LL)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8363));
		bool L_127 = V_34;
		if (!L_127)
		{
			goto IL_0317;
		}
	}
	{
		// rawMask |= Right;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8364));
		int32_t L_128 = V_0;
		int32_t L_129 = __this->___Right_32;
		V_0 = ((int32_t)((int32_t)L_128|(int32_t)L_129));
	}

IL_0317:
	{
		// return rawMask;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8365));
		int32_t L_130 = V_0;
		V_2 = L_130;
		goto IL_031b;
	}

IL_031b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8366));
		int32_t L_131 = V_2;
		return L_131;
	}
}
// System.Void OVRInput/OVRControllerBase/VirtualButtonMap::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VirtualButtonMap__ctor_m84849058BF5B2AE16FBEA486FC58B59641A134D5 (VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VirtualButtonMap__ctor_m84849058BF5B2AE16FBEA486FC58B59641A134D5_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, VirtualButtonMap__ctor_m84849058BF5B2AE16FBEA486FC58B59641A134D5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8367));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8368));
	{
		// public RawButton None                     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8369));
		__this->___None_0 = 0;
		// public RawButton One                      = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8370));
		__this->___One_1 = 0;
		// public RawButton Two                      = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8371));
		__this->___Two_2 = 0;
		// public RawButton Three                    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8372));
		__this->___Three_3 = 0;
		// public RawButton Four                     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8373));
		__this->___Four_4 = 0;
		// public RawButton Start                    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8374));
		__this->___Start_5 = 0;
		// public RawButton Back                     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8375));
		__this->___Back_6 = 0;
		// public RawButton PrimaryShoulder          = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8376));
		__this->___PrimaryShoulder_7 = 0;
		// public RawButton PrimaryIndexTrigger      = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8377));
		__this->___PrimaryIndexTrigger_8 = 0;
		// public RawButton PrimaryHandTrigger       = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8378));
		__this->___PrimaryHandTrigger_9 = 0;
		// public RawButton PrimaryThumbstick        = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8379));
		__this->___PrimaryThumbstick_10 = 0;
		// public RawButton PrimaryThumbstickUp      = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8380));
		__this->___PrimaryThumbstickUp_11 = 0;
		// public RawButton PrimaryThumbstickDown    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8381));
		__this->___PrimaryThumbstickDown_12 = 0;
		// public RawButton PrimaryThumbstickLeft    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8382));
		__this->___PrimaryThumbstickLeft_13 = 0;
		// public RawButton PrimaryThumbstickRight   = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8383));
		__this->___PrimaryThumbstickRight_14 = 0;
		// public RawButton PrimaryTouchpad          = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8384));
		__this->___PrimaryTouchpad_15 = 0;
		// public RawButton SecondaryShoulder        = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8385));
		__this->___SecondaryShoulder_16 = 0;
		// public RawButton SecondaryIndexTrigger    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8386));
		__this->___SecondaryIndexTrigger_17 = 0;
		// public RawButton SecondaryHandTrigger     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8387));
		__this->___SecondaryHandTrigger_18 = 0;
		// public RawButton SecondaryThumbstick      = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8388));
		__this->___SecondaryThumbstick_19 = 0;
		// public RawButton SecondaryThumbstickUp    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8389));
		__this->___SecondaryThumbstickUp_20 = 0;
		// public RawButton SecondaryThumbstickDown  = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8390));
		__this->___SecondaryThumbstickDown_21 = 0;
		// public RawButton SecondaryThumbstickLeft  = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8391));
		__this->___SecondaryThumbstickLeft_22 = 0;
		// public RawButton SecondaryThumbstickRight = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8392));
		__this->___SecondaryThumbstickRight_23 = 0;
		// public RawButton SecondaryTouchpad        = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8393));
		__this->___SecondaryTouchpad_24 = 0;
		// public RawButton DpadUp                   = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8394));
		__this->___DpadUp_25 = 0;
		// public RawButton DpadDown                 = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8395));
		__this->___DpadDown_26 = 0;
		// public RawButton DpadLeft                 = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8396));
		__this->___DpadLeft_27 = 0;
		// public RawButton DpadRight                = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8397));
		__this->___DpadRight_28 = 0;
		// public RawButton Up                       = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8398));
		__this->___Up_29 = 0;
		// public RawButton Down                     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8399));
		__this->___Down_30 = 0;
		// public RawButton Left                     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8400));
		__this->___Left_31 = 0;
		// public RawButton Right                    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8401));
		__this->___Right_32 = 0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8402));
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8402));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// OVRInput/RawTouch OVRInput/OVRControllerBase/VirtualTouchMap::ToRawMask(OVRInput/Touch)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t VirtualTouchMap_ToRawMask_mCF2939C4B09B3FE0367B3F73003D4D3EC7F78EB7 (VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* __this, int32_t ___0_virtualMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&RawTouch_t7D17A388D30D8E3B4FD34FBDAA322D5023CF8BE3_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VirtualTouchMap_ToRawMask_mCF2939C4B09B3FE0367B3F73003D4D3EC7F78EB7_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	int32_t V_2 = 0;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	bool V_10 = false;
	bool V_11 = false;
	bool V_12 = false;
	bool V_13 = false;
	bool V_14 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_virtualMask));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, VirtualTouchMap_ToRawMask_mCF2939C4B09B3FE0367B3F73003D4D3EC7F78EB7_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8403));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8404));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8405));
		// RawTouch rawMask = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8406));
		V_0 = 0;
		// if (virtualMask == Touch.None)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8407));
		int32_t L_0 = ___0_virtualMask;
		V_1 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8408));
		bool L_1 = V_1;
		if (!L_1)
		{
			goto IL_0012;
		}
	}
	{
		// return RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8409));
		V_2 = 0;
		goto IL_0130;
	}

IL_0012:
	{
		// if ((virtualMask & Touch.One) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8410));
		int32_t L_2 = ___0_virtualMask;
		V_3 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_2&1))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8411));
		bool L_3 = V_3;
		if (!L_3)
		{
			goto IL_0025;
		}
	}
	{
		// rawMask |= One;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8412));
		int32_t L_4 = V_0;
		int32_t L_5 = __this->___One_1;
		V_0 = ((int32_t)((int32_t)L_4|(int32_t)L_5));
	}

IL_0025:
	{
		// if ((virtualMask & Touch.Two) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8413));
		int32_t L_6 = ___0_virtualMask;
		V_4 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_6&2))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8414));
		bool L_7 = V_4;
		if (!L_7)
		{
			goto IL_003a;
		}
	}
	{
		// rawMask |= Two;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8415));
		int32_t L_8 = V_0;
		int32_t L_9 = __this->___Two_2;
		V_0 = ((int32_t)((int32_t)L_8|(int32_t)L_9));
	}

IL_003a:
	{
		// if ((virtualMask & Touch.Three) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8416));
		int32_t L_10 = ___0_virtualMask;
		V_5 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_10&4))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8417));
		bool L_11 = V_5;
		if (!L_11)
		{
			goto IL_004f;
		}
	}
	{
		// rawMask |= Three;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8418));
		int32_t L_12 = V_0;
		int32_t L_13 = __this->___Three_3;
		V_0 = ((int32_t)((int32_t)L_12|(int32_t)L_13));
	}

IL_004f:
	{
		// if ((virtualMask & Touch.Four) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8419));
		int32_t L_14 = ___0_virtualMask;
		V_6 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_14&8))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8420));
		bool L_15 = V_6;
		if (!L_15)
		{
			goto IL_0064;
		}
	}
	{
		// rawMask |= Four;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8421));
		int32_t L_16 = V_0;
		int32_t L_17 = __this->___Four_4;
		V_0 = ((int32_t)((int32_t)L_16|(int32_t)L_17));
	}

IL_0064:
	{
		// if ((virtualMask & Touch.PrimaryIndexTrigger) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8422));
		int32_t L_18 = ___0_virtualMask;
		V_7 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_18&((int32_t)8192)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8423));
		bool L_19 = V_7;
		if (!L_19)
		{
			goto IL_007d;
		}
	}
	{
		// rawMask |= PrimaryIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8424));
		int32_t L_20 = V_0;
		int32_t L_21 = __this->___PrimaryIndexTrigger_5;
		V_0 = ((int32_t)((int32_t)L_20|(int32_t)L_21));
	}

IL_007d:
	{
		// if ((virtualMask & Touch.PrimaryThumbstick) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8425));
		int32_t L_22 = ___0_virtualMask;
		V_8 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_22&((int32_t)32768)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8426));
		bool L_23 = V_8;
		if (!L_23)
		{
			goto IL_0096;
		}
	}
	{
		// rawMask |= PrimaryThumbstick;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8427));
		int32_t L_24 = V_0;
		int32_t L_25 = __this->___PrimaryThumbstick_6;
		V_0 = ((int32_t)((int32_t)L_24|(int32_t)L_25));
	}

IL_0096:
	{
		// if ((virtualMask & Touch.PrimaryThumbRest) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8428));
		int32_t L_26 = ___0_virtualMask;
		V_9 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_26&((int32_t)4096)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8429));
		bool L_27 = V_9;
		if (!L_27)
		{
			goto IL_00af;
		}
	}
	{
		// rawMask |= PrimaryThumbRest;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8430));
		int32_t L_28 = V_0;
		int32_t L_29 = __this->___PrimaryThumbRest_7;
		V_0 = ((int32_t)((int32_t)L_28|(int32_t)L_29));
	}

IL_00af:
	{
		// if ((virtualMask & Touch.PrimaryTouchpad) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8431));
		int32_t L_30 = ___0_virtualMask;
		V_10 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_30&((int32_t)1024)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8432));
		bool L_31 = V_10;
		if (!L_31)
		{
			goto IL_00c8;
		}
	}
	{
		// rawMask |= PrimaryTouchpad;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8433));
		int32_t L_32 = V_0;
		int32_t L_33 = __this->___PrimaryTouchpad_8;
		V_0 = ((int32_t)((int32_t)L_32|(int32_t)L_33));
	}

IL_00c8:
	{
		// if ((virtualMask & Touch.SecondaryIndexTrigger) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8434));
		int32_t L_34 = ___0_virtualMask;
		V_11 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_34&((int32_t)2097152)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8435));
		bool L_35 = V_11;
		if (!L_35)
		{
			goto IL_00e1;
		}
	}
	{
		// rawMask |= SecondaryIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8436));
		int32_t L_36 = V_0;
		int32_t L_37 = __this->___SecondaryIndexTrigger_9;
		V_0 = ((int32_t)((int32_t)L_36|(int32_t)L_37));
	}

IL_00e1:
	{
		// if ((virtualMask & Touch.SecondaryThumbstick) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8437));
		int32_t L_38 = ___0_virtualMask;
		V_12 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_38&((int32_t)8388608)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8438));
		bool L_39 = V_12;
		if (!L_39)
		{
			goto IL_00fa;
		}
	}
	{
		// rawMask |= SecondaryThumbstick;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8439));
		int32_t L_40 = V_0;
		int32_t L_41 = __this->___SecondaryThumbstick_10;
		V_0 = ((int32_t)((int32_t)L_40|(int32_t)L_41));
	}

IL_00fa:
	{
		// if ((virtualMask & Touch.SecondaryThumbRest) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8440));
		int32_t L_42 = ___0_virtualMask;
		V_13 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_42&((int32_t)1048576)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8441));
		bool L_43 = V_13;
		if (!L_43)
		{
			goto IL_0113;
		}
	}
	{
		// rawMask |= SecondaryThumbRest;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8442));
		int32_t L_44 = V_0;
		int32_t L_45 = __this->___SecondaryThumbRest_11;
		V_0 = ((int32_t)((int32_t)L_44|(int32_t)L_45));
	}

IL_0113:
	{
		// if ((virtualMask & Touch.SecondaryTouchpad) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8443));
		int32_t L_46 = ___0_virtualMask;
		V_14 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_46&((int32_t)2048)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8444));
		bool L_47 = V_14;
		if (!L_47)
		{
			goto IL_012c;
		}
	}
	{
		// rawMask |= SecondaryTouchpad;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8445));
		int32_t L_48 = V_0;
		int32_t L_49 = __this->___SecondaryTouchpad_12;
		V_0 = ((int32_t)((int32_t)L_48|(int32_t)L_49));
	}

IL_012c:
	{
		// return rawMask;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8446));
		int32_t L_50 = V_0;
		V_2 = L_50;
		goto IL_0130;
	}

IL_0130:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8447));
		int32_t L_51 = V_2;
		return L_51;
	}
}
// System.Void OVRInput/OVRControllerBase/VirtualTouchMap::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VirtualTouchMap__ctor_mF8C09D67EE6EF2B426DFE0AF08FE81B9CD38CDCA (VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VirtualTouchMap__ctor_mF8C09D67EE6EF2B426DFE0AF08FE81B9CD38CDCA_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, VirtualTouchMap__ctor_mF8C09D67EE6EF2B426DFE0AF08FE81B9CD38CDCA_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8448));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8449));
	{
		// public RawTouch None                      = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8450));
		__this->___None_0 = 0;
		// public RawTouch One                       = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8451));
		__this->___One_1 = 0;
		// public RawTouch Two                       = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8452));
		__this->___Two_2 = 0;
		// public RawTouch Three                     = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8453));
		__this->___Three_3 = 0;
		// public RawTouch Four                      = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8454));
		__this->___Four_4 = 0;
		// public RawTouch PrimaryIndexTrigger       = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8455));
		__this->___PrimaryIndexTrigger_5 = 0;
		// public RawTouch PrimaryThumbstick         = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8456));
		__this->___PrimaryThumbstick_6 = 0;
		// public RawTouch PrimaryThumbRest          = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8457));
		__this->___PrimaryThumbRest_7 = 0;
		// public RawTouch PrimaryTouchpad           = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8458));
		__this->___PrimaryTouchpad_8 = 0;
		// public RawTouch SecondaryIndexTrigger     = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8459));
		__this->___SecondaryIndexTrigger_9 = 0;
		// public RawTouch SecondaryThumbstick       = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8460));
		__this->___SecondaryThumbstick_10 = 0;
		// public RawTouch SecondaryThumbRest        = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8461));
		__this->___SecondaryThumbRest_11 = 0;
		// public RawTouch SecondaryTouchpad         = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8462));
		__this->___SecondaryTouchpad_12 = 0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8463));
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8463));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// OVRInput/RawNearTouch OVRInput/OVRControllerBase/VirtualNearTouchMap::ToRawMask(OVRInput/NearTouch)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t VirtualNearTouchMap_ToRawMask_mE743414574E2B9D84BD84B2B4E9156973F2A57EA (VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* __this, int32_t ___0_virtualMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&RawNearTouch_t462F7BF4D7758A6C7CCA8DC98652716CF7796ACB_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VirtualNearTouchMap_ToRawMask_mE743414574E2B9D84BD84B2B4E9156973F2A57EA_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	int32_t V_2 = 0;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_virtualMask));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, VirtualNearTouchMap_ToRawMask_mE743414574E2B9D84BD84B2B4E9156973F2A57EA_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8464));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8465));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8466));
		// RawNearTouch rawMask = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8467));
		V_0 = 0;
		// if (virtualMask == NearTouch.None)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8468));
		int32_t L_0 = ___0_virtualMask;
		V_1 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8469));
		bool L_1 = V_1;
		if (!L_1)
		{
			goto IL_000f;
		}
	}
	{
		// return RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8470));
		V_2 = 0;
		goto IL_0065;
	}

IL_000f:
	{
		// if ((virtualMask & NearTouch.PrimaryIndexTrigger) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8471));
		int32_t L_2 = ___0_virtualMask;
		V_3 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_2&1))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8472));
		bool L_3 = V_3;
		if (!L_3)
		{
			goto IL_0022;
		}
	}
	{
		// rawMask |= PrimaryIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8473));
		int32_t L_4 = V_0;
		int32_t L_5 = __this->___PrimaryIndexTrigger_1;
		V_0 = ((int32_t)((int32_t)L_4|(int32_t)L_5));
	}

IL_0022:
	{
		// if ((virtualMask & NearTouch.PrimaryThumbButtons) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8474));
		int32_t L_6 = ___0_virtualMask;
		V_4 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_6&2))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8475));
		bool L_7 = V_4;
		if (!L_7)
		{
			goto IL_0037;
		}
	}
	{
		// rawMask |= PrimaryThumbButtons;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8476));
		int32_t L_8 = V_0;
		int32_t L_9 = __this->___PrimaryThumbButtons_2;
		V_0 = ((int32_t)((int32_t)L_8|(int32_t)L_9));
	}

IL_0037:
	{
		// if ((virtualMask & NearTouch.SecondaryIndexTrigger) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8477));
		int32_t L_10 = ___0_virtualMask;
		V_5 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_10&4))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8478));
		bool L_11 = V_5;
		if (!L_11)
		{
			goto IL_004c;
		}
	}
	{
		// rawMask |= SecondaryIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8479));
		int32_t L_12 = V_0;
		int32_t L_13 = __this->___SecondaryIndexTrigger_3;
		V_0 = ((int32_t)((int32_t)L_12|(int32_t)L_13));
	}

IL_004c:
	{
		// if ((virtualMask & NearTouch.SecondaryThumbButtons) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8480));
		int32_t L_14 = ___0_virtualMask;
		V_6 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_14&8))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8481));
		bool L_15 = V_6;
		if (!L_15)
		{
			goto IL_0061;
		}
	}
	{
		// rawMask |= SecondaryThumbButtons;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8482));
		int32_t L_16 = V_0;
		int32_t L_17 = __this->___SecondaryThumbButtons_4;
		V_0 = ((int32_t)((int32_t)L_16|(int32_t)L_17));
	}

IL_0061:
	{
		// return rawMask;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8483));
		int32_t L_18 = V_0;
		V_2 = L_18;
		goto IL_0065;
	}

IL_0065:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8484));
		int32_t L_19 = V_2;
		return L_19;
	}
}
// System.Void OVRInput/OVRControllerBase/VirtualNearTouchMap::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VirtualNearTouchMap__ctor_m29091026E28CD564A8098B5BB557397C2B8A4B86 (VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VirtualNearTouchMap__ctor_m29091026E28CD564A8098B5BB557397C2B8A4B86_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, VirtualNearTouchMap__ctor_m29091026E28CD564A8098B5BB557397C2B8A4B86_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8485));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8486));
	{
		// public RawNearTouch None                      = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8487));
		__this->___None_0 = 0;
		// public RawNearTouch PrimaryIndexTrigger       = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8488));
		__this->___PrimaryIndexTrigger_1 = 0;
		// public RawNearTouch PrimaryThumbButtons       = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8489));
		__this->___PrimaryThumbButtons_2 = 0;
		// public RawNearTouch SecondaryIndexTrigger     = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8490));
		__this->___SecondaryIndexTrigger_3 = 0;
		// public RawNearTouch SecondaryThumbButtons     = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8491));
		__this->___SecondaryThumbButtons_4 = 0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8492));
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8492));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// OVRInput/RawAxis1D OVRInput/OVRControllerBase/VirtualAxis1DMap::ToRawMask(OVRInput/Axis1D)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t VirtualAxis1DMap_ToRawMask_m977A6C4A989DD010BC7C844700E7CF2A2E35AA51 (VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* __this, int32_t ___0_virtualMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&RawAxis1D_tAE65BD6B0EB61DDB15F3B28E5D114F8979221BD5_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VirtualAxis1DMap_ToRawMask_m977A6C4A989DD010BC7C844700E7CF2A2E35AA51_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	int32_t V_2 = 0;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	bool V_10 = false;
	bool V_11 = false;
	bool V_12 = false;
	bool V_13 = false;
	bool V_14 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_virtualMask));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, VirtualAxis1DMap_ToRawMask_m977A6C4A989DD010BC7C844700E7CF2A2E35AA51_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8493));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8494));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8495));
		// RawAxis1D rawMask = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8496));
		V_0 = 0;
		// if (virtualMask == Axis1D.None)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8497));
		int32_t L_0 = ___0_virtualMask;
		V_1 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8498));
		bool L_1 = V_1;
		if (!L_1)
		{
			goto IL_0012;
		}
	}
	{
		// return RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8499));
		V_2 = 0;
		goto IL_0127;
	}

IL_0012:
	{
		// if ((virtualMask & Axis1D.PrimaryIndexTrigger) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8500));
		int32_t L_2 = ___0_virtualMask;
		V_3 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_2&1))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8501));
		bool L_3 = V_3;
		if (!L_3)
		{
			goto IL_0025;
		}
	}
	{
		// rawMask |= PrimaryIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8502));
		int32_t L_4 = V_0;
		int32_t L_5 = __this->___PrimaryIndexTrigger_1;
		V_0 = ((int32_t)((int32_t)L_4|(int32_t)L_5));
	}

IL_0025:
	{
		// if ((virtualMask & Axis1D.PrimaryHandTrigger) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8503));
		int32_t L_6 = ___0_virtualMask;
		V_4 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_6&4))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8504));
		bool L_7 = V_4;
		if (!L_7)
		{
			goto IL_003a;
		}
	}
	{
		// rawMask |= PrimaryHandTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8505));
		int32_t L_8 = V_0;
		int32_t L_9 = __this->___PrimaryHandTrigger_2;
		V_0 = ((int32_t)((int32_t)L_8|(int32_t)L_9));
	}

IL_003a:
	{
		// if ((virtualMask & Axis1D.SecondaryIndexTrigger) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8506));
		int32_t L_10 = ___0_virtualMask;
		V_5 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_10&2))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8507));
		bool L_11 = V_5;
		if (!L_11)
		{
			goto IL_004f;
		}
	}
	{
		// rawMask |= SecondaryIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8508));
		int32_t L_12 = V_0;
		int32_t L_13 = __this->___SecondaryIndexTrigger_3;
		V_0 = ((int32_t)((int32_t)L_12|(int32_t)L_13));
	}

IL_004f:
	{
		// if ((virtualMask & Axis1D.SecondaryHandTrigger) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8509));
		int32_t L_14 = ___0_virtualMask;
		V_6 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_14&8))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8510));
		bool L_15 = V_6;
		if (!L_15)
		{
			goto IL_0064;
		}
	}
	{
		// rawMask |= SecondaryHandTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8511));
		int32_t L_16 = V_0;
		int32_t L_17 = __this->___SecondaryHandTrigger_4;
		V_0 = ((int32_t)((int32_t)L_16|(int32_t)L_17));
	}

IL_0064:
	{
		// if ((virtualMask & Axis1D.PrimaryIndexTriggerCurl) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8512));
		int32_t L_18 = ___0_virtualMask;
		V_7 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_18&((int32_t)16)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8513));
		bool L_19 = V_7;
		if (!L_19)
		{
			goto IL_007a;
		}
	}
	{
		// rawMask |= PrimaryIndexTriggerCurl;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8514));
		int32_t L_20 = V_0;
		int32_t L_21 = __this->___PrimaryIndexTriggerCurl_5;
		V_0 = ((int32_t)((int32_t)L_20|(int32_t)L_21));
	}

IL_007a:
	{
		// if ((virtualMask & Axis1D.PrimaryIndexTriggerSlide) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8515));
		int32_t L_22 = ___0_virtualMask;
		V_8 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_22&((int32_t)32)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8516));
		bool L_23 = V_8;
		if (!L_23)
		{
			goto IL_0090;
		}
	}
	{
		// rawMask |= PrimaryIndexTriggerSlide;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8517));
		int32_t L_24 = V_0;
		int32_t L_25 = __this->___PrimaryIndexTriggerSlide_6;
		V_0 = ((int32_t)((int32_t)L_24|(int32_t)L_25));
	}

IL_0090:
	{
		// if ((virtualMask & Axis1D.PrimaryThumbRestForce) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8518));
		int32_t L_26 = ___0_virtualMask;
		V_9 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_26&((int32_t)64)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8519));
		bool L_27 = V_9;
		if (!L_27)
		{
			goto IL_00a6;
		}
	}
	{
		// rawMask |= PrimaryThumbRestForce;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8520));
		int32_t L_28 = V_0;
		int32_t L_29 = __this->___PrimaryThumbRestForce_7;
		V_0 = ((int32_t)((int32_t)L_28|(int32_t)L_29));
	}

IL_00a6:
	{
		// if ((virtualMask & Axis1D.PrimaryStylusForce) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8521));
		int32_t L_30 = ___0_virtualMask;
		V_10 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_30&((int32_t)128)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8522));
		bool L_31 = V_10;
		if (!L_31)
		{
			goto IL_00bf;
		}
	}
	{
		// rawMask |= PrimaryStylusForce;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8523));
		int32_t L_32 = V_0;
		int32_t L_33 = __this->___PrimaryStylusForce_8;
		V_0 = ((int32_t)((int32_t)L_32|(int32_t)L_33));
	}

IL_00bf:
	{
		// if ((virtualMask & Axis1D.SecondaryIndexTriggerCurl) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8524));
		int32_t L_34 = ___0_virtualMask;
		V_11 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_34&((int32_t)256)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8525));
		bool L_35 = V_11;
		if (!L_35)
		{
			goto IL_00d8;
		}
	}
	{
		// rawMask |= SecondaryIndexTriggerCurl;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8526));
		int32_t L_36 = V_0;
		int32_t L_37 = __this->___SecondaryIndexTriggerCurl_9;
		V_0 = ((int32_t)((int32_t)L_36|(int32_t)L_37));
	}

IL_00d8:
	{
		// if ((virtualMask & Axis1D.SecondaryIndexTriggerSlide) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8527));
		int32_t L_38 = ___0_virtualMask;
		V_12 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_38&((int32_t)512)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8528));
		bool L_39 = V_12;
		if (!L_39)
		{
			goto IL_00f1;
		}
	}
	{
		// rawMask |= SecondaryIndexTriggerSlide;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8529));
		int32_t L_40 = V_0;
		int32_t L_41 = __this->___SecondaryIndexTriggerSlide_10;
		V_0 = ((int32_t)((int32_t)L_40|(int32_t)L_41));
	}

IL_00f1:
	{
		// if ((virtualMask & Axis1D.SecondaryThumbRestForce) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8530));
		int32_t L_42 = ___0_virtualMask;
		V_13 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_42&((int32_t)1024)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8531));
		bool L_43 = V_13;
		if (!L_43)
		{
			goto IL_010a;
		}
	}
	{
		// rawMask |= SecondaryThumbRestForce;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8532));
		int32_t L_44 = V_0;
		int32_t L_45 = __this->___SecondaryThumbRestForce_11;
		V_0 = ((int32_t)((int32_t)L_44|(int32_t)L_45));
	}

IL_010a:
	{
		// if ((virtualMask & Axis1D.SecondaryStylusForce) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8533));
		int32_t L_46 = ___0_virtualMask;
		V_14 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_46&((int32_t)2048)))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8534));
		bool L_47 = V_14;
		if (!L_47)
		{
			goto IL_0123;
		}
	}
	{
		// rawMask |= SecondaryStylusForce;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8535));
		int32_t L_48 = V_0;
		int32_t L_49 = __this->___SecondaryStylusForce_12;
		V_0 = ((int32_t)((int32_t)L_48|(int32_t)L_49));
	}

IL_0123:
	{
		// return rawMask;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8536));
		int32_t L_50 = V_0;
		V_2 = L_50;
		goto IL_0127;
	}

IL_0127:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8537));
		int32_t L_51 = V_2;
		return L_51;
	}
}
// System.Void OVRInput/OVRControllerBase/VirtualAxis1DMap::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VirtualAxis1DMap__ctor_m7AF1E2FD0D217CE37E1C60CE9F873E253CB7ADFB (VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VirtualAxis1DMap__ctor_m7AF1E2FD0D217CE37E1C60CE9F873E253CB7ADFB_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, VirtualAxis1DMap__ctor_m7AF1E2FD0D217CE37E1C60CE9F873E253CB7ADFB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8538));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8539));
	{
		// public RawAxis1D None                      = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8540));
		__this->___None_0 = 0;
		// public RawAxis1D PrimaryIndexTrigger       = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8541));
		__this->___PrimaryIndexTrigger_1 = 0;
		// public RawAxis1D PrimaryHandTrigger        = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8542));
		__this->___PrimaryHandTrigger_2 = 0;
		// public RawAxis1D SecondaryIndexTrigger     = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8543));
		__this->___SecondaryIndexTrigger_3 = 0;
		// public RawAxis1D SecondaryHandTrigger      = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8544));
		__this->___SecondaryHandTrigger_4 = 0;
		// public RawAxis1D PrimaryIndexTriggerCurl    = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8545));
		__this->___PrimaryIndexTriggerCurl_5 = 0;
		// public RawAxis1D PrimaryIndexTriggerSlide   = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8546));
		__this->___PrimaryIndexTriggerSlide_6 = 0;
		// public RawAxis1D PrimaryThumbRestForce      = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8547));
		__this->___PrimaryThumbRestForce_7 = 0;
		// public RawAxis1D PrimaryStylusForce         = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8548));
		__this->___PrimaryStylusForce_8 = 0;
		// public RawAxis1D SecondaryIndexTriggerCurl  = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8549));
		__this->___SecondaryIndexTriggerCurl_9 = 0;
		// public RawAxis1D SecondaryIndexTriggerSlide = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8550));
		__this->___SecondaryIndexTriggerSlide_10 = 0;
		// public RawAxis1D SecondaryThumbRestForce    = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8551));
		__this->___SecondaryThumbRestForce_11 = 0;
		// public RawAxis1D SecondaryStylusForce       = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8552));
		__this->___SecondaryStylusForce_12 = 0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8553));
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8553));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// OVRInput/RawAxis2D OVRInput/OVRControllerBase/VirtualAxis2DMap::ToRawMask(OVRInput/Axis2D)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t VirtualAxis2DMap_ToRawMask_m9C9827F9F56AF946108A8A9A8504299BAC8BCC44 (VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* __this, int32_t ___0_virtualMask, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&RawAxis2D_t882F928A0CB13BA12DBC6402B64ECA76202DFBA1_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VirtualAxis2DMap_ToRawMask_m9C9827F9F56AF946108A8A9A8504299BAC8BCC44_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	int32_t V_2 = 0;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_virtualMask));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, VirtualAxis2DMap_ToRawMask_m9C9827F9F56AF946108A8A9A8504299BAC8BCC44_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8554));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8555));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8556));
		// RawAxis2D rawMask = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8557));
		V_0 = 0;
		// if (virtualMask == Axis2D.None)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8558));
		int32_t L_0 = ___0_virtualMask;
		V_1 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8559));
		bool L_1 = V_1;
		if (!L_1)
		{
			goto IL_000f;
		}
	}
	{
		// return RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8560));
		V_2 = 0;
		goto IL_0065;
	}

IL_000f:
	{
		// if ((virtualMask & Axis2D.PrimaryThumbstick) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8561));
		int32_t L_2 = ___0_virtualMask;
		V_3 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_2&1))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8562));
		bool L_3 = V_3;
		if (!L_3)
		{
			goto IL_0022;
		}
	}
	{
		// rawMask |= PrimaryThumbstick;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8563));
		int32_t L_4 = V_0;
		int32_t L_5 = __this->___PrimaryThumbstick_1;
		V_0 = ((int32_t)((int32_t)L_4|(int32_t)L_5));
	}

IL_0022:
	{
		// if ((virtualMask & Axis2D.PrimaryTouchpad) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8564));
		int32_t L_6 = ___0_virtualMask;
		V_4 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_6&4))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8565));
		bool L_7 = V_4;
		if (!L_7)
		{
			goto IL_0037;
		}
	}
	{
		// rawMask |= PrimaryTouchpad;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8566));
		int32_t L_8 = V_0;
		int32_t L_9 = __this->___PrimaryTouchpad_2;
		V_0 = ((int32_t)((int32_t)L_8|(int32_t)L_9));
	}

IL_0037:
	{
		// if ((virtualMask & Axis2D.SecondaryThumbstick) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8567));
		int32_t L_10 = ___0_virtualMask;
		V_5 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_10&2))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8568));
		bool L_11 = V_5;
		if (!L_11)
		{
			goto IL_004c;
		}
	}
	{
		// rawMask |= SecondaryThumbstick;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8569));
		int32_t L_12 = V_0;
		int32_t L_13 = __this->___SecondaryThumbstick_3;
		V_0 = ((int32_t)((int32_t)L_12|(int32_t)L_13));
	}

IL_004c:
	{
		// if ((virtualMask & Axis2D.SecondaryTouchpad) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8570));
		int32_t L_14 = ___0_virtualMask;
		V_6 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_14&8))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8571));
		bool L_15 = V_6;
		if (!L_15)
		{
			goto IL_0061;
		}
	}
	{
		// rawMask |= SecondaryTouchpad;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8572));
		int32_t L_16 = V_0;
		int32_t L_17 = __this->___SecondaryTouchpad_4;
		V_0 = ((int32_t)((int32_t)L_16|(int32_t)L_17));
	}

IL_0061:
	{
		// return rawMask;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8573));
		int32_t L_18 = V_0;
		V_2 = L_18;
		goto IL_0065;
	}

IL_0065:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8574));
		int32_t L_19 = V_2;
		return L_19;
	}
}
// System.Void OVRInput/OVRControllerBase/VirtualAxis2DMap::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VirtualAxis2DMap__ctor_m53A66F09A2A2B816DEDE021C7781DA2422E64C92 (VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VirtualAxis2DMap__ctor_m53A66F09A2A2B816DEDE021C7781DA2422E64C92_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, VirtualAxis2DMap__ctor_m53A66F09A2A2B816DEDE021C7781DA2422E64C92_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8575));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8576));
	{
		// public RawAxis2D None                      = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8577));
		__this->___None_0 = 0;
		// public RawAxis2D PrimaryThumbstick         = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8578));
		__this->___PrimaryThumbstick_1 = 0;
		// public RawAxis2D PrimaryTouchpad           = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8579));
		__this->___PrimaryTouchpad_2 = 0;
		// public RawAxis2D SecondaryThumbstick       = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8580));
		__this->___SecondaryThumbstick_3 = 0;
		// public RawAxis2D SecondaryTouchpad         = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8581));
		__this->___SecondaryTouchpad_4 = 0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8582));
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8582));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void OVRInput/OVRControllerTouch::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerTouch__ctor_m91BC2C7183CE4A5BC5C88F5853AD8861707099EB (OVRControllerTouch_t3242C19AECEE9D167D937CF1288465415D554A37* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerTouch__ctor_m91BC2C7183CE4A5BC5C88F5853AD8861707099EB_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerTouch_t3242C19AECEE9D167D937CF1288465415D554A37_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerTouch__ctor_m91BC2C7183CE4A5BC5C88F5853AD8861707099EB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8583));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8584));
	{
		// public OVRControllerTouch()
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8585));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8586));
		OVRControllerBase__ctor_m19E323A6D3242829EDFA1879B8B8C0525806A124(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8586));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8587));
		// controllerType = Controller.Touch;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8588));
		((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___controllerType_0 = 3;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8589));
		return;
	}
}
// System.Void OVRInput/OVRControllerTouch::ConfigureButtonMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerTouch_ConfigureButtonMap_mACDB2CCC5BDBA806408371D07B1C24D285031FAF (OVRControllerTouch_t3242C19AECEE9D167D937CF1288465415D554A37* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerTouch_ConfigureButtonMap_mACDB2CCC5BDBA806408371D07B1C24D285031FAF_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerTouch_t3242C19AECEE9D167D937CF1288465415D554A37_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerTouch_ConfigureButtonMap_mACDB2CCC5BDBA806408371D07B1C24D285031FAF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8590));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8591));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8592));
		// buttonMap.None                     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8593));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// buttonMap.One                      = RawButton.A;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8594));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_1);
		L_1->___One_1 = 1;
		// buttonMap.Two                      = RawButton.B;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8595));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_2);
		L_2->___Two_2 = 2;
		// buttonMap.Three                    = RawButton.X;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8596));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_3);
		L_3->___Three_3 = ((int32_t)256);
		// buttonMap.Four                     = RawButton.Y;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8597));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_4);
		L_4->___Four_4 = ((int32_t)512);
		// buttonMap.Start                    = RawButton.Start;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8598));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_5 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_5);
		L_5->___Start_5 = ((int32_t)1048576);
		// buttonMap.Back                     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8599));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_6 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_6);
		L_6->___Back_6 = 0;
		// buttonMap.PrimaryShoulder          = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8600));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_7 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_7);
		L_7->___PrimaryShoulder_7 = 0;
		// buttonMap.PrimaryIndexTrigger      = RawButton.LIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8601));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_8 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_8);
		L_8->___PrimaryIndexTrigger_8 = ((int32_t)268435456);
		// buttonMap.PrimaryHandTrigger       = RawButton.LHandTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8602));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_9 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_9);
		L_9->___PrimaryHandTrigger_9 = ((int32_t)536870912);
		// buttonMap.PrimaryThumbstick        = RawButton.LThumbstick;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8603));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_10 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_10);
		L_10->___PrimaryThumbstick_10 = ((int32_t)1024);
		// buttonMap.PrimaryThumbstickUp      = RawButton.LThumbstickUp;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8604));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_11 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_11);
		L_11->___PrimaryThumbstickUp_11 = ((int32_t)16);
		// buttonMap.PrimaryThumbstickDown    = RawButton.LThumbstickDown;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8605));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_12 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_12);
		L_12->___PrimaryThumbstickDown_12 = ((int32_t)32);
		// buttonMap.PrimaryThumbstickLeft    = RawButton.LThumbstickLeft;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8606));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_13 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_13);
		L_13->___PrimaryThumbstickLeft_13 = ((int32_t)64);
		// buttonMap.PrimaryThumbstickRight   = RawButton.LThumbstickRight;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8607));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_14 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_14);
		L_14->___PrimaryThumbstickRight_14 = ((int32_t)128);
		// buttonMap.PrimaryTouchpad          = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8608));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_15 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_15);
		L_15->___PrimaryTouchpad_15 = 0;
		// buttonMap.SecondaryShoulder        = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8609));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_16 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_16);
		L_16->___SecondaryShoulder_16 = 0;
		// buttonMap.SecondaryIndexTrigger    = RawButton.RIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8610));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_17 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_17);
		L_17->___SecondaryIndexTrigger_17 = ((int32_t)67108864);
		// buttonMap.SecondaryHandTrigger     = RawButton.RHandTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8611));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_18 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_18);
		L_18->___SecondaryHandTrigger_18 = ((int32_t)134217728);
		// buttonMap.SecondaryThumbstick      = RawButton.RThumbstick;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8612));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_19 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_19);
		L_19->___SecondaryThumbstick_19 = 4;
		// buttonMap.SecondaryThumbstickUp    = RawButton.RThumbstickUp;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8613));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_20 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_20);
		L_20->___SecondaryThumbstickUp_20 = ((int32_t)4096);
		// buttonMap.SecondaryThumbstickDown  = RawButton.RThumbstickDown;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8614));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_21 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_21);
		L_21->___SecondaryThumbstickDown_21 = ((int32_t)8192);
		// buttonMap.SecondaryThumbstickLeft  = RawButton.RThumbstickLeft;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8615));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_22 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_22);
		L_22->___SecondaryThumbstickLeft_22 = ((int32_t)16384);
		// buttonMap.SecondaryThumbstickRight = RawButton.RThumbstickRight;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8616));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_23 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_23);
		L_23->___SecondaryThumbstickRight_23 = ((int32_t)32768);
		// buttonMap.SecondaryTouchpad        = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8617));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_24 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_24);
		L_24->___SecondaryTouchpad_24 = 0;
		// buttonMap.DpadUp                   = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8618));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_25 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_25);
		L_25->___DpadUp_25 = 0;
		// buttonMap.DpadDown                 = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8619));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_26 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_26);
		L_26->___DpadDown_26 = 0;
		// buttonMap.DpadLeft                 = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8620));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_27 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_27);
		L_27->___DpadLeft_27 = 0;
		// buttonMap.DpadRight                = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8621));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_28 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_28);
		L_28->___DpadRight_28 = 0;
		// buttonMap.Up                       = RawButton.LThumbstickUp;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8622));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_29 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_29);
		L_29->___Up_29 = ((int32_t)16);
		// buttonMap.Down                     = RawButton.LThumbstickDown;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8623));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_30 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_30);
		L_30->___Down_30 = ((int32_t)32);
		// buttonMap.Left                     = RawButton.LThumbstickLeft;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8624));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_31 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_31);
		L_31->___Left_31 = ((int32_t)64);
		// buttonMap.Right                    = RawButton.LThumbstickRight;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8625));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_32 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_32);
		L_32->___Right_32 = ((int32_t)128);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8626));
		return;
	}
}
// System.Void OVRInput/OVRControllerTouch::ConfigureTouchMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerTouch_ConfigureTouchMap_m65253BF99B5E88B3E0EBD2AF339653BE3D35E545 (OVRControllerTouch_t3242C19AECEE9D167D937CF1288465415D554A37* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerTouch_ConfigureTouchMap_m65253BF99B5E88B3E0EBD2AF339653BE3D35E545_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerTouch_t3242C19AECEE9D167D937CF1288465415D554A37_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerTouch_ConfigureTouchMap_m65253BF99B5E88B3E0EBD2AF339653BE3D35E545_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8627));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8628));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8629));
		// touchMap.None                      = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8630));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// touchMap.One                       = RawTouch.A;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8631));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_1);
		L_1->___One_1 = 1;
		// touchMap.Two                       = RawTouch.B;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8632));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_2);
		L_2->___Two_2 = 2;
		// touchMap.Three                     = RawTouch.X;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8633));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_3);
		L_3->___Three_3 = ((int32_t)256);
		// touchMap.Four                      = RawTouch.Y;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8634));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_4);
		L_4->___Four_4 = ((int32_t)512);
		// touchMap.PrimaryIndexTrigger       = RawTouch.LIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8635));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_5 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_5);
		L_5->___PrimaryIndexTrigger_5 = ((int32_t)4096);
		// touchMap.PrimaryThumbstick         = RawTouch.LThumbstick;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8636));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_6 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_6);
		L_6->___PrimaryThumbstick_6 = ((int32_t)1024);
		// touchMap.PrimaryThumbRest          = RawTouch.LThumbRest;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8637));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_7 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_7);
		L_7->___PrimaryThumbRest_7 = ((int32_t)2048);
		// touchMap.PrimaryTouchpad           = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8638));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_8 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_8);
		L_8->___PrimaryTouchpad_8 = 0;
		// touchMap.SecondaryIndexTrigger     = RawTouch.RIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8639));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_9 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_9);
		L_9->___SecondaryIndexTrigger_9 = ((int32_t)16);
		// touchMap.SecondaryThumbstick       = RawTouch.RThumbstick;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8640));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_10 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_10);
		L_10->___SecondaryThumbstick_10 = 4;
		// touchMap.SecondaryThumbRest        = RawTouch.RThumbRest;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8641));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_11 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_11);
		L_11->___SecondaryThumbRest_11 = 8;
		// touchMap.SecondaryTouchpad         = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8642));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_12 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_12);
		L_12->___SecondaryTouchpad_12 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8643));
		return;
	}
}
// System.Void OVRInput/OVRControllerTouch::ConfigureNearTouchMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerTouch_ConfigureNearTouchMap_m51B0B6A5579135C8065182047980BE5BE5F1F2E3 (OVRControllerTouch_t3242C19AECEE9D167D937CF1288465415D554A37* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerTouch_ConfigureNearTouchMap_m51B0B6A5579135C8065182047980BE5BE5F1F2E3_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerTouch_t3242C19AECEE9D167D937CF1288465415D554A37_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerTouch_ConfigureNearTouchMap_m51B0B6A5579135C8065182047980BE5BE5F1F2E3_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8644));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8645));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8646));
		// nearTouchMap.None                      = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8647));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// nearTouchMap.PrimaryIndexTrigger       = RawNearTouch.LIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8648));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_1);
		L_1->___PrimaryIndexTrigger_1 = 1;
		// nearTouchMap.PrimaryThumbButtons       = RawNearTouch.LThumbButtons;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8649));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_2);
		L_2->___PrimaryThumbButtons_2 = 2;
		// nearTouchMap.SecondaryIndexTrigger     = RawNearTouch.RIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8650));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_3);
		L_3->___SecondaryIndexTrigger_3 = 4;
		// nearTouchMap.SecondaryThumbButtons     = RawNearTouch.RThumbButtons;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8651));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_4);
		L_4->___SecondaryThumbButtons_4 = 8;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8652));
		return;
	}
}
// System.Void OVRInput/OVRControllerTouch::ConfigureAxis1DMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerTouch_ConfigureAxis1DMap_mA7C294FB81EF4B94456EB3278B963E61854FBB95 (OVRControllerTouch_t3242C19AECEE9D167D937CF1288465415D554A37* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerTouch_ConfigureAxis1DMap_mA7C294FB81EF4B94456EB3278B963E61854FBB95_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerTouch_t3242C19AECEE9D167D937CF1288465415D554A37_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerTouch_ConfigureAxis1DMap_mA7C294FB81EF4B94456EB3278B963E61854FBB95_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8653));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8654));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8655));
		// axis1DMap.None                      = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8656));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// axis1DMap.PrimaryIndexTrigger       = RawAxis1D.LIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8657));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_1);
		L_1->___PrimaryIndexTrigger_1 = 1;
		// axis1DMap.PrimaryHandTrigger        = RawAxis1D.LHandTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8658));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_2);
		L_2->___PrimaryHandTrigger_2 = 4;
		// axis1DMap.SecondaryIndexTrigger     = RawAxis1D.RIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8659));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_3);
		L_3->___SecondaryIndexTrigger_3 = 2;
		// axis1DMap.SecondaryHandTrigger      = RawAxis1D.RHandTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8660));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_4);
		L_4->___SecondaryHandTrigger_4 = 8;
		// axis1DMap.PrimaryIndexTriggerCurl    = RawAxis1D.LIndexTriggerCurl;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8661));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_5 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_5);
		L_5->___PrimaryIndexTriggerCurl_5 = ((int32_t)16);
		// axis1DMap.PrimaryIndexTriggerSlide   = RawAxis1D.LIndexTriggerSlide;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8662));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_6 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_6);
		L_6->___PrimaryIndexTriggerSlide_6 = ((int32_t)32);
		// axis1DMap.PrimaryThumbRestForce      = RawAxis1D.LThumbRestForce;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8663));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_7 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_7);
		L_7->___PrimaryThumbRestForce_7 = ((int32_t)64);
		// axis1DMap.PrimaryStylusForce         = RawAxis1D.LStylusForce;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8664));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_8 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_8);
		L_8->___PrimaryStylusForce_8 = ((int32_t)128);
		// axis1DMap.SecondaryIndexTriggerCurl  = RawAxis1D.RIndexTriggerCurl;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8665));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_9 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_9);
		L_9->___SecondaryIndexTriggerCurl_9 = ((int32_t)256);
		// axis1DMap.SecondaryIndexTriggerSlide = RawAxis1D.RIndexTriggerSlide;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8666));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_10 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_10);
		L_10->___SecondaryIndexTriggerSlide_10 = ((int32_t)512);
		// axis1DMap.SecondaryThumbRestForce    = RawAxis1D.RThumbRestForce;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8667));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_11 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_11);
		L_11->___SecondaryThumbRestForce_11 = ((int32_t)1024);
		// axis1DMap.SecondaryStylusForce       = RawAxis1D.RStylusForce;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8668));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_12 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_12);
		L_12->___SecondaryStylusForce_12 = ((int32_t)2048);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8669));
		return;
	}
}
// System.Void OVRInput/OVRControllerTouch::ConfigureAxis2DMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerTouch_ConfigureAxis2DMap_m0EF45F041D062888DB8382CCC5B9131A309272CB (OVRControllerTouch_t3242C19AECEE9D167D937CF1288465415D554A37* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerTouch_ConfigureAxis2DMap_m0EF45F041D062888DB8382CCC5B9131A309272CB_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerTouch_t3242C19AECEE9D167D937CF1288465415D554A37_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerTouch_ConfigureAxis2DMap_m0EF45F041D062888DB8382CCC5B9131A309272CB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8670));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8671));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8672));
		// axis2DMap.None                      = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8673));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// axis2DMap.PrimaryThumbstick         = RawAxis2D.LThumbstick;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8674));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_1);
		L_1->___PrimaryThumbstick_1 = 1;
		// axis2DMap.PrimaryTouchpad           = RawAxis2D.LTouchpad;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8675));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_2);
		L_2->___PrimaryTouchpad_2 = 4;
		// axis2DMap.SecondaryThumbstick       = RawAxis2D.RThumbstick;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8676));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_3);
		L_3->___SecondaryThumbstick_3 = 2;
		// axis2DMap.SecondaryTouchpad         = RawAxis2D.RTouchpad;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8677));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_4);
		L_4->___SecondaryTouchpad_4 = 8;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8678));
		return;
	}
}
// System.Byte OVRInput/OVRControllerTouch::GetBatteryPercentRemaining()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint8_t OVRControllerTouch_GetBatteryPercentRemaining_m5C35D85D70C9DC963708501AE7007D026D5DD5DF (OVRControllerTouch_t3242C19AECEE9D167D937CF1288465415D554A37* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Byte_t94D9231AC217BE4D2E004C4CD32DF6D099EA41A3_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerTouch_GetBatteryPercentRemaining_m5C35D85D70C9DC963708501AE7007D026D5DD5DF_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerTouch_t3242C19AECEE9D167D937CF1288465415D554A37_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	uint8_t V_0 = 0x0;
	uint8_t V_1 = 0x0;
	uint8_t V_2 = 0x0;
	uint8_t V_3 = 0x0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerTouch_GetBatteryPercentRemaining_m5C35D85D70C9DC963708501AE7007D026D5DD5DF_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8679));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8680));
	uint8_t G_B3_0 = 0x0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8681));
		// byte leftBattery = currentState.LBatteryPercentRemaining;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8682));
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_0 = (&((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___currentState_7);
		uint8_t L_1 = L_0->___LBatteryPercentRemaining_12;
		V_0 = L_1;
		// byte rightBattery = currentState.RBatteryPercentRemaining;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8683));
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_2 = (&((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___currentState_7);
		uint8_t L_3 = L_2->___RBatteryPercentRemaining_13;
		V_1 = L_3;
		// byte minBattery = (leftBattery <= rightBattery) ? leftBattery : rightBattery;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8684));
		uint8_t L_4 = V_0;
		uint8_t L_5 = V_1;
		if ((((int32_t)L_4) <= ((int32_t)L_5)))
		{
			goto IL_0020;
		}
	}
	{
		uint8_t L_6 = V_1;
		G_B3_0 = L_6;
		goto IL_0021;
	}

IL_0020:
	{
		uint8_t L_7 = V_0;
		G_B3_0 = L_7;
	}

IL_0021:
	{
		V_2 = G_B3_0;
		// return minBattery;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8685));
		uint8_t L_8 = V_2;
		V_3 = L_8;
		goto IL_0026;
	}

IL_0026:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8686));
		uint8_t L_9 = V_3;
		return L_9;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void OVRInput/OVRControllerLTouch::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerLTouch__ctor_m91BB861EC10E9882AB10768F0454FC24950C7101 (OVRControllerLTouch_tAB910B5D7369AA3104AD40C8AE5458C254D225C6* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerLTouch__ctor_m91BB861EC10E9882AB10768F0454FC24950C7101_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerLTouch_tAB910B5D7369AA3104AD40C8AE5458C254D225C6_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerLTouch__ctor_m91BB861EC10E9882AB10768F0454FC24950C7101_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8687));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8688));
	{
		// public OVRControllerLTouch()
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8689));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8690));
		OVRControllerBase__ctor_m19E323A6D3242829EDFA1879B8B8C0525806A124(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8690));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8691));
		// controllerType = Controller.LTouch;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8692));
		((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___controllerType_0 = 1;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8693));
		return;
	}
}
// System.Void OVRInput/OVRControllerLTouch::ConfigureButtonMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerLTouch_ConfigureButtonMap_m9413242DE6585C709A64369A77F3C33EA4D8C682 (OVRControllerLTouch_tAB910B5D7369AA3104AD40C8AE5458C254D225C6* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerLTouch_ConfigureButtonMap_m9413242DE6585C709A64369A77F3C33EA4D8C682_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerLTouch_tAB910B5D7369AA3104AD40C8AE5458C254D225C6_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerLTouch_ConfigureButtonMap_m9413242DE6585C709A64369A77F3C33EA4D8C682_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8694));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8695));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8696));
		// buttonMap.None                     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8697));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// buttonMap.One                      = RawButton.X;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8698));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_1);
		L_1->___One_1 = ((int32_t)256);
		// buttonMap.Two                      = RawButton.Y;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8699));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_2);
		L_2->___Two_2 = ((int32_t)512);
		// buttonMap.Three                    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8700));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_3);
		L_3->___Three_3 = 0;
		// buttonMap.Four                     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8701));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_4);
		L_4->___Four_4 = 0;
		// buttonMap.Start                    = RawButton.Start;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8702));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_5 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_5);
		L_5->___Start_5 = ((int32_t)1048576);
		// buttonMap.Back                     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8703));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_6 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_6);
		L_6->___Back_6 = 0;
		// buttonMap.PrimaryShoulder          = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8704));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_7 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_7);
		L_7->___PrimaryShoulder_7 = 0;
		// buttonMap.PrimaryIndexTrigger      = RawButton.LIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8705));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_8 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_8);
		L_8->___PrimaryIndexTrigger_8 = ((int32_t)268435456);
		// buttonMap.PrimaryHandTrigger       = RawButton.LHandTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8706));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_9 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_9);
		L_9->___PrimaryHandTrigger_9 = ((int32_t)536870912);
		// buttonMap.PrimaryThumbstick        = RawButton.LThumbstick;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8707));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_10 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_10);
		L_10->___PrimaryThumbstick_10 = ((int32_t)1024);
		// buttonMap.PrimaryThumbstickUp      = RawButton.LThumbstickUp;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8708));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_11 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_11);
		L_11->___PrimaryThumbstickUp_11 = ((int32_t)16);
		// buttonMap.PrimaryThumbstickDown    = RawButton.LThumbstickDown;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8709));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_12 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_12);
		L_12->___PrimaryThumbstickDown_12 = ((int32_t)32);
		// buttonMap.PrimaryThumbstickLeft    = RawButton.LThumbstickLeft;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8710));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_13 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_13);
		L_13->___PrimaryThumbstickLeft_13 = ((int32_t)64);
		// buttonMap.PrimaryThumbstickRight   = RawButton.LThumbstickRight;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8711));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_14 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_14);
		L_14->___PrimaryThumbstickRight_14 = ((int32_t)128);
		// buttonMap.PrimaryTouchpad          = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8712));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_15 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_15);
		L_15->___PrimaryTouchpad_15 = 0;
		// buttonMap.SecondaryShoulder        = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8713));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_16 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_16);
		L_16->___SecondaryShoulder_16 = 0;
		// buttonMap.SecondaryIndexTrigger    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8714));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_17 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_17);
		L_17->___SecondaryIndexTrigger_17 = 0;
		// buttonMap.SecondaryHandTrigger     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8715));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_18 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_18);
		L_18->___SecondaryHandTrigger_18 = 0;
		// buttonMap.SecondaryThumbstick      = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8716));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_19 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_19);
		L_19->___SecondaryThumbstick_19 = 0;
		// buttonMap.SecondaryThumbstickUp    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8717));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_20 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_20);
		L_20->___SecondaryThumbstickUp_20 = 0;
		// buttonMap.SecondaryThumbstickDown  = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8718));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_21 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_21);
		L_21->___SecondaryThumbstickDown_21 = 0;
		// buttonMap.SecondaryThumbstickLeft  = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8719));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_22 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_22);
		L_22->___SecondaryThumbstickLeft_22 = 0;
		// buttonMap.SecondaryThumbstickRight = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8720));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_23 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_23);
		L_23->___SecondaryThumbstickRight_23 = 0;
		// buttonMap.SecondaryTouchpad        = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8721));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_24 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_24);
		L_24->___SecondaryTouchpad_24 = 0;
		// buttonMap.DpadUp                   = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8722));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_25 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_25);
		L_25->___DpadUp_25 = 0;
		// buttonMap.DpadDown                 = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8723));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_26 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_26);
		L_26->___DpadDown_26 = 0;
		// buttonMap.DpadLeft                 = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8724));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_27 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_27);
		L_27->___DpadLeft_27 = 0;
		// buttonMap.DpadRight                = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8725));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_28 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_28);
		L_28->___DpadRight_28 = 0;
		// buttonMap.Up                       = RawButton.LThumbstickUp;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8726));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_29 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_29);
		L_29->___Up_29 = ((int32_t)16);
		// buttonMap.Down                     = RawButton.LThumbstickDown;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8727));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_30 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_30);
		L_30->___Down_30 = ((int32_t)32);
		// buttonMap.Left                     = RawButton.LThumbstickLeft;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8728));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_31 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_31);
		L_31->___Left_31 = ((int32_t)64);
		// buttonMap.Right                    = RawButton.LThumbstickRight;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8729));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_32 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_32);
		L_32->___Right_32 = ((int32_t)128);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8730));
		return;
	}
}
// System.Void OVRInput/OVRControllerLTouch::ConfigureTouchMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerLTouch_ConfigureTouchMap_mD14A0EE3394CCDF4C7ABAD5F1E3DCF26452CBF2B (OVRControllerLTouch_tAB910B5D7369AA3104AD40C8AE5458C254D225C6* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerLTouch_ConfigureTouchMap_mD14A0EE3394CCDF4C7ABAD5F1E3DCF26452CBF2B_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerLTouch_tAB910B5D7369AA3104AD40C8AE5458C254D225C6_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerLTouch_ConfigureTouchMap_mD14A0EE3394CCDF4C7ABAD5F1E3DCF26452CBF2B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8731));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8732));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8733));
		// touchMap.None                      = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8734));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// touchMap.One                       = RawTouch.X;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8735));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_1);
		L_1->___One_1 = ((int32_t)256);
		// touchMap.Two                       = RawTouch.Y;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8736));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_2);
		L_2->___Two_2 = ((int32_t)512);
		// touchMap.Three                     = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8737));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_3);
		L_3->___Three_3 = 0;
		// touchMap.Four                      = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8738));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_4);
		L_4->___Four_4 = 0;
		// touchMap.PrimaryIndexTrigger       = RawTouch.LIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8739));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_5 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_5);
		L_5->___PrimaryIndexTrigger_5 = ((int32_t)4096);
		// touchMap.PrimaryThumbstick         = RawTouch.LThumbstick;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8740));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_6 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_6);
		L_6->___PrimaryThumbstick_6 = ((int32_t)1024);
		// touchMap.PrimaryThumbRest          = RawTouch.LThumbRest;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8741));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_7 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_7);
		L_7->___PrimaryThumbRest_7 = ((int32_t)2048);
		// touchMap.PrimaryTouchpad           = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8742));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_8 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_8);
		L_8->___PrimaryTouchpad_8 = 0;
		// touchMap.SecondaryIndexTrigger     = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8743));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_9 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_9);
		L_9->___SecondaryIndexTrigger_9 = 0;
		// touchMap.SecondaryThumbstick       = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8744));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_10 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_10);
		L_10->___SecondaryThumbstick_10 = 0;
		// touchMap.SecondaryThumbRest        = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8745));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_11 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_11);
		L_11->___SecondaryThumbRest_11 = 0;
		// touchMap.SecondaryTouchpad         = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8746));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_12 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_12);
		L_12->___SecondaryTouchpad_12 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8747));
		return;
	}
}
// System.Void OVRInput/OVRControllerLTouch::ConfigureNearTouchMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerLTouch_ConfigureNearTouchMap_m4A5B3B61760B4D3A714880DC119238004F83AED1 (OVRControllerLTouch_tAB910B5D7369AA3104AD40C8AE5458C254D225C6* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerLTouch_ConfigureNearTouchMap_m4A5B3B61760B4D3A714880DC119238004F83AED1_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerLTouch_tAB910B5D7369AA3104AD40C8AE5458C254D225C6_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerLTouch_ConfigureNearTouchMap_m4A5B3B61760B4D3A714880DC119238004F83AED1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8748));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8749));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8750));
		// nearTouchMap.None                      = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8751));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// nearTouchMap.PrimaryIndexTrigger       = RawNearTouch.LIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8752));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_1);
		L_1->___PrimaryIndexTrigger_1 = 1;
		// nearTouchMap.PrimaryThumbButtons       = RawNearTouch.LThumbButtons;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8753));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_2);
		L_2->___PrimaryThumbButtons_2 = 2;
		// nearTouchMap.SecondaryIndexTrigger     = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8754));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_3);
		L_3->___SecondaryIndexTrigger_3 = 0;
		// nearTouchMap.SecondaryThumbButtons     = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8755));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_4);
		L_4->___SecondaryThumbButtons_4 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8756));
		return;
	}
}
// System.Void OVRInput/OVRControllerLTouch::ConfigureAxis1DMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerLTouch_ConfigureAxis1DMap_mAABFB5FAA98D0B37152700DBFE5C89E28C8945A8 (OVRControllerLTouch_tAB910B5D7369AA3104AD40C8AE5458C254D225C6* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerLTouch_ConfigureAxis1DMap_mAABFB5FAA98D0B37152700DBFE5C89E28C8945A8_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerLTouch_tAB910B5D7369AA3104AD40C8AE5458C254D225C6_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerLTouch_ConfigureAxis1DMap_mAABFB5FAA98D0B37152700DBFE5C89E28C8945A8_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8757));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8758));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8759));
		// axis1DMap.None                      = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8760));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// axis1DMap.PrimaryIndexTrigger       = RawAxis1D.LIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8761));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_1);
		L_1->___PrimaryIndexTrigger_1 = 1;
		// axis1DMap.PrimaryHandTrigger        = RawAxis1D.LHandTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8762));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_2);
		L_2->___PrimaryHandTrigger_2 = 4;
		// axis1DMap.SecondaryIndexTrigger     = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8763));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_3);
		L_3->___SecondaryIndexTrigger_3 = 0;
		// axis1DMap.SecondaryHandTrigger      = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8764));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_4);
		L_4->___SecondaryHandTrigger_4 = 0;
		// axis1DMap.PrimaryIndexTriggerCurl    = RawAxis1D.LIndexTriggerCurl;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8765));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_5 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_5);
		L_5->___PrimaryIndexTriggerCurl_5 = ((int32_t)16);
		// axis1DMap.PrimaryIndexTriggerSlide   = RawAxis1D.LIndexTriggerSlide;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8766));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_6 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_6);
		L_6->___PrimaryIndexTriggerSlide_6 = ((int32_t)32);
		// axis1DMap.PrimaryThumbRestForce      = RawAxis1D.LThumbRestForce;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8767));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_7 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_7);
		L_7->___PrimaryThumbRestForce_7 = ((int32_t)64);
		// axis1DMap.PrimaryStylusForce         = RawAxis1D.LStylusForce;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8768));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_8 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_8);
		L_8->___PrimaryStylusForce_8 = ((int32_t)128);
		// axis1DMap.SecondaryIndexTriggerCurl  = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8769));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_9 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_9);
		L_9->___SecondaryIndexTriggerCurl_9 = 0;
		// axis1DMap.SecondaryIndexTriggerSlide = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8770));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_10 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_10);
		L_10->___SecondaryIndexTriggerSlide_10 = 0;
		// axis1DMap.SecondaryThumbRestForce    = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8771));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_11 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_11);
		L_11->___SecondaryThumbRestForce_11 = 0;
		// axis1DMap.SecondaryStylusForce       = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8772));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_12 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_12);
		L_12->___SecondaryStylusForce_12 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8773));
		return;
	}
}
// System.Void OVRInput/OVRControllerLTouch::ConfigureAxis2DMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerLTouch_ConfigureAxis2DMap_m7BEB3B0140CC9BB47DC108A708F0B1568CED0BD1 (OVRControllerLTouch_tAB910B5D7369AA3104AD40C8AE5458C254D225C6* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerLTouch_ConfigureAxis2DMap_m7BEB3B0140CC9BB47DC108A708F0B1568CED0BD1_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerLTouch_tAB910B5D7369AA3104AD40C8AE5458C254D225C6_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerLTouch_ConfigureAxis2DMap_m7BEB3B0140CC9BB47DC108A708F0B1568CED0BD1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8774));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8775));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8776));
		// axis2DMap.None                      = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8777));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// axis2DMap.PrimaryThumbstick         = RawAxis2D.LThumbstick;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8778));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_1);
		L_1->___PrimaryThumbstick_1 = 1;
		// axis2DMap.PrimaryTouchpad           = RawAxis2D.LTouchpad;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8779));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_2);
		L_2->___PrimaryTouchpad_2 = 4;
		// axis2DMap.SecondaryThumbstick       = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8780));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_3);
		L_3->___SecondaryThumbstick_3 = 0;
		// axis2DMap.SecondaryTouchpad         = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8781));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_4);
		L_4->___SecondaryTouchpad_4 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8782));
		return;
	}
}
// System.Byte OVRInput/OVRControllerLTouch::GetBatteryPercentRemaining()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint8_t OVRControllerLTouch_GetBatteryPercentRemaining_mDB85D6A5C60A825972429F330905206217A01CF5 (OVRControllerLTouch_tAB910B5D7369AA3104AD40C8AE5458C254D225C6* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Byte_t94D9231AC217BE4D2E004C4CD32DF6D099EA41A3_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerLTouch_GetBatteryPercentRemaining_mDB85D6A5C60A825972429F330905206217A01CF5_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerLTouch_tAB910B5D7369AA3104AD40C8AE5458C254D225C6_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	uint8_t V_0 = 0x0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerLTouch_GetBatteryPercentRemaining_mDB85D6A5C60A825972429F330905206217A01CF5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8783));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8784));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8785));
		// return currentState.LBatteryPercentRemaining;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8786));
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_0 = (&((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___currentState_7);
		uint8_t L_1 = L_0->___LBatteryPercentRemaining_12;
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8787));
		uint8_t L_2 = V_0;
		return L_2;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void OVRInput/OVRControllerRTouch::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerRTouch__ctor_mACBBB5CD6558549FC7D1707D4DE6F92A3469B184 (OVRControllerRTouch_t05E309647F46A925D9C970B8636ADD34E6533A01* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRTouch__ctor_mACBBB5CD6558549FC7D1707D4DE6F92A3469B184_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRTouch_t05E309647F46A925D9C970B8636ADD34E6533A01_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerRTouch__ctor_mACBBB5CD6558549FC7D1707D4DE6F92A3469B184_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8788));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8789));
	{
		// public OVRControllerRTouch()
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8790));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8791));
		OVRControllerBase__ctor_m19E323A6D3242829EDFA1879B8B8C0525806A124(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8791));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8792));
		// controllerType = Controller.RTouch;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8793));
		((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___controllerType_0 = 2;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8794));
		return;
	}
}
// System.Void OVRInput/OVRControllerRTouch::ConfigureButtonMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerRTouch_ConfigureButtonMap_mE41F2F13D647A6715102311417B3503BCA8FDD60 (OVRControllerRTouch_t05E309647F46A925D9C970B8636ADD34E6533A01* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRTouch_ConfigureButtonMap_mE41F2F13D647A6715102311417B3503BCA8FDD60_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRTouch_t05E309647F46A925D9C970B8636ADD34E6533A01_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerRTouch_ConfigureButtonMap_mE41F2F13D647A6715102311417B3503BCA8FDD60_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8795));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8796));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8797));
		// buttonMap.None                     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8798));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// buttonMap.One                      = RawButton.A;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8799));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_1);
		L_1->___One_1 = 1;
		// buttonMap.Two                      = RawButton.B;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8800));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_2);
		L_2->___Two_2 = 2;
		// buttonMap.Three                    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8801));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_3);
		L_3->___Three_3 = 0;
		// buttonMap.Four                     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8802));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_4);
		L_4->___Four_4 = 0;
		// buttonMap.Start                    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8803));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_5 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_5);
		L_5->___Start_5 = 0;
		// buttonMap.Back                     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8804));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_6 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_6);
		L_6->___Back_6 = 0;
		// buttonMap.PrimaryShoulder          = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8805));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_7 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_7);
		L_7->___PrimaryShoulder_7 = 0;
		// buttonMap.PrimaryIndexTrigger      = RawButton.RIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8806));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_8 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_8);
		L_8->___PrimaryIndexTrigger_8 = ((int32_t)67108864);
		// buttonMap.PrimaryHandTrigger       = RawButton.RHandTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8807));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_9 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_9);
		L_9->___PrimaryHandTrigger_9 = ((int32_t)134217728);
		// buttonMap.PrimaryThumbstick        = RawButton.RThumbstick;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8808));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_10 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_10);
		L_10->___PrimaryThumbstick_10 = 4;
		// buttonMap.PrimaryThumbstickUp      = RawButton.RThumbstickUp;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8809));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_11 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_11);
		L_11->___PrimaryThumbstickUp_11 = ((int32_t)4096);
		// buttonMap.PrimaryThumbstickDown    = RawButton.RThumbstickDown;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8810));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_12 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_12);
		L_12->___PrimaryThumbstickDown_12 = ((int32_t)8192);
		// buttonMap.PrimaryThumbstickLeft    = RawButton.RThumbstickLeft;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8811));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_13 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_13);
		L_13->___PrimaryThumbstickLeft_13 = ((int32_t)16384);
		// buttonMap.PrimaryThumbstickRight   = RawButton.RThumbstickRight;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8812));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_14 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_14);
		L_14->___PrimaryThumbstickRight_14 = ((int32_t)32768);
		// buttonMap.PrimaryTouchpad          = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8813));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_15 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_15);
		L_15->___PrimaryTouchpad_15 = 0;
		// buttonMap.SecondaryShoulder        = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8814));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_16 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_16);
		L_16->___SecondaryShoulder_16 = 0;
		// buttonMap.SecondaryIndexTrigger    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8815));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_17 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_17);
		L_17->___SecondaryIndexTrigger_17 = 0;
		// buttonMap.SecondaryHandTrigger     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8816));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_18 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_18);
		L_18->___SecondaryHandTrigger_18 = 0;
		// buttonMap.SecondaryThumbstick      = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8817));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_19 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_19);
		L_19->___SecondaryThumbstick_19 = 0;
		// buttonMap.SecondaryThumbstickUp    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8818));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_20 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_20);
		L_20->___SecondaryThumbstickUp_20 = 0;
		// buttonMap.SecondaryThumbstickDown  = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8819));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_21 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_21);
		L_21->___SecondaryThumbstickDown_21 = 0;
		// buttonMap.SecondaryThumbstickLeft  = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8820));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_22 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_22);
		L_22->___SecondaryThumbstickLeft_22 = 0;
		// buttonMap.SecondaryThumbstickRight = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8821));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_23 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_23);
		L_23->___SecondaryThumbstickRight_23 = 0;
		// buttonMap.SecondaryTouchpad        = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8822));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_24 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_24);
		L_24->___SecondaryTouchpad_24 = 0;
		// buttonMap.DpadUp                   = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8823));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_25 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_25);
		L_25->___DpadUp_25 = 0;
		// buttonMap.DpadDown                 = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8824));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_26 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_26);
		L_26->___DpadDown_26 = 0;
		// buttonMap.DpadLeft                 = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8825));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_27 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_27);
		L_27->___DpadLeft_27 = 0;
		// buttonMap.DpadRight                = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8826));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_28 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_28);
		L_28->___DpadRight_28 = 0;
		// buttonMap.Up                       = RawButton.RThumbstickUp;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8827));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_29 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_29);
		L_29->___Up_29 = ((int32_t)4096);
		// buttonMap.Down                     = RawButton.RThumbstickDown;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8828));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_30 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_30);
		L_30->___Down_30 = ((int32_t)8192);
		// buttonMap.Left                     = RawButton.RThumbstickLeft;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8829));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_31 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_31);
		L_31->___Left_31 = ((int32_t)16384);
		// buttonMap.Right                    = RawButton.RThumbstickRight;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8830));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_32 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_32);
		L_32->___Right_32 = ((int32_t)32768);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8831));
		return;
	}
}
// System.Void OVRInput/OVRControllerRTouch::ConfigureTouchMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerRTouch_ConfigureTouchMap_m1F7B7C2F6C894D4985869259BB66E01A71E4C682 (OVRControllerRTouch_t05E309647F46A925D9C970B8636ADD34E6533A01* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRTouch_ConfigureTouchMap_m1F7B7C2F6C894D4985869259BB66E01A71E4C682_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRTouch_t05E309647F46A925D9C970B8636ADD34E6533A01_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerRTouch_ConfigureTouchMap_m1F7B7C2F6C894D4985869259BB66E01A71E4C682_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8832));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8833));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8834));
		// touchMap.None                      = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8835));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// touchMap.One                       = RawTouch.A;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8836));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_1);
		L_1->___One_1 = 1;
		// touchMap.Two                       = RawTouch.B;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8837));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_2);
		L_2->___Two_2 = 2;
		// touchMap.Three                     = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8838));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_3);
		L_3->___Three_3 = 0;
		// touchMap.Four                      = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8839));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_4);
		L_4->___Four_4 = 0;
		// touchMap.PrimaryIndexTrigger       = RawTouch.RIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8840));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_5 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_5);
		L_5->___PrimaryIndexTrigger_5 = ((int32_t)16);
		// touchMap.PrimaryThumbstick         = RawTouch.RThumbstick;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8841));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_6 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_6);
		L_6->___PrimaryThumbstick_6 = 4;
		// touchMap.PrimaryThumbRest          = RawTouch.RThumbRest;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8842));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_7 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_7);
		L_7->___PrimaryThumbRest_7 = 8;
		// touchMap.PrimaryTouchpad           = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8843));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_8 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_8);
		L_8->___PrimaryTouchpad_8 = 0;
		// touchMap.SecondaryIndexTrigger     = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8844));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_9 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_9);
		L_9->___SecondaryIndexTrigger_9 = 0;
		// touchMap.SecondaryThumbstick       = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8845));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_10 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_10);
		L_10->___SecondaryThumbstick_10 = 0;
		// touchMap.SecondaryThumbRest        = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8846));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_11 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_11);
		L_11->___SecondaryThumbRest_11 = 0;
		// touchMap.SecondaryTouchpad         = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8847));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_12 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_12);
		L_12->___SecondaryTouchpad_12 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8848));
		return;
	}
}
// System.Void OVRInput/OVRControllerRTouch::ConfigureNearTouchMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerRTouch_ConfigureNearTouchMap_mE5B11F9F0A8BD53EC7B991347566429337B578B0 (OVRControllerRTouch_t05E309647F46A925D9C970B8636ADD34E6533A01* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRTouch_ConfigureNearTouchMap_mE5B11F9F0A8BD53EC7B991347566429337B578B0_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRTouch_t05E309647F46A925D9C970B8636ADD34E6533A01_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerRTouch_ConfigureNearTouchMap_mE5B11F9F0A8BD53EC7B991347566429337B578B0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8849));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8850));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8851));
		// nearTouchMap.None                      = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8852));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// nearTouchMap.PrimaryIndexTrigger       = RawNearTouch.RIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8853));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_1);
		L_1->___PrimaryIndexTrigger_1 = 4;
		// nearTouchMap.PrimaryThumbButtons       = RawNearTouch.RThumbButtons;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8854));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_2);
		L_2->___PrimaryThumbButtons_2 = 8;
		// nearTouchMap.SecondaryIndexTrigger     = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8855));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_3);
		L_3->___SecondaryIndexTrigger_3 = 0;
		// nearTouchMap.SecondaryThumbButtons     = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8856));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_4);
		L_4->___SecondaryThumbButtons_4 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8857));
		return;
	}
}
// System.Void OVRInput/OVRControllerRTouch::ConfigureAxis1DMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerRTouch_ConfigureAxis1DMap_mDEEFE8F2B9319A78CFF12C75B3F7DCDC6583B218 (OVRControllerRTouch_t05E309647F46A925D9C970B8636ADD34E6533A01* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRTouch_ConfigureAxis1DMap_mDEEFE8F2B9319A78CFF12C75B3F7DCDC6583B218_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRTouch_t05E309647F46A925D9C970B8636ADD34E6533A01_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerRTouch_ConfigureAxis1DMap_mDEEFE8F2B9319A78CFF12C75B3F7DCDC6583B218_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8858));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8859));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8860));
		// axis1DMap.None                      = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8861));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// axis1DMap.PrimaryIndexTrigger       = RawAxis1D.RIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8862));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_1);
		L_1->___PrimaryIndexTrigger_1 = 2;
		// axis1DMap.PrimaryHandTrigger        = RawAxis1D.RHandTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8863));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_2);
		L_2->___PrimaryHandTrigger_2 = 8;
		// axis1DMap.SecondaryIndexTrigger     = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8864));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_3);
		L_3->___SecondaryIndexTrigger_3 = 0;
		// axis1DMap.SecondaryHandTrigger      = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8865));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_4);
		L_4->___SecondaryHandTrigger_4 = 0;
		// axis1DMap.PrimaryIndexTriggerCurl    = RawAxis1D.RIndexTriggerCurl;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8866));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_5 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_5);
		L_5->___PrimaryIndexTriggerCurl_5 = ((int32_t)256);
		// axis1DMap.PrimaryIndexTriggerSlide   = RawAxis1D.RIndexTriggerSlide;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8867));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_6 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_6);
		L_6->___PrimaryIndexTriggerSlide_6 = ((int32_t)512);
		// axis1DMap.PrimaryThumbRestForce      = RawAxis1D.RThumbRestForce;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8868));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_7 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_7);
		L_7->___PrimaryThumbRestForce_7 = ((int32_t)1024);
		// axis1DMap.PrimaryStylusForce         = RawAxis1D.RStylusForce;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8869));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_8 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_8);
		L_8->___PrimaryStylusForce_8 = ((int32_t)2048);
		// axis1DMap.SecondaryIndexTriggerCurl  = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8870));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_9 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_9);
		L_9->___SecondaryIndexTriggerCurl_9 = 0;
		// axis1DMap.SecondaryIndexTriggerSlide = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8871));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_10 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_10);
		L_10->___SecondaryIndexTriggerSlide_10 = 0;
		// axis1DMap.SecondaryThumbRestForce    = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8872));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_11 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_11);
		L_11->___SecondaryThumbRestForce_11 = 0;
		// axis1DMap.SecondaryStylusForce       = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8873));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_12 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_12);
		L_12->___SecondaryStylusForce_12 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8874));
		return;
	}
}
// System.Void OVRInput/OVRControllerRTouch::ConfigureAxis2DMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerRTouch_ConfigureAxis2DMap_m0DE6AD033E914588B658F7F491D62015FF6C983A (OVRControllerRTouch_t05E309647F46A925D9C970B8636ADD34E6533A01* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRTouch_ConfigureAxis2DMap_m0DE6AD033E914588B658F7F491D62015FF6C983A_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRTouch_t05E309647F46A925D9C970B8636ADD34E6533A01_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerRTouch_ConfigureAxis2DMap_m0DE6AD033E914588B658F7F491D62015FF6C983A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8875));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8876));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8877));
		// axis2DMap.None                      = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8878));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// axis2DMap.PrimaryThumbstick         = RawAxis2D.RThumbstick;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8879));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_1);
		L_1->___PrimaryThumbstick_1 = 2;
		// axis2DMap.PrimaryTouchpad           = RawAxis2D.RTouchpad;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8880));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_2);
		L_2->___PrimaryTouchpad_2 = 8;
		// axis2DMap.SecondaryThumbstick       = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8881));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_3);
		L_3->___SecondaryThumbstick_3 = 0;
		// axis2DMap.SecondaryTouchpad         = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8882));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_4);
		L_4->___SecondaryTouchpad_4 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8883));
		return;
	}
}
// System.Byte OVRInput/OVRControllerRTouch::GetBatteryPercentRemaining()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint8_t OVRControllerRTouch_GetBatteryPercentRemaining_mA8A0D215C7A068CE90E6E623440A4F3E04EFF84E (OVRControllerRTouch_t05E309647F46A925D9C970B8636ADD34E6533A01* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Byte_t94D9231AC217BE4D2E004C4CD32DF6D099EA41A3_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRTouch_GetBatteryPercentRemaining_mA8A0D215C7A068CE90E6E623440A4F3E04EFF84E_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRTouch_t05E309647F46A925D9C970B8636ADD34E6533A01_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	uint8_t V_0 = 0x0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerRTouch_GetBatteryPercentRemaining_mA8A0D215C7A068CE90E6E623440A4F3E04EFF84E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8884));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8885));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8886));
		// return currentState.RBatteryPercentRemaining;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8887));
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_0 = (&((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___currentState_7);
		uint8_t L_1 = L_0->___RBatteryPercentRemaining_13;
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8888));
		uint8_t L_2 = V_0;
		return L_2;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void OVRInput/OVRControllerHands::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerHands__ctor_mCE96EBF14E42471CFFAC54E43B5B9F79DC75C51C (OVRControllerHands_t12594A1327521ECA38B53C166676B845C1D621CA* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerHands__ctor_mCE96EBF14E42471CFFAC54E43B5B9F79DC75C51C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerHands_t12594A1327521ECA38B53C166676B845C1D621CA_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerHands__ctor_mCE96EBF14E42471CFFAC54E43B5B9F79DC75C51C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8889));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8890));
	{
		// public OVRControllerHands()
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8891));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8892));
		OVRControllerBase__ctor_m19E323A6D3242829EDFA1879B8B8C0525806A124(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8892));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8893));
		// controllerType = Controller.Hands;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8894));
		((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___controllerType_0 = ((int32_t)96);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8895));
		return;
	}
}
// System.Void OVRInput/OVRControllerHands::ConfigureButtonMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerHands_ConfigureButtonMap_m7920F9AF7AAB15057EE5F40670AFBFC736E4D8C1 (OVRControllerHands_t12594A1327521ECA38B53C166676B845C1D621CA* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerHands_ConfigureButtonMap_m7920F9AF7AAB15057EE5F40670AFBFC736E4D8C1_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerHands_t12594A1327521ECA38B53C166676B845C1D621CA_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerHands_ConfigureButtonMap_m7920F9AF7AAB15057EE5F40670AFBFC736E4D8C1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8896));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8897));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8898));
		// buttonMap.None                     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8899));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// buttonMap.One                      = RawButton.A;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8900));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_1);
		L_1->___One_1 = 1;
		// buttonMap.Two                      = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8901));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_2);
		L_2->___Two_2 = 0;
		// buttonMap.Three                    = RawButton.X;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8902));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_3);
		L_3->___Three_3 = ((int32_t)256);
		// buttonMap.Four                     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8903));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_4);
		L_4->___Four_4 = 0;
		// buttonMap.Start                    = RawButton.Start;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8904));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_5 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_5);
		L_5->___Start_5 = ((int32_t)1048576);
		// buttonMap.Back                     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8905));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_6 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_6);
		L_6->___Back_6 = 0;
		// buttonMap.PrimaryShoulder          = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8906));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_7 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_7);
		L_7->___PrimaryShoulder_7 = 0;
		// buttonMap.PrimaryIndexTrigger      = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8907));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_8 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_8);
		L_8->___PrimaryIndexTrigger_8 = 0;
		// buttonMap.PrimaryHandTrigger       = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8908));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_9 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_9);
		L_9->___PrimaryHandTrigger_9 = 0;
		// buttonMap.PrimaryThumbstick        = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8909));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_10 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_10);
		L_10->___PrimaryThumbstick_10 = 0;
		// buttonMap.PrimaryThumbstickUp      = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8910));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_11 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_11);
		L_11->___PrimaryThumbstickUp_11 = 0;
		// buttonMap.PrimaryThumbstickDown    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8911));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_12 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_12);
		L_12->___PrimaryThumbstickDown_12 = 0;
		// buttonMap.PrimaryThumbstickLeft    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8912));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_13 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_13);
		L_13->___PrimaryThumbstickLeft_13 = 0;
		// buttonMap.PrimaryThumbstickRight   = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8913));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_14 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_14);
		L_14->___PrimaryThumbstickRight_14 = 0;
		// buttonMap.PrimaryTouchpad          = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8914));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_15 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_15);
		L_15->___PrimaryTouchpad_15 = 0;
		// buttonMap.SecondaryShoulder        = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8915));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_16 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_16);
		L_16->___SecondaryShoulder_16 = 0;
		// buttonMap.SecondaryIndexTrigger    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8916));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_17 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_17);
		L_17->___SecondaryIndexTrigger_17 = 0;
		// buttonMap.SecondaryHandTrigger     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8917));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_18 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_18);
		L_18->___SecondaryHandTrigger_18 = 0;
		// buttonMap.SecondaryThumbstick      = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8918));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_19 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_19);
		L_19->___SecondaryThumbstick_19 = 0;
		// buttonMap.SecondaryThumbstickUp    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8919));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_20 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_20);
		L_20->___SecondaryThumbstickUp_20 = 0;
		// buttonMap.SecondaryThumbstickDown  = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8920));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_21 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_21);
		L_21->___SecondaryThumbstickDown_21 = 0;
		// buttonMap.SecondaryThumbstickLeft  = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8921));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_22 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_22);
		L_22->___SecondaryThumbstickLeft_22 = 0;
		// buttonMap.SecondaryThumbstickRight = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8922));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_23 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_23);
		L_23->___SecondaryThumbstickRight_23 = 0;
		// buttonMap.SecondaryTouchpad        = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8923));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_24 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_24);
		L_24->___SecondaryTouchpad_24 = 0;
		// buttonMap.DpadUp                   = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8924));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_25 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_25);
		L_25->___DpadUp_25 = 0;
		// buttonMap.DpadDown                 = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8925));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_26 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_26);
		L_26->___DpadDown_26 = 0;
		// buttonMap.DpadLeft                 = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8926));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_27 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_27);
		L_27->___DpadLeft_27 = 0;
		// buttonMap.DpadRight                = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8927));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_28 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_28);
		L_28->___DpadRight_28 = 0;
		// buttonMap.Up                       = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8928));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_29 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_29);
		L_29->___Up_29 = 0;
		// buttonMap.Down                     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8929));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_30 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_30);
		L_30->___Down_30 = 0;
		// buttonMap.Left                     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8930));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_31 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_31);
		L_31->___Left_31 = 0;
		// buttonMap.Right                    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8931));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_32 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_32);
		L_32->___Right_32 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8932));
		return;
	}
}
// System.Void OVRInput/OVRControllerHands::ConfigureTouchMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerHands_ConfigureTouchMap_m8BB447AD82F512490DDD3282577A437E945B4A5C (OVRControllerHands_t12594A1327521ECA38B53C166676B845C1D621CA* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerHands_ConfigureTouchMap_m8BB447AD82F512490DDD3282577A437E945B4A5C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerHands_t12594A1327521ECA38B53C166676B845C1D621CA_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerHands_ConfigureTouchMap_m8BB447AD82F512490DDD3282577A437E945B4A5C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8933));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8934));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8935));
		// touchMap.None                      = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8936));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// touchMap.One                       = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8937));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_1);
		L_1->___One_1 = 0;
		// touchMap.Two                       = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8938));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_2);
		L_2->___Two_2 = 0;
		// touchMap.Three                     = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8939));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_3);
		L_3->___Three_3 = 0;
		// touchMap.Four                      = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8940));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_4);
		L_4->___Four_4 = 0;
		// touchMap.PrimaryIndexTrigger       = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8941));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_5 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_5);
		L_5->___PrimaryIndexTrigger_5 = 0;
		// touchMap.PrimaryThumbstick         = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8942));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_6 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_6);
		L_6->___PrimaryThumbstick_6 = 0;
		// touchMap.PrimaryThumbRest          = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8943));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_7 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_7);
		L_7->___PrimaryThumbRest_7 = 0;
		// touchMap.PrimaryTouchpad           = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8944));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_8 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_8);
		L_8->___PrimaryTouchpad_8 = 0;
		// touchMap.SecondaryIndexTrigger     = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8945));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_9 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_9);
		L_9->___SecondaryIndexTrigger_9 = 0;
		// touchMap.SecondaryThumbstick       = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8946));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_10 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_10);
		L_10->___SecondaryThumbstick_10 = 0;
		// touchMap.SecondaryThumbRest        = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8947));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_11 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_11);
		L_11->___SecondaryThumbRest_11 = 0;
		// touchMap.SecondaryTouchpad         = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8948));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_12 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_12);
		L_12->___SecondaryTouchpad_12 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8949));
		return;
	}
}
// System.Void OVRInput/OVRControllerHands::ConfigureNearTouchMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerHands_ConfigureNearTouchMap_m36C302DA4270D536FC1EA5C0835A5101B73DB631 (OVRControllerHands_t12594A1327521ECA38B53C166676B845C1D621CA* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerHands_ConfigureNearTouchMap_m36C302DA4270D536FC1EA5C0835A5101B73DB631_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerHands_t12594A1327521ECA38B53C166676B845C1D621CA_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerHands_ConfigureNearTouchMap_m36C302DA4270D536FC1EA5C0835A5101B73DB631_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8950));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8951));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8952));
		// nearTouchMap.None                      = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8953));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// nearTouchMap.PrimaryIndexTrigger       = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8954));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_1);
		L_1->___PrimaryIndexTrigger_1 = 0;
		// nearTouchMap.PrimaryThumbButtons       = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8955));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_2);
		L_2->___PrimaryThumbButtons_2 = 0;
		// nearTouchMap.SecondaryIndexTrigger     = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8956));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_3);
		L_3->___SecondaryIndexTrigger_3 = 0;
		// nearTouchMap.SecondaryThumbButtons     = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8957));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_4);
		L_4->___SecondaryThumbButtons_4 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8958));
		return;
	}
}
// System.Void OVRInput/OVRControllerHands::ConfigureAxis1DMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerHands_ConfigureAxis1DMap_m098CC8096341FECEED5646AAF07D32A2BF65E451 (OVRControllerHands_t12594A1327521ECA38B53C166676B845C1D621CA* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerHands_ConfigureAxis1DMap_m098CC8096341FECEED5646AAF07D32A2BF65E451_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerHands_t12594A1327521ECA38B53C166676B845C1D621CA_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerHands_ConfigureAxis1DMap_m098CC8096341FECEED5646AAF07D32A2BF65E451_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8959));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8960));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8961));
		// axis1DMap.None                      = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8962));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// axis1DMap.PrimaryIndexTrigger       = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8963));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_1);
		L_1->___PrimaryIndexTrigger_1 = 0;
		// axis1DMap.PrimaryHandTrigger        = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8964));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_2);
		L_2->___PrimaryHandTrigger_2 = 0;
		// axis1DMap.SecondaryIndexTrigger     = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8965));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_3);
		L_3->___SecondaryIndexTrigger_3 = 0;
		// axis1DMap.SecondaryHandTrigger      = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8966));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_4);
		L_4->___SecondaryHandTrigger_4 = 0;
		// axis1DMap.PrimaryIndexTriggerCurl    = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8967));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_5 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_5);
		L_5->___PrimaryIndexTriggerCurl_5 = 0;
		// axis1DMap.PrimaryIndexTriggerSlide   = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8968));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_6 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_6);
		L_6->___PrimaryIndexTriggerSlide_6 = 0;
		// axis1DMap.PrimaryThumbRestForce      = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8969));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_7 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_7);
		L_7->___PrimaryThumbRestForce_7 = 0;
		// axis1DMap.PrimaryStylusForce         = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8970));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_8 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_8);
		L_8->___PrimaryStylusForce_8 = 0;
		// axis1DMap.SecondaryIndexTriggerCurl  = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8971));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_9 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_9);
		L_9->___SecondaryIndexTriggerCurl_9 = 0;
		// axis1DMap.SecondaryIndexTriggerSlide = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8972));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_10 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_10);
		L_10->___SecondaryIndexTriggerSlide_10 = 0;
		// axis1DMap.SecondaryThumbRestForce    = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8973));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_11 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_11);
		L_11->___SecondaryThumbRestForce_11 = 0;
		// axis1DMap.SecondaryStylusForce       = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8974));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_12 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_12);
		L_12->___SecondaryStylusForce_12 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8975));
		return;
	}
}
// System.Void OVRInput/OVRControllerHands::ConfigureAxis2DMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerHands_ConfigureAxis2DMap_mB675D451FAEEC1844E42A89E18B7DFC2A8B23B5A (OVRControllerHands_t12594A1327521ECA38B53C166676B845C1D621CA* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerHands_ConfigureAxis2DMap_mB675D451FAEEC1844E42A89E18B7DFC2A8B23B5A_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerHands_t12594A1327521ECA38B53C166676B845C1D621CA_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerHands_ConfigureAxis2DMap_mB675D451FAEEC1844E42A89E18B7DFC2A8B23B5A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8976));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8977));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8978));
		// axis2DMap.None                      = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8979));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// axis2DMap.PrimaryThumbstick         = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8980));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_1);
		L_1->___PrimaryThumbstick_1 = 0;
		// axis2DMap.PrimaryTouchpad           = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8981));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_2);
		L_2->___PrimaryTouchpad_2 = 0;
		// axis2DMap.SecondaryThumbstick       = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8982));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_3);
		L_3->___SecondaryThumbstick_3 = 0;
		// axis2DMap.SecondaryTouchpad         = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8983));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_4);
		L_4->___SecondaryTouchpad_4 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8984));
		return;
	}
}
// System.Byte OVRInput/OVRControllerHands::GetBatteryPercentRemaining()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint8_t OVRControllerHands_GetBatteryPercentRemaining_m141B8DD462379CAE389CE95CB6A18501819524C4 (OVRControllerHands_t12594A1327521ECA38B53C166676B845C1D621CA* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Byte_t94D9231AC217BE4D2E004C4CD32DF6D099EA41A3_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerHands_GetBatteryPercentRemaining_m141B8DD462379CAE389CE95CB6A18501819524C4_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerHands_t12594A1327521ECA38B53C166676B845C1D621CA_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	uint8_t V_0 = 0x0;
	uint8_t V_1 = 0x0;
	uint8_t V_2 = 0x0;
	uint8_t V_3 = 0x0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerHands_GetBatteryPercentRemaining_m141B8DD462379CAE389CE95CB6A18501819524C4_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8985));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8986));
	uint8_t G_B3_0 = 0x0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8987));
		// byte leftBattery = currentState.LBatteryPercentRemaining;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8988));
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_0 = (&((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___currentState_7);
		uint8_t L_1 = L_0->___LBatteryPercentRemaining_12;
		V_0 = L_1;
		// byte rightBattery = currentState.RBatteryPercentRemaining;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8989));
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_2 = (&((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___currentState_7);
		uint8_t L_3 = L_2->___RBatteryPercentRemaining_13;
		V_1 = L_3;
		// byte minBattery = (leftBattery <= rightBattery) ? leftBattery : rightBattery;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8990));
		uint8_t L_4 = V_0;
		uint8_t L_5 = V_1;
		if ((((int32_t)L_4) <= ((int32_t)L_5)))
		{
			goto IL_0020;
		}
	}
	{
		uint8_t L_6 = V_1;
		G_B3_0 = L_6;
		goto IL_0021;
	}

IL_0020:
	{
		uint8_t L_7 = V_0;
		G_B3_0 = L_7;
	}

IL_0021:
	{
		V_2 = G_B3_0;
		// return minBattery;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8991));
		uint8_t L_8 = V_2;
		V_3 = L_8;
		goto IL_0026;
	}

IL_0026:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8992));
		uint8_t L_9 = V_3;
		return L_9;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void OVRInput/OVRControllerLHand::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerLHand__ctor_m18D0440C8FFB9816CBFD4FCCC22DDF295F5B30A7 (OVRControllerLHand_t05FFDA0A0B722315B47BFEDFFF701B425563DDB8* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerLHand__ctor_m18D0440C8FFB9816CBFD4FCCC22DDF295F5B30A7_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerLHand_t05FFDA0A0B722315B47BFEDFFF701B425563DDB8_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerLHand__ctor_m18D0440C8FFB9816CBFD4FCCC22DDF295F5B30A7_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8993));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 8994));
	{
		// public OVRControllerLHand()
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8995));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8996));
		OVRControllerBase__ctor_m19E323A6D3242829EDFA1879B8B8C0525806A124(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8996));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8997));
		// controllerType = Controller.LHand;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8998));
		((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___controllerType_0 = ((int32_t)32);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 8999));
		return;
	}
}
// System.Void OVRInput/OVRControllerLHand::ConfigureButtonMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerLHand_ConfigureButtonMap_m5AFB6ED52AC1B6766BA38120B16DE257BE73809E (OVRControllerLHand_t05FFDA0A0B722315B47BFEDFFF701B425563DDB8* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerLHand_ConfigureButtonMap_m5AFB6ED52AC1B6766BA38120B16DE257BE73809E_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerLHand_t05FFDA0A0B722315B47BFEDFFF701B425563DDB8_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerLHand_ConfigureButtonMap_m5AFB6ED52AC1B6766BA38120B16DE257BE73809E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9000));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9001));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9002));
		// buttonMap.None                     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9003));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// buttonMap.One                      = RawButton.X;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9004));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_1);
		L_1->___One_1 = ((int32_t)256);
		// buttonMap.Two                      = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9005));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_2);
		L_2->___Two_2 = 0;
		// buttonMap.Three                    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9006));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_3);
		L_3->___Three_3 = 0;
		// buttonMap.Four                     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9007));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_4);
		L_4->___Four_4 = 0;
		// buttonMap.Start                    = RawButton.Start;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9008));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_5 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_5);
		L_5->___Start_5 = ((int32_t)1048576);
		// buttonMap.Back                     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9009));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_6 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_6);
		L_6->___Back_6 = 0;
		// buttonMap.PrimaryShoulder          = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9010));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_7 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_7);
		L_7->___PrimaryShoulder_7 = 0;
		// buttonMap.PrimaryIndexTrigger      = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9011));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_8 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_8);
		L_8->___PrimaryIndexTrigger_8 = 0;
		// buttonMap.PrimaryHandTrigger       = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9012));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_9 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_9);
		L_9->___PrimaryHandTrigger_9 = 0;
		// buttonMap.PrimaryThumbstick        = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9013));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_10 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_10);
		L_10->___PrimaryThumbstick_10 = 0;
		// buttonMap.PrimaryThumbstickUp      = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9014));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_11 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_11);
		L_11->___PrimaryThumbstickUp_11 = 0;
		// buttonMap.PrimaryThumbstickDown    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9015));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_12 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_12);
		L_12->___PrimaryThumbstickDown_12 = 0;
		// buttonMap.PrimaryThumbstickLeft    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9016));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_13 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_13);
		L_13->___PrimaryThumbstickLeft_13 = 0;
		// buttonMap.PrimaryThumbstickRight   = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9017));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_14 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_14);
		L_14->___PrimaryThumbstickRight_14 = 0;
		// buttonMap.PrimaryTouchpad          = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9018));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_15 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_15);
		L_15->___PrimaryTouchpad_15 = 0;
		// buttonMap.SecondaryShoulder        = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9019));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_16 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_16);
		L_16->___SecondaryShoulder_16 = 0;
		// buttonMap.SecondaryIndexTrigger    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9020));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_17 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_17);
		L_17->___SecondaryIndexTrigger_17 = 0;
		// buttonMap.SecondaryHandTrigger     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9021));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_18 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_18);
		L_18->___SecondaryHandTrigger_18 = 0;
		// buttonMap.SecondaryThumbstick      = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9022));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_19 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_19);
		L_19->___SecondaryThumbstick_19 = 0;
		// buttonMap.SecondaryThumbstickUp    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9023));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_20 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_20);
		L_20->___SecondaryThumbstickUp_20 = 0;
		// buttonMap.SecondaryThumbstickDown  = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9024));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_21 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_21);
		L_21->___SecondaryThumbstickDown_21 = 0;
		// buttonMap.SecondaryThumbstickLeft  = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9025));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_22 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_22);
		L_22->___SecondaryThumbstickLeft_22 = 0;
		// buttonMap.SecondaryThumbstickRight = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9026));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_23 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_23);
		L_23->___SecondaryThumbstickRight_23 = 0;
		// buttonMap.SecondaryTouchpad        = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9027));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_24 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_24);
		L_24->___SecondaryTouchpad_24 = 0;
		// buttonMap.DpadUp                   = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9028));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_25 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_25);
		L_25->___DpadUp_25 = 0;
		// buttonMap.DpadDown                 = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9029));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_26 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_26);
		L_26->___DpadDown_26 = 0;
		// buttonMap.DpadLeft                 = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9030));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_27 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_27);
		L_27->___DpadLeft_27 = 0;
		// buttonMap.DpadRight                = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9031));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_28 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_28);
		L_28->___DpadRight_28 = 0;
		// buttonMap.Up                       = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9032));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_29 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_29);
		L_29->___Up_29 = 0;
		// buttonMap.Down                     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9033));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_30 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_30);
		L_30->___Down_30 = 0;
		// buttonMap.Left                     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9034));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_31 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_31);
		L_31->___Left_31 = 0;
		// buttonMap.Right                    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9035));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_32 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_32);
		L_32->___Right_32 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9036));
		return;
	}
}
// System.Void OVRInput/OVRControllerLHand::ConfigureTouchMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerLHand_ConfigureTouchMap_mAF9164EF71C346E045655B6BE894F08108B81B43 (OVRControllerLHand_t05FFDA0A0B722315B47BFEDFFF701B425563DDB8* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerLHand_ConfigureTouchMap_mAF9164EF71C346E045655B6BE894F08108B81B43_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerLHand_t05FFDA0A0B722315B47BFEDFFF701B425563DDB8_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerLHand_ConfigureTouchMap_mAF9164EF71C346E045655B6BE894F08108B81B43_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9037));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9038));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9039));
		// touchMap.None                      = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9040));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// touchMap.One                       = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9041));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_1);
		L_1->___One_1 = 0;
		// touchMap.Two                       = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9042));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_2);
		L_2->___Two_2 = 0;
		// touchMap.Three                     = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9043));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_3);
		L_3->___Three_3 = 0;
		// touchMap.Four                      = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9044));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_4);
		L_4->___Four_4 = 0;
		// touchMap.PrimaryIndexTrigger       = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9045));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_5 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_5);
		L_5->___PrimaryIndexTrigger_5 = 0;
		// touchMap.PrimaryThumbstick         = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9046));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_6 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_6);
		L_6->___PrimaryThumbstick_6 = 0;
		// touchMap.PrimaryThumbRest          = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9047));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_7 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_7);
		L_7->___PrimaryThumbRest_7 = 0;
		// touchMap.PrimaryTouchpad           = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9048));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_8 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_8);
		L_8->___PrimaryTouchpad_8 = 0;
		// touchMap.SecondaryIndexTrigger     = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9049));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_9 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_9);
		L_9->___SecondaryIndexTrigger_9 = 0;
		// touchMap.SecondaryThumbstick       = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9050));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_10 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_10);
		L_10->___SecondaryThumbstick_10 = 0;
		// touchMap.SecondaryThumbRest        = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9051));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_11 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_11);
		L_11->___SecondaryThumbRest_11 = 0;
		// touchMap.SecondaryTouchpad         = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9052));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_12 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_12);
		L_12->___SecondaryTouchpad_12 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9053));
		return;
	}
}
// System.Void OVRInput/OVRControllerLHand::ConfigureNearTouchMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerLHand_ConfigureNearTouchMap_mC967969ED93CBC5071AC4CC04FAC9D1668B90DE3 (OVRControllerLHand_t05FFDA0A0B722315B47BFEDFFF701B425563DDB8* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerLHand_ConfigureNearTouchMap_mC967969ED93CBC5071AC4CC04FAC9D1668B90DE3_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerLHand_t05FFDA0A0B722315B47BFEDFFF701B425563DDB8_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerLHand_ConfigureNearTouchMap_mC967969ED93CBC5071AC4CC04FAC9D1668B90DE3_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9054));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9055));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9056));
		// nearTouchMap.None                      = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9057));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// nearTouchMap.PrimaryIndexTrigger       = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9058));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_1);
		L_1->___PrimaryIndexTrigger_1 = 0;
		// nearTouchMap.PrimaryThumbButtons       = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9059));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_2);
		L_2->___PrimaryThumbButtons_2 = 0;
		// nearTouchMap.SecondaryIndexTrigger     = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9060));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_3);
		L_3->___SecondaryIndexTrigger_3 = 0;
		// nearTouchMap.SecondaryThumbButtons     = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9061));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_4);
		L_4->___SecondaryThumbButtons_4 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9062));
		return;
	}
}
// System.Void OVRInput/OVRControllerLHand::ConfigureAxis1DMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerLHand_ConfigureAxis1DMap_m9AEB0794E0ED5348D1867264518F25CD38AD5CF0 (OVRControllerLHand_t05FFDA0A0B722315B47BFEDFFF701B425563DDB8* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerLHand_ConfigureAxis1DMap_m9AEB0794E0ED5348D1867264518F25CD38AD5CF0_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerLHand_t05FFDA0A0B722315B47BFEDFFF701B425563DDB8_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerLHand_ConfigureAxis1DMap_m9AEB0794E0ED5348D1867264518F25CD38AD5CF0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9063));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9064));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9065));
		// axis1DMap.None                      = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9066));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// axis1DMap.PrimaryIndexTrigger       = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9067));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_1);
		L_1->___PrimaryIndexTrigger_1 = 0;
		// axis1DMap.PrimaryHandTrigger        = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9068));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_2);
		L_2->___PrimaryHandTrigger_2 = 0;
		// axis1DMap.SecondaryIndexTrigger     = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9069));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_3);
		L_3->___SecondaryIndexTrigger_3 = 0;
		// axis1DMap.SecondaryHandTrigger      = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9070));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_4);
		L_4->___SecondaryHandTrigger_4 = 0;
		// axis1DMap.PrimaryIndexTriggerCurl    = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9071));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_5 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_5);
		L_5->___PrimaryIndexTriggerCurl_5 = 0;
		// axis1DMap.PrimaryIndexTriggerSlide   = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9072));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_6 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_6);
		L_6->___PrimaryIndexTriggerSlide_6 = 0;
		// axis1DMap.PrimaryThumbRestForce      = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9073));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_7 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_7);
		L_7->___PrimaryThumbRestForce_7 = 0;
		// axis1DMap.PrimaryStylusForce         = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9074));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_8 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_8);
		L_8->___PrimaryStylusForce_8 = 0;
		// axis1DMap.SecondaryIndexTriggerCurl  = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9075));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_9 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_9);
		L_9->___SecondaryIndexTriggerCurl_9 = 0;
		// axis1DMap.SecondaryIndexTriggerSlide = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9076));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_10 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_10);
		L_10->___SecondaryIndexTriggerSlide_10 = 0;
		// axis1DMap.SecondaryThumbRestForce    = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9077));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_11 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_11);
		L_11->___SecondaryThumbRestForce_11 = 0;
		// axis1DMap.SecondaryStylusForce       = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9078));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_12 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_12);
		L_12->___SecondaryStylusForce_12 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9079));
		return;
	}
}
// System.Void OVRInput/OVRControllerLHand::ConfigureAxis2DMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerLHand_ConfigureAxis2DMap_m656EBB006F316F81B869AB3BEAB92E101C934D2F (OVRControllerLHand_t05FFDA0A0B722315B47BFEDFFF701B425563DDB8* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerLHand_ConfigureAxis2DMap_m656EBB006F316F81B869AB3BEAB92E101C934D2F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerLHand_t05FFDA0A0B722315B47BFEDFFF701B425563DDB8_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerLHand_ConfigureAxis2DMap_m656EBB006F316F81B869AB3BEAB92E101C934D2F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9080));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9081));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9082));
		// axis2DMap.None                      = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9083));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// axis2DMap.PrimaryThumbstick         = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9084));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_1);
		L_1->___PrimaryThumbstick_1 = 0;
		// axis2DMap.PrimaryTouchpad           = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9085));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_2);
		L_2->___PrimaryTouchpad_2 = 0;
		// axis2DMap.SecondaryThumbstick       = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9086));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_3);
		L_3->___SecondaryThumbstick_3 = 0;
		// axis2DMap.SecondaryTouchpad         = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9087));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_4);
		L_4->___SecondaryTouchpad_4 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9088));
		return;
	}
}
// System.Byte OVRInput/OVRControllerLHand::GetBatteryPercentRemaining()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint8_t OVRControllerLHand_GetBatteryPercentRemaining_m22E237DC4DA42A334D9951065D9EEBE6D1EDDFF1 (OVRControllerLHand_t05FFDA0A0B722315B47BFEDFFF701B425563DDB8* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Byte_t94D9231AC217BE4D2E004C4CD32DF6D099EA41A3_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerLHand_GetBatteryPercentRemaining_m22E237DC4DA42A334D9951065D9EEBE6D1EDDFF1_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerLHand_t05FFDA0A0B722315B47BFEDFFF701B425563DDB8_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	uint8_t V_0 = 0x0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerLHand_GetBatteryPercentRemaining_m22E237DC4DA42A334D9951065D9EEBE6D1EDDFF1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9089));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9090));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9091));
		// return currentState.LBatteryPercentRemaining;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9092));
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_0 = (&((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___currentState_7);
		uint8_t L_1 = L_0->___LBatteryPercentRemaining_12;
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9093));
		uint8_t L_2 = V_0;
		return L_2;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void OVRInput/OVRControllerRHand::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerRHand__ctor_m0A5012B434B5D3D4EDC8DAEF913D09AADAA81327 (OVRControllerRHand_t9AF4805EAECF3275B7E861B1A3E4CF7555C989B4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRHand__ctor_m0A5012B434B5D3D4EDC8DAEF913D09AADAA81327_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRHand_t9AF4805EAECF3275B7E861B1A3E4CF7555C989B4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerRHand__ctor_m0A5012B434B5D3D4EDC8DAEF913D09AADAA81327_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9094));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9095));
	{
		// public OVRControllerRHand()
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9096));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9097));
		OVRControllerBase__ctor_m19E323A6D3242829EDFA1879B8B8C0525806A124(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9097));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9098));
		// controllerType = Controller.RHand;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9099));
		((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___controllerType_0 = ((int32_t)64);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9100));
		return;
	}
}
// System.Void OVRInput/OVRControllerRHand::ConfigureButtonMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerRHand_ConfigureButtonMap_mFF3BBB93FDACB5967FA57F66A053C01115AC7965 (OVRControllerRHand_t9AF4805EAECF3275B7E861B1A3E4CF7555C989B4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRHand_ConfigureButtonMap_mFF3BBB93FDACB5967FA57F66A053C01115AC7965_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRHand_t9AF4805EAECF3275B7E861B1A3E4CF7555C989B4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerRHand_ConfigureButtonMap_mFF3BBB93FDACB5967FA57F66A053C01115AC7965_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9101));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9102));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9103));
		// buttonMap.None                     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9104));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// buttonMap.One                      = RawButton.A;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9105));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_1);
		L_1->___One_1 = 1;
		// buttonMap.Two                      = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9106));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_2);
		L_2->___Two_2 = 0;
		// buttonMap.Three                    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9107));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_3);
		L_3->___Three_3 = 0;
		// buttonMap.Four                     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9108));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_4);
		L_4->___Four_4 = 0;
		// buttonMap.Start                    = RawButton.Start;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9109));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_5 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_5);
		L_5->___Start_5 = ((int32_t)1048576);
		// buttonMap.Back                     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9110));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_6 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_6);
		L_6->___Back_6 = 0;
		// buttonMap.PrimaryShoulder          = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9111));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_7 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_7);
		L_7->___PrimaryShoulder_7 = 0;
		// buttonMap.PrimaryIndexTrigger      = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9112));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_8 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_8);
		L_8->___PrimaryIndexTrigger_8 = 0;
		// buttonMap.PrimaryHandTrigger       = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9113));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_9 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_9);
		L_9->___PrimaryHandTrigger_9 = 0;
		// buttonMap.PrimaryThumbstick        = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9114));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_10 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_10);
		L_10->___PrimaryThumbstick_10 = 0;
		// buttonMap.PrimaryThumbstickUp      = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9115));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_11 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_11);
		L_11->___PrimaryThumbstickUp_11 = 0;
		// buttonMap.PrimaryThumbstickDown    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9116));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_12 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_12);
		L_12->___PrimaryThumbstickDown_12 = 0;
		// buttonMap.PrimaryThumbstickLeft    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9117));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_13 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_13);
		L_13->___PrimaryThumbstickLeft_13 = 0;
		// buttonMap.PrimaryThumbstickRight   = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9118));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_14 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_14);
		L_14->___PrimaryThumbstickRight_14 = 0;
		// buttonMap.PrimaryTouchpad          = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9119));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_15 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_15);
		L_15->___PrimaryTouchpad_15 = 0;
		// buttonMap.SecondaryShoulder        = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9120));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_16 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_16);
		L_16->___SecondaryShoulder_16 = 0;
		// buttonMap.SecondaryIndexTrigger    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9121));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_17 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_17);
		L_17->___SecondaryIndexTrigger_17 = 0;
		// buttonMap.SecondaryHandTrigger     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9122));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_18 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_18);
		L_18->___SecondaryHandTrigger_18 = 0;
		// buttonMap.SecondaryThumbstick      = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9123));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_19 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_19);
		L_19->___SecondaryThumbstick_19 = 0;
		// buttonMap.SecondaryThumbstickUp    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9124));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_20 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_20);
		L_20->___SecondaryThumbstickUp_20 = 0;
		// buttonMap.SecondaryThumbstickDown  = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9125));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_21 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_21);
		L_21->___SecondaryThumbstickDown_21 = 0;
		// buttonMap.SecondaryThumbstickLeft  = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9126));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_22 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_22);
		L_22->___SecondaryThumbstickLeft_22 = 0;
		// buttonMap.SecondaryThumbstickRight = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9127));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_23 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_23);
		L_23->___SecondaryThumbstickRight_23 = 0;
		// buttonMap.SecondaryTouchpad        = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9128));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_24 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_24);
		L_24->___SecondaryTouchpad_24 = 0;
		// buttonMap.DpadUp                   = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9129));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_25 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_25);
		L_25->___DpadUp_25 = 0;
		// buttonMap.DpadDown                 = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9130));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_26 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_26);
		L_26->___DpadDown_26 = 0;
		// buttonMap.DpadLeft                 = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9131));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_27 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_27);
		L_27->___DpadLeft_27 = 0;
		// buttonMap.DpadRight                = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9132));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_28 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_28);
		L_28->___DpadRight_28 = 0;
		// buttonMap.Up                       = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9133));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_29 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_29);
		L_29->___Up_29 = 0;
		// buttonMap.Down                     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9134));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_30 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_30);
		L_30->___Down_30 = 0;
		// buttonMap.Left                     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9135));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_31 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_31);
		L_31->___Left_31 = 0;
		// buttonMap.Right                    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9136));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_32 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_32);
		L_32->___Right_32 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9137));
		return;
	}
}
// System.Void OVRInput/OVRControllerRHand::ConfigureTouchMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerRHand_ConfigureTouchMap_m96FBAF741BCF5979ED0D8DDDBC00A787B63BEB08 (OVRControllerRHand_t9AF4805EAECF3275B7E861B1A3E4CF7555C989B4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRHand_ConfigureTouchMap_m96FBAF741BCF5979ED0D8DDDBC00A787B63BEB08_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRHand_t9AF4805EAECF3275B7E861B1A3E4CF7555C989B4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerRHand_ConfigureTouchMap_m96FBAF741BCF5979ED0D8DDDBC00A787B63BEB08_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9138));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9139));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9140));
		// touchMap.None                      = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9141));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// touchMap.One                       = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9142));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_1);
		L_1->___One_1 = 0;
		// touchMap.Two                       = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9143));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_2);
		L_2->___Two_2 = 0;
		// touchMap.Three                     = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9144));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_3);
		L_3->___Three_3 = 0;
		// touchMap.Four                      = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9145));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_4);
		L_4->___Four_4 = 0;
		// touchMap.PrimaryIndexTrigger       = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9146));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_5 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_5);
		L_5->___PrimaryIndexTrigger_5 = 0;
		// touchMap.PrimaryThumbstick         = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9147));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_6 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_6);
		L_6->___PrimaryThumbstick_6 = 0;
		// touchMap.PrimaryThumbRest          = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9148));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_7 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_7);
		L_7->___PrimaryThumbRest_7 = 0;
		// touchMap.PrimaryTouchpad           = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9149));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_8 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_8);
		L_8->___PrimaryTouchpad_8 = 0;
		// touchMap.SecondaryIndexTrigger     = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9150));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_9 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_9);
		L_9->___SecondaryIndexTrigger_9 = 0;
		// touchMap.SecondaryThumbstick       = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9151));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_10 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_10);
		L_10->___SecondaryThumbstick_10 = 0;
		// touchMap.SecondaryThumbRest        = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9152));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_11 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_11);
		L_11->___SecondaryThumbRest_11 = 0;
		// touchMap.SecondaryTouchpad         = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9153));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_12 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_12);
		L_12->___SecondaryTouchpad_12 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9154));
		return;
	}
}
// System.Void OVRInput/OVRControllerRHand::ConfigureNearTouchMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerRHand_ConfigureNearTouchMap_m26113F1479774B172E9878A366E7539CE6619420 (OVRControllerRHand_t9AF4805EAECF3275B7E861B1A3E4CF7555C989B4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRHand_ConfigureNearTouchMap_m26113F1479774B172E9878A366E7539CE6619420_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRHand_t9AF4805EAECF3275B7E861B1A3E4CF7555C989B4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerRHand_ConfigureNearTouchMap_m26113F1479774B172E9878A366E7539CE6619420_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9155));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9156));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9157));
		// nearTouchMap.None                      = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9158));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// nearTouchMap.PrimaryIndexTrigger       = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9159));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_1);
		L_1->___PrimaryIndexTrigger_1 = 0;
		// nearTouchMap.PrimaryThumbButtons       = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9160));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_2);
		L_2->___PrimaryThumbButtons_2 = 0;
		// nearTouchMap.SecondaryIndexTrigger     = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9161));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_3);
		L_3->___SecondaryIndexTrigger_3 = 0;
		// nearTouchMap.SecondaryThumbButtons     = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9162));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_4);
		L_4->___SecondaryThumbButtons_4 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9163));
		return;
	}
}
// System.Void OVRInput/OVRControllerRHand::ConfigureAxis1DMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerRHand_ConfigureAxis1DMap_m03FB4CFC9ADCC7782E23E7865CE6B9C1A1F58809 (OVRControllerRHand_t9AF4805EAECF3275B7E861B1A3E4CF7555C989B4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRHand_ConfigureAxis1DMap_m03FB4CFC9ADCC7782E23E7865CE6B9C1A1F58809_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRHand_t9AF4805EAECF3275B7E861B1A3E4CF7555C989B4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerRHand_ConfigureAxis1DMap_m03FB4CFC9ADCC7782E23E7865CE6B9C1A1F58809_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9164));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9165));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9166));
		// axis1DMap.None                      = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9167));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// axis1DMap.PrimaryIndexTrigger       = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9168));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_1);
		L_1->___PrimaryIndexTrigger_1 = 0;
		// axis1DMap.PrimaryHandTrigger        = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9169));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_2);
		L_2->___PrimaryHandTrigger_2 = 0;
		// axis1DMap.SecondaryIndexTrigger     = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9170));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_3);
		L_3->___SecondaryIndexTrigger_3 = 0;
		// axis1DMap.SecondaryHandTrigger      = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9171));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_4);
		L_4->___SecondaryHandTrigger_4 = 0;
		// axis1DMap.PrimaryIndexTriggerCurl    = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9172));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_5 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_5);
		L_5->___PrimaryIndexTriggerCurl_5 = 0;
		// axis1DMap.PrimaryIndexTriggerSlide   = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9173));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_6 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_6);
		L_6->___PrimaryIndexTriggerSlide_6 = 0;
		// axis1DMap.PrimaryThumbRestForce      = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9174));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_7 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_7);
		L_7->___PrimaryThumbRestForce_7 = 0;
		// axis1DMap.PrimaryStylusForce         = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9175));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_8 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_8);
		L_8->___PrimaryStylusForce_8 = 0;
		// axis1DMap.SecondaryIndexTriggerCurl  = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9176));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_9 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_9);
		L_9->___SecondaryIndexTriggerCurl_9 = 0;
		// axis1DMap.SecondaryIndexTriggerSlide = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9177));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_10 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_10);
		L_10->___SecondaryIndexTriggerSlide_10 = 0;
		// axis1DMap.SecondaryThumbRestForce    = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9178));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_11 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_11);
		L_11->___SecondaryThumbRestForce_11 = 0;
		// axis1DMap.SecondaryStylusForce       = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9179));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_12 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_12);
		L_12->___SecondaryStylusForce_12 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9180));
		return;
	}
}
// System.Void OVRInput/OVRControllerRHand::ConfigureAxis2DMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerRHand_ConfigureAxis2DMap_mD38B3A08A7EE7D4D01BDFF59C1C31E73E9D78866 (OVRControllerRHand_t9AF4805EAECF3275B7E861B1A3E4CF7555C989B4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRHand_ConfigureAxis2DMap_mD38B3A08A7EE7D4D01BDFF59C1C31E73E9D78866_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRHand_t9AF4805EAECF3275B7E861B1A3E4CF7555C989B4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerRHand_ConfigureAxis2DMap_mD38B3A08A7EE7D4D01BDFF59C1C31E73E9D78866_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9181));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9182));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9183));
		// axis2DMap.None                      = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9184));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// axis2DMap.PrimaryThumbstick         = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9185));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_1);
		L_1->___PrimaryThumbstick_1 = 0;
		// axis2DMap.PrimaryTouchpad           = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9186));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_2);
		L_2->___PrimaryTouchpad_2 = 0;
		// axis2DMap.SecondaryThumbstick       = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9187));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_3);
		L_3->___SecondaryThumbstick_3 = 0;
		// axis2DMap.SecondaryTouchpad         = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9188));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_4);
		L_4->___SecondaryTouchpad_4 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9189));
		return;
	}
}
// System.Byte OVRInput/OVRControllerRHand::GetBatteryPercentRemaining()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint8_t OVRControllerRHand_GetBatteryPercentRemaining_m08D704A54FCE90FEEAEE42574EE8EFC59DDAAA77 (OVRControllerRHand_t9AF4805EAECF3275B7E861B1A3E4CF7555C989B4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Byte_t94D9231AC217BE4D2E004C4CD32DF6D099EA41A3_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRHand_GetBatteryPercentRemaining_m08D704A54FCE90FEEAEE42574EE8EFC59DDAAA77_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRHand_t9AF4805EAECF3275B7E861B1A3E4CF7555C989B4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	uint8_t V_0 = 0x0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerRHand_GetBatteryPercentRemaining_m08D704A54FCE90FEEAEE42574EE8EFC59DDAAA77_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9190));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9191));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9192));
		// return currentState.RBatteryPercentRemaining;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9193));
		ControllerState5_tF54426DA2A1B44EF2E9482B465412F8F19F0ACBA* L_0 = (&((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___currentState_7);
		uint8_t L_1 = L_0->___RBatteryPercentRemaining_13;
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9194));
		uint8_t L_2 = V_0;
		return L_2;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void OVRInput/OVRControllerRemote::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerRemote__ctor_mB837DA51B56C63642C1C809CBE3A76B2139B8C2E (OVRControllerRemote_tFAC79902D239980E05EB245E84764EB95FC42C08* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRemote__ctor_mB837DA51B56C63642C1C809CBE3A76B2139B8C2E_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRemote_tFAC79902D239980E05EB245E84764EB95FC42C08_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerRemote__ctor_mB837DA51B56C63642C1C809CBE3A76B2139B8C2E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9195));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9196));
	{
		// public OVRControllerRemote()
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9197));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9198));
		OVRControllerBase__ctor_m19E323A6D3242829EDFA1879B8B8C0525806A124(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9198));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9199));
		// controllerType = Controller.Remote;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9200));
		((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___controllerType_0 = 4;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9201));
		return;
	}
}
// System.Void OVRInput/OVRControllerRemote::ConfigureButtonMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerRemote_ConfigureButtonMap_m875A217E24245CCED67F8B059780568020A9CDBA (OVRControllerRemote_tFAC79902D239980E05EB245E84764EB95FC42C08* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRemote_ConfigureButtonMap_m875A217E24245CCED67F8B059780568020A9CDBA_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRemote_tFAC79902D239980E05EB245E84764EB95FC42C08_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerRemote_ConfigureButtonMap_m875A217E24245CCED67F8B059780568020A9CDBA_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9202));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9203));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9204));
		// buttonMap.None                     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9205));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// buttonMap.One                      = RawButton.Start;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9206));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_1);
		L_1->___One_1 = ((int32_t)1048576);
		// buttonMap.Two                      = RawButton.Back;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9207));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_2);
		L_2->___Two_2 = ((int32_t)2097152);
		// buttonMap.Three                    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9208));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_3);
		L_3->___Three_3 = 0;
		// buttonMap.Four                     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9209));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_4);
		L_4->___Four_4 = 0;
		// buttonMap.Start                    = RawButton.Start;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9210));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_5 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_5);
		L_5->___Start_5 = ((int32_t)1048576);
		// buttonMap.Back                     = RawButton.Back;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9211));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_6 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_6);
		L_6->___Back_6 = ((int32_t)2097152);
		// buttonMap.PrimaryShoulder          = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9212));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_7 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_7);
		L_7->___PrimaryShoulder_7 = 0;
		// buttonMap.PrimaryIndexTrigger      = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9213));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_8 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_8);
		L_8->___PrimaryIndexTrigger_8 = 0;
		// buttonMap.PrimaryHandTrigger       = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9214));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_9 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_9);
		L_9->___PrimaryHandTrigger_9 = 0;
		// buttonMap.PrimaryThumbstick        = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9215));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_10 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_10);
		L_10->___PrimaryThumbstick_10 = 0;
		// buttonMap.PrimaryThumbstickUp      = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9216));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_11 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_11);
		L_11->___PrimaryThumbstickUp_11 = 0;
		// buttonMap.PrimaryThumbstickDown    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9217));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_12 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_12);
		L_12->___PrimaryThumbstickDown_12 = 0;
		// buttonMap.PrimaryThumbstickLeft    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9218));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_13 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_13);
		L_13->___PrimaryThumbstickLeft_13 = 0;
		// buttonMap.PrimaryThumbstickRight   = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9219));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_14 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_14);
		L_14->___PrimaryThumbstickRight_14 = 0;
		// buttonMap.PrimaryTouchpad          = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9220));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_15 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_15);
		L_15->___PrimaryTouchpad_15 = 0;
		// buttonMap.SecondaryShoulder        = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9221));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_16 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_16);
		L_16->___SecondaryShoulder_16 = 0;
		// buttonMap.SecondaryIndexTrigger    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9222));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_17 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_17);
		L_17->___SecondaryIndexTrigger_17 = 0;
		// buttonMap.SecondaryHandTrigger     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9223));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_18 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_18);
		L_18->___SecondaryHandTrigger_18 = 0;
		// buttonMap.SecondaryThumbstick      = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9224));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_19 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_19);
		L_19->___SecondaryThumbstick_19 = 0;
		// buttonMap.SecondaryThumbstickUp    = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9225));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_20 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_20);
		L_20->___SecondaryThumbstickUp_20 = 0;
		// buttonMap.SecondaryThumbstickDown  = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9226));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_21 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_21);
		L_21->___SecondaryThumbstickDown_21 = 0;
		// buttonMap.SecondaryThumbstickLeft  = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9227));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_22 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_22);
		L_22->___SecondaryThumbstickLeft_22 = 0;
		// buttonMap.SecondaryThumbstickRight = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9228));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_23 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_23);
		L_23->___SecondaryThumbstickRight_23 = 0;
		// buttonMap.SecondaryTouchpad        = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9229));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_24 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_24);
		L_24->___SecondaryTouchpad_24 = 0;
		// buttonMap.DpadUp                   = RawButton.DpadUp;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9230));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_25 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_25);
		L_25->___DpadUp_25 = ((int32_t)65536);
		// buttonMap.DpadDown                 = RawButton.DpadDown;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9231));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_26 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_26);
		L_26->___DpadDown_26 = ((int32_t)131072);
		// buttonMap.DpadLeft                 = RawButton.DpadLeft;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9232));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_27 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_27);
		L_27->___DpadLeft_27 = ((int32_t)262144);
		// buttonMap.DpadRight                = RawButton.DpadRight;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9233));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_28 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_28);
		L_28->___DpadRight_28 = ((int32_t)524288);
		// buttonMap.Up                       = RawButton.DpadUp;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9234));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_29 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_29);
		L_29->___Up_29 = ((int32_t)65536);
		// buttonMap.Down                     = RawButton.DpadDown;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9235));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_30 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_30);
		L_30->___Down_30 = ((int32_t)131072);
		// buttonMap.Left                     = RawButton.DpadLeft;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9236));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_31 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_31);
		L_31->___Left_31 = ((int32_t)262144);
		// buttonMap.Right                    = RawButton.DpadRight;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9237));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_32 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_32);
		L_32->___Right_32 = ((int32_t)524288);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9238));
		return;
	}
}
// System.Void OVRInput/OVRControllerRemote::ConfigureTouchMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerRemote_ConfigureTouchMap_mFA57F5B779AF4D56217C5172E6CF05737C63329F (OVRControllerRemote_tFAC79902D239980E05EB245E84764EB95FC42C08* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRemote_ConfigureTouchMap_mFA57F5B779AF4D56217C5172E6CF05737C63329F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRemote_tFAC79902D239980E05EB245E84764EB95FC42C08_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerRemote_ConfigureTouchMap_mFA57F5B779AF4D56217C5172E6CF05737C63329F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9239));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9240));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9241));
		// touchMap.None                      = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9242));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// touchMap.One                       = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9243));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_1);
		L_1->___One_1 = 0;
		// touchMap.Two                       = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9244));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_2);
		L_2->___Two_2 = 0;
		// touchMap.Three                     = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9245));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_3);
		L_3->___Three_3 = 0;
		// touchMap.Four                      = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9246));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_4);
		L_4->___Four_4 = 0;
		// touchMap.PrimaryIndexTrigger       = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9247));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_5 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_5);
		L_5->___PrimaryIndexTrigger_5 = 0;
		// touchMap.PrimaryThumbstick         = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9248));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_6 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_6);
		L_6->___PrimaryThumbstick_6 = 0;
		// touchMap.PrimaryThumbRest          = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9249));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_7 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_7);
		L_7->___PrimaryThumbRest_7 = 0;
		// touchMap.PrimaryTouchpad           = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9250));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_8 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_8);
		L_8->___PrimaryTouchpad_8 = 0;
		// touchMap.SecondaryIndexTrigger     = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9251));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_9 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_9);
		L_9->___SecondaryIndexTrigger_9 = 0;
		// touchMap.SecondaryThumbstick       = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9252));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_10 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_10);
		L_10->___SecondaryThumbstick_10 = 0;
		// touchMap.SecondaryThumbRest        = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9253));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_11 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_11);
		L_11->___SecondaryThumbRest_11 = 0;
		// touchMap.SecondaryTouchpad         = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9254));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_12 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_12);
		L_12->___SecondaryTouchpad_12 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9255));
		return;
	}
}
// System.Void OVRInput/OVRControllerRemote::ConfigureNearTouchMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerRemote_ConfigureNearTouchMap_m47B1FBA3E75CC78E80C06EDA2FB20FEB18659EFC (OVRControllerRemote_tFAC79902D239980E05EB245E84764EB95FC42C08* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRemote_ConfigureNearTouchMap_m47B1FBA3E75CC78E80C06EDA2FB20FEB18659EFC_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRemote_tFAC79902D239980E05EB245E84764EB95FC42C08_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerRemote_ConfigureNearTouchMap_m47B1FBA3E75CC78E80C06EDA2FB20FEB18659EFC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9256));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9257));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9258));
		// nearTouchMap.None                  = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9259));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// nearTouchMap.PrimaryIndexTrigger   = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9260));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_1);
		L_1->___PrimaryIndexTrigger_1 = 0;
		// nearTouchMap.PrimaryThumbButtons   = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9261));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_2);
		L_2->___PrimaryThumbButtons_2 = 0;
		// nearTouchMap.SecondaryIndexTrigger = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9262));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_3);
		L_3->___SecondaryIndexTrigger_3 = 0;
		// nearTouchMap.SecondaryThumbButtons = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9263));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_4);
		L_4->___SecondaryThumbButtons_4 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9264));
		return;
	}
}
// System.Void OVRInput/OVRControllerRemote::ConfigureAxis1DMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerRemote_ConfigureAxis1DMap_m45C7343351940FD7BB1AB8214364358C1FB1467B (OVRControllerRemote_tFAC79902D239980E05EB245E84764EB95FC42C08* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRemote_ConfigureAxis1DMap_m45C7343351940FD7BB1AB8214364358C1FB1467B_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRemote_tFAC79902D239980E05EB245E84764EB95FC42C08_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerRemote_ConfigureAxis1DMap_m45C7343351940FD7BB1AB8214364358C1FB1467B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9265));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9266));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9267));
		// axis1DMap.None                     = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9268));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// axis1DMap.PrimaryIndexTrigger      = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9269));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_1);
		L_1->___PrimaryIndexTrigger_1 = 0;
		// axis1DMap.PrimaryHandTrigger       = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9270));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_2);
		L_2->___PrimaryHandTrigger_2 = 0;
		// axis1DMap.SecondaryIndexTrigger    = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9271));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_3);
		L_3->___SecondaryIndexTrigger_3 = 0;
		// axis1DMap.SecondaryHandTrigger     = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9272));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_4);
		L_4->___SecondaryHandTrigger_4 = 0;
		// axis1DMap.PrimaryIndexTriggerCurl    = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9273));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_5 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_5);
		L_5->___PrimaryIndexTriggerCurl_5 = 0;
		// axis1DMap.PrimaryIndexTriggerSlide   = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9274));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_6 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_6);
		L_6->___PrimaryIndexTriggerSlide_6 = 0;
		// axis1DMap.PrimaryThumbRestForce      = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9275));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_7 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_7);
		L_7->___PrimaryThumbRestForce_7 = 0;
		// axis1DMap.PrimaryStylusForce         = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9276));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_8 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_8);
		L_8->___PrimaryStylusForce_8 = 0;
		// axis1DMap.SecondaryIndexTriggerCurl  = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9277));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_9 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_9);
		L_9->___SecondaryIndexTriggerCurl_9 = 0;
		// axis1DMap.SecondaryIndexTriggerSlide = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9278));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_10 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_10);
		L_10->___SecondaryIndexTriggerSlide_10 = 0;
		// axis1DMap.SecondaryThumbRestForce    = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9279));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_11 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_11);
		L_11->___SecondaryThumbRestForce_11 = 0;
		// axis1DMap.SecondaryStylusForce       = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9280));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_12 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_12);
		L_12->___SecondaryStylusForce_12 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9281));
		return;
	}
}
// System.Void OVRInput/OVRControllerRemote::ConfigureAxis2DMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerRemote_ConfigureAxis2DMap_mDA4307A5C3BD949F823F95207608A874B3114432 (OVRControllerRemote_tFAC79902D239980E05EB245E84764EB95FC42C08* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRemote_ConfigureAxis2DMap_mDA4307A5C3BD949F823F95207608A874B3114432_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerRemote_tFAC79902D239980E05EB245E84764EB95FC42C08_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerRemote_ConfigureAxis2DMap_mDA4307A5C3BD949F823F95207608A874B3114432_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9282));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9283));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9284));
		// axis2DMap.None                     = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9285));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// axis2DMap.PrimaryThumbstick        = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9286));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_1);
		L_1->___PrimaryThumbstick_1 = 0;
		// axis2DMap.PrimaryTouchpad          = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9287));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_2);
		L_2->___PrimaryTouchpad_2 = 0;
		// axis2DMap.SecondaryThumbstick      = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9288));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_3);
		L_3->___SecondaryThumbstick_3 = 0;
		// axis2DMap.SecondaryTouchpad        = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9289));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_4);
		L_4->___SecondaryTouchpad_4 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9290));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void OVRInput/OVRControllerGamepadPC::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerGamepadPC__ctor_mA262F7088F3F7F2CF16CF993E7611F1815302F1E (OVRControllerGamepadPC_t8E0D3F7E7CE14C766A57CC4543E9A7CFFB5B4336* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerGamepadPC__ctor_mA262F7088F3F7F2CF16CF993E7611F1815302F1E_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerGamepadPC_t8E0D3F7E7CE14C766A57CC4543E9A7CFFB5B4336_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerGamepadPC__ctor_mA262F7088F3F7F2CF16CF993E7611F1815302F1E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9291));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9292));
	{
		// public OVRControllerGamepadPC()
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9293));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9294));
		OVRControllerBase__ctor_m19E323A6D3242829EDFA1879B8B8C0525806A124(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9294));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9295));
		// controllerType = Controller.Gamepad;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9296));
		((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___controllerType_0 = ((int32_t)16);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9297));
		return;
	}
}
// System.Void OVRInput/OVRControllerGamepadPC::ConfigureButtonMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerGamepadPC_ConfigureButtonMap_m358405CBC632EFEC8A88B247778B617CFE98D280 (OVRControllerGamepadPC_t8E0D3F7E7CE14C766A57CC4543E9A7CFFB5B4336* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerGamepadPC_ConfigureButtonMap_m358405CBC632EFEC8A88B247778B617CFE98D280_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerGamepadPC_t8E0D3F7E7CE14C766A57CC4543E9A7CFFB5B4336_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerGamepadPC_ConfigureButtonMap_m358405CBC632EFEC8A88B247778B617CFE98D280_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9298));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9299));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9300));
		// buttonMap.None                     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9301));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// buttonMap.One                      = RawButton.A;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9302));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_1);
		L_1->___One_1 = 1;
		// buttonMap.Two                      = RawButton.B;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9303));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_2);
		L_2->___Two_2 = 2;
		// buttonMap.Three                    = RawButton.X;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9304));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_3);
		L_3->___Three_3 = ((int32_t)256);
		// buttonMap.Four                     = RawButton.Y;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9305));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_4);
		L_4->___Four_4 = ((int32_t)512);
		// buttonMap.Start                    = RawButton.Start;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9306));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_5 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_5);
		L_5->___Start_5 = ((int32_t)1048576);
		// buttonMap.Back                     = RawButton.Back;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9307));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_6 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_6);
		L_6->___Back_6 = ((int32_t)2097152);
		// buttonMap.PrimaryShoulder          = RawButton.LShoulder;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9308));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_7 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_7);
		L_7->___PrimaryShoulder_7 = ((int32_t)2048);
		// buttonMap.PrimaryIndexTrigger      = RawButton.LIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9309));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_8 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_8);
		L_8->___PrimaryIndexTrigger_8 = ((int32_t)268435456);
		// buttonMap.PrimaryHandTrigger       = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9310));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_9 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_9);
		L_9->___PrimaryHandTrigger_9 = 0;
		// buttonMap.PrimaryThumbstick        = RawButton.LThumbstick;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9311));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_10 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_10);
		L_10->___PrimaryThumbstick_10 = ((int32_t)1024);
		// buttonMap.PrimaryThumbstickUp      = RawButton.LThumbstickUp;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9312));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_11 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_11);
		L_11->___PrimaryThumbstickUp_11 = ((int32_t)16);
		// buttonMap.PrimaryThumbstickDown    = RawButton.LThumbstickDown;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9313));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_12 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_12);
		L_12->___PrimaryThumbstickDown_12 = ((int32_t)32);
		// buttonMap.PrimaryThumbstickLeft    = RawButton.LThumbstickLeft;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9314));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_13 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_13);
		L_13->___PrimaryThumbstickLeft_13 = ((int32_t)64);
		// buttonMap.PrimaryThumbstickRight   = RawButton.LThumbstickRight;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9315));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_14 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_14);
		L_14->___PrimaryThumbstickRight_14 = ((int32_t)128);
		// buttonMap.PrimaryTouchpad          = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9316));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_15 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_15);
		L_15->___PrimaryTouchpad_15 = 0;
		// buttonMap.SecondaryShoulder        = RawButton.RShoulder;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9317));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_16 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_16);
		L_16->___SecondaryShoulder_16 = 8;
		// buttonMap.SecondaryIndexTrigger    = RawButton.RIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9318));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_17 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_17);
		L_17->___SecondaryIndexTrigger_17 = ((int32_t)67108864);
		// buttonMap.SecondaryHandTrigger     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9319));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_18 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_18);
		L_18->___SecondaryHandTrigger_18 = 0;
		// buttonMap.SecondaryThumbstick      = RawButton.RThumbstick;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9320));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_19 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_19);
		L_19->___SecondaryThumbstick_19 = 4;
		// buttonMap.SecondaryThumbstickUp    = RawButton.RThumbstickUp;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9321));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_20 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_20);
		L_20->___SecondaryThumbstickUp_20 = ((int32_t)4096);
		// buttonMap.SecondaryThumbstickDown  = RawButton.RThumbstickDown;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9322));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_21 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_21);
		L_21->___SecondaryThumbstickDown_21 = ((int32_t)8192);
		// buttonMap.SecondaryThumbstickLeft  = RawButton.RThumbstickLeft;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9323));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_22 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_22);
		L_22->___SecondaryThumbstickLeft_22 = ((int32_t)16384);
		// buttonMap.SecondaryThumbstickRight = RawButton.RThumbstickRight;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9324));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_23 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_23);
		L_23->___SecondaryThumbstickRight_23 = ((int32_t)32768);
		// buttonMap.SecondaryTouchpad        = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9325));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_24 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_24);
		L_24->___SecondaryTouchpad_24 = 0;
		// buttonMap.DpadUp                   = RawButton.DpadUp;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9326));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_25 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_25);
		L_25->___DpadUp_25 = ((int32_t)65536);
		// buttonMap.DpadDown                 = RawButton.DpadDown;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9327));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_26 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_26);
		L_26->___DpadDown_26 = ((int32_t)131072);
		// buttonMap.DpadLeft                 = RawButton.DpadLeft;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9328));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_27 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_27);
		L_27->___DpadLeft_27 = ((int32_t)262144);
		// buttonMap.DpadRight                = RawButton.DpadRight;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9329));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_28 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_28);
		L_28->___DpadRight_28 = ((int32_t)524288);
		// buttonMap.Up                       = RawButton.LThumbstickUp;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9330));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_29 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_29);
		L_29->___Up_29 = ((int32_t)16);
		// buttonMap.Down                     = RawButton.LThumbstickDown;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9331));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_30 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_30);
		L_30->___Down_30 = ((int32_t)32);
		// buttonMap.Left                     = RawButton.LThumbstickLeft;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9332));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_31 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_31);
		L_31->___Left_31 = ((int32_t)64);
		// buttonMap.Right                    = RawButton.LThumbstickRight;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9333));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_32 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_32);
		L_32->___Right_32 = ((int32_t)128);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9334));
		return;
	}
}
// System.Void OVRInput/OVRControllerGamepadPC::ConfigureTouchMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerGamepadPC_ConfigureTouchMap_m89883E889004F74CC07F67F94C6E5C899D3A4435 (OVRControllerGamepadPC_t8E0D3F7E7CE14C766A57CC4543E9A7CFFB5B4336* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerGamepadPC_ConfigureTouchMap_m89883E889004F74CC07F67F94C6E5C899D3A4435_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerGamepadPC_t8E0D3F7E7CE14C766A57CC4543E9A7CFFB5B4336_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerGamepadPC_ConfigureTouchMap_m89883E889004F74CC07F67F94C6E5C899D3A4435_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9335));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9336));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9337));
		// touchMap.None                      = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9338));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// touchMap.One                       = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9339));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_1);
		L_1->___One_1 = 0;
		// touchMap.Two                       = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9340));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_2);
		L_2->___Two_2 = 0;
		// touchMap.Three                     = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9341));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_3);
		L_3->___Three_3 = 0;
		// touchMap.Four                      = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9342));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_4);
		L_4->___Four_4 = 0;
		// touchMap.PrimaryIndexTrigger       = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9343));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_5 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_5);
		L_5->___PrimaryIndexTrigger_5 = 0;
		// touchMap.PrimaryThumbstick         = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9344));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_6 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_6);
		L_6->___PrimaryThumbstick_6 = 0;
		// touchMap.PrimaryThumbRest          = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9345));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_7 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_7);
		L_7->___PrimaryThumbRest_7 = 0;
		// touchMap.PrimaryTouchpad           = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9346));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_8 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_8);
		L_8->___PrimaryTouchpad_8 = 0;
		// touchMap.SecondaryIndexTrigger     = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9347));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_9 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_9);
		L_9->___SecondaryIndexTrigger_9 = 0;
		// touchMap.SecondaryThumbstick       = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9348));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_10 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_10);
		L_10->___SecondaryThumbstick_10 = 0;
		// touchMap.SecondaryThumbRest        = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9349));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_11 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_11);
		L_11->___SecondaryThumbRest_11 = 0;
		// touchMap.SecondaryTouchpad         = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9350));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_12 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_12);
		L_12->___SecondaryTouchpad_12 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9351));
		return;
	}
}
// System.Void OVRInput/OVRControllerGamepadPC::ConfigureNearTouchMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerGamepadPC_ConfigureNearTouchMap_m27CF3EE4739AA21CAF3B5B48E4D7800C426B6514 (OVRControllerGamepadPC_t8E0D3F7E7CE14C766A57CC4543E9A7CFFB5B4336* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerGamepadPC_ConfigureNearTouchMap_m27CF3EE4739AA21CAF3B5B48E4D7800C426B6514_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerGamepadPC_t8E0D3F7E7CE14C766A57CC4543E9A7CFFB5B4336_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerGamepadPC_ConfigureNearTouchMap_m27CF3EE4739AA21CAF3B5B48E4D7800C426B6514_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9352));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9353));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9354));
		// nearTouchMap.None                      = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9355));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// nearTouchMap.PrimaryIndexTrigger       = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9356));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_1);
		L_1->___PrimaryIndexTrigger_1 = 0;
		// nearTouchMap.PrimaryThumbButtons       = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9357));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_2);
		L_2->___PrimaryThumbButtons_2 = 0;
		// nearTouchMap.SecondaryIndexTrigger     = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9358));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_3);
		L_3->___SecondaryIndexTrigger_3 = 0;
		// nearTouchMap.SecondaryThumbButtons     = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9359));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_4);
		L_4->___SecondaryThumbButtons_4 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9360));
		return;
	}
}
// System.Void OVRInput/OVRControllerGamepadPC::ConfigureAxis1DMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerGamepadPC_ConfigureAxis1DMap_m4074971C0ECB34FD3601D272F0C2F6BE99DC0FA4 (OVRControllerGamepadPC_t8E0D3F7E7CE14C766A57CC4543E9A7CFFB5B4336* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerGamepadPC_ConfigureAxis1DMap_m4074971C0ECB34FD3601D272F0C2F6BE99DC0FA4_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerGamepadPC_t8E0D3F7E7CE14C766A57CC4543E9A7CFFB5B4336_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerGamepadPC_ConfigureAxis1DMap_m4074971C0ECB34FD3601D272F0C2F6BE99DC0FA4_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9361));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9362));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9363));
		// axis1DMap.None                      = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9364));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// axis1DMap.PrimaryIndexTrigger       = RawAxis1D.LIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9365));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_1);
		L_1->___PrimaryIndexTrigger_1 = 1;
		// axis1DMap.PrimaryHandTrigger        = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9366));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_2);
		L_2->___PrimaryHandTrigger_2 = 0;
		// axis1DMap.SecondaryIndexTrigger     = RawAxis1D.RIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9367));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_3);
		L_3->___SecondaryIndexTrigger_3 = 2;
		// axis1DMap.SecondaryHandTrigger      = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9368));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_4);
		L_4->___SecondaryHandTrigger_4 = 0;
		// axis1DMap.PrimaryIndexTriggerCurl    = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9369));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_5 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_5);
		L_5->___PrimaryIndexTriggerCurl_5 = 0;
		// axis1DMap.PrimaryIndexTriggerSlide   = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9370));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_6 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_6);
		L_6->___PrimaryIndexTriggerSlide_6 = 0;
		// axis1DMap.PrimaryThumbRestForce      = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9371));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_7 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_7);
		L_7->___PrimaryThumbRestForce_7 = 0;
		// axis1DMap.PrimaryStylusForce         = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9372));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_8 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_8);
		L_8->___PrimaryStylusForce_8 = 0;
		// axis1DMap.SecondaryIndexTriggerCurl  = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9373));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_9 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_9);
		L_9->___SecondaryIndexTriggerCurl_9 = 0;
		// axis1DMap.SecondaryIndexTriggerSlide = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9374));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_10 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_10);
		L_10->___SecondaryIndexTriggerSlide_10 = 0;
		// axis1DMap.SecondaryThumbRestForce    = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9375));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_11 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_11);
		L_11->___SecondaryThumbRestForce_11 = 0;
		// axis1DMap.SecondaryStylusForce       = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9376));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_12 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_12);
		L_12->___SecondaryStylusForce_12 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9377));
		return;
	}
}
// System.Void OVRInput/OVRControllerGamepadPC::ConfigureAxis2DMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerGamepadPC_ConfigureAxis2DMap_m50486E0ECA8EC458AD2C3D53423CE9C6846AAE5C (OVRControllerGamepadPC_t8E0D3F7E7CE14C766A57CC4543E9A7CFFB5B4336* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerGamepadPC_ConfigureAxis2DMap_m50486E0ECA8EC458AD2C3D53423CE9C6846AAE5C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerGamepadPC_t8E0D3F7E7CE14C766A57CC4543E9A7CFFB5B4336_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerGamepadPC_ConfigureAxis2DMap_m50486E0ECA8EC458AD2C3D53423CE9C6846AAE5C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9378));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9379));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9380));
		// axis2DMap.None                      = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9381));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// axis2DMap.PrimaryThumbstick         = RawAxis2D.LThumbstick;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9382));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_1);
		L_1->___PrimaryThumbstick_1 = 1;
		// axis2DMap.PrimaryTouchpad           = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9383));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_2);
		L_2->___PrimaryTouchpad_2 = 0;
		// axis2DMap.SecondaryThumbstick       = RawAxis2D.RThumbstick;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9384));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_3);
		L_3->___SecondaryThumbstick_3 = 2;
		// axis2DMap.SecondaryTouchpad         = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9385));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_4);
		L_4->___SecondaryTouchpad_4 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9386));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void OVRInput/OVRControllerGamepadAndroid::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerGamepadAndroid__ctor_m2B20446135A5F6216BBF57ADB65A8E55264F991B (OVRControllerGamepadAndroid_t744FA8E4FD2A606498498663467C1271A46F1AB9* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerGamepadAndroid__ctor_m2B20446135A5F6216BBF57ADB65A8E55264F991B_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerGamepadAndroid_t744FA8E4FD2A606498498663467C1271A46F1AB9_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerGamepadAndroid__ctor_m2B20446135A5F6216BBF57ADB65A8E55264F991B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9387));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9388));
	{
		// public OVRControllerGamepadAndroid()
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9389));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9390));
		OVRControllerBase__ctor_m19E323A6D3242829EDFA1879B8B8C0525806A124(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9390));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9391));
		// controllerType = Controller.Gamepad;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9392));
		((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___controllerType_0 = ((int32_t)16);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9393));
		return;
	}
}
// System.Void OVRInput/OVRControllerGamepadAndroid::ConfigureButtonMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerGamepadAndroid_ConfigureButtonMap_mAE93B89F65CA326E2709857955EDBFB4D0126D5A (OVRControllerGamepadAndroid_t744FA8E4FD2A606498498663467C1271A46F1AB9* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerGamepadAndroid_ConfigureButtonMap_mAE93B89F65CA326E2709857955EDBFB4D0126D5A_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerGamepadAndroid_t744FA8E4FD2A606498498663467C1271A46F1AB9_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerGamepadAndroid_ConfigureButtonMap_mAE93B89F65CA326E2709857955EDBFB4D0126D5A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9394));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9395));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9396));
		// buttonMap.None                     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9397));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// buttonMap.One                      = RawButton.A;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9398));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_1);
		L_1->___One_1 = 1;
		// buttonMap.Two                      = RawButton.B;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9399));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_2);
		L_2->___Two_2 = 2;
		// buttonMap.Three                    = RawButton.X;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9400));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_3);
		L_3->___Three_3 = ((int32_t)256);
		// buttonMap.Four                     = RawButton.Y;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9401));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_4);
		L_4->___Four_4 = ((int32_t)512);
		// buttonMap.Start                    = RawButton.Start;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9402));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_5 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_5);
		L_5->___Start_5 = ((int32_t)1048576);
		// buttonMap.Back                     = RawButton.Back;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9403));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_6 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_6);
		L_6->___Back_6 = ((int32_t)2097152);
		// buttonMap.PrimaryShoulder          = RawButton.LShoulder;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9404));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_7 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_7);
		L_7->___PrimaryShoulder_7 = ((int32_t)2048);
		// buttonMap.PrimaryIndexTrigger      = RawButton.LIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9405));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_8 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_8);
		L_8->___PrimaryIndexTrigger_8 = ((int32_t)268435456);
		// buttonMap.PrimaryHandTrigger       = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9406));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_9 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_9);
		L_9->___PrimaryHandTrigger_9 = 0;
		// buttonMap.PrimaryThumbstick        = RawButton.LThumbstick;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9407));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_10 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_10);
		L_10->___PrimaryThumbstick_10 = ((int32_t)1024);
		// buttonMap.PrimaryThumbstickUp      = RawButton.LThumbstickUp;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9408));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_11 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_11);
		L_11->___PrimaryThumbstickUp_11 = ((int32_t)16);
		// buttonMap.PrimaryThumbstickDown    = RawButton.LThumbstickDown;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9409));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_12 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_12);
		L_12->___PrimaryThumbstickDown_12 = ((int32_t)32);
		// buttonMap.PrimaryThumbstickLeft    = RawButton.LThumbstickLeft;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9410));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_13 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_13);
		L_13->___PrimaryThumbstickLeft_13 = ((int32_t)64);
		// buttonMap.PrimaryThumbstickRight   = RawButton.LThumbstickRight;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9411));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_14 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_14);
		L_14->___PrimaryThumbstickRight_14 = ((int32_t)128);
		// buttonMap.PrimaryTouchpad          = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9412));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_15 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_15);
		L_15->___PrimaryTouchpad_15 = 0;
		// buttonMap.SecondaryShoulder        = RawButton.RShoulder;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9413));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_16 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_16);
		L_16->___SecondaryShoulder_16 = 8;
		// buttonMap.SecondaryIndexTrigger    = RawButton.RIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9414));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_17 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_17);
		L_17->___SecondaryIndexTrigger_17 = ((int32_t)67108864);
		// buttonMap.SecondaryHandTrigger     = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9415));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_18 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_18);
		L_18->___SecondaryHandTrigger_18 = 0;
		// buttonMap.SecondaryThumbstick      = RawButton.RThumbstick;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9416));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_19 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_19);
		L_19->___SecondaryThumbstick_19 = 4;
		// buttonMap.SecondaryThumbstickUp    = RawButton.RThumbstickUp;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9417));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_20 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_20);
		L_20->___SecondaryThumbstickUp_20 = ((int32_t)4096);
		// buttonMap.SecondaryThumbstickDown  = RawButton.RThumbstickDown;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9418));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_21 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_21);
		L_21->___SecondaryThumbstickDown_21 = ((int32_t)8192);
		// buttonMap.SecondaryThumbstickLeft  = RawButton.RThumbstickLeft;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9419));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_22 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_22);
		L_22->___SecondaryThumbstickLeft_22 = ((int32_t)16384);
		// buttonMap.SecondaryThumbstickRight = RawButton.RThumbstickRight;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9420));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_23 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_23);
		L_23->___SecondaryThumbstickRight_23 = ((int32_t)32768);
		// buttonMap.SecondaryTouchpad        = RawButton.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9421));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_24 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_24);
		L_24->___SecondaryTouchpad_24 = 0;
		// buttonMap.DpadUp                   = RawButton.DpadUp;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9422));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_25 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_25);
		L_25->___DpadUp_25 = ((int32_t)65536);
		// buttonMap.DpadDown                 = RawButton.DpadDown;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9423));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_26 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_26);
		L_26->___DpadDown_26 = ((int32_t)131072);
		// buttonMap.DpadLeft                 = RawButton.DpadLeft;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9424));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_27 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_27);
		L_27->___DpadLeft_27 = ((int32_t)262144);
		// buttonMap.DpadRight                = RawButton.DpadRight;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9425));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_28 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_28);
		L_28->___DpadRight_28 = ((int32_t)524288);
		// buttonMap.Up                       = RawButton.LThumbstickUp;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9426));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_29 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_29);
		L_29->___Up_29 = ((int32_t)16);
		// buttonMap.Down                     = RawButton.LThumbstickDown;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9427));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_30 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_30);
		L_30->___Down_30 = ((int32_t)32);
		// buttonMap.Left                     = RawButton.LThumbstickLeft;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9428));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_31 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_31);
		L_31->___Left_31 = ((int32_t)64);
		// buttonMap.Right                    = RawButton.LThumbstickRight;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9429));
		VirtualButtonMap_tAE503ECB216934FFD920FBD4E2CBF66102FBFBA6* L_32 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___buttonMap_1;
		NullCheck(L_32);
		L_32->___Right_32 = ((int32_t)128);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9430));
		return;
	}
}
// System.Void OVRInput/OVRControllerGamepadAndroid::ConfigureTouchMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerGamepadAndroid_ConfigureTouchMap_mE2E4C8DF6B8086F8B508F1F327A88106E44717DE (OVRControllerGamepadAndroid_t744FA8E4FD2A606498498663467C1271A46F1AB9* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerGamepadAndroid_ConfigureTouchMap_mE2E4C8DF6B8086F8B508F1F327A88106E44717DE_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerGamepadAndroid_t744FA8E4FD2A606498498663467C1271A46F1AB9_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerGamepadAndroid_ConfigureTouchMap_mE2E4C8DF6B8086F8B508F1F327A88106E44717DE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9431));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9432));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9433));
		// touchMap.None                      = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9434));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// touchMap.One                       = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9435));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_1);
		L_1->___One_1 = 0;
		// touchMap.Two                       = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9436));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_2);
		L_2->___Two_2 = 0;
		// touchMap.Three                     = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9437));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_3);
		L_3->___Three_3 = 0;
		// touchMap.Four                      = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9438));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_4);
		L_4->___Four_4 = 0;
		// touchMap.PrimaryIndexTrigger       = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9439));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_5 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_5);
		L_5->___PrimaryIndexTrigger_5 = 0;
		// touchMap.PrimaryThumbstick         = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9440));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_6 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_6);
		L_6->___PrimaryThumbstick_6 = 0;
		// touchMap.PrimaryThumbRest          = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9441));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_7 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_7);
		L_7->___PrimaryThumbRest_7 = 0;
		// touchMap.PrimaryTouchpad           = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9442));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_8 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_8);
		L_8->___PrimaryTouchpad_8 = 0;
		// touchMap.SecondaryIndexTrigger     = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9443));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_9 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_9);
		L_9->___SecondaryIndexTrigger_9 = 0;
		// touchMap.SecondaryThumbstick       = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9444));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_10 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_10);
		L_10->___SecondaryThumbstick_10 = 0;
		// touchMap.SecondaryThumbRest        = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9445));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_11 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_11);
		L_11->___SecondaryThumbRest_11 = 0;
		// touchMap.SecondaryTouchpad         = RawTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9446));
		VirtualTouchMap_tD05E3BD615B270F8E98E6EA7F07A437B49FBE169* L_12 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___touchMap_2;
		NullCheck(L_12);
		L_12->___SecondaryTouchpad_12 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9447));
		return;
	}
}
// System.Void OVRInput/OVRControllerGamepadAndroid::ConfigureNearTouchMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerGamepadAndroid_ConfigureNearTouchMap_m03FFAB848F83D4CAE8F166F58B2514F7989C9FBD (OVRControllerGamepadAndroid_t744FA8E4FD2A606498498663467C1271A46F1AB9* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerGamepadAndroid_ConfigureNearTouchMap_m03FFAB848F83D4CAE8F166F58B2514F7989C9FBD_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerGamepadAndroid_t744FA8E4FD2A606498498663467C1271A46F1AB9_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerGamepadAndroid_ConfigureNearTouchMap_m03FFAB848F83D4CAE8F166F58B2514F7989C9FBD_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9448));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9449));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9450));
		// nearTouchMap.None                      = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9451));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// nearTouchMap.PrimaryIndexTrigger       = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9452));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_1);
		L_1->___PrimaryIndexTrigger_1 = 0;
		// nearTouchMap.PrimaryThumbButtons       = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9453));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_2);
		L_2->___PrimaryThumbButtons_2 = 0;
		// nearTouchMap.SecondaryIndexTrigger     = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9454));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_3);
		L_3->___SecondaryIndexTrigger_3 = 0;
		// nearTouchMap.SecondaryThumbButtons     = RawNearTouch.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9455));
		VirtualNearTouchMap_tEEBA6DA6A7788E2E7B68CB59111974ADEBD8ECA3* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___nearTouchMap_3;
		NullCheck(L_4);
		L_4->___SecondaryThumbButtons_4 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9456));
		return;
	}
}
// System.Void OVRInput/OVRControllerGamepadAndroid::ConfigureAxis1DMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerGamepadAndroid_ConfigureAxis1DMap_mA102C673C1A726B08549A017CC38B69761C33161 (OVRControllerGamepadAndroid_t744FA8E4FD2A606498498663467C1271A46F1AB9* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerGamepadAndroid_ConfigureAxis1DMap_mA102C673C1A726B08549A017CC38B69761C33161_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerGamepadAndroid_t744FA8E4FD2A606498498663467C1271A46F1AB9_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerGamepadAndroid_ConfigureAxis1DMap_mA102C673C1A726B08549A017CC38B69761C33161_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9457));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9458));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9459));
		// axis1DMap.None                      = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9460));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// axis1DMap.PrimaryIndexTrigger       = RawAxis1D.LIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9461));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_1);
		L_1->___PrimaryIndexTrigger_1 = 1;
		// axis1DMap.PrimaryHandTrigger        = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9462));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_2);
		L_2->___PrimaryHandTrigger_2 = 0;
		// axis1DMap.SecondaryIndexTrigger     = RawAxis1D.RIndexTrigger;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9463));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_3);
		L_3->___SecondaryIndexTrigger_3 = 2;
		// axis1DMap.SecondaryHandTrigger      = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9464));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_4);
		L_4->___SecondaryHandTrigger_4 = 0;
		// axis1DMap.PrimaryIndexTriggerCurl    = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9465));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_5 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_5);
		L_5->___PrimaryIndexTriggerCurl_5 = 0;
		// axis1DMap.PrimaryIndexTriggerSlide   = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9466));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_6 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_6);
		L_6->___PrimaryIndexTriggerSlide_6 = 0;
		// axis1DMap.PrimaryThumbRestForce      = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9467));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_7 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_7);
		L_7->___PrimaryThumbRestForce_7 = 0;
		// axis1DMap.PrimaryStylusForce         = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9468));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_8 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_8);
		L_8->___PrimaryStylusForce_8 = 0;
		// axis1DMap.SecondaryIndexTriggerCurl  = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9469));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_9 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_9);
		L_9->___SecondaryIndexTriggerCurl_9 = 0;
		// axis1DMap.SecondaryIndexTriggerSlide = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9470));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_10 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_10);
		L_10->___SecondaryIndexTriggerSlide_10 = 0;
		// axis1DMap.SecondaryThumbRestForce    = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9471));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_11 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_11);
		L_11->___SecondaryThumbRestForce_11 = 0;
		// axis1DMap.SecondaryStylusForce       = RawAxis1D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9472));
		VirtualAxis1DMap_tFBFD8D8FC89DE3BA2EDEB4F4625B94A153109ABD* L_12 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis1DMap_4;
		NullCheck(L_12);
		L_12->___SecondaryStylusForce_12 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9473));
		return;
	}
}
// System.Void OVRInput/OVRControllerGamepadAndroid::ConfigureAxis2DMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRControllerGamepadAndroid_ConfigureAxis2DMap_m82F40C8233710052ED92FE8BCC1BCAD2FACD5B9F (OVRControllerGamepadAndroid_t744FA8E4FD2A606498498663467C1271A46F1AB9* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerGamepadAndroid_ConfigureAxis2DMap_m82F40C8233710052ED92FE8BCC1BCAD2FACD5B9F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRControllerGamepadAndroid_t744FA8E4FD2A606498498663467C1271A46F1AB9_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRControllerGamepadAndroid_ConfigureAxis2DMap_m82F40C8233710052ED92FE8BCC1BCAD2FACD5B9F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9474));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9475));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9476));
		// axis2DMap.None                      = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9477));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_0 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_0);
		L_0->___None_0 = 0;
		// axis2DMap.PrimaryThumbstick         = RawAxis2D.LThumbstick;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9478));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_1 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_1);
		L_1->___PrimaryThumbstick_1 = 1;
		// axis2DMap.PrimaryTouchpad           = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9479));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_2 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_2);
		L_2->___PrimaryTouchpad_2 = 0;
		// axis2DMap.SecondaryThumbstick       = RawAxis2D.RThumbstick;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9480));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_3 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_3);
		L_3->___SecondaryThumbstick_3 = 2;
		// axis2DMap.SecondaryTouchpad         = RawAxis2D.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9481));
		VirtualAxis2DMap_tBCB4ACE6FBB4EFBAC30CB2DAF421C3A2380D1B10* L_4 = ((OVRControllerBase_tB89EB71EBFB6FAD2AD3480CAE92B5643A9CBCE83*)__this)->___axis2DMap_5;
		NullCheck(L_4);
		L_4->___SecondaryTouchpad_4 = 0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9482));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Boolean OVRKtxTexture::Load(System.Byte[],OVRTextureData&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRKtxTexture_Load_m6544AE7B274113799991C2C0231C5F68185DB9FD (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_data, OVRTextureData_t357BF09E78929C6C4BC7C3039D461E73D58064A3* ___1_ktxData, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IntPtr_t_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Marshal_SizeOf_TisByte_t94D9231AC217BE4D2E004C4CD32DF6D099EA41A3_m7AB12E9316F73FF78004C146AEF4D4616F3A7DEC_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Marshal_tD976A56A90263C3CE2B780D4B1CADADE2E70B4A7_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRKtxTexture_Load_m6544AE7B274113799991C2C0231C5F68185DB9FD_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&UInt32_t1833D51FFA667B18A5AA4B8D34DE284F8495D29B_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral0DF60DA144F2DEC005C204360F407754E8977C74);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral964A9CCA3F4767F77B60F58900751CDFFED0CD47);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	intptr_t V_1;
	memset((&V_1), 0, sizeof(V_1));
	intptr_t V_2;
	memset((&V_2), 0, sizeof(V_2));
	bool V_3 = false;
	uint32_t V_4 = 0;
	intptr_t V_5;
	memset((&V_5), 0, sizeof(V_5));
	ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* V_6 = NULL;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_data), (&___1_ktxData));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3), (&V_4), (&V_5), (&V_6));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRKtxTexture_Load_m6544AE7B274113799991C2C0231C5F68185DB9FD_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9483));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9484));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9485));
		// int unmanagedSize = Marshal.SizeOf(data[0]) * data.Length;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9486));
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_0 = ___0_data;
		NullCheck(L_0);
		int32_t L_1 = 0;
		uint8_t L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9487));
		il2cpp_codegen_runtime_class_init_inline(Marshal_tD976A56A90263C3CE2B780D4B1CADADE2E70B4A7_il2cpp_TypeInfo_var);
		int32_t L_3;
		L_3 = Marshal_SizeOf_TisByte_t94D9231AC217BE4D2E004C4CD32DF6D099EA41A3_m7AB12E9316F73FF78004C146AEF4D4616F3A7DEC(L_2, Marshal_SizeOf_TisByte_t94D9231AC217BE4D2E004C4CD32DF6D099EA41A3_m7AB12E9316F73FF78004C146AEF4D4616F3A7DEC_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9487));
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_4 = ___0_data;
		NullCheck(L_4);
		V_0 = ((int32_t)il2cpp_codegen_multiply(L_3, ((int32_t)(((RuntimeArray*)L_4)->max_length))));
		// IntPtr dataPtr = Marshal.AllocHGlobal(unmanagedSize);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9488));
		int32_t L_5 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9489));
		intptr_t L_6;
		L_6 = Marshal_AllocHGlobal_mE1D700DF967E28BE8AB3E0D67C81A96B4FCC8F4F(L_5, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9489));
		V_1 = L_6;
		// Marshal.Copy(data, 0, dataPtr, data.Length);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9490));
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_7 = ___0_data;
		intptr_t L_8 = V_1;
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_9 = ___0_data;
		NullCheck(L_9);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9491));
		Marshal_Copy_m0FD7BFE70EE28FC67B67A6225AD58F95FEE7EB85(L_7, 0, L_8, ((int32_t)(((RuntimeArray*)L_9)->max_length)), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9491));
		// IntPtr ktxTexturePtr = OVRPlugin.Ktx.LoadKtxFromMemory(dataPtr, (uint)data.Length);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9492));
		intptr_t L_10 = V_1;
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_11 = ___0_data;
		NullCheck(L_11);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9493));
		intptr_t L_12;
		L_12 = Ktx_LoadKtxFromMemory_mD2759F02E4770B460F61326A173531D0CA95AEE5(L_10, ((int32_t)(((RuntimeArray*)L_11)->max_length)), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9493));
		V_2 = L_12;
		// Marshal.FreeHGlobal(dataPtr);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9494));
		intptr_t L_13 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9495));
		Marshal_FreeHGlobal_m298EF0650E82E326EDA8048488DC384BB9171EB9(L_13, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9495));
		// ktxData.width = (int)OVRPlugin.Ktx.GetKtxTextureWidth(ktxTexturePtr);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9496));
		OVRTextureData_t357BF09E78929C6C4BC7C3039D461E73D58064A3* L_14 = ___1_ktxData;
		intptr_t L_15 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9497));
		uint32_t L_16;
		L_16 = Ktx_GetKtxTextureWidth_m67DD7AE87930DB3BDF234E66BB7769BAF7F601F3(L_15, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9497));
		L_14->___width_1 = L_16;
		// ktxData.height = (int)OVRPlugin.Ktx.GetKtxTextureHeight(ktxTexturePtr);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9498));
		OVRTextureData_t357BF09E78929C6C4BC7C3039D461E73D58064A3* L_17 = ___1_ktxData;
		intptr_t L_18 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9499));
		uint32_t L_19;
		L_19 = Ktx_GetKtxTextureHeight_mBC788B33843F0C9BEFA7028D5AEEE274A23BDA89(L_18, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9499));
		L_17->___height_2 = L_19;
		// bool transcodeResult = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9500));
		V_3 = (bool)0;
		// transcodeResult = OVRPlugin.Ktx.TranscodeKtxTexture(ktxTexturePtr, KTX_TTF_ASTC_4x4_RGBA);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9501));
		intptr_t L_20 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9502));
		bool L_21;
		L_21 = Ktx_TranscodeKtxTexture_mFAAB5B6D9BE3FA318722FBA974E8398AD6AF95B1(L_20, ((int32_t)10), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9502));
		V_3 = L_21;
		// ktxData.transcodedFormat = TextureFormat.ASTC_4x4;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9503));
		OVRTextureData_t357BF09E78929C6C4BC7C3039D461E73D58064A3* L_22 = ___1_ktxData;
		L_22->___transcodedFormat_4 = ((int32_t)48);
		// if (!transcodeResult)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9504));
		bool L_23 = V_3;
		V_7 = (bool)((((int32_t)L_23) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9505));
		bool L_24 = V_7;
		if (!L_24)
		{
			goto IL_0078;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9506));
		// Debug.LogError("Failed to transcode KTX texture.");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9507));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9508));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_LogError_mB00B2B4468EF3CAF041B038D840820FB84C924B2(_stringLiteral0DF60DA144F2DEC005C204360F407754E8977C74, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9508));
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9509));
		V_8 = (bool)0;
		goto IL_00e1;
	}

IL_0078:
	{
		// uint textureSize = OVRPlugin.Ktx.GetKtxTextureSize(ktxTexturePtr);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9510));
		intptr_t L_25 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9511));
		uint32_t L_26;
		L_26 = Ktx_GetKtxTextureSize_mA4515CCDDE6EB440616387342085739CF80C7AF9(L_25, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9511));
		V_4 = L_26;
		// IntPtr textureDataPtr = Marshal.AllocHGlobal(sizeof(byte) * (int)textureSize);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9512));
		uint32_t L_27 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9513));
		il2cpp_codegen_runtime_class_init_inline(Marshal_tD976A56A90263C3CE2B780D4B1CADADE2E70B4A7_il2cpp_TypeInfo_var);
		intptr_t L_28;
		L_28 = Marshal_AllocHGlobal_mE1D700DF967E28BE8AB3E0D67C81A96B4FCC8F4F(L_27, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9513));
		V_5 = L_28;
		// if(!OVRPlugin.Ktx.GetKtxTextureData(ktxTexturePtr, textureDataPtr, textureSize))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9514));
		intptr_t L_29 = V_2;
		intptr_t L_30 = V_5;
		uint32_t L_31 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9515));
		bool L_32;
		L_32 = Ktx_GetKtxTextureData_m3057F7B0487BD7B5A1C38915EF342BA6FC17E75D(L_29, L_30, L_31, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9515));
		V_9 = (bool)((((int32_t)L_32) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9516));
		bool L_33 = V_9;
		if (!L_33)
		{
			goto IL_00ad;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9517));
		// Debug.LogError("Failed to get texture data from Ktx texture reference");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9518));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9519));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_LogError_mB00B2B4468EF3CAF041B038D840820FB84C924B2(_stringLiteral964A9CCA3F4767F77B60F58900751CDFFED0CD47, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9519));
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9520));
		V_8 = (bool)0;
		goto IL_00e1;
	}

IL_00ad:
	{
		// byte[] textureData = new byte[textureSize];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9521));
		uint32_t L_34 = V_4;
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_35 = (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031*)(ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031*)SZArrayNew(ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031_il2cpp_TypeInfo_var, (uint32_t)L_34);
		V_6 = L_35;
		// Marshal.Copy(textureDataPtr, textureData, 0, textureData.Length);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9522));
		intptr_t L_36 = V_5;
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_37 = V_6;
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_38 = V_6;
		NullCheck(L_38);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9523));
		il2cpp_codegen_runtime_class_init_inline(Marshal_tD976A56A90263C3CE2B780D4B1CADADE2E70B4A7_il2cpp_TypeInfo_var);
		Marshal_Copy_mF7402FFDB520EA1B8D1C32B368DBEE4B13F1BE77(L_36, L_37, 0, ((int32_t)(((RuntimeArray*)L_38)->max_length)), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9523));
		// Marshal.FreeHGlobal(textureDataPtr);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9524));
		intptr_t L_39 = V_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9525));
		Marshal_FreeHGlobal_m298EF0650E82E326EDA8048488DC384BB9171EB9(L_39, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9525));
		// ktxData.data = textureData;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9526));
		OVRTextureData_t357BF09E78929C6C4BC7C3039D461E73D58064A3* L_40 = ___1_ktxData;
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_41 = V_6;
		L_40->___data_0 = L_41;
		Il2CppCodeGenWriteBarrier((void**)(&L_40->___data_0), (void*)L_41);
		// OVRPlugin.Ktx.DestroyKtxTexture(ktxTexturePtr);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9527));
		intptr_t L_42 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9528));
		bool L_43;
		L_43 = Ktx_DestroyKtxTexture_mD7EC5644F5EF3C12498F62EE3B150B34A7FC3A3A(L_42, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9528));
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9529));
		V_8 = (bool)1;
		goto IL_00e1;
	}

IL_00e1:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9530));
		bool L_44 = V_8;
		return L_44;
	}
}
// System.Void OVRKtxTexture::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRKtxTexture__ctor_m94563268E7228EDB9B48E3CCF53DC27D0D9A3AE2 (OVRKtxTexture_tCBA95D23D3966F783B772DEFC7D54FFE84B744C1* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRKtxTexture__ctor_m94563268E7228EDB9B48E3CCF53DC27D0D9A3AE2_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRKtxTexture__ctor_m94563268E7228EDB9B48E3CCF53DC27D0D9A3AE2_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void OVRLayerAttribute::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRLayerAttribute__ctor_mD6EC6EF2AC708B6CA90913C30A09093C1199BD74 (OVRLayerAttribute_tD0FCB636847094CE881C27A03DACFD8B21D32ABB* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRLayerAttribute__ctor_mD6EC6EF2AC708B6CA90913C30A09093C1199BD74_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRLayerAttribute__ctor_mD6EC6EF2AC708B6CA90913C30A09093C1199BD74_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		PropertyAttribute__ctor_m19247686E165101F140615C7306DC2DA3953D97D(__this, NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// OVRManager OVRManager::get_instance()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* OVRManager_get_instance_m642500A467C7D7B5B1C2763F2BA90C52BBF5381C (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_instance_m642500A467C7D7B5B1C2763F2BA90C52BBF5381C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_instance_m642500A467C7D7B5B1C2763F2BA90C52BBF5381C_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9531));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9532));
	{
		// public static OVRManager instance { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9533));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___U3CinstanceU3Ek__BackingField_4;
		return L_0;
	}
}
// System.Void OVRManager::set_instance(OVRManager)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_instance_m268BE0B7206FEB81BA8B8EB5221AB2BA10E91E0E (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_instance_m268BE0B7206FEB81BA8B8EB5221AB2BA10E91E0E_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_instance_m268BE0B7206FEB81BA8B8EB5221AB2BA10E91E0E_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9534));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9535));
	{
		// public static OVRManager instance { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9536));
		OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* L_0 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___U3CinstanceU3Ek__BackingField_4 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___U3CinstanceU3Ek__BackingField_4), (void*)L_0);
		return;
	}
}
// OVRDisplay OVRManager::get_display()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27* OVRManager_get_display_m1D17D6867547AC786E00A4CF60B863275AC1AF3D (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_display_m1D17D6867547AC786E00A4CF60B863275AC1AF3D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_display_m1D17D6867547AC786E00A4CF60B863275AC1AF3D_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9537));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9538));
	{
		// public static OVRDisplay display { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9539));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___U3CdisplayU3Ek__BackingField_5;
		return L_0;
	}
}
// System.Void OVRManager::set_display(OVRDisplay)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_display_mAD68A004132C01084A443254AC164FD31BCDFE6B (OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_display_mAD68A004132C01084A443254AC164FD31BCDFE6B_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_display_mAD68A004132C01084A443254AC164FD31BCDFE6B_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9540));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9541));
	{
		// public static OVRDisplay display { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9542));
		OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27* L_0 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___U3CdisplayU3Ek__BackingField_5 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___U3CdisplayU3Ek__BackingField_5), (void*)L_0);
		return;
	}
}
// OVRTracker OVRManager::get_tracker()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR OVRTracker_t5E60EE08D82308F2F8206AD43AE8CC4925938154* OVRManager_get_tracker_mA945BED7BDB670E0F82A7EAD0A401651C8605259 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_tracker_mA945BED7BDB670E0F82A7EAD0A401651C8605259_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_tracker_mA945BED7BDB670E0F82A7EAD0A401651C8605259_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9543));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9544));
	{
		// public static OVRTracker tracker { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9545));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRTracker_t5E60EE08D82308F2F8206AD43AE8CC4925938154* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___U3CtrackerU3Ek__BackingField_6;
		return L_0;
	}
}
// System.Void OVRManager::set_tracker(OVRTracker)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_tracker_m50D4C4C76BA97D4775D75620D4CC033398E72433 (OVRTracker_t5E60EE08D82308F2F8206AD43AE8CC4925938154* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_tracker_m50D4C4C76BA97D4775D75620D4CC033398E72433_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_tracker_m50D4C4C76BA97D4775D75620D4CC033398E72433_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9546));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9547));
	{
		// public static OVRTracker tracker { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9548));
		OVRTracker_t5E60EE08D82308F2F8206AD43AE8CC4925938154* L_0 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___U3CtrackerU3Ek__BackingField_6 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___U3CtrackerU3Ek__BackingField_6), (void*)L_0);
		return;
	}
}
// OVRBoundary OVRManager::get_boundary()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR OVRBoundary_t56DFE91F758A740A34575D748FEC61959A106DAE* OVRManager_get_boundary_m7495B93002198ABB5346F3F696712133AF7EA943 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_boundary_m7495B93002198ABB5346F3F696712133AF7EA943_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_boundary_m7495B93002198ABB5346F3F696712133AF7EA943_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9549));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9550));
	{
		// public static OVRBoundary boundary { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9551));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRBoundary_t56DFE91F758A740A34575D748FEC61959A106DAE* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___U3CboundaryU3Ek__BackingField_7;
		return L_0;
	}
}
// System.Void OVRManager::set_boundary(OVRBoundary)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_boundary_mCEFC4DA00ED1094A5758AC15FF744BDC4B6091E4 (OVRBoundary_t56DFE91F758A740A34575D748FEC61959A106DAE* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_boundary_mCEFC4DA00ED1094A5758AC15FF744BDC4B6091E4_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_boundary_mCEFC4DA00ED1094A5758AC15FF744BDC4B6091E4_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9552));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9553));
	{
		// public static OVRBoundary boundary { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9554));
		OVRBoundary_t56DFE91F758A740A34575D748FEC61959A106DAE* L_0 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___U3CboundaryU3Ek__BackingField_7 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___U3CboundaryU3Ek__BackingField_7), (void*)L_0);
		return;
	}
}
// OVRRuntimeSettings OVRManager::get_runtimeSettings()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR OVRRuntimeSettings_tC85E84DCFBF4DB2D4C3311CA39C96DEE89220EE1* OVRManager_get_runtimeSettings_m6DFAF39BFB4B75B251235D43B02696D70BFA897A (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_runtimeSettings_m6DFAF39BFB4B75B251235D43B02696D70BFA897A_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_runtimeSettings_m6DFAF39BFB4B75B251235D43B02696D70BFA897A_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9555));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9556));
	{
		// public static OVRRuntimeSettings runtimeSettings { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9557));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRRuntimeSettings_tC85E84DCFBF4DB2D4C3311CA39C96DEE89220EE1* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___U3CruntimeSettingsU3Ek__BackingField_8;
		return L_0;
	}
}
// System.Void OVRManager::set_runtimeSettings(OVRRuntimeSettings)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_runtimeSettings_m66D09D518E906F1A50738B3BFA760EE8B117C469 (OVRRuntimeSettings_tC85E84DCFBF4DB2D4C3311CA39C96DEE89220EE1* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_runtimeSettings_m66D09D518E906F1A50738B3BFA760EE8B117C469_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_runtimeSettings_m66D09D518E906F1A50738B3BFA760EE8B117C469_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9558));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9559));
	{
		// public static OVRRuntimeSettings runtimeSettings { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9560));
		OVRRuntimeSettings_tC85E84DCFBF4DB2D4C3311CA39C96DEE89220EE1* L_0 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___U3CruntimeSettingsU3Ek__BackingField_8 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___U3CruntimeSettingsU3Ek__BackingField_8), (void*)L_0);
		return;
	}
}
// OVRProfile OVRManager::get_profile()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR OVRProfile_tCFDDDA5EE82F0ED94671EB741B8954603D98AFC0* OVRManager_get_profile_m7BD564E8E26977B10A35BBB1E639FEDDB1357D6D (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_profile_m7BD564E8E26977B10A35BBB1E639FEDDB1357D6D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRProfile_tCFDDDA5EE82F0ED94671EB741B8954603D98AFC0_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRProfile_tCFDDDA5EE82F0ED94671EB741B8954603D98AFC0_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	OVRProfile_tCFDDDA5EE82F0ED94671EB741B8954603D98AFC0* V_1 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_profile_m7BD564E8E26977B10A35BBB1E639FEDDB1357D6D_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9561));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9562));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9563));
		// if (_profile == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9564));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRProfile_tCFDDDA5EE82F0ED94671EB741B8954603D98AFC0* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____profile_9;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9565));
		il2cpp_codegen_runtime_class_init_inline(Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		bool L_1;
		L_1 = Object_op_Equality_mB6120F782D83091EF56A198FCEBCF066DB4A9605(L_0, (Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C*)NULL, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9565));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9566));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_001a;
		}
	}
	{
		// _profile = new OVRProfile();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9567));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9568));
		OVRProfile_tCFDDDA5EE82F0ED94671EB741B8954603D98AFC0* L_3 = (OVRProfile_tCFDDDA5EE82F0ED94671EB741B8954603D98AFC0*)il2cpp_codegen_object_new(OVRProfile_tCFDDDA5EE82F0ED94671EB741B8954603D98AFC0_il2cpp_TypeInfo_var);
		NullCheck(L_3);
		OVRProfile__ctor_mAEA89E1269ED1DA8E35555C3869A12098C5D820C(L_3, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9568));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____profile_9 = L_3;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____profile_9), (void*)L_3);
	}

IL_001a:
	{
		// return _profile;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9569));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRProfile_tCFDDDA5EE82F0ED94671EB741B8954603D98AFC0* L_4 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____profile_9;
		V_1 = L_4;
		goto IL_0022;
	}

IL_0022:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9570));
		OVRProfile_tCFDDDA5EE82F0ED94671EB741B8954603D98AFC0* L_5 = V_1;
		return L_5;
	}
}
// System.Void OVRManager::add_HMDAcquired(System.Action)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_add_HMDAcquired_mFE57FD76987A5EEB1B03660911CA3B67BCE3F345 (Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_add_HMDAcquired_mFE57FD76987A5EEB1B03660911CA3B67BCE3F345_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_0 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_1 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_add_HMDAcquired_mFE57FD76987A5EEB1B03660911CA3B67BCE3F345_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___HMDAcquired_12;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_1 = V_0;
		V_1 = L_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_2 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Combine_m1F725AEF318BE6F0426863490691A6F4606E7D00(L_2, L_3, NULL);
		V_2 = ((Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)CastclassSealed((RuntimeObject*)L_4, Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_5 = V_2;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_6 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___HMDAcquired_12), L_5, L_6);
		V_0 = L_7;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_8 = V_0;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_8) == ((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::remove_HMDAcquired(System.Action)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_remove_HMDAcquired_m7F955D650B4E8D7BAA276F87F9EE42E344874049 (Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_remove_HMDAcquired_m7F955D650B4E8D7BAA276F87F9EE42E344874049_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_0 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_1 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_remove_HMDAcquired_m7F955D650B4E8D7BAA276F87F9EE42E344874049_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___HMDAcquired_12;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_1 = V_0;
		V_1 = L_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_2 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Remove_m8B7DD5661308FA972E23CA1CC3FC9CEB355504E3(L_2, L_3, NULL);
		V_2 = ((Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)CastclassSealed((RuntimeObject*)L_4, Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_5 = V_2;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_6 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___HMDAcquired_12), L_5, L_6);
		V_0 = L_7;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_8 = V_0;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_8) == ((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::add_HMDLost(System.Action)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_add_HMDLost_m987CB5028BB5E42DCB77716A0DD24F83A46D9B28 (Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_add_HMDLost_m987CB5028BB5E42DCB77716A0DD24F83A46D9B28_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_0 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_1 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_add_HMDLost_m987CB5028BB5E42DCB77716A0DD24F83A46D9B28_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___HMDLost_13;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_1 = V_0;
		V_1 = L_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_2 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Combine_m1F725AEF318BE6F0426863490691A6F4606E7D00(L_2, L_3, NULL);
		V_2 = ((Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)CastclassSealed((RuntimeObject*)L_4, Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_5 = V_2;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_6 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___HMDLost_13), L_5, L_6);
		V_0 = L_7;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_8 = V_0;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_8) == ((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::remove_HMDLost(System.Action)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_remove_HMDLost_m8EA17A97037A9624D6466C44C781C7E7CBFCEE12 (Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_remove_HMDLost_m8EA17A97037A9624D6466C44C781C7E7CBFCEE12_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_0 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_1 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_remove_HMDLost_m8EA17A97037A9624D6466C44C781C7E7CBFCEE12_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___HMDLost_13;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_1 = V_0;
		V_1 = L_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_2 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Remove_m8B7DD5661308FA972E23CA1CC3FC9CEB355504E3(L_2, L_3, NULL);
		V_2 = ((Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)CastclassSealed((RuntimeObject*)L_4, Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_5 = V_2;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_6 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___HMDLost_13), L_5, L_6);
		V_0 = L_7;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_8 = V_0;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_8) == ((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::add_HMDMounted(System.Action)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_add_HMDMounted_m8F0D43C1A18DEF38FF1F22F49CB90D652F58C3AE (Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_add_HMDMounted_m8F0D43C1A18DEF38FF1F22F49CB90D652F58C3AE_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_0 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_1 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_add_HMDMounted_m8F0D43C1A18DEF38FF1F22F49CB90D652F58C3AE_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___HMDMounted_14;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_1 = V_0;
		V_1 = L_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_2 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Combine_m1F725AEF318BE6F0426863490691A6F4606E7D00(L_2, L_3, NULL);
		V_2 = ((Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)CastclassSealed((RuntimeObject*)L_4, Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_5 = V_2;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_6 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___HMDMounted_14), L_5, L_6);
		V_0 = L_7;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_8 = V_0;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_8) == ((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::remove_HMDMounted(System.Action)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_remove_HMDMounted_mE3ACD3FCCFAC0AF372978085E2950B5B872685A8 (Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_remove_HMDMounted_mE3ACD3FCCFAC0AF372978085E2950B5B872685A8_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_0 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_1 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_remove_HMDMounted_mE3ACD3FCCFAC0AF372978085E2950B5B872685A8_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___HMDMounted_14;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_1 = V_0;
		V_1 = L_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_2 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Remove_m8B7DD5661308FA972E23CA1CC3FC9CEB355504E3(L_2, L_3, NULL);
		V_2 = ((Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)CastclassSealed((RuntimeObject*)L_4, Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_5 = V_2;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_6 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___HMDMounted_14), L_5, L_6);
		V_0 = L_7;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_8 = V_0;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_8) == ((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::add_HMDUnmounted(System.Action)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_add_HMDUnmounted_mAF5F0B3B0F77CA5888B1ADE89E1006590C656691 (Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_add_HMDUnmounted_mAF5F0B3B0F77CA5888B1ADE89E1006590C656691_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_0 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_1 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_add_HMDUnmounted_mAF5F0B3B0F77CA5888B1ADE89E1006590C656691_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___HMDUnmounted_15;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_1 = V_0;
		V_1 = L_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_2 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Combine_m1F725AEF318BE6F0426863490691A6F4606E7D00(L_2, L_3, NULL);
		V_2 = ((Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)CastclassSealed((RuntimeObject*)L_4, Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_5 = V_2;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_6 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___HMDUnmounted_15), L_5, L_6);
		V_0 = L_7;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_8 = V_0;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_8) == ((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::remove_HMDUnmounted(System.Action)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_remove_HMDUnmounted_mF0EC72A064E8A4598DC5720CEAB9793F80ABBD36 (Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_remove_HMDUnmounted_mF0EC72A064E8A4598DC5720CEAB9793F80ABBD36_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_0 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_1 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_remove_HMDUnmounted_mF0EC72A064E8A4598DC5720CEAB9793F80ABBD36_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___HMDUnmounted_15;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_1 = V_0;
		V_1 = L_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_2 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Remove_m8B7DD5661308FA972E23CA1CC3FC9CEB355504E3(L_2, L_3, NULL);
		V_2 = ((Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)CastclassSealed((RuntimeObject*)L_4, Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_5 = V_2;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_6 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___HMDUnmounted_15), L_5, L_6);
		V_0 = L_7;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_8 = V_0;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_8) == ((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::add_VrFocusAcquired(System.Action)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_add_VrFocusAcquired_m5463761A27A4D48A803583B059557E53DBBAB88F (Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_add_VrFocusAcquired_m5463761A27A4D48A803583B059557E53DBBAB88F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_0 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_1 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_add_VrFocusAcquired_m5463761A27A4D48A803583B059557E53DBBAB88F_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___VrFocusAcquired_16;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_1 = V_0;
		V_1 = L_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_2 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Combine_m1F725AEF318BE6F0426863490691A6F4606E7D00(L_2, L_3, NULL);
		V_2 = ((Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)CastclassSealed((RuntimeObject*)L_4, Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_5 = V_2;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_6 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___VrFocusAcquired_16), L_5, L_6);
		V_0 = L_7;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_8 = V_0;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_8) == ((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::remove_VrFocusAcquired(System.Action)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_remove_VrFocusAcquired_mD5CBD147F95529A4538FC2FD21D70456D9D9949C (Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_remove_VrFocusAcquired_mD5CBD147F95529A4538FC2FD21D70456D9D9949C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_0 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_1 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_remove_VrFocusAcquired_mD5CBD147F95529A4538FC2FD21D70456D9D9949C_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___VrFocusAcquired_16;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_1 = V_0;
		V_1 = L_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_2 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Remove_m8B7DD5661308FA972E23CA1CC3FC9CEB355504E3(L_2, L_3, NULL);
		V_2 = ((Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)CastclassSealed((RuntimeObject*)L_4, Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_5 = V_2;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_6 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___VrFocusAcquired_16), L_5, L_6);
		V_0 = L_7;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_8 = V_0;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_8) == ((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::add_VrFocusLost(System.Action)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_add_VrFocusLost_m5143F087674161119B4D970BF8497AA8D60CAAB1 (Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_add_VrFocusLost_m5143F087674161119B4D970BF8497AA8D60CAAB1_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_0 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_1 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_add_VrFocusLost_m5143F087674161119B4D970BF8497AA8D60CAAB1_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___VrFocusLost_17;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_1 = V_0;
		V_1 = L_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_2 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Combine_m1F725AEF318BE6F0426863490691A6F4606E7D00(L_2, L_3, NULL);
		V_2 = ((Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)CastclassSealed((RuntimeObject*)L_4, Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_5 = V_2;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_6 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___VrFocusLost_17), L_5, L_6);
		V_0 = L_7;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_8 = V_0;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_8) == ((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::remove_VrFocusLost(System.Action)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_remove_VrFocusLost_m4F0A4DDB3D5C5C18019BA47661C69CE935B1AC5B (Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_remove_VrFocusLost_m4F0A4DDB3D5C5C18019BA47661C69CE935B1AC5B_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_0 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_1 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_remove_VrFocusLost_m4F0A4DDB3D5C5C18019BA47661C69CE935B1AC5B_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___VrFocusLost_17;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_1 = V_0;
		V_1 = L_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_2 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Remove_m8B7DD5661308FA972E23CA1CC3FC9CEB355504E3(L_2, L_3, NULL);
		V_2 = ((Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)CastclassSealed((RuntimeObject*)L_4, Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_5 = V_2;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_6 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___VrFocusLost_17), L_5, L_6);
		V_0 = L_7;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_8 = V_0;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_8) == ((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::add_InputFocusAcquired(System.Action)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_add_InputFocusAcquired_m303EF833FD42193E22AFA2851C1E80861B53F41B (Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_add_InputFocusAcquired_m303EF833FD42193E22AFA2851C1E80861B53F41B_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_0 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_1 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_add_InputFocusAcquired_m303EF833FD42193E22AFA2851C1E80861B53F41B_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___InputFocusAcquired_18;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_1 = V_0;
		V_1 = L_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_2 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Combine_m1F725AEF318BE6F0426863490691A6F4606E7D00(L_2, L_3, NULL);
		V_2 = ((Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)CastclassSealed((RuntimeObject*)L_4, Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_5 = V_2;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_6 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___InputFocusAcquired_18), L_5, L_6);
		V_0 = L_7;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_8 = V_0;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_8) == ((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::remove_InputFocusAcquired(System.Action)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_remove_InputFocusAcquired_m739A9413A8A163181FB382725F8B9B1975368283 (Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_remove_InputFocusAcquired_m739A9413A8A163181FB382725F8B9B1975368283_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_0 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_1 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_remove_InputFocusAcquired_m739A9413A8A163181FB382725F8B9B1975368283_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___InputFocusAcquired_18;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_1 = V_0;
		V_1 = L_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_2 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Remove_m8B7DD5661308FA972E23CA1CC3FC9CEB355504E3(L_2, L_3, NULL);
		V_2 = ((Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)CastclassSealed((RuntimeObject*)L_4, Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_5 = V_2;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_6 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___InputFocusAcquired_18), L_5, L_6);
		V_0 = L_7;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_8 = V_0;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_8) == ((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::add_InputFocusLost(System.Action)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_add_InputFocusLost_mB75E6525CCFD54E827174479582C861448199E44 (Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_add_InputFocusLost_mB75E6525CCFD54E827174479582C861448199E44_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_0 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_1 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_add_InputFocusLost_mB75E6525CCFD54E827174479582C861448199E44_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___InputFocusLost_19;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_1 = V_0;
		V_1 = L_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_2 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Combine_m1F725AEF318BE6F0426863490691A6F4606E7D00(L_2, L_3, NULL);
		V_2 = ((Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)CastclassSealed((RuntimeObject*)L_4, Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_5 = V_2;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_6 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___InputFocusLost_19), L_5, L_6);
		V_0 = L_7;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_8 = V_0;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_8) == ((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::remove_InputFocusLost(System.Action)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_remove_InputFocusLost_m331F5CDD3BACD07943A5A3380702145A744E7172 (Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_remove_InputFocusLost_m331F5CDD3BACD07943A5A3380702145A744E7172_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_0 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_1 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_remove_InputFocusLost_m331F5CDD3BACD07943A5A3380702145A744E7172_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___InputFocusLost_19;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_1 = V_0;
		V_1 = L_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_2 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Remove_m8B7DD5661308FA972E23CA1CC3FC9CEB355504E3(L_2, L_3, NULL);
		V_2 = ((Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)CastclassSealed((RuntimeObject*)L_4, Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_5 = V_2;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_6 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___InputFocusLost_19), L_5, L_6);
		V_0 = L_7;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_8 = V_0;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_8) == ((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::add_AudioOutChanged(System.Action)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_add_AudioOutChanged_m03C919B466E4D30B688D95972D7999E6FE69E284 (Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_add_AudioOutChanged_m03C919B466E4D30B688D95972D7999E6FE69E284_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_0 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_1 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_add_AudioOutChanged_m03C919B466E4D30B688D95972D7999E6FE69E284_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___AudioOutChanged_20;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_1 = V_0;
		V_1 = L_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_2 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Combine_m1F725AEF318BE6F0426863490691A6F4606E7D00(L_2, L_3, NULL);
		V_2 = ((Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)CastclassSealed((RuntimeObject*)L_4, Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_5 = V_2;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_6 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___AudioOutChanged_20), L_5, L_6);
		V_0 = L_7;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_8 = V_0;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_8) == ((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::remove_AudioOutChanged(System.Action)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_remove_AudioOutChanged_m0FEF1697BE6E7FCAB62EC858A1C185EF4ED8B84A (Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_remove_AudioOutChanged_m0FEF1697BE6E7FCAB62EC858A1C185EF4ED8B84A_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_0 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_1 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_remove_AudioOutChanged_m0FEF1697BE6E7FCAB62EC858A1C185EF4ED8B84A_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___AudioOutChanged_20;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_1 = V_0;
		V_1 = L_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_2 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Remove_m8B7DD5661308FA972E23CA1CC3FC9CEB355504E3(L_2, L_3, NULL);
		V_2 = ((Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)CastclassSealed((RuntimeObject*)L_4, Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_5 = V_2;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_6 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___AudioOutChanged_20), L_5, L_6);
		V_0 = L_7;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_8 = V_0;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_8) == ((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::add_AudioInChanged(System.Action)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_add_AudioInChanged_m0DD4932B838687CCD3B813CAE3A6EAFDA177208B (Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_add_AudioInChanged_m0DD4932B838687CCD3B813CAE3A6EAFDA177208B_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_0 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_1 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_add_AudioInChanged_m0DD4932B838687CCD3B813CAE3A6EAFDA177208B_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___AudioInChanged_21;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_1 = V_0;
		V_1 = L_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_2 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Combine_m1F725AEF318BE6F0426863490691A6F4606E7D00(L_2, L_3, NULL);
		V_2 = ((Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)CastclassSealed((RuntimeObject*)L_4, Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_5 = V_2;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_6 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___AudioInChanged_21), L_5, L_6);
		V_0 = L_7;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_8 = V_0;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_8) == ((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::remove_AudioInChanged(System.Action)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_remove_AudioInChanged_m1DF19AEB75AAF33FC631CC885168AA1F3D64C146 (Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_remove_AudioInChanged_m1DF19AEB75AAF33FC631CC885168AA1F3D64C146_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_0 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_1 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_remove_AudioInChanged_m1DF19AEB75AAF33FC631CC885168AA1F3D64C146_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___AudioInChanged_21;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_1 = V_0;
		V_1 = L_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_2 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Remove_m8B7DD5661308FA972E23CA1CC3FC9CEB355504E3(L_2, L_3, NULL);
		V_2 = ((Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)CastclassSealed((RuntimeObject*)L_4, Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_5 = V_2;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_6 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___AudioInChanged_21), L_5, L_6);
		V_0 = L_7;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_8 = V_0;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_8) == ((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::add_TrackingAcquired(System.Action)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_add_TrackingAcquired_m46AFE598ACA4041D6D092254D5112A871C8CC134 (Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_add_TrackingAcquired_m46AFE598ACA4041D6D092254D5112A871C8CC134_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_0 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_1 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_add_TrackingAcquired_m46AFE598ACA4041D6D092254D5112A871C8CC134_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___TrackingAcquired_22;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_1 = V_0;
		V_1 = L_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_2 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Combine_m1F725AEF318BE6F0426863490691A6F4606E7D00(L_2, L_3, NULL);
		V_2 = ((Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)CastclassSealed((RuntimeObject*)L_4, Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_5 = V_2;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_6 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___TrackingAcquired_22), L_5, L_6);
		V_0 = L_7;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_8 = V_0;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_8) == ((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::remove_TrackingAcquired(System.Action)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_remove_TrackingAcquired_mC90F8B7B98CA62B8AD346042D00AB6285D85FC5A (Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_remove_TrackingAcquired_mC90F8B7B98CA62B8AD346042D00AB6285D85FC5A_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_0 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_1 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_remove_TrackingAcquired_mC90F8B7B98CA62B8AD346042D00AB6285D85FC5A_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___TrackingAcquired_22;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_1 = V_0;
		V_1 = L_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_2 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Remove_m8B7DD5661308FA972E23CA1CC3FC9CEB355504E3(L_2, L_3, NULL);
		V_2 = ((Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)CastclassSealed((RuntimeObject*)L_4, Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_5 = V_2;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_6 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___TrackingAcquired_22), L_5, L_6);
		V_0 = L_7;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_8 = V_0;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_8) == ((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::add_TrackingLost(System.Action)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_add_TrackingLost_m07C8584949DA169F9D9206E49E6DE61D82254E8D (Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_add_TrackingLost_m07C8584949DA169F9D9206E49E6DE61D82254E8D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_0 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_1 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_add_TrackingLost_m07C8584949DA169F9D9206E49E6DE61D82254E8D_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___TrackingLost_23;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_1 = V_0;
		V_1 = L_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_2 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Combine_m1F725AEF318BE6F0426863490691A6F4606E7D00(L_2, L_3, NULL);
		V_2 = ((Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)CastclassSealed((RuntimeObject*)L_4, Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_5 = V_2;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_6 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___TrackingLost_23), L_5, L_6);
		V_0 = L_7;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_8 = V_0;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_8) == ((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::remove_TrackingLost(System.Action)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_remove_TrackingLost_mC974B10AB7A7BB55E79FE3C258A7E7565E564620 (Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_remove_TrackingLost_mC974B10AB7A7BB55E79FE3C258A7E7565E564620_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_0 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_1 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_remove_TrackingLost_mC974B10AB7A7BB55E79FE3C258A7E7565E564620_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___TrackingLost_23;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_1 = V_0;
		V_1 = L_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_2 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Remove_m8B7DD5661308FA972E23CA1CC3FC9CEB355504E3(L_2, L_3, NULL);
		V_2 = ((Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)CastclassSealed((RuntimeObject*)L_4, Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_5 = V_2;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_6 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___TrackingLost_23), L_5, L_6);
		V_0 = L_7;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_8 = V_0;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_8) == ((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::add_DisplayRefreshRateChanged(System.Action`2<System.Single,System.Single>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_add_DisplayRefreshRateChanged_m2E17B5AD96C76D2DDF81B8113DAE278D0B530D94 (Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_add_DisplayRefreshRateChanged_m2E17B5AD96C76D2DDF81B8113DAE278D0B530D94_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132* V_0 = NULL;
	Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132* V_1 = NULL;
	Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_add_DisplayRefreshRateChanged_m2E17B5AD96C76D2DDF81B8113DAE278D0B530D94_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___DisplayRefreshRateChanged_24;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132* L_1 = V_0;
		V_1 = L_1;
		Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132* L_2 = V_1;
		Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Combine_m1F725AEF318BE6F0426863490691A6F4606E7D00(L_2, L_3, NULL);
		V_2 = ((Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132*)Castclass((RuntimeObject*)L_4, Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132* L_5 = V_2;
		Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132* L_6 = V_1;
		Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___DisplayRefreshRateChanged_24), L_5, L_6);
		V_0 = L_7;
		Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132* L_8 = V_0;
		Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132*)L_8) == ((RuntimeObject*)(Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::remove_DisplayRefreshRateChanged(System.Action`2<System.Single,System.Single>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_remove_DisplayRefreshRateChanged_m86971E2283734F2364AACA47B15CC8695DC2CF7E (Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_remove_DisplayRefreshRateChanged_m86971E2283734F2364AACA47B15CC8695DC2CF7E_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132* V_0 = NULL;
	Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132* V_1 = NULL;
	Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_remove_DisplayRefreshRateChanged_m86971E2283734F2364AACA47B15CC8695DC2CF7E_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___DisplayRefreshRateChanged_24;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132* L_1 = V_0;
		V_1 = L_1;
		Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132* L_2 = V_1;
		Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Remove_m8B7DD5661308FA972E23CA1CC3FC9CEB355504E3(L_2, L_3, NULL);
		V_2 = ((Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132*)Castclass((RuntimeObject*)L_4, Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132* L_5 = V_2;
		Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132* L_6 = V_1;
		Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___DisplayRefreshRateChanged_24), L_5, L_6);
		V_0 = L_7;
		Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132* L_8 = V_0;
		Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132*)L_8) == ((RuntimeObject*)(Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::add_SpatialAnchorCreateComplete(System.Action`4<System.UInt64,System.Boolean,OVRSpace,System.Guid>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_add_SpatialAnchorCreateComplete_mA0D4C04B6FE291E992ECDE7577253EEE5B1EF9D0 (Action_4_t540B344FD589096100128D9A1B39946413ED9AAE* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_4_t540B344FD589096100128D9A1B39946413ED9AAE_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_add_SpatialAnchorCreateComplete_mA0D4C04B6FE291E992ECDE7577253EEE5B1EF9D0_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_4_t540B344FD589096100128D9A1B39946413ED9AAE* V_0 = NULL;
	Action_4_t540B344FD589096100128D9A1B39946413ED9AAE* V_1 = NULL;
	Action_4_t540B344FD589096100128D9A1B39946413ED9AAE* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_add_SpatialAnchorCreateComplete_mA0D4C04B6FE291E992ECDE7577253EEE5B1EF9D0_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_4_t540B344FD589096100128D9A1B39946413ED9AAE* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpatialAnchorCreateComplete_25;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_4_t540B344FD589096100128D9A1B39946413ED9AAE* L_1 = V_0;
		V_1 = L_1;
		Action_4_t540B344FD589096100128D9A1B39946413ED9AAE* L_2 = V_1;
		Action_4_t540B344FD589096100128D9A1B39946413ED9AAE* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Combine_m1F725AEF318BE6F0426863490691A6F4606E7D00(L_2, L_3, NULL);
		V_2 = ((Action_4_t540B344FD589096100128D9A1B39946413ED9AAE*)Castclass((RuntimeObject*)L_4, Action_4_t540B344FD589096100128D9A1B39946413ED9AAE_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_4_t540B344FD589096100128D9A1B39946413ED9AAE* L_5 = V_2;
		Action_4_t540B344FD589096100128D9A1B39946413ED9AAE* L_6 = V_1;
		Action_4_t540B344FD589096100128D9A1B39946413ED9AAE* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_4_t540B344FD589096100128D9A1B39946413ED9AAE*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpatialAnchorCreateComplete_25), L_5, L_6);
		V_0 = L_7;
		Action_4_t540B344FD589096100128D9A1B39946413ED9AAE* L_8 = V_0;
		Action_4_t540B344FD589096100128D9A1B39946413ED9AAE* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_4_t540B344FD589096100128D9A1B39946413ED9AAE*)L_8) == ((RuntimeObject*)(Action_4_t540B344FD589096100128D9A1B39946413ED9AAE*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::remove_SpatialAnchorCreateComplete(System.Action`4<System.UInt64,System.Boolean,OVRSpace,System.Guid>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_remove_SpatialAnchorCreateComplete_m62EC453F5F0A2BB2AFF0BD577E68F5281EEAF7A7 (Action_4_t540B344FD589096100128D9A1B39946413ED9AAE* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_4_t540B344FD589096100128D9A1B39946413ED9AAE_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_remove_SpatialAnchorCreateComplete_m62EC453F5F0A2BB2AFF0BD577E68F5281EEAF7A7_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_4_t540B344FD589096100128D9A1B39946413ED9AAE* V_0 = NULL;
	Action_4_t540B344FD589096100128D9A1B39946413ED9AAE* V_1 = NULL;
	Action_4_t540B344FD589096100128D9A1B39946413ED9AAE* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_remove_SpatialAnchorCreateComplete_m62EC453F5F0A2BB2AFF0BD577E68F5281EEAF7A7_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_4_t540B344FD589096100128D9A1B39946413ED9AAE* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpatialAnchorCreateComplete_25;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_4_t540B344FD589096100128D9A1B39946413ED9AAE* L_1 = V_0;
		V_1 = L_1;
		Action_4_t540B344FD589096100128D9A1B39946413ED9AAE* L_2 = V_1;
		Action_4_t540B344FD589096100128D9A1B39946413ED9AAE* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Remove_m8B7DD5661308FA972E23CA1CC3FC9CEB355504E3(L_2, L_3, NULL);
		V_2 = ((Action_4_t540B344FD589096100128D9A1B39946413ED9AAE*)Castclass((RuntimeObject*)L_4, Action_4_t540B344FD589096100128D9A1B39946413ED9AAE_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_4_t540B344FD589096100128D9A1B39946413ED9AAE* L_5 = V_2;
		Action_4_t540B344FD589096100128D9A1B39946413ED9AAE* L_6 = V_1;
		Action_4_t540B344FD589096100128D9A1B39946413ED9AAE* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_4_t540B344FD589096100128D9A1B39946413ED9AAE*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpatialAnchorCreateComplete_25), L_5, L_6);
		V_0 = L_7;
		Action_4_t540B344FD589096100128D9A1B39946413ED9AAE* L_8 = V_0;
		Action_4_t540B344FD589096100128D9A1B39946413ED9AAE* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_4_t540B344FD589096100128D9A1B39946413ED9AAE*)L_8) == ((RuntimeObject*)(Action_4_t540B344FD589096100128D9A1B39946413ED9AAE*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::add_SpaceSetComponentStatusComplete(System.Action`6<System.UInt64,System.Boolean,OVRSpace,System.Guid,OVRPlugin/SpaceComponentType,System.Boolean>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_add_SpaceSetComponentStatusComplete_mE0147432E451B15768EB752A9091967A4129F7A0 (Action_6_tD8B17612932122F2ABF5C8545327C8F527403625* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_6_tD8B17612932122F2ABF5C8545327C8F527403625_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_add_SpaceSetComponentStatusComplete_mE0147432E451B15768EB752A9091967A4129F7A0_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_6_tD8B17612932122F2ABF5C8545327C8F527403625* V_0 = NULL;
	Action_6_tD8B17612932122F2ABF5C8545327C8F527403625* V_1 = NULL;
	Action_6_tD8B17612932122F2ABF5C8545327C8F527403625* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_add_SpaceSetComponentStatusComplete_mE0147432E451B15768EB752A9091967A4129F7A0_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_6_tD8B17612932122F2ABF5C8545327C8F527403625* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceSetComponentStatusComplete_26;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_6_tD8B17612932122F2ABF5C8545327C8F527403625* L_1 = V_0;
		V_1 = L_1;
		Action_6_tD8B17612932122F2ABF5C8545327C8F527403625* L_2 = V_1;
		Action_6_tD8B17612932122F2ABF5C8545327C8F527403625* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Combine_m1F725AEF318BE6F0426863490691A6F4606E7D00(L_2, L_3, NULL);
		V_2 = ((Action_6_tD8B17612932122F2ABF5C8545327C8F527403625*)Castclass((RuntimeObject*)L_4, Action_6_tD8B17612932122F2ABF5C8545327C8F527403625_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_6_tD8B17612932122F2ABF5C8545327C8F527403625* L_5 = V_2;
		Action_6_tD8B17612932122F2ABF5C8545327C8F527403625* L_6 = V_1;
		Action_6_tD8B17612932122F2ABF5C8545327C8F527403625* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_6_tD8B17612932122F2ABF5C8545327C8F527403625*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceSetComponentStatusComplete_26), L_5, L_6);
		V_0 = L_7;
		Action_6_tD8B17612932122F2ABF5C8545327C8F527403625* L_8 = V_0;
		Action_6_tD8B17612932122F2ABF5C8545327C8F527403625* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_6_tD8B17612932122F2ABF5C8545327C8F527403625*)L_8) == ((RuntimeObject*)(Action_6_tD8B17612932122F2ABF5C8545327C8F527403625*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::remove_SpaceSetComponentStatusComplete(System.Action`6<System.UInt64,System.Boolean,OVRSpace,System.Guid,OVRPlugin/SpaceComponentType,System.Boolean>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_remove_SpaceSetComponentStatusComplete_mF641750E9DD27E2FDD787FA7D67739D21040150C (Action_6_tD8B17612932122F2ABF5C8545327C8F527403625* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_6_tD8B17612932122F2ABF5C8545327C8F527403625_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_remove_SpaceSetComponentStatusComplete_mF641750E9DD27E2FDD787FA7D67739D21040150C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_6_tD8B17612932122F2ABF5C8545327C8F527403625* V_0 = NULL;
	Action_6_tD8B17612932122F2ABF5C8545327C8F527403625* V_1 = NULL;
	Action_6_tD8B17612932122F2ABF5C8545327C8F527403625* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_remove_SpaceSetComponentStatusComplete_mF641750E9DD27E2FDD787FA7D67739D21040150C_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_6_tD8B17612932122F2ABF5C8545327C8F527403625* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceSetComponentStatusComplete_26;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_6_tD8B17612932122F2ABF5C8545327C8F527403625* L_1 = V_0;
		V_1 = L_1;
		Action_6_tD8B17612932122F2ABF5C8545327C8F527403625* L_2 = V_1;
		Action_6_tD8B17612932122F2ABF5C8545327C8F527403625* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Remove_m8B7DD5661308FA972E23CA1CC3FC9CEB355504E3(L_2, L_3, NULL);
		V_2 = ((Action_6_tD8B17612932122F2ABF5C8545327C8F527403625*)Castclass((RuntimeObject*)L_4, Action_6_tD8B17612932122F2ABF5C8545327C8F527403625_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_6_tD8B17612932122F2ABF5C8545327C8F527403625* L_5 = V_2;
		Action_6_tD8B17612932122F2ABF5C8545327C8F527403625* L_6 = V_1;
		Action_6_tD8B17612932122F2ABF5C8545327C8F527403625* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_6_tD8B17612932122F2ABF5C8545327C8F527403625*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceSetComponentStatusComplete_26), L_5, L_6);
		V_0 = L_7;
		Action_6_tD8B17612932122F2ABF5C8545327C8F527403625* L_8 = V_0;
		Action_6_tD8B17612932122F2ABF5C8545327C8F527403625* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_6_tD8B17612932122F2ABF5C8545327C8F527403625*)L_8) == ((RuntimeObject*)(Action_6_tD8B17612932122F2ABF5C8545327C8F527403625*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::add_SpaceQueryResults(System.Action`1<System.UInt64>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_add_SpaceQueryResults_m49193AA310D5B5F802B0442167C4DD7B5F278093 (Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_add_SpaceQueryResults_m49193AA310D5B5F802B0442167C4DD7B5F278093_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C* V_0 = NULL;
	Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C* V_1 = NULL;
	Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_add_SpaceQueryResults_m49193AA310D5B5F802B0442167C4DD7B5F278093_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceQueryResults_27;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C* L_1 = V_0;
		V_1 = L_1;
		Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C* L_2 = V_1;
		Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Combine_m1F725AEF318BE6F0426863490691A6F4606E7D00(L_2, L_3, NULL);
		V_2 = ((Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C*)Castclass((RuntimeObject*)L_4, Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C* L_5 = V_2;
		Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C* L_6 = V_1;
		Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceQueryResults_27), L_5, L_6);
		V_0 = L_7;
		Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C* L_8 = V_0;
		Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C*)L_8) == ((RuntimeObject*)(Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::remove_SpaceQueryResults(System.Action`1<System.UInt64>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_remove_SpaceQueryResults_m19C1446D9F244FA3A8A596D309466C085F513910 (Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_remove_SpaceQueryResults_m19C1446D9F244FA3A8A596D309466C085F513910_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C* V_0 = NULL;
	Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C* V_1 = NULL;
	Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_remove_SpaceQueryResults_m19C1446D9F244FA3A8A596D309466C085F513910_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceQueryResults_27;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C* L_1 = V_0;
		V_1 = L_1;
		Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C* L_2 = V_1;
		Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Remove_m8B7DD5661308FA972E23CA1CC3FC9CEB355504E3(L_2, L_3, NULL);
		V_2 = ((Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C*)Castclass((RuntimeObject*)L_4, Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C* L_5 = V_2;
		Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C* L_6 = V_1;
		Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceQueryResults_27), L_5, L_6);
		V_0 = L_7;
		Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C* L_8 = V_0;
		Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C*)L_8) == ((RuntimeObject*)(Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::add_SpaceQueryComplete(System.Action`2<System.UInt64,System.Boolean>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_add_SpaceQueryComplete_m551A184F8F9E0CE981B6802960442163B2E14E37 (Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_add_SpaceQueryComplete_m551A184F8F9E0CE981B6802960442163B2E14E37_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* V_0 = NULL;
	Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* V_1 = NULL;
	Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_add_SpaceQueryComplete_m551A184F8F9E0CE981B6802960442163B2E14E37_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceQueryComplete_28;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_1 = V_0;
		V_1 = L_1;
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_2 = V_1;
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Combine_m1F725AEF318BE6F0426863490691A6F4606E7D00(L_2, L_3, NULL);
		V_2 = ((Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71*)Castclass((RuntimeObject*)L_4, Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_5 = V_2;
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_6 = V_1;
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceQueryComplete_28), L_5, L_6);
		V_0 = L_7;
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_8 = V_0;
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71*)L_8) == ((RuntimeObject*)(Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::remove_SpaceQueryComplete(System.Action`2<System.UInt64,System.Boolean>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_remove_SpaceQueryComplete_m885B3CD1B32BE4F4FCD58AC94D5D6B831D7144EF (Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_remove_SpaceQueryComplete_m885B3CD1B32BE4F4FCD58AC94D5D6B831D7144EF_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* V_0 = NULL;
	Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* V_1 = NULL;
	Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_remove_SpaceQueryComplete_m885B3CD1B32BE4F4FCD58AC94D5D6B831D7144EF_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceQueryComplete_28;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_1 = V_0;
		V_1 = L_1;
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_2 = V_1;
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Remove_m8B7DD5661308FA972E23CA1CC3FC9CEB355504E3(L_2, L_3, NULL);
		V_2 = ((Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71*)Castclass((RuntimeObject*)L_4, Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_5 = V_2;
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_6 = V_1;
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceQueryComplete_28), L_5, L_6);
		V_0 = L_7;
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_8 = V_0;
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71*)L_8) == ((RuntimeObject*)(Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::add_SpaceSaveComplete(System.Action`4<System.UInt64,OVRSpace,System.Boolean,System.Guid>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_add_SpaceSaveComplete_m127A86DF05C5544D94F99125A783BBC825095C3F (Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_add_SpaceSaveComplete_m127A86DF05C5544D94F99125A783BBC825095C3F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A* V_0 = NULL;
	Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A* V_1 = NULL;
	Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_add_SpaceSaveComplete_m127A86DF05C5544D94F99125A783BBC825095C3F_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceSaveComplete_29;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A* L_1 = V_0;
		V_1 = L_1;
		Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A* L_2 = V_1;
		Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Combine_m1F725AEF318BE6F0426863490691A6F4606E7D00(L_2, L_3, NULL);
		V_2 = ((Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A*)Castclass((RuntimeObject*)L_4, Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A* L_5 = V_2;
		Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A* L_6 = V_1;
		Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceSaveComplete_29), L_5, L_6);
		V_0 = L_7;
		Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A* L_8 = V_0;
		Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A*)L_8) == ((RuntimeObject*)(Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::remove_SpaceSaveComplete(System.Action`4<System.UInt64,OVRSpace,System.Boolean,System.Guid>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_remove_SpaceSaveComplete_mA3D0E92A5518AD713A7B5262AE4EC6ECE529F703 (Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_remove_SpaceSaveComplete_mA3D0E92A5518AD713A7B5262AE4EC6ECE529F703_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A* V_0 = NULL;
	Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A* V_1 = NULL;
	Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_remove_SpaceSaveComplete_mA3D0E92A5518AD713A7B5262AE4EC6ECE529F703_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceSaveComplete_29;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A* L_1 = V_0;
		V_1 = L_1;
		Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A* L_2 = V_1;
		Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Remove_m8B7DD5661308FA972E23CA1CC3FC9CEB355504E3(L_2, L_3, NULL);
		V_2 = ((Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A*)Castclass((RuntimeObject*)L_4, Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A* L_5 = V_2;
		Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A* L_6 = V_1;
		Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceSaveComplete_29), L_5, L_6);
		V_0 = L_7;
		Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A* L_8 = V_0;
		Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A*)L_8) == ((RuntimeObject*)(Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::add_SpaceEraseComplete(System.Action`4<System.UInt64,System.Boolean,System.Guid,OVRPlugin/SpaceStorageLocation>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_add_SpaceEraseComplete_m41A630D65B0835AB54F59C4B2D62EA3CD26085C5 (Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_add_SpaceEraseComplete_m41A630D65B0835AB54F59C4B2D62EA3CD26085C5_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC* V_0 = NULL;
	Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC* V_1 = NULL;
	Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_add_SpaceEraseComplete_m41A630D65B0835AB54F59C4B2D62EA3CD26085C5_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceEraseComplete_30;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC* L_1 = V_0;
		V_1 = L_1;
		Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC* L_2 = V_1;
		Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Combine_m1F725AEF318BE6F0426863490691A6F4606E7D00(L_2, L_3, NULL);
		V_2 = ((Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC*)Castclass((RuntimeObject*)L_4, Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC* L_5 = V_2;
		Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC* L_6 = V_1;
		Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceEraseComplete_30), L_5, L_6);
		V_0 = L_7;
		Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC* L_8 = V_0;
		Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC*)L_8) == ((RuntimeObject*)(Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::remove_SpaceEraseComplete(System.Action`4<System.UInt64,System.Boolean,System.Guid,OVRPlugin/SpaceStorageLocation>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_remove_SpaceEraseComplete_m4B92FBCCC4DAC94F9C6CCB058C17BBB66DEDBF91 (Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_remove_SpaceEraseComplete_m4B92FBCCC4DAC94F9C6CCB058C17BBB66DEDBF91_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC* V_0 = NULL;
	Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC* V_1 = NULL;
	Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_remove_SpaceEraseComplete_m4B92FBCCC4DAC94F9C6CCB058C17BBB66DEDBF91_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceEraseComplete_30;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC* L_1 = V_0;
		V_1 = L_1;
		Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC* L_2 = V_1;
		Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Remove_m8B7DD5661308FA972E23CA1CC3FC9CEB355504E3(L_2, L_3, NULL);
		V_2 = ((Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC*)Castclass((RuntimeObject*)L_4, Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC* L_5 = V_2;
		Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC* L_6 = V_1;
		Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceEraseComplete_30), L_5, L_6);
		V_0 = L_7;
		Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC* L_8 = V_0;
		Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC*)L_8) == ((RuntimeObject*)(Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::add_ShareSpacesComplete(System.Action`2<System.UInt64,OVRSpatialAnchor/OperationResult>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_add_ShareSpacesComplete_m83540402ADBF0F7F79ED9ED77EDD3C44DE494565 (Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_add_ShareSpacesComplete_m83540402ADBF0F7F79ED9ED77EDD3C44DE494565_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* V_0 = NULL;
	Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* V_1 = NULL;
	Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_add_ShareSpacesComplete_m83540402ADBF0F7F79ED9ED77EDD3C44DE494565_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___ShareSpacesComplete_31;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_1 = V_0;
		V_1 = L_1;
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_2 = V_1;
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Combine_m1F725AEF318BE6F0426863490691A6F4606E7D00(L_2, L_3, NULL);
		V_2 = ((Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9*)Castclass((RuntimeObject*)L_4, Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_5 = V_2;
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_6 = V_1;
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___ShareSpacesComplete_31), L_5, L_6);
		V_0 = L_7;
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_8 = V_0;
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9*)L_8) == ((RuntimeObject*)(Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::remove_ShareSpacesComplete(System.Action`2<System.UInt64,OVRSpatialAnchor/OperationResult>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_remove_ShareSpacesComplete_mAE2C236C9085FAD60459A8F944F28528CA9A2D5E (Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_remove_ShareSpacesComplete_mAE2C236C9085FAD60459A8F944F28528CA9A2D5E_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* V_0 = NULL;
	Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* V_1 = NULL;
	Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_remove_ShareSpacesComplete_mAE2C236C9085FAD60459A8F944F28528CA9A2D5E_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___ShareSpacesComplete_31;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_1 = V_0;
		V_1 = L_1;
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_2 = V_1;
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Remove_m8B7DD5661308FA972E23CA1CC3FC9CEB355504E3(L_2, L_3, NULL);
		V_2 = ((Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9*)Castclass((RuntimeObject*)L_4, Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_5 = V_2;
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_6 = V_1;
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___ShareSpacesComplete_31), L_5, L_6);
		V_0 = L_7;
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_8 = V_0;
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9*)L_8) == ((RuntimeObject*)(Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::add_SpaceListSaveComplete(System.Action`2<System.UInt64,OVRSpatialAnchor/OperationResult>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_add_SpaceListSaveComplete_m1BBD9DDCB0341C4C217DD213402A08938C233F29 (Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_add_SpaceListSaveComplete_m1BBD9DDCB0341C4C217DD213402A08938C233F29_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* V_0 = NULL;
	Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* V_1 = NULL;
	Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_add_SpaceListSaveComplete_m1BBD9DDCB0341C4C217DD213402A08938C233F29_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceListSaveComplete_32;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_1 = V_0;
		V_1 = L_1;
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_2 = V_1;
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Combine_m1F725AEF318BE6F0426863490691A6F4606E7D00(L_2, L_3, NULL);
		V_2 = ((Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9*)Castclass((RuntimeObject*)L_4, Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_5 = V_2;
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_6 = V_1;
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceListSaveComplete_32), L_5, L_6);
		V_0 = L_7;
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_8 = V_0;
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9*)L_8) == ((RuntimeObject*)(Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::remove_SpaceListSaveComplete(System.Action`2<System.UInt64,OVRSpatialAnchor/OperationResult>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_remove_SpaceListSaveComplete_m9E940BD2D38E3A1EA5A7FDBFE02458F248D7ABC4 (Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_remove_SpaceListSaveComplete_m9E940BD2D38E3A1EA5A7FDBFE02458F248D7ABC4_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* V_0 = NULL;
	Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* V_1 = NULL;
	Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_remove_SpaceListSaveComplete_m9E940BD2D38E3A1EA5A7FDBFE02458F248D7ABC4_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceListSaveComplete_32;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_1 = V_0;
		V_1 = L_1;
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_2 = V_1;
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Remove_m8B7DD5661308FA972E23CA1CC3FC9CEB355504E3(L_2, L_3, NULL);
		V_2 = ((Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9*)Castclass((RuntimeObject*)L_4, Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_5 = V_2;
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_6 = V_1;
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceListSaveComplete_32), L_5, L_6);
		V_0 = L_7;
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_8 = V_0;
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9*)L_8) == ((RuntimeObject*)(Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::add_SceneCaptureComplete(System.Action`2<System.UInt64,System.Boolean>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_add_SceneCaptureComplete_m26AE5F4B81DDEA72B3466AC811BE62C3E70ECEF4 (Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_add_SceneCaptureComplete_m26AE5F4B81DDEA72B3466AC811BE62C3E70ECEF4_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* V_0 = NULL;
	Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* V_1 = NULL;
	Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_add_SceneCaptureComplete_m26AE5F4B81DDEA72B3466AC811BE62C3E70ECEF4_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SceneCaptureComplete_33;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_1 = V_0;
		V_1 = L_1;
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_2 = V_1;
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Combine_m1F725AEF318BE6F0426863490691A6F4606E7D00(L_2, L_3, NULL);
		V_2 = ((Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71*)Castclass((RuntimeObject*)L_4, Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_5 = V_2;
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_6 = V_1;
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SceneCaptureComplete_33), L_5, L_6);
		V_0 = L_7;
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_8 = V_0;
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71*)L_8) == ((RuntimeObject*)(Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::remove_SceneCaptureComplete(System.Action`2<System.UInt64,System.Boolean>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_remove_SceneCaptureComplete_mB1C40810BBC411BE7B21C74704F120E7661BD58F (Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_remove_SceneCaptureComplete_mB1C40810BBC411BE7B21C74704F120E7661BD58F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* V_0 = NULL;
	Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* V_1 = NULL;
	Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_remove_SceneCaptureComplete_mB1C40810BBC411BE7B21C74704F120E7661BD58F_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SceneCaptureComplete_33;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_1 = V_0;
		V_1 = L_1;
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_2 = V_1;
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Remove_m8B7DD5661308FA972E23CA1CC3FC9CEB355504E3(L_2, L_3, NULL);
		V_2 = ((Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71*)Castclass((RuntimeObject*)L_4, Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_5 = V_2;
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_6 = V_1;
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SceneCaptureComplete_33), L_5, L_6);
		V_0 = L_7;
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_8 = V_0;
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71*)L_8) == ((RuntimeObject*)(Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::add_HSWDismissed(System.Action)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_add_HSWDismissed_m5DABEA5F11521738B24AA16736D15AFBF678D325 (Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_add_HSWDismissed_m5DABEA5F11521738B24AA16736D15AFBF678D325_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_0 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_1 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_add_HSWDismissed_m5DABEA5F11521738B24AA16736D15AFBF678D325_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___HSWDismissed_34;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_1 = V_0;
		V_1 = L_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_2 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Combine_m1F725AEF318BE6F0426863490691A6F4606E7D00(L_2, L_3, NULL);
		V_2 = ((Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)CastclassSealed((RuntimeObject*)L_4, Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_5 = V_2;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_6 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___HSWDismissed_34), L_5, L_6);
		V_0 = L_7;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_8 = V_0;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_8) == ((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Void OVRManager::remove_HSWDismissed(System.Action)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_remove_HSWDismissed_m596F0A139EA7AA7ABDEED3C29DE4E69C4E4CC94B (Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_remove_HSWDismissed_m596F0A139EA7AA7ABDEED3C29DE4E69C4E4CC94B_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_0 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_1 = NULL;
	Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_remove_HSWDismissed_m596F0A139EA7AA7ABDEED3C29DE4E69C4E4CC94B_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___HSWDismissed_34;
		V_0 = L_0;
	}

IL_0006:
	{
		CHECK_PAUSE_POINT;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_1 = V_0;
		V_1 = L_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_2 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_3 = ___0_value;
		Delegate_t* L_4;
		L_4 = Delegate_Remove_m8B7DD5661308FA972E23CA1CC3FC9CEB355504E3(L_2, L_3, NULL);
		V_2 = ((Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)CastclassSealed((RuntimeObject*)L_4, Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07_il2cpp_TypeInfo_var));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_5 = V_2;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_6 = V_1;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_7;
		L_7 = InterlockedCompareExchangeImpl<Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*>((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___HSWDismissed_34), L_5, L_6);
		V_0 = L_7;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_8 = V_0;
		Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_9 = V_1;
		if ((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_8) == ((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_9))))
		{
			goto IL_0006;
		}
	}
	{
		return;
	}
}
// System.Boolean OVRManager::get_isHmdPresent()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_get_isHmdPresent_m098F56E4E9C2ECAC87EAB61C7680F0FBD2A2C445 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_isHmdPresent_m098F56E4E9C2ECAC87EAB61C7680F0FBD2A2C445_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRNodeStateProperties_tE41A5F7393D4FB967D6062A0A2DBE4F3A24350BC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_isHmdPresent_m098F56E4E9C2ECAC87EAB61C7680F0FBD2A2C445_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9571));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9572));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9573));
		// if (!_isHmdPresentCached)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9574));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____isHmdPresentCached_35;
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9575));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_001f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9576));
		// _isHmdPresentCached = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9577));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____isHmdPresentCached_35 = (bool)1;
		// _isHmdPresent = OVRNodeStateProperties.IsHmdPresent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9578));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9579));
		il2cpp_codegen_runtime_class_init_inline(OVRNodeStateProperties_tE41A5F7393D4FB967D6062A0A2DBE4F3A24350BC_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = OVRNodeStateProperties_IsHmdPresent_m007E7C0AA8B7D85019F2238007C8F5F28DB3547D(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9579));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____isHmdPresent_36 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9580));
	}

IL_001f:
	{
		// return _isHmdPresent;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9581));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_3 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____isHmdPresent_36;
		V_1 = L_3;
		goto IL_0027;
	}

IL_0027:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9582));
		bool L_4 = V_1;
		return L_4;
	}
}
// System.Void OVRManager::set_isHmdPresent(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_isHmdPresent_m4879663A8AA591EE662CEF9F18686D6B89789B7E (bool ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_isHmdPresent_m4879663A8AA591EE662CEF9F18686D6B89789B7E_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_isHmdPresent_m4879663A8AA591EE662CEF9F18686D6B89789B7E_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9583));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9584));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9585));
		// _isHmdPresentCached = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9586));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____isHmdPresentCached_35 = (bool)1;
		// _isHmdPresent = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9587));
		bool L_0 = ___0_value;
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____isHmdPresent_36 = L_0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9588));
		return;
	}
}
// System.String OVRManager::get_audioOutId()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* OVRManager_get_audioOutId_m651EBD87C90304B389EE161C3CF7C34B871A8C14 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_audioOutId_m651EBD87C90304B389EE161C3CF7C34B871A8C14_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&String_t_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	String_t* V_0 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_audioOutId_m651EBD87C90304B389EE161C3CF7C34B871A8C14_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9589));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9590));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9591));
		// get { return OVRPlugin.audioOutId; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9592));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9593));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		String_t* L_0;
		L_0 = OVRPlugin_get_audioOutId_m5D5085CAAC63B5F1C4FB8E2160278EBC7BC7CCDA(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9593));
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		// get { return OVRPlugin.audioOutId; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9594));
		String_t* L_1 = V_0;
		return L_1;
	}
}
// System.String OVRManager::get_audioInId()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* OVRManager_get_audioInId_m7D6CF9485C5019C86715CAED3AD18F9DD6BFE093 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_audioInId_m7D6CF9485C5019C86715CAED3AD18F9DD6BFE093_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&String_t_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	String_t* V_0 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_audioInId_m7D6CF9485C5019C86715CAED3AD18F9DD6BFE093_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9595));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9596));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9597));
		// get { return OVRPlugin.audioInId; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9598));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9599));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		String_t* L_0;
		L_0 = OVRPlugin_get_audioInId_m69899C3CA94D7DFD3E580D40DE456876775000DE(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9599));
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		// get { return OVRPlugin.audioInId; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9600));
		String_t* L_1 = V_0;
		return L_1;
	}
}
// System.Boolean OVRManager::get_hasVrFocus()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_get_hasVrFocus_mF029C34D16F6733BC210CAA447C39629FB107D90 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_hasVrFocus_mF029C34D16F6733BC210CAA447C39629FB107D90_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_hasVrFocus_mF029C34D16F6733BC210CAA447C39629FB107D90_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9601));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9602));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9603));
		// if (!_hasVrFocusCached)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9604));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____hasVrFocusCached_38;
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9605));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_001f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9606));
		// _hasVrFocusCached = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9607));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____hasVrFocusCached_38 = (bool)1;
		// _hasVrFocus = OVRPlugin.hasVrFocus;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9608));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9609));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = OVRPlugin_get_hasVrFocus_m3BE22CA34415F44FD722A0D2547388F0C943900E(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9609));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____hasVrFocus_39 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9610));
	}

IL_001f:
	{
		// return _hasVrFocus;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9611));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_3 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____hasVrFocus_39;
		V_1 = L_3;
		goto IL_0027;
	}

IL_0027:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9612));
		bool L_4 = V_1;
		return L_4;
	}
}
// System.Void OVRManager::set_hasVrFocus(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_hasVrFocus_m85C981DA02ECC6A7829D348FCBC2149040CD5321 (bool ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_hasVrFocus_m85C981DA02ECC6A7829D348FCBC2149040CD5321_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_hasVrFocus_m85C981DA02ECC6A7829D348FCBC2149040CD5321_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9613));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9614));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9615));
		// _hasVrFocusCached = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9616));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____hasVrFocusCached_38 = (bool)1;
		// _hasVrFocus = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9617));
		bool L_0 = ___0_value;
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____hasVrFocus_39 = L_0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9618));
		return;
	}
}
// System.Boolean OVRManager::get_hasInputFocus()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_get_hasInputFocus_m253B15D1BC6272BF1ECA54344D7EF3AEF3B9A0A0 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_hasInputFocus_m253B15D1BC6272BF1ECA54344D7EF3AEF3B9A0A0_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_hasInputFocus_m253B15D1BC6272BF1ECA54344D7EF3AEF3B9A0A0_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9619));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9620));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9621));
		// return OVRPlugin.hasInputFocus;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9622));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9623));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRPlugin_get_hasInputFocus_m26E031618D6BF901538C11D3A4FF8F82208BEEDD(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9623));
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9624));
		bool L_1 = V_0;
		return L_1;
	}
}
// System.Boolean OVRManager::get_chromatic()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_get_chromatic_m66422D4D596EAEC0F2FFD0952FBDD900E667964A (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_chromatic_m66422D4D596EAEC0F2FFD0952FBDD900E667964A_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_chromatic_m66422D4D596EAEC0F2FFD0952FBDD900E667964A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9625));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9626));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9627));
		// if (!isHmdPresent)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9628));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9629));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRManager_get_isHmdPresent_m098F56E4E9C2ECAC87EAB61C7680F0FBD2A2C445(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9629));
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9630));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0011;
		}
	}
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9631));
		V_1 = (bool)0;
		goto IL_0019;
	}

IL_0011:
	{
		// return OVRPlugin.chromatic;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9632));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9633));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = OVRPlugin_get_chromatic_m70D923C4EC1A9BDBCB8CAB71133F960808FBC60C(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9633));
		V_1 = L_2;
		goto IL_0019;
	}

IL_0019:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9634));
		bool L_3 = V_1;
		return L_3;
	}
}
// System.Void OVRManager::set_chromatic(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_chromatic_mC1109A775529EF48476D51176DEC780678AAE0EF (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, bool ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_chromatic_mC1109A775529EF48476D51176DEC780678AAE0EF_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_chromatic_mC1109A775529EF48476D51176DEC780678AAE0EF_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9635));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9636));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9637));
		// if (!isHmdPresent)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9638));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9639));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRManager_get_isHmdPresent_m098F56E4E9C2ECAC87EAB61C7680F0FBD2A2C445(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9639));
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9640));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_000f;
		}
	}
	{
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9641));
		goto IL_0016;
	}

IL_000f:
	{
		// OVRPlugin.chromatic = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9642));
		bool L_2 = ___0_value;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9643));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		OVRPlugin_set_chromatic_mAE129890213C1F44B1FCB1F74EAA00E12A95ABA1(L_2, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9643));
	}

IL_0016:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9644));
		return;
	}
}
// System.Boolean OVRManager::get_monoscopic()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_get_monoscopic_m0DE754F28B483E52474ECA234A1E3DD1D2BA7218 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_monoscopic_m0DE754F28B483E52474ECA234A1E3DD1D2BA7218_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_monoscopic_m0DE754F28B483E52474ECA234A1E3DD1D2BA7218_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9645));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9646));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9647));
		// if (!isHmdPresent)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9648));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9649));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRManager_get_isHmdPresent_m098F56E4E9C2ECAC87EAB61C7680F0FBD2A2C445(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9649));
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9650));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0016;
		}
	}
	{
		// return _monoscopic;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9651));
		bool L_2 = __this->____monoscopic_43;
		V_1 = L_2;
		goto IL_001e;
	}

IL_0016:
	{
		// return OVRPlugin.monoscopic;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9652));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9653));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_3;
		L_3 = OVRPlugin_get_monoscopic_m1FB2A64C1DF99193B13E940E9DEDE96C3A9ABF64(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9653));
		V_1 = L_3;
		goto IL_001e;
	}

IL_001e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9654));
		bool L_4 = V_1;
		return L_4;
	}
}
// System.Void OVRManager::set_monoscopic(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_monoscopic_m1EAAB3C2A3CDB7D72B1700D635AAA6C2AE41893D (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, bool ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_monoscopic_m1EAAB3C2A3CDB7D72B1700D635AAA6C2AE41893D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_monoscopic_m1EAAB3C2A3CDB7D72B1700D635AAA6C2AE41893D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9655));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9656));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9657));
		// if (!isHmdPresent)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9658));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9659));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRManager_get_isHmdPresent_m098F56E4E9C2ECAC87EAB61C7680F0FBD2A2C445(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9659));
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9660));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_000f;
		}
	}
	{
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9661));
		goto IL_001d;
	}

IL_000f:
	{
		// OVRPlugin.monoscopic = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9662));
		bool L_2 = ___0_value;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9663));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		OVRPlugin_set_monoscopic_m10D8914343874239BBCCA4F68B3FB2DE1A9F2F2D(L_2, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9663));
		// _monoscopic = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9664));
		bool L_3 = ___0_value;
		__this->____monoscopic_43 = L_3;
	}

IL_001d:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9665));
		return;
	}
}
// OVRManager/ColorSpace OVRManager::get_colorGamut()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRManager_get_colorGamut_m5C61F2AB170363F2D8FB6D4771EC7AEB55E7258C (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ColorSpace_t7351D379D27098BE44BB70202C671C9B8A08CF7B_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_colorGamut_m5C61F2AB170363F2D8FB6D4771EC7AEB55E7258C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_colorGamut_m5C61F2AB170363F2D8FB6D4771EC7AEB55E7258C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9666));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9667));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9668));
		// return _colorGamut;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9669));
		int32_t L_0 = __this->____colorGamut_44;
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9670));
		int32_t L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::set_colorGamut(OVRManager/ColorSpace)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_colorGamut_m12885C55A4AF562CF4DA969CE3DFE90B2905509F (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_colorGamut_m12885C55A4AF562CF4DA969CE3DFE90B2905509F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_colorGamut_m12885C55A4AF562CF4DA969CE3DFE90B2905509F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9671));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9672));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9673));
		// _colorGamut = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9674));
		int32_t L_0 = ___0_value;
		__this->____colorGamut_44 = L_0;
		// OVRPlugin.SetClientColorDesc((OVRPlugin.ColorSpace)_colorGamut);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9675));
		int32_t L_1 = __this->____colorGamut_44;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9676));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = OVRPlugin_SetClientColorDesc_m7E7BD58DCDF8C2320A4741E1D45F0CECB72CD346(L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9676));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9677));
		return;
	}
}
// OVRManager/ColorSpace OVRManager::get_nativeColorGamut()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRManager_get_nativeColorGamut_mF692E6191E57771EBA2012882E723366718F910F (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ColorSpace_t7351D379D27098BE44BB70202C671C9B8A08CF7B_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_nativeColorGamut_mF692E6191E57771EBA2012882E723366718F910F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_nativeColorGamut_mF692E6191E57771EBA2012882E723366718F910F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9678));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9679));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9680));
		// return (OVRManager.ColorSpace)OVRPlugin.GetHmdColorDesc();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9681));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9682));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		int32_t L_0;
		L_0 = OVRPlugin_GetHmdColorDesc_mAE1EC23074A7E9D9E6805686A00F1E82E11AD00B(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9682));
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9683));
		int32_t L_1 = V_0;
		return L_1;
	}
}
// System.Boolean OVRManager::IsAdaptiveResSupportedByEngine()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_IsAdaptiveResSupportedByEngine_m0DDF3D6F04942A7B1A3B08F930D3847B90D6577D (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_IsAdaptiveResSupportedByEngine_m0DDF3D6F04942A7B1A3B08F930D3847B90D6577D_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_IsAdaptiveResSupportedByEngine_m0DDF3D6F04942A7B1A3B08F930D3847B90D6577D_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9684));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9685));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9686));
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9687));
		V_0 = (bool)1;
		goto IL_0005;
	}

IL_0005:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9688));
		bool L_0 = V_0;
		return L_0;
	}
}
// UnityEngine.Vector3 OVRManager::get_headPoseRelativeOffsetRotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 OVRManager_get_headPoseRelativeOffsetRotation_m24093D9748A541A44618C282B5858BD49C83F3C9 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_headPoseRelativeOffsetRotation_m24093D9748A541A44618C282B5858BD49C83F3C9_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_headPoseRelativeOffsetRotation_m24093D9748A541A44618C282B5858BD49C83F3C9_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9689));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9690));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9691));
		// return _headPoseRelativeOffsetRotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9692));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_0 = __this->____headPoseRelativeOffsetRotation_47;
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9693));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::set_headPoseRelativeOffsetRotation(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_headPoseRelativeOffsetRotation_m607DFB21F99CE3107ECA6BD9E1C0A2B6AC4242FC (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_headPoseRelativeOffsetRotation_m607DFB21F99CE3107ECA6BD9E1C0A2B6AC4242FC_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector3f_t232AF83B4642C67BE8EFF85D8E1599D3B06BD562_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A V_0;
	memset((&V_0), 0, sizeof(V_0));
	Vector3f_t232AF83B4642C67BE8EFF85D8E1599D3B06BD562 V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 V_3;
	memset((&V_3), 0, sizeof(V_3));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_headPoseRelativeOffsetRotation_m607DFB21F99CE3107ECA6BD9E1C0A2B6AC4242FC_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9694));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9695));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9696));
		// if (OVRPlugin.GetHeadPoseModifier(out rotation, out translation))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9697));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9698));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRPlugin_GetHeadPoseModifier_mF5EB4C2BAE8E41E5282E28B72A3163B0411EC46A((&V_0), (&V_1), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9698));
		V_2 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9699));
		bool L_1 = V_2;
		if (!L_1)
		{
			goto IL_0028;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9700));
		// Quaternion finalRotation = Quaternion.Euler(value);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9701));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_2 = ___0_value;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9702));
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_3;
		L_3 = Quaternion_Euler_m5BCCC19216CFAD2426F15BC51A30421880D27B73_inline(L_2, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9702));
		V_3 = L_3;
		// rotation = finalRotation.ToQuatf();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9703));
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_4 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9704));
		Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A L_5;
		L_5 = OVRExtensions_ToQuatf_mF7543BB09A1D01A842FB07FE7F7997E988BAC06E(L_4, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9704));
		V_0 = L_5;
		// OVRPlugin.SetHeadPoseModifier(ref rotation, ref translation);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9705));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9706));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_6;
		L_6 = OVRPlugin_SetHeadPoseModifier_mBB073CB97E2AC7C4952A36E1AE1F7A825AE9D815((&V_0), (&V_1), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9706));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9707));
	}

IL_0028:
	{
		// _headPoseRelativeOffsetRotation = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9708));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_7 = ___0_value;
		__this->____headPoseRelativeOffsetRotation_47 = L_7;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9709));
		return;
	}
}
// UnityEngine.Vector3 OVRManager::get_headPoseRelativeOffsetTranslation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 OVRManager_get_headPoseRelativeOffsetTranslation_m699900022730F69357C46494506381ED7647BC0C (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_headPoseRelativeOffsetTranslation_m699900022730F69357C46494506381ED7647BC0C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_headPoseRelativeOffsetTranslation_m699900022730F69357C46494506381ED7647BC0C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9710));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9711));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9712));
		// return _headPoseRelativeOffsetTranslation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9713));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_0 = __this->____headPoseRelativeOffsetTranslation_48;
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9714));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::set_headPoseRelativeOffsetTranslation(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_headPoseRelativeOffsetTranslation_m8B70891033EA3A0A28D9C1986E7B5D58016CCBA6 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_headPoseRelativeOffsetTranslation_m8B70891033EA3A0A28D9C1986E7B5D58016CCBA6_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector3f_t232AF83B4642C67BE8EFF85D8E1599D3B06BD562_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	Quatf_t5347392804DF5326AF790F82E4EDE1578FED682A V_0;
	memset((&V_0), 0, sizeof(V_0));
	Vector3f_t232AF83B4642C67BE8EFF85D8E1599D3B06BD562 V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_headPoseRelativeOffsetTranslation_m8B70891033EA3A0A28D9C1986E7B5D58016CCBA6_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9715));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9716));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9717));
		// if (OVRPlugin.GetHeadPoseModifier(out rotation, out translation))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9718));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9719));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRPlugin_GetHeadPoseModifier_mF5EB4C2BAE8E41E5282E28B72A3163B0411EC46A((&V_0), (&V_1), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9719));
		V_2 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9720));
		bool L_1 = V_2;
		if (!L_1)
		{
			goto IL_0033;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9721));
		// if (translation.FromFlippedZVector3f() != value)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9722));
		Vector3f_t232AF83B4642C67BE8EFF85D8E1599D3B06BD562 L_2 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9723));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_3;
		L_3 = OVRExtensions_FromFlippedZVector3f_m32D17BCDA62BC3F8C9A6442F06A42BBE79140F62(L_2, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9723));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_4 = ___0_value;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9724));
		bool L_5;
		L_5 = Vector3_op_Inequality_m9F170CDFBF1E490E559DA5D06D6547501A402BBF_inline(L_3, L_4, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9724));
		V_3 = L_5;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9725));
		bool L_6 = V_3;
		if (!L_6)
		{
			goto IL_0032;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9726));
		// translation = value.ToFlippedZVector3f();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9727));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_7 = ___0_value;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9728));
		Vector3f_t232AF83B4642C67BE8EFF85D8E1599D3B06BD562 L_8;
		L_8 = OVRExtensions_ToFlippedZVector3f_m62CC475050FFCDA6E53230DCE20070AB0228D6FA(L_7, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9728));
		V_1 = L_8;
		// OVRPlugin.SetHeadPoseModifier(ref rotation, ref translation);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9729));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9730));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_9;
		L_9 = OVRPlugin_SetHeadPoseModifier_mBB073CB97E2AC7C4952A36E1AE1F7A825AE9D815((&V_0), (&V_1), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9730));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9731));
	}

IL_0032:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9732));
	}

IL_0033:
	{
		// _headPoseRelativeOffsetTranslation = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9733));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_10 = ___0_value;
		__this->____headPoseRelativeOffsetTranslation_48 = L_10;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9734));
		return;
	}
}
// System.Boolean OVRManager::get_eyeFovPremultipliedAlphaModeEnabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_get_eyeFovPremultipliedAlphaModeEnabled_mEC89DD999B94EE52F17D6E7AF5352C9EA74C8145 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_eyeFovPremultipliedAlphaModeEnabled_mEC89DD999B94EE52F17D6E7AF5352C9EA74C8145_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_eyeFovPremultipliedAlphaModeEnabled_mEC89DD999B94EE52F17D6E7AF5352C9EA74C8145_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9735));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9736));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9737));
		// return OVRPlugin.eyeFovPremultipliedAlphaModeEnabled;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9738));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9739));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRPlugin_get_eyeFovPremultipliedAlphaModeEnabled_m284A864237949572788B57BFF7B47392A9AFC93E(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9739));
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9740));
		bool L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::set_eyeFovPremultipliedAlphaModeEnabled(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_eyeFovPremultipliedAlphaModeEnabled_m14DD45453E82E21D899542D37BA0BB52B03A2FBB (bool ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_eyeFovPremultipliedAlphaModeEnabled_m14DD45453E82E21D899542D37BA0BB52B03A2FBB_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_eyeFovPremultipliedAlphaModeEnabled_m14DD45453E82E21D899542D37BA0BB52B03A2FBB_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9741));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9742));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9743));
		// OVRPlugin.eyeFovPremultipliedAlphaModeEnabled = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9744));
		bool L_0 = ___0_value;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9745));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		OVRPlugin_set_eyeFovPremultipliedAlphaModeEnabled_mB0D53565317E5A7A5922B447F2B71D2A3DDA331C(L_0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9745));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9746));
		return;
	}
}
// System.Boolean OVRManager::OVRMixedRealityCaptureConfiguration.get_enableMixedReality()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_OVRMixedRealityCaptureConfiguration_get_enableMixedReality_mD185DB1E7D51D6620623A2B7AFD6E61DD8C81D80 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_get_enableMixedReality_mD185DB1E7D51D6620623A2B7AFD6E61DD8C81D80_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_get_enableMixedReality_mD185DB1E7D51D6620623A2B7AFD6E61DD8C81D80_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9747));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9748));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9749));
		// bool OVRMixedRealityCaptureConfiguration.enableMixedReality { get { return enableMixedReality; } set { enableMixedReality = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9750));
		bool L_0 = __this->___enableMixedReality_51;
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// bool OVRMixedRealityCaptureConfiguration.enableMixedReality { get { return enableMixedReality; } set { enableMixedReality = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9751));
		bool L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::OVRMixedRealityCaptureConfiguration.set_enableMixedReality(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OVRMixedRealityCaptureConfiguration_set_enableMixedReality_mCC673620A7C083E0561BA8E33AC21CD0F3E6E0B6 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, bool ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_set_enableMixedReality_mCC673620A7C083E0561BA8E33AC21CD0F3E6E0B6_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_set_enableMixedReality_mCC673620A7C083E0561BA8E33AC21CD0F3E6E0B6_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9752));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9753));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9754));
		// bool OVRMixedRealityCaptureConfiguration.enableMixedReality { get { return enableMixedReality; } set { enableMixedReality = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9755));
		bool L_0 = ___0_value;
		__this->___enableMixedReality_51 = L_0;
		// bool OVRMixedRealityCaptureConfiguration.enableMixedReality { get { return enableMixedReality; } set { enableMixedReality = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9756));
		return;
	}
}
// UnityEngine.LayerMask OVRManager::OVRMixedRealityCaptureConfiguration.get_extraHiddenLayers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR LayerMask_t97CB6BDADEDC3D6423C7BCFEA7F86DA2EC6241DB OVRManager_OVRMixedRealityCaptureConfiguration_get_extraHiddenLayers_m8853E35EBE1C52727786EBCFAEC60005AEE6FB84 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&LayerMask_t97CB6BDADEDC3D6423C7BCFEA7F86DA2EC6241DB_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_get_extraHiddenLayers_m8853E35EBE1C52727786EBCFAEC60005AEE6FB84_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	LayerMask_t97CB6BDADEDC3D6423C7BCFEA7F86DA2EC6241DB V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_get_extraHiddenLayers_m8853E35EBE1C52727786EBCFAEC60005AEE6FB84_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9757));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9758));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9759));
		// LayerMask OVRMixedRealityCaptureConfiguration.extraHiddenLayers { get { return extraHiddenLayers; } set { extraHiddenLayers = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9760));
		LayerMask_t97CB6BDADEDC3D6423C7BCFEA7F86DA2EC6241DB L_0 = __this->___extraHiddenLayers_53;
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// LayerMask OVRMixedRealityCaptureConfiguration.extraHiddenLayers { get { return extraHiddenLayers; } set { extraHiddenLayers = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9761));
		LayerMask_t97CB6BDADEDC3D6423C7BCFEA7F86DA2EC6241DB L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::OVRMixedRealityCaptureConfiguration.set_extraHiddenLayers(UnityEngine.LayerMask)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OVRMixedRealityCaptureConfiguration_set_extraHiddenLayers_m03963451BF108F65761B73A75471CC5254FAE0DF (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, LayerMask_t97CB6BDADEDC3D6423C7BCFEA7F86DA2EC6241DB ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_set_extraHiddenLayers_m03963451BF108F65761B73A75471CC5254FAE0DF_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_set_extraHiddenLayers_m03963451BF108F65761B73A75471CC5254FAE0DF_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9762));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9763));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9764));
		// LayerMask OVRMixedRealityCaptureConfiguration.extraHiddenLayers { get { return extraHiddenLayers; } set { extraHiddenLayers = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9765));
		LayerMask_t97CB6BDADEDC3D6423C7BCFEA7F86DA2EC6241DB L_0 = ___0_value;
		__this->___extraHiddenLayers_53 = L_0;
		// LayerMask OVRMixedRealityCaptureConfiguration.extraHiddenLayers { get { return extraHiddenLayers; } set { extraHiddenLayers = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9766));
		return;
	}
}
// UnityEngine.LayerMask OVRManager::OVRMixedRealityCaptureConfiguration.get_extraVisibleLayers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR LayerMask_t97CB6BDADEDC3D6423C7BCFEA7F86DA2EC6241DB OVRManager_OVRMixedRealityCaptureConfiguration_get_extraVisibleLayers_mD54E4795E3939201FC6892AB945B5B169E6BB4B5 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&LayerMask_t97CB6BDADEDC3D6423C7BCFEA7F86DA2EC6241DB_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_get_extraVisibleLayers_mD54E4795E3939201FC6892AB945B5B169E6BB4B5_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	LayerMask_t97CB6BDADEDC3D6423C7BCFEA7F86DA2EC6241DB V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_get_extraVisibleLayers_mD54E4795E3939201FC6892AB945B5B169E6BB4B5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9767));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9768));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9769));
		// LayerMask OVRMixedRealityCaptureConfiguration.extraVisibleLayers { get { return extraVisibleLayers; } set { extraVisibleLayers = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9770));
		LayerMask_t97CB6BDADEDC3D6423C7BCFEA7F86DA2EC6241DB L_0 = __this->___extraVisibleLayers_54;
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// LayerMask OVRMixedRealityCaptureConfiguration.extraVisibleLayers { get { return extraVisibleLayers; } set { extraVisibleLayers = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9771));
		LayerMask_t97CB6BDADEDC3D6423C7BCFEA7F86DA2EC6241DB L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::OVRMixedRealityCaptureConfiguration.set_extraVisibleLayers(UnityEngine.LayerMask)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OVRMixedRealityCaptureConfiguration_set_extraVisibleLayers_mE4A32525C59126A8AAE65D5A408E5693001ED9C4 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, LayerMask_t97CB6BDADEDC3D6423C7BCFEA7F86DA2EC6241DB ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_set_extraVisibleLayers_mE4A32525C59126A8AAE65D5A408E5693001ED9C4_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_set_extraVisibleLayers_mE4A32525C59126A8AAE65D5A408E5693001ED9C4_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9772));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9773));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9774));
		// LayerMask OVRMixedRealityCaptureConfiguration.extraVisibleLayers { get { return extraVisibleLayers; } set { extraVisibleLayers = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9775));
		LayerMask_t97CB6BDADEDC3D6423C7BCFEA7F86DA2EC6241DB L_0 = ___0_value;
		__this->___extraVisibleLayers_54 = L_0;
		// LayerMask OVRMixedRealityCaptureConfiguration.extraVisibleLayers { get { return extraVisibleLayers; } set { extraVisibleLayers = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9776));
		return;
	}
}
// System.Boolean OVRManager::OVRMixedRealityCaptureConfiguration.get_dynamicCullingMask()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_OVRMixedRealityCaptureConfiguration_get_dynamicCullingMask_m68966547F3B8C69626043909B35B5E077AFC265D (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_get_dynamicCullingMask_m68966547F3B8C69626043909B35B5E077AFC265D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_get_dynamicCullingMask_m68966547F3B8C69626043909B35B5E077AFC265D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9777));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9778));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9779));
		// bool OVRMixedRealityCaptureConfiguration.dynamicCullingMask { get { return dynamicCullingMask; } set { dynamicCullingMask = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9780));
		bool L_0 = __this->___dynamicCullingMask_55;
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// bool OVRMixedRealityCaptureConfiguration.dynamicCullingMask { get { return dynamicCullingMask; } set { dynamicCullingMask = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9781));
		bool L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::OVRMixedRealityCaptureConfiguration.set_dynamicCullingMask(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OVRMixedRealityCaptureConfiguration_set_dynamicCullingMask_m6B2BA539079372D888FFEB33576C2E8470289EA2 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, bool ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_set_dynamicCullingMask_m6B2BA539079372D888FFEB33576C2E8470289EA2_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_set_dynamicCullingMask_m6B2BA539079372D888FFEB33576C2E8470289EA2_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9782));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9783));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9784));
		// bool OVRMixedRealityCaptureConfiguration.dynamicCullingMask { get { return dynamicCullingMask; } set { dynamicCullingMask = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9785));
		bool L_0 = ___0_value;
		__this->___dynamicCullingMask_55 = L_0;
		// bool OVRMixedRealityCaptureConfiguration.dynamicCullingMask { get { return dynamicCullingMask; } set { dynamicCullingMask = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9786));
		return;
	}
}
// OVRManager/CompositionMethod OVRManager::OVRMixedRealityCaptureConfiguration.get_compositionMethod()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRManager_OVRMixedRealityCaptureConfiguration_get_compositionMethod_mA5B416BC8EBD44FE2E07A654CE3F9C64A442BCED (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&CompositionMethod_t6D3B3BE595D15686ECBAF583A082C0F316737952_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_get_compositionMethod_mA5B416BC8EBD44FE2E07A654CE3F9C64A442BCED_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_get_compositionMethod_mA5B416BC8EBD44FE2E07A654CE3F9C64A442BCED_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9787));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9788));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9789));
		// CompositionMethod OVRMixedRealityCaptureConfiguration.compositionMethod { get { return compositionMethod; } set { compositionMethod = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9790));
		int32_t L_0 = __this->___compositionMethod_52;
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// CompositionMethod OVRMixedRealityCaptureConfiguration.compositionMethod { get { return compositionMethod; } set { compositionMethod = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9791));
		int32_t L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::OVRMixedRealityCaptureConfiguration.set_compositionMethod(OVRManager/CompositionMethod)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OVRMixedRealityCaptureConfiguration_set_compositionMethod_mDF1E6C681FF6B45FF9B7D16CCF7387861451733C (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_set_compositionMethod_mDF1E6C681FF6B45FF9B7D16CCF7387861451733C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_set_compositionMethod_mDF1E6C681FF6B45FF9B7D16CCF7387861451733C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9792));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9793));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9794));
		// CompositionMethod OVRMixedRealityCaptureConfiguration.compositionMethod { get { return compositionMethod; } set { compositionMethod = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9795));
		int32_t L_0 = ___0_value;
		__this->___compositionMethod_52 = L_0;
		// CompositionMethod OVRMixedRealityCaptureConfiguration.compositionMethod { get { return compositionMethod; } set { compositionMethod = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9796));
		return;
	}
}
// UnityEngine.Color OVRManager::OVRMixedRealityCaptureConfiguration.get_externalCompositionBackdropColorRift()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Color_tD001788D726C3A7F1379BEED0260B9591F440C1F OVRManager_OVRMixedRealityCaptureConfiguration_get_externalCompositionBackdropColorRift_m3D134FDEFD8C23063983A485A0F90CC368D5BA62 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Color_tD001788D726C3A7F1379BEED0260B9591F440C1F_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_get_externalCompositionBackdropColorRift_m3D134FDEFD8C23063983A485A0F90CC368D5BA62_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	Color_tD001788D726C3A7F1379BEED0260B9591F440C1F V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_get_externalCompositionBackdropColorRift_m3D134FDEFD8C23063983A485A0F90CC368D5BA62_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9797));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9798));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9799));
		// Color OVRMixedRealityCaptureConfiguration.externalCompositionBackdropColorRift { get { return externalCompositionBackdropColorRift; } set { externalCompositionBackdropColorRift = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9800));
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_0 = __this->___externalCompositionBackdropColorRift_56;
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// Color OVRMixedRealityCaptureConfiguration.externalCompositionBackdropColorRift { get { return externalCompositionBackdropColorRift; } set { externalCompositionBackdropColorRift = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9801));
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::OVRMixedRealityCaptureConfiguration.set_externalCompositionBackdropColorRift(UnityEngine.Color)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OVRMixedRealityCaptureConfiguration_set_externalCompositionBackdropColorRift_mD5885EA54D29B7F8ED94EA27412749690D46944A (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, Color_tD001788D726C3A7F1379BEED0260B9591F440C1F ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_set_externalCompositionBackdropColorRift_mD5885EA54D29B7F8ED94EA27412749690D46944A_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_set_externalCompositionBackdropColorRift_mD5885EA54D29B7F8ED94EA27412749690D46944A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9802));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9803));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9804));
		// Color OVRMixedRealityCaptureConfiguration.externalCompositionBackdropColorRift { get { return externalCompositionBackdropColorRift; } set { externalCompositionBackdropColorRift = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9805));
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_0 = ___0_value;
		__this->___externalCompositionBackdropColorRift_56 = L_0;
		// Color OVRMixedRealityCaptureConfiguration.externalCompositionBackdropColorRift { get { return externalCompositionBackdropColorRift; } set { externalCompositionBackdropColorRift = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9806));
		return;
	}
}
// UnityEngine.Color OVRManager::OVRMixedRealityCaptureConfiguration.get_externalCompositionBackdropColorQuest()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Color_tD001788D726C3A7F1379BEED0260B9591F440C1F OVRManager_OVRMixedRealityCaptureConfiguration_get_externalCompositionBackdropColorQuest_m6E3B7ABA2EA38F451029D1F9554023B70C6B9BFE (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Color_tD001788D726C3A7F1379BEED0260B9591F440C1F_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_get_externalCompositionBackdropColorQuest_m6E3B7ABA2EA38F451029D1F9554023B70C6B9BFE_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	Color_tD001788D726C3A7F1379BEED0260B9591F440C1F V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_get_externalCompositionBackdropColorQuest_m6E3B7ABA2EA38F451029D1F9554023B70C6B9BFE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9807));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9808));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9809));
		// Color OVRMixedRealityCaptureConfiguration.externalCompositionBackdropColorQuest { get { return externalCompositionBackdropColorQuest; } set { externalCompositionBackdropColorQuest = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9810));
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_0 = __this->___externalCompositionBackdropColorQuest_57;
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// Color OVRMixedRealityCaptureConfiguration.externalCompositionBackdropColorQuest { get { return externalCompositionBackdropColorQuest; } set { externalCompositionBackdropColorQuest = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9811));
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::OVRMixedRealityCaptureConfiguration.set_externalCompositionBackdropColorQuest(UnityEngine.Color)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OVRMixedRealityCaptureConfiguration_set_externalCompositionBackdropColorQuest_mF703396A2BE5720636014363AF89FAF69BAB23AE (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, Color_tD001788D726C3A7F1379BEED0260B9591F440C1F ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_set_externalCompositionBackdropColorQuest_mF703396A2BE5720636014363AF89FAF69BAB23AE_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_set_externalCompositionBackdropColorQuest_mF703396A2BE5720636014363AF89FAF69BAB23AE_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9812));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9813));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9814));
		// Color OVRMixedRealityCaptureConfiguration.externalCompositionBackdropColorQuest { get { return externalCompositionBackdropColorQuest; } set { externalCompositionBackdropColorQuest = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9815));
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_0 = ___0_value;
		__this->___externalCompositionBackdropColorQuest_57 = L_0;
		// Color OVRMixedRealityCaptureConfiguration.externalCompositionBackdropColorQuest { get { return externalCompositionBackdropColorQuest; } set { externalCompositionBackdropColorQuest = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9816));
		return;
	}
}
// OVRManager/CameraDevice OVRManager::OVRMixedRealityCaptureConfiguration.get_capturingCameraDevice()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRManager_OVRMixedRealityCaptureConfiguration_get_capturingCameraDevice_m1F4ADEA5D046A5549FBA3262C2715A6A046722CB (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&CameraDevice_t081F9854C1B62EECCA3DE979BA982652042B60F6_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_get_capturingCameraDevice_m1F4ADEA5D046A5549FBA3262C2715A6A046722CB_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_get_capturingCameraDevice_m1F4ADEA5D046A5549FBA3262C2715A6A046722CB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9817));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9818));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9819));
		// CameraDevice OVRMixedRealityCaptureConfiguration.capturingCameraDevice { get { return capturingCameraDevice; } set { capturingCameraDevice = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9820));
		int32_t L_0 = __this->___capturingCameraDevice_58;
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// CameraDevice OVRMixedRealityCaptureConfiguration.capturingCameraDevice { get { return capturingCameraDevice; } set { capturingCameraDevice = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9821));
		int32_t L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::OVRMixedRealityCaptureConfiguration.set_capturingCameraDevice(OVRManager/CameraDevice)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OVRMixedRealityCaptureConfiguration_set_capturingCameraDevice_m58F42C86E8CC8E7D0532B5A786E2D296D36BA632 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_set_capturingCameraDevice_m58F42C86E8CC8E7D0532B5A786E2D296D36BA632_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_set_capturingCameraDevice_m58F42C86E8CC8E7D0532B5A786E2D296D36BA632_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9822));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9823));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9824));
		// CameraDevice OVRMixedRealityCaptureConfiguration.capturingCameraDevice { get { return capturingCameraDevice; } set { capturingCameraDevice = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9825));
		int32_t L_0 = ___0_value;
		__this->___capturingCameraDevice_58 = L_0;
		// CameraDevice OVRMixedRealityCaptureConfiguration.capturingCameraDevice { get { return capturingCameraDevice; } set { capturingCameraDevice = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9826));
		return;
	}
}
// System.Boolean OVRManager::OVRMixedRealityCaptureConfiguration.get_flipCameraFrameHorizontally()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_OVRMixedRealityCaptureConfiguration_get_flipCameraFrameHorizontally_mA5664AE16B22340E43B701750FACD794AE01792F (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_get_flipCameraFrameHorizontally_mA5664AE16B22340E43B701750FACD794AE01792F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_get_flipCameraFrameHorizontally_mA5664AE16B22340E43B701750FACD794AE01792F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9827));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9828));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9829));
		// bool OVRMixedRealityCaptureConfiguration.flipCameraFrameHorizontally { get { return flipCameraFrameHorizontally; } set { flipCameraFrameHorizontally = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9830));
		bool L_0 = __this->___flipCameraFrameHorizontally_59;
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// bool OVRMixedRealityCaptureConfiguration.flipCameraFrameHorizontally { get { return flipCameraFrameHorizontally; } set { flipCameraFrameHorizontally = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9831));
		bool L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::OVRMixedRealityCaptureConfiguration.set_flipCameraFrameHorizontally(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OVRMixedRealityCaptureConfiguration_set_flipCameraFrameHorizontally_mD94FA071C4539AE6EC5DD9D496C7DEC398C573E9 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, bool ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_set_flipCameraFrameHorizontally_mD94FA071C4539AE6EC5DD9D496C7DEC398C573E9_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_set_flipCameraFrameHorizontally_mD94FA071C4539AE6EC5DD9D496C7DEC398C573E9_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9832));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9833));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9834));
		// bool OVRMixedRealityCaptureConfiguration.flipCameraFrameHorizontally { get { return flipCameraFrameHorizontally; } set { flipCameraFrameHorizontally = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9835));
		bool L_0 = ___0_value;
		__this->___flipCameraFrameHorizontally_59 = L_0;
		// bool OVRMixedRealityCaptureConfiguration.flipCameraFrameHorizontally { get { return flipCameraFrameHorizontally; } set { flipCameraFrameHorizontally = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9836));
		return;
	}
}
// System.Boolean OVRManager::OVRMixedRealityCaptureConfiguration.get_flipCameraFrameVertically()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_OVRMixedRealityCaptureConfiguration_get_flipCameraFrameVertically_m048AFB3D0D48CE5C9D196AFB27A746CACCA4C58C (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_get_flipCameraFrameVertically_m048AFB3D0D48CE5C9D196AFB27A746CACCA4C58C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_get_flipCameraFrameVertically_m048AFB3D0D48CE5C9D196AFB27A746CACCA4C58C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9837));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9838));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9839));
		// bool OVRMixedRealityCaptureConfiguration.flipCameraFrameVertically { get { return flipCameraFrameVertically; } set { flipCameraFrameVertically = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9840));
		bool L_0 = __this->___flipCameraFrameVertically_60;
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// bool OVRMixedRealityCaptureConfiguration.flipCameraFrameVertically { get { return flipCameraFrameVertically; } set { flipCameraFrameVertically = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9841));
		bool L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::OVRMixedRealityCaptureConfiguration.set_flipCameraFrameVertically(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OVRMixedRealityCaptureConfiguration_set_flipCameraFrameVertically_m768F1EA9115FACD655562C9F24AEAC24F9BC5A52 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, bool ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_set_flipCameraFrameVertically_m768F1EA9115FACD655562C9F24AEAC24F9BC5A52_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_set_flipCameraFrameVertically_m768F1EA9115FACD655562C9F24AEAC24F9BC5A52_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9842));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9843));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9844));
		// bool OVRMixedRealityCaptureConfiguration.flipCameraFrameVertically { get { return flipCameraFrameVertically; } set { flipCameraFrameVertically = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9845));
		bool L_0 = ___0_value;
		__this->___flipCameraFrameVertically_60 = L_0;
		// bool OVRMixedRealityCaptureConfiguration.flipCameraFrameVertically { get { return flipCameraFrameVertically; } set { flipCameraFrameVertically = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9846));
		return;
	}
}
// System.Single OVRManager::OVRMixedRealityCaptureConfiguration.get_handPoseStateLatency()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float OVRManager_OVRMixedRealityCaptureConfiguration_get_handPoseStateLatency_mF057BE68C1367F2F912B564B202B09ACD5C28B43 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_get_handPoseStateLatency_mF057BE68C1367F2F912B564B202B09ACD5C28B43_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_get_handPoseStateLatency_mF057BE68C1367F2F912B564B202B09ACD5C28B43_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9847));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9848));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9849));
		// float OVRMixedRealityCaptureConfiguration.handPoseStateLatency { get { return handPoseStateLatency; } set { handPoseStateLatency = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9850));
		float L_0 = __this->___handPoseStateLatency_61;
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// float OVRMixedRealityCaptureConfiguration.handPoseStateLatency { get { return handPoseStateLatency; } set { handPoseStateLatency = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9851));
		float L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::OVRMixedRealityCaptureConfiguration.set_handPoseStateLatency(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OVRMixedRealityCaptureConfiguration_set_handPoseStateLatency_m9E791F17E821EC7A286C655EBDBE7EB6F6A49535 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, float ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_set_handPoseStateLatency_m9E791F17E821EC7A286C655EBDBE7EB6F6A49535_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_set_handPoseStateLatency_m9E791F17E821EC7A286C655EBDBE7EB6F6A49535_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9852));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9853));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9854));
		// float OVRMixedRealityCaptureConfiguration.handPoseStateLatency { get { return handPoseStateLatency; } set { handPoseStateLatency = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9855));
		float L_0 = ___0_value;
		__this->___handPoseStateLatency_61 = L_0;
		// float OVRMixedRealityCaptureConfiguration.handPoseStateLatency { get { return handPoseStateLatency; } set { handPoseStateLatency = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9856));
		return;
	}
}
// System.Single OVRManager::OVRMixedRealityCaptureConfiguration.get_sandwichCompositionRenderLatency()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float OVRManager_OVRMixedRealityCaptureConfiguration_get_sandwichCompositionRenderLatency_m14B52B5DC7E6D7CDE25E110B19C10589B410BA84 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_get_sandwichCompositionRenderLatency_m14B52B5DC7E6D7CDE25E110B19C10589B410BA84_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_get_sandwichCompositionRenderLatency_m14B52B5DC7E6D7CDE25E110B19C10589B410BA84_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9857));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9858));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9859));
		// float OVRMixedRealityCaptureConfiguration.sandwichCompositionRenderLatency { get { return sandwichCompositionRenderLatency; } set { sandwichCompositionRenderLatency = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9860));
		float L_0 = __this->___sandwichCompositionRenderLatency_62;
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// float OVRMixedRealityCaptureConfiguration.sandwichCompositionRenderLatency { get { return sandwichCompositionRenderLatency; } set { sandwichCompositionRenderLatency = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9861));
		float L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::OVRMixedRealityCaptureConfiguration.set_sandwichCompositionRenderLatency(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OVRMixedRealityCaptureConfiguration_set_sandwichCompositionRenderLatency_mAD767D4FDAEBFC016C27A160A844EB085114730F (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, float ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_set_sandwichCompositionRenderLatency_mAD767D4FDAEBFC016C27A160A844EB085114730F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_set_sandwichCompositionRenderLatency_mAD767D4FDAEBFC016C27A160A844EB085114730F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9862));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9863));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9864));
		// float OVRMixedRealityCaptureConfiguration.sandwichCompositionRenderLatency { get { return sandwichCompositionRenderLatency; } set { sandwichCompositionRenderLatency = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9865));
		float L_0 = ___0_value;
		__this->___sandwichCompositionRenderLatency_62 = L_0;
		// float OVRMixedRealityCaptureConfiguration.sandwichCompositionRenderLatency { get { return sandwichCompositionRenderLatency; } set { sandwichCompositionRenderLatency = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9866));
		return;
	}
}
// System.Int32 OVRManager::OVRMixedRealityCaptureConfiguration.get_sandwichCompositionBufferedFrames()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRManager_OVRMixedRealityCaptureConfiguration_get_sandwichCompositionBufferedFrames_m580270F2D022C20BB0B6DFFE9153E62A5978075A (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_get_sandwichCompositionBufferedFrames_m580270F2D022C20BB0B6DFFE9153E62A5978075A_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_get_sandwichCompositionBufferedFrames_m580270F2D022C20BB0B6DFFE9153E62A5978075A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9867));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9868));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9869));
		// int OVRMixedRealityCaptureConfiguration.sandwichCompositionBufferedFrames { get { return sandwichCompositionBufferedFrames; } set { sandwichCompositionBufferedFrames = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9870));
		int32_t L_0 = __this->___sandwichCompositionBufferedFrames_63;
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// int OVRMixedRealityCaptureConfiguration.sandwichCompositionBufferedFrames { get { return sandwichCompositionBufferedFrames; } set { sandwichCompositionBufferedFrames = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9871));
		int32_t L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::OVRMixedRealityCaptureConfiguration.set_sandwichCompositionBufferedFrames(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OVRMixedRealityCaptureConfiguration_set_sandwichCompositionBufferedFrames_m6C86EEDA4FD982B5060F2F49CCC3072C90E0A767 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_set_sandwichCompositionBufferedFrames_m6C86EEDA4FD982B5060F2F49CCC3072C90E0A767_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_set_sandwichCompositionBufferedFrames_m6C86EEDA4FD982B5060F2F49CCC3072C90E0A767_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9872));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9873));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9874));
		// int OVRMixedRealityCaptureConfiguration.sandwichCompositionBufferedFrames { get { return sandwichCompositionBufferedFrames; } set { sandwichCompositionBufferedFrames = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9875));
		int32_t L_0 = ___0_value;
		__this->___sandwichCompositionBufferedFrames_63 = L_0;
		// int OVRMixedRealityCaptureConfiguration.sandwichCompositionBufferedFrames { get { return sandwichCompositionBufferedFrames; } set { sandwichCompositionBufferedFrames = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9876));
		return;
	}
}
// UnityEngine.Color OVRManager::OVRMixedRealityCaptureConfiguration.get_chromaKeyColor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Color_tD001788D726C3A7F1379BEED0260B9591F440C1F OVRManager_OVRMixedRealityCaptureConfiguration_get_chromaKeyColor_mB4078686B458261DCFBF117DF85715F34F7DA666 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Color_tD001788D726C3A7F1379BEED0260B9591F440C1F_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_get_chromaKeyColor_mB4078686B458261DCFBF117DF85715F34F7DA666_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	Color_tD001788D726C3A7F1379BEED0260B9591F440C1F V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_get_chromaKeyColor_mB4078686B458261DCFBF117DF85715F34F7DA666_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9877));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9878));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9879));
		// Color OVRMixedRealityCaptureConfiguration.chromaKeyColor { get { return chromaKeyColor; } set { chromaKeyColor = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9880));
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_0 = __this->___chromaKeyColor_64;
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// Color OVRMixedRealityCaptureConfiguration.chromaKeyColor { get { return chromaKeyColor; } set { chromaKeyColor = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9881));
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::OVRMixedRealityCaptureConfiguration.set_chromaKeyColor(UnityEngine.Color)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OVRMixedRealityCaptureConfiguration_set_chromaKeyColor_mFB4EBAC621EC13F9BC6FAC5589DC50EBDAAA051A (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, Color_tD001788D726C3A7F1379BEED0260B9591F440C1F ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_set_chromaKeyColor_mFB4EBAC621EC13F9BC6FAC5589DC50EBDAAA051A_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_set_chromaKeyColor_mFB4EBAC621EC13F9BC6FAC5589DC50EBDAAA051A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9882));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9883));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9884));
		// Color OVRMixedRealityCaptureConfiguration.chromaKeyColor { get { return chromaKeyColor; } set { chromaKeyColor = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9885));
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_0 = ___0_value;
		__this->___chromaKeyColor_64 = L_0;
		// Color OVRMixedRealityCaptureConfiguration.chromaKeyColor { get { return chromaKeyColor; } set { chromaKeyColor = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9886));
		return;
	}
}
// System.Single OVRManager::OVRMixedRealityCaptureConfiguration.get_chromaKeySimilarity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float OVRManager_OVRMixedRealityCaptureConfiguration_get_chromaKeySimilarity_m6D620970CEC7AA8726A325ECC8967313497260E4 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_get_chromaKeySimilarity_m6D620970CEC7AA8726A325ECC8967313497260E4_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_get_chromaKeySimilarity_m6D620970CEC7AA8726A325ECC8967313497260E4_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9887));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9888));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9889));
		// float OVRMixedRealityCaptureConfiguration.chromaKeySimilarity { get { return chromaKeySimilarity; } set { chromaKeySimilarity = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9890));
		float L_0 = __this->___chromaKeySimilarity_65;
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// float OVRMixedRealityCaptureConfiguration.chromaKeySimilarity { get { return chromaKeySimilarity; } set { chromaKeySimilarity = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9891));
		float L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::OVRMixedRealityCaptureConfiguration.set_chromaKeySimilarity(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OVRMixedRealityCaptureConfiguration_set_chromaKeySimilarity_m2A2B031660C1F9E13CA1F1F12228ED3F2596A698 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, float ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_set_chromaKeySimilarity_m2A2B031660C1F9E13CA1F1F12228ED3F2596A698_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_set_chromaKeySimilarity_m2A2B031660C1F9E13CA1F1F12228ED3F2596A698_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9892));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9893));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9894));
		// float OVRMixedRealityCaptureConfiguration.chromaKeySimilarity { get { return chromaKeySimilarity; } set { chromaKeySimilarity = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9895));
		float L_0 = ___0_value;
		__this->___chromaKeySimilarity_65 = L_0;
		// float OVRMixedRealityCaptureConfiguration.chromaKeySimilarity { get { return chromaKeySimilarity; } set { chromaKeySimilarity = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9896));
		return;
	}
}
// System.Single OVRManager::OVRMixedRealityCaptureConfiguration.get_chromaKeySmoothRange()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float OVRManager_OVRMixedRealityCaptureConfiguration_get_chromaKeySmoothRange_m3A8E7BD49272C3014DDB4ED567BE673B8AA08783 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_get_chromaKeySmoothRange_m3A8E7BD49272C3014DDB4ED567BE673B8AA08783_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_get_chromaKeySmoothRange_m3A8E7BD49272C3014DDB4ED567BE673B8AA08783_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9897));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9898));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9899));
		// float OVRMixedRealityCaptureConfiguration.chromaKeySmoothRange { get { return chromaKeySmoothRange; } set { chromaKeySmoothRange = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9900));
		float L_0 = __this->___chromaKeySmoothRange_66;
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// float OVRMixedRealityCaptureConfiguration.chromaKeySmoothRange { get { return chromaKeySmoothRange; } set { chromaKeySmoothRange = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9901));
		float L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::OVRMixedRealityCaptureConfiguration.set_chromaKeySmoothRange(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OVRMixedRealityCaptureConfiguration_set_chromaKeySmoothRange_mE962BED881E5977465ADFEE2E5EF3C05F456AB55 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, float ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_set_chromaKeySmoothRange_mE962BED881E5977465ADFEE2E5EF3C05F456AB55_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_set_chromaKeySmoothRange_mE962BED881E5977465ADFEE2E5EF3C05F456AB55_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9902));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9903));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9904));
		// float OVRMixedRealityCaptureConfiguration.chromaKeySmoothRange { get { return chromaKeySmoothRange; } set { chromaKeySmoothRange = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9905));
		float L_0 = ___0_value;
		__this->___chromaKeySmoothRange_66 = L_0;
		// float OVRMixedRealityCaptureConfiguration.chromaKeySmoothRange { get { return chromaKeySmoothRange; } set { chromaKeySmoothRange = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9906));
		return;
	}
}
// System.Single OVRManager::OVRMixedRealityCaptureConfiguration.get_chromaKeySpillRange()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float OVRManager_OVRMixedRealityCaptureConfiguration_get_chromaKeySpillRange_mF289F37B2FD9F2971F9DCFEE8D7B6877BD13B180 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_get_chromaKeySpillRange_mF289F37B2FD9F2971F9DCFEE8D7B6877BD13B180_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_get_chromaKeySpillRange_mF289F37B2FD9F2971F9DCFEE8D7B6877BD13B180_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9907));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9908));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9909));
		// float OVRMixedRealityCaptureConfiguration.chromaKeySpillRange { get { return chromaKeySpillRange; } set { chromaKeySpillRange = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9910));
		float L_0 = __this->___chromaKeySpillRange_67;
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// float OVRMixedRealityCaptureConfiguration.chromaKeySpillRange { get { return chromaKeySpillRange; } set { chromaKeySpillRange = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9911));
		float L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::OVRMixedRealityCaptureConfiguration.set_chromaKeySpillRange(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OVRMixedRealityCaptureConfiguration_set_chromaKeySpillRange_m7E6D14D3F760C16DC9113A6A2C7B1EA28509137D (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, float ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_set_chromaKeySpillRange_m7E6D14D3F760C16DC9113A6A2C7B1EA28509137D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_set_chromaKeySpillRange_m7E6D14D3F760C16DC9113A6A2C7B1EA28509137D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9912));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9913));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9914));
		// float OVRMixedRealityCaptureConfiguration.chromaKeySpillRange { get { return chromaKeySpillRange; } set { chromaKeySpillRange = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9915));
		float L_0 = ___0_value;
		__this->___chromaKeySpillRange_67 = L_0;
		// float OVRMixedRealityCaptureConfiguration.chromaKeySpillRange { get { return chromaKeySpillRange; } set { chromaKeySpillRange = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9916));
		return;
	}
}
// System.Boolean OVRManager::OVRMixedRealityCaptureConfiguration.get_useDynamicLighting()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_OVRMixedRealityCaptureConfiguration_get_useDynamicLighting_m77DA0553AC2CB910629A5D0B6AB5483E6A77D10C (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_get_useDynamicLighting_m77DA0553AC2CB910629A5D0B6AB5483E6A77D10C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_get_useDynamicLighting_m77DA0553AC2CB910629A5D0B6AB5483E6A77D10C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9917));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9918));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9919));
		// bool OVRMixedRealityCaptureConfiguration.useDynamicLighting { get { return useDynamicLighting; } set { useDynamicLighting = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9920));
		bool L_0 = __this->___useDynamicLighting_68;
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// bool OVRMixedRealityCaptureConfiguration.useDynamicLighting { get { return useDynamicLighting; } set { useDynamicLighting = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9921));
		bool L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::OVRMixedRealityCaptureConfiguration.set_useDynamicLighting(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OVRMixedRealityCaptureConfiguration_set_useDynamicLighting_mA548F3893624BA5D4694347181D57334D3DE2F1D (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, bool ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_set_useDynamicLighting_mA548F3893624BA5D4694347181D57334D3DE2F1D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_set_useDynamicLighting_mA548F3893624BA5D4694347181D57334D3DE2F1D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9922));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9923));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9924));
		// bool OVRMixedRealityCaptureConfiguration.useDynamicLighting { get { return useDynamicLighting; } set { useDynamicLighting = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9925));
		bool L_0 = ___0_value;
		__this->___useDynamicLighting_68 = L_0;
		// bool OVRMixedRealityCaptureConfiguration.useDynamicLighting { get { return useDynamicLighting; } set { useDynamicLighting = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9926));
		return;
	}
}
// OVRManager/DepthQuality OVRManager::OVRMixedRealityCaptureConfiguration.get_depthQuality()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRManager_OVRMixedRealityCaptureConfiguration_get_depthQuality_m7F69CDF1721F52852A4BE7A069A8F54588C34A56 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&DepthQuality_t98717AD4F4A8BEFCFE10A4EB45C478EC057946B8_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_get_depthQuality_m7F69CDF1721F52852A4BE7A069A8F54588C34A56_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_get_depthQuality_m7F69CDF1721F52852A4BE7A069A8F54588C34A56_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9927));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9928));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9929));
		// DepthQuality OVRMixedRealityCaptureConfiguration.depthQuality { get { return depthQuality; } set { depthQuality = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9930));
		int32_t L_0 = __this->___depthQuality_69;
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// DepthQuality OVRMixedRealityCaptureConfiguration.depthQuality { get { return depthQuality; } set { depthQuality = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9931));
		int32_t L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::OVRMixedRealityCaptureConfiguration.set_depthQuality(OVRManager/DepthQuality)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OVRMixedRealityCaptureConfiguration_set_depthQuality_mDB5444DD1DC400F6E79AFF26979B4DEBD3FF5152 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_set_depthQuality_mDB5444DD1DC400F6E79AFF26979B4DEBD3FF5152_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_set_depthQuality_mDB5444DD1DC400F6E79AFF26979B4DEBD3FF5152_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9932));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9933));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9934));
		// DepthQuality OVRMixedRealityCaptureConfiguration.depthQuality { get { return depthQuality; } set { depthQuality = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9935));
		int32_t L_0 = ___0_value;
		__this->___depthQuality_69 = L_0;
		// DepthQuality OVRMixedRealityCaptureConfiguration.depthQuality { get { return depthQuality; } set { depthQuality = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9936));
		return;
	}
}
// System.Single OVRManager::OVRMixedRealityCaptureConfiguration.get_dynamicLightingSmoothFactor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float OVRManager_OVRMixedRealityCaptureConfiguration_get_dynamicLightingSmoothFactor_m4E4CF92CC46E43CBE3B03F7112362F85AE46F762 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_get_dynamicLightingSmoothFactor_m4E4CF92CC46E43CBE3B03F7112362F85AE46F762_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_get_dynamicLightingSmoothFactor_m4E4CF92CC46E43CBE3B03F7112362F85AE46F762_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9937));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9938));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9939));
		// float OVRMixedRealityCaptureConfiguration.dynamicLightingSmoothFactor { get { return dynamicLightingSmoothFactor; } set { dynamicLightingSmoothFactor = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9940));
		float L_0 = __this->___dynamicLightingSmoothFactor_70;
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// float OVRMixedRealityCaptureConfiguration.dynamicLightingSmoothFactor { get { return dynamicLightingSmoothFactor; } set { dynamicLightingSmoothFactor = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9941));
		float L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::OVRMixedRealityCaptureConfiguration.set_dynamicLightingSmoothFactor(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OVRMixedRealityCaptureConfiguration_set_dynamicLightingSmoothFactor_m15DD378E15375AEEE0455CA89CADD4BD5A9E8F77 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, float ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_set_dynamicLightingSmoothFactor_m15DD378E15375AEEE0455CA89CADD4BD5A9E8F77_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_set_dynamicLightingSmoothFactor_m15DD378E15375AEEE0455CA89CADD4BD5A9E8F77_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9942));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9943));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9944));
		// float OVRMixedRealityCaptureConfiguration.dynamicLightingSmoothFactor { get { return dynamicLightingSmoothFactor; } set { dynamicLightingSmoothFactor = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9945));
		float L_0 = ___0_value;
		__this->___dynamicLightingSmoothFactor_70 = L_0;
		// float OVRMixedRealityCaptureConfiguration.dynamicLightingSmoothFactor { get { return dynamicLightingSmoothFactor; } set { dynamicLightingSmoothFactor = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9946));
		return;
	}
}
// System.Single OVRManager::OVRMixedRealityCaptureConfiguration.get_dynamicLightingDepthVariationClampingValue()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float OVRManager_OVRMixedRealityCaptureConfiguration_get_dynamicLightingDepthVariationClampingValue_mE1DD41D40FA9E25B34082FA099CA96E4F60C0921 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_get_dynamicLightingDepthVariationClampingValue_mE1DD41D40FA9E25B34082FA099CA96E4F60C0921_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_get_dynamicLightingDepthVariationClampingValue_mE1DD41D40FA9E25B34082FA099CA96E4F60C0921_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9947));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9948));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9949));
		// float OVRMixedRealityCaptureConfiguration.dynamicLightingDepthVariationClampingValue { get { return dynamicLightingDepthVariationClampingValue; } set { dynamicLightingDepthVariationClampingValue = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9950));
		float L_0 = __this->___dynamicLightingDepthVariationClampingValue_71;
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// float OVRMixedRealityCaptureConfiguration.dynamicLightingDepthVariationClampingValue { get { return dynamicLightingDepthVariationClampingValue; } set { dynamicLightingDepthVariationClampingValue = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9951));
		float L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::OVRMixedRealityCaptureConfiguration.set_dynamicLightingDepthVariationClampingValue(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OVRMixedRealityCaptureConfiguration_set_dynamicLightingDepthVariationClampingValue_mDBF3FFD176BFD9C85DFAB67881E840F57AD086E7 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, float ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_set_dynamicLightingDepthVariationClampingValue_mDBF3FFD176BFD9C85DFAB67881E840F57AD086E7_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_set_dynamicLightingDepthVariationClampingValue_mDBF3FFD176BFD9C85DFAB67881E840F57AD086E7_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9952));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9953));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9954));
		// float OVRMixedRealityCaptureConfiguration.dynamicLightingDepthVariationClampingValue { get { return dynamicLightingDepthVariationClampingValue; } set { dynamicLightingDepthVariationClampingValue = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9955));
		float L_0 = ___0_value;
		__this->___dynamicLightingDepthVariationClampingValue_71 = L_0;
		// float OVRMixedRealityCaptureConfiguration.dynamicLightingDepthVariationClampingValue { get { return dynamicLightingDepthVariationClampingValue; } set { dynamicLightingDepthVariationClampingValue = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9956));
		return;
	}
}
// OVRManager/VirtualGreenScreenType OVRManager::OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRManager_OVRMixedRealityCaptureConfiguration_get_virtualGreenScreenType_m83A183EA2B31181380FD36536BB1817B22A76286 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_get_virtualGreenScreenType_m83A183EA2B31181380FD36536BB1817B22A76286_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VirtualGreenScreenType_tBE7E1C8F361841113DC44D9E3AC4C9C13AAAC5EF_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_get_virtualGreenScreenType_m83A183EA2B31181380FD36536BB1817B22A76286_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9957));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9958));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9959));
		// VirtualGreenScreenType OVRMixedRealityCaptureConfiguration.virtualGreenScreenType { get { return virtualGreenScreenType; } set { virtualGreenScreenType = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9960));
		int32_t L_0 = __this->___virtualGreenScreenType_72;
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// VirtualGreenScreenType OVRMixedRealityCaptureConfiguration.virtualGreenScreenType { get { return virtualGreenScreenType; } set { virtualGreenScreenType = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9961));
		int32_t L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenType(OVRManager/VirtualGreenScreenType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OVRMixedRealityCaptureConfiguration_set_virtualGreenScreenType_m3751DA0D7A9CFB17B0AD883A12D1CCB99059FAAA (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_set_virtualGreenScreenType_m3751DA0D7A9CFB17B0AD883A12D1CCB99059FAAA_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_set_virtualGreenScreenType_m3751DA0D7A9CFB17B0AD883A12D1CCB99059FAAA_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9962));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9963));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9964));
		// VirtualGreenScreenType OVRMixedRealityCaptureConfiguration.virtualGreenScreenType { get { return virtualGreenScreenType; } set { virtualGreenScreenType = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9965));
		int32_t L_0 = ___0_value;
		__this->___virtualGreenScreenType_72 = L_0;
		// VirtualGreenScreenType OVRMixedRealityCaptureConfiguration.virtualGreenScreenType { get { return virtualGreenScreenType; } set { virtualGreenScreenType = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9966));
		return;
	}
}
// System.Single OVRManager::OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenTopY()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float OVRManager_OVRMixedRealityCaptureConfiguration_get_virtualGreenScreenTopY_m432E7DFDD926C423D018F1ACC57E1C96EABC5A0B (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_get_virtualGreenScreenTopY_m432E7DFDD926C423D018F1ACC57E1C96EABC5A0B_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_get_virtualGreenScreenTopY_m432E7DFDD926C423D018F1ACC57E1C96EABC5A0B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9967));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9968));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9969));
		// float OVRMixedRealityCaptureConfiguration.virtualGreenScreenTopY { get { return virtualGreenScreenTopY; } set { virtualGreenScreenTopY = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9970));
		float L_0 = __this->___virtualGreenScreenTopY_73;
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// float OVRMixedRealityCaptureConfiguration.virtualGreenScreenTopY { get { return virtualGreenScreenTopY; } set { virtualGreenScreenTopY = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9971));
		float L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenTopY(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OVRMixedRealityCaptureConfiguration_set_virtualGreenScreenTopY_mECFA840A3499F23E09B3FB6F45FEFC465CAA8366 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, float ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_set_virtualGreenScreenTopY_mECFA840A3499F23E09B3FB6F45FEFC465CAA8366_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_set_virtualGreenScreenTopY_mECFA840A3499F23E09B3FB6F45FEFC465CAA8366_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9972));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9973));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9974));
		// float OVRMixedRealityCaptureConfiguration.virtualGreenScreenTopY { get { return virtualGreenScreenTopY; } set { virtualGreenScreenTopY = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9975));
		float L_0 = ___0_value;
		__this->___virtualGreenScreenTopY_73 = L_0;
		// float OVRMixedRealityCaptureConfiguration.virtualGreenScreenTopY { get { return virtualGreenScreenTopY; } set { virtualGreenScreenTopY = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9976));
		return;
	}
}
// System.Single OVRManager::OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenBottomY()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float OVRManager_OVRMixedRealityCaptureConfiguration_get_virtualGreenScreenBottomY_mB6DE18B4535102560FB4E9BF1625C680344FDC29 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_get_virtualGreenScreenBottomY_mB6DE18B4535102560FB4E9BF1625C680344FDC29_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_get_virtualGreenScreenBottomY_mB6DE18B4535102560FB4E9BF1625C680344FDC29_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9977));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9978));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9979));
		// float OVRMixedRealityCaptureConfiguration.virtualGreenScreenBottomY { get { return virtualGreenScreenBottomY; } set { virtualGreenScreenBottomY = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9980));
		float L_0 = __this->___virtualGreenScreenBottomY_74;
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// float OVRMixedRealityCaptureConfiguration.virtualGreenScreenBottomY { get { return virtualGreenScreenBottomY; } set { virtualGreenScreenBottomY = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9981));
		float L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenBottomY(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OVRMixedRealityCaptureConfiguration_set_virtualGreenScreenBottomY_m08C97E0AE23B2023A0C233A6AC83F741FC378D91 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, float ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_set_virtualGreenScreenBottomY_m08C97E0AE23B2023A0C233A6AC83F741FC378D91_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_set_virtualGreenScreenBottomY_m08C97E0AE23B2023A0C233A6AC83F741FC378D91_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9982));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9983));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9984));
		// float OVRMixedRealityCaptureConfiguration.virtualGreenScreenBottomY { get { return virtualGreenScreenBottomY; } set { virtualGreenScreenBottomY = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9985));
		float L_0 = ___0_value;
		__this->___virtualGreenScreenBottomY_74 = L_0;
		// float OVRMixedRealityCaptureConfiguration.virtualGreenScreenBottomY { get { return virtualGreenScreenBottomY; } set { virtualGreenScreenBottomY = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9986));
		return;
	}
}
// System.Boolean OVRManager::OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenApplyDepthCulling()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_OVRMixedRealityCaptureConfiguration_get_virtualGreenScreenApplyDepthCulling_m7EFD76DE22430B508B4F757E3CE47ACF2E1E033C (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_get_virtualGreenScreenApplyDepthCulling_m7EFD76DE22430B508B4F757E3CE47ACF2E1E033C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_get_virtualGreenScreenApplyDepthCulling_m7EFD76DE22430B508B4F757E3CE47ACF2E1E033C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9987));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9988));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9989));
		// bool OVRMixedRealityCaptureConfiguration.virtualGreenScreenApplyDepthCulling { get { return virtualGreenScreenApplyDepthCulling; } set { virtualGreenScreenApplyDepthCulling = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9990));
		bool L_0 = __this->___virtualGreenScreenApplyDepthCulling_75;
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// bool OVRMixedRealityCaptureConfiguration.virtualGreenScreenApplyDepthCulling { get { return virtualGreenScreenApplyDepthCulling; } set { virtualGreenScreenApplyDepthCulling = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9991));
		bool L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenApplyDepthCulling(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OVRMixedRealityCaptureConfiguration_set_virtualGreenScreenApplyDepthCulling_m85BB9D84BB960696A33D3D668A2D6D7C94FBC634 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, bool ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_set_virtualGreenScreenApplyDepthCulling_m85BB9D84BB960696A33D3D668A2D6D7C94FBC634_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_set_virtualGreenScreenApplyDepthCulling_m85BB9D84BB960696A33D3D668A2D6D7C94FBC634_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9992));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9993));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9994));
		// bool OVRMixedRealityCaptureConfiguration.virtualGreenScreenApplyDepthCulling { get { return virtualGreenScreenApplyDepthCulling; } set { virtualGreenScreenApplyDepthCulling = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9995));
		bool L_0 = ___0_value;
		__this->___virtualGreenScreenApplyDepthCulling_75 = L_0;
		// bool OVRMixedRealityCaptureConfiguration.virtualGreenScreenApplyDepthCulling { get { return virtualGreenScreenApplyDepthCulling; } set { virtualGreenScreenApplyDepthCulling = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9996));
		return;
	}
}
// System.Single OVRManager::OVRMixedRealityCaptureConfiguration.get_virtualGreenScreenDepthTolerance()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float OVRManager_OVRMixedRealityCaptureConfiguration_get_virtualGreenScreenDepthTolerance_m4ABFCFE422FC45D7E255A825C6EE90B5BDCCE6B0 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_get_virtualGreenScreenDepthTolerance_m4ABFCFE422FC45D7E255A825C6EE90B5BDCCE6B0_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_get_virtualGreenScreenDepthTolerance_m4ABFCFE422FC45D7E255A825C6EE90B5BDCCE6B0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9997));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9998));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9999));
		// float OVRMixedRealityCaptureConfiguration.virtualGreenScreenDepthTolerance { get { return virtualGreenScreenDepthTolerance; } set { virtualGreenScreenDepthTolerance = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10000));
		float L_0 = __this->___virtualGreenScreenDepthTolerance_76;
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// float OVRMixedRealityCaptureConfiguration.virtualGreenScreenDepthTolerance { get { return virtualGreenScreenDepthTolerance; } set { virtualGreenScreenDepthTolerance = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10001));
		float L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::OVRMixedRealityCaptureConfiguration.set_virtualGreenScreenDepthTolerance(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OVRMixedRealityCaptureConfiguration_set_virtualGreenScreenDepthTolerance_mB569727203DE5B7F2EBE63E8778A05D4A96B43DC (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, float ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_set_virtualGreenScreenDepthTolerance_mB569727203DE5B7F2EBE63E8778A05D4A96B43DC_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_set_virtualGreenScreenDepthTolerance_mB569727203DE5B7F2EBE63E8778A05D4A96B43DC_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10002));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10003));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10004));
		// float OVRMixedRealityCaptureConfiguration.virtualGreenScreenDepthTolerance { get { return virtualGreenScreenDepthTolerance; } set { virtualGreenScreenDepthTolerance = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10005));
		float L_0 = ___0_value;
		__this->___virtualGreenScreenDepthTolerance_76 = L_0;
		// float OVRMixedRealityCaptureConfiguration.virtualGreenScreenDepthTolerance { get { return virtualGreenScreenDepthTolerance; } set { virtualGreenScreenDepthTolerance = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10006));
		return;
	}
}
// OVRManager/MrcActivationMode OVRManager::OVRMixedRealityCaptureConfiguration.get_mrcActivationMode()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRManager_OVRMixedRealityCaptureConfiguration_get_mrcActivationMode_mA84CCE1675C40D80C49BCCE1E6230B2DC9C93D6A (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&MrcActivationMode_t1782022B05CD6F45AE8DEAA9E8359BA365FD5E45_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_get_mrcActivationMode_mA84CCE1675C40D80C49BCCE1E6230B2DC9C93D6A_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_get_mrcActivationMode_mA84CCE1675C40D80C49BCCE1E6230B2DC9C93D6A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10007));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10008));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10009));
		// MrcActivationMode OVRMixedRealityCaptureConfiguration.mrcActivationMode { get { return mrcActivationMode; } set { mrcActivationMode = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10010));
		int32_t L_0 = __this->___mrcActivationMode_77;
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// MrcActivationMode OVRMixedRealityCaptureConfiguration.mrcActivationMode { get { return mrcActivationMode; } set { mrcActivationMode = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10011));
		int32_t L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::OVRMixedRealityCaptureConfiguration.set_mrcActivationMode(OVRManager/MrcActivationMode)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OVRMixedRealityCaptureConfiguration_set_mrcActivationMode_mC99FC8484C8C0DD97E82E6D67396FD78831E1A11 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_set_mrcActivationMode_mC99FC8484C8C0DD97E82E6D67396FD78831E1A11_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_set_mrcActivationMode_mC99FC8484C8C0DD97E82E6D67396FD78831E1A11_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10012));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10013));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10014));
		// MrcActivationMode OVRMixedRealityCaptureConfiguration.mrcActivationMode { get { return mrcActivationMode; } set { mrcActivationMode = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10015));
		int32_t L_0 = ___0_value;
		__this->___mrcActivationMode_77 = L_0;
		// MrcActivationMode OVRMixedRealityCaptureConfiguration.mrcActivationMode { get { return mrcActivationMode; } set { mrcActivationMode = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10016));
		return;
	}
}
// OVRManager/InstantiateMrcCameraDelegate OVRManager::OVRMixedRealityCaptureConfiguration.get_instantiateMixedRealityCameraGameObject()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR InstantiateMrcCameraDelegate_t26D39C3003CADD2CBA4E7C5EB75333089B2F03C8* OVRManager_OVRMixedRealityCaptureConfiguration_get_instantiateMixedRealityCameraGameObject_m7AA1712A2CC77D2FCA4DD6C60F847078F0C21C51 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&InstantiateMrcCameraDelegate_t26D39C3003CADD2CBA4E7C5EB75333089B2F03C8_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_get_instantiateMixedRealityCameraGameObject_m7AA1712A2CC77D2FCA4DD6C60F847078F0C21C51_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	InstantiateMrcCameraDelegate_t26D39C3003CADD2CBA4E7C5EB75333089B2F03C8* V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_get_instantiateMixedRealityCameraGameObject_m7AA1712A2CC77D2FCA4DD6C60F847078F0C21C51_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10017));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10018));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10019));
		// InstantiateMrcCameraDelegate OVRMixedRealityCaptureConfiguration.instantiateMixedRealityCameraGameObject { get { return instantiateMixedRealityCameraGameObject; } set { instantiateMixedRealityCameraGameObject = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10020));
		InstantiateMrcCameraDelegate_t26D39C3003CADD2CBA4E7C5EB75333089B2F03C8* L_0 = __this->___instantiateMixedRealityCameraGameObject_78;
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// InstantiateMrcCameraDelegate OVRMixedRealityCaptureConfiguration.instantiateMixedRealityCameraGameObject { get { return instantiateMixedRealityCameraGameObject; } set { instantiateMixedRealityCameraGameObject = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10021));
		InstantiateMrcCameraDelegate_t26D39C3003CADD2CBA4E7C5EB75333089B2F03C8* L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::OVRMixedRealityCaptureConfiguration.set_instantiateMixedRealityCameraGameObject(OVRManager/InstantiateMrcCameraDelegate)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OVRMixedRealityCaptureConfiguration_set_instantiateMixedRealityCameraGameObject_mAC63BF5AF27747B367C445FAA788D6AC9BC2699E (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, InstantiateMrcCameraDelegate_t26D39C3003CADD2CBA4E7C5EB75333089B2F03C8* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OVRMixedRealityCaptureConfiguration_set_instantiateMixedRealityCameraGameObject_mAC63BF5AF27747B367C445FAA788D6AC9BC2699E_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OVRMixedRealityCaptureConfiguration_set_instantiateMixedRealityCameraGameObject_mAC63BF5AF27747B367C445FAA788D6AC9BC2699E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10022));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10023));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10024));
		// InstantiateMrcCameraDelegate OVRMixedRealityCaptureConfiguration.instantiateMixedRealityCameraGameObject { get { return instantiateMixedRealityCameraGameObject; } set { instantiateMixedRealityCameraGameObject = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10025));
		InstantiateMrcCameraDelegate_t26D39C3003CADD2CBA4E7C5EB75333089B2F03C8* L_0 = ___0_value;
		__this->___instantiateMixedRealityCameraGameObject_78 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___instantiateMixedRealityCameraGameObject_78), (void*)L_0);
		// InstantiateMrcCameraDelegate OVRMixedRealityCaptureConfiguration.instantiateMixedRealityCameraGameObject { get { return instantiateMixedRealityCameraGameObject; } set { instantiateMixedRealityCameraGameObject = value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10026));
		return;
	}
}
// OVRManager/XrApi OVRManager::get_xrApi()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRManager_get_xrApi_m727D2444A42B1D7E2D1EF3C3ECC493FDDA647712 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_xrApi_m727D2444A42B1D7E2D1EF3C3ECC493FDDA647712_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&XrApi_t93353E1C02725FC81E579B450694FDA6B04C2A34_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_xrApi_m727D2444A42B1D7E2D1EF3C3ECC493FDDA647712_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10027));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10028));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10029));
		// return (XrApi)OVRPlugin.nativeXrApi;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10030));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10031));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		int32_t L_0;
		L_0 = OVRPlugin_get_nativeXrApi_m32634338020C30D956A1579A7745C94BD77279F3(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10031));
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10032));
		int32_t L_1 = V_0;
		return L_1;
	}
}
// System.UInt64 OVRManager::get_xrInstance()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t OVRManager_get_xrInstance_m337F7A5B861DC2EA9D7FCB585ED53B1BE4D21547 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_xrInstance_m337F7A5B861DC2EA9D7FCB585ED53B1BE4D21547_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&UInt64_t8F12534CC8FC4B5860F2A2CD1EE79D322E7A41AF_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	uint64_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_xrInstance_m337F7A5B861DC2EA9D7FCB585ED53B1BE4D21547_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10033));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10034));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10035));
		// return OVRPlugin.GetNativeOpenXRInstance();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10036));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10037));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		uint64_t L_0;
		L_0 = OVRPlugin_GetNativeOpenXRInstance_mCDB3798FFB361CD670AB9A8E937C2056E9978AD0(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10037));
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10038));
		uint64_t L_1 = V_0;
		return L_1;
	}
}
// System.UInt64 OVRManager::get_xrSession()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t OVRManager_get_xrSession_mF16F24B7F737FC50D705676638DD85179ABB9679 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_xrSession_mF16F24B7F737FC50D705676638DD85179ABB9679_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&UInt64_t8F12534CC8FC4B5860F2A2CD1EE79D322E7A41AF_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	uint64_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_xrSession_mF16F24B7F737FC50D705676638DD85179ABB9679_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10039));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10040));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10041));
		// return OVRPlugin.GetNativeOpenXRSession();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10042));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10043));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		uint64_t L_0;
		L_0 = OVRPlugin_GetNativeOpenXRSession_m9310783676B3E115D4B3509CBE45D89BD61FC1BD(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10043));
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10044));
		uint64_t L_1 = V_0;
		return L_1;
	}
}
// System.Int32 OVRManager::get_vsyncCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRManager_get_vsyncCount_m1BBE8D04E02C2431A29E2F1A98AB685293B4A8E5 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_vsyncCount_m1BBE8D04E02C2431A29E2F1A98AB685293B4A8E5_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_vsyncCount_m1BBE8D04E02C2431A29E2F1A98AB685293B4A8E5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10045));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10046));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10047));
		// if (!isHmdPresent)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10048));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10049));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRManager_get_isHmdPresent_m098F56E4E9C2ECAC87EAB61C7680F0FBD2A2C445(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10049));
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10050));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0011;
		}
	}
	{
		// return 1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10051));
		V_1 = 1;
		goto IL_0019;
	}

IL_0011:
	{
		// return OVRPlugin.vsyncCount;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10052));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10053));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		int32_t L_2;
		L_2 = OVRPlugin_get_vsyncCount_m43E11EECD32DC9547222AF21B9FE0BA27974984C(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10053));
		V_1 = L_2;
		goto IL_0019;
	}

IL_0019:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10054));
		int32_t L_3 = V_1;
		return L_3;
	}
}
// System.Void OVRManager::set_vsyncCount(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_vsyncCount_m60B468D8FC499D98DADE378D3860E3EFDCC2A6AD (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_vsyncCount_m60B468D8FC499D98DADE378D3860E3EFDCC2A6AD_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_vsyncCount_m60B468D8FC499D98DADE378D3860E3EFDCC2A6AD_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10055));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10056));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10057));
		// if (!isHmdPresent)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10058));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10059));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRManager_get_isHmdPresent_m098F56E4E9C2ECAC87EAB61C7680F0FBD2A2C445(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10059));
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10060));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_000f;
		}
	}
	{
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10061));
		goto IL_0016;
	}

IL_000f:
	{
		// OVRPlugin.vsyncCount = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10062));
		int32_t L_2 = ___0_value;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10063));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		OVRPlugin_set_vsyncCount_mFDB0AD3E722E6889A3081C4DE015A0CF2ADC9A88(L_2, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10063));
	}

IL_0016:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10064));
		return;
	}
}
// System.Single OVRManager::get_batteryLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float OVRManager_get_batteryLevel_mFC31D7E00026FF53AE50F88CB34B920FE94BC7A1 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_batteryLevel_mFC31D7E00026FF53AE50F88CB34B920FE94BC7A1_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	float V_1 = 0.0f;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_batteryLevel_mFC31D7E00026FF53AE50F88CB34B920FE94BC7A1_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10065));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10066));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10067));
		// if (!isHmdPresent)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10068));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10069));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRManager_get_isHmdPresent_m098F56E4E9C2ECAC87EAB61C7680F0FBD2A2C445(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10069));
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10070));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0015;
		}
	}
	{
		// return 1f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10071));
		V_1 = (1.0f);
		goto IL_001d;
	}

IL_0015:
	{
		// return OVRPlugin.batteryLevel;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10072));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10073));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		float L_2;
		L_2 = OVRPlugin_get_batteryLevel_mAD1E25BC5576FC800E9F9E1FCF54C00921D123FF(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10073));
		V_1 = L_2;
		goto IL_001d;
	}

IL_001d:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10074));
		float L_3 = V_1;
		return L_3;
	}
}
// System.Single OVRManager::get_batteryTemperature()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float OVRManager_get_batteryTemperature_m9CBB0FCF7221B75BA7C32C2E070672274F374E05 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_batteryTemperature_m9CBB0FCF7221B75BA7C32C2E070672274F374E05_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	float V_1 = 0.0f;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_batteryTemperature_m9CBB0FCF7221B75BA7C32C2E070672274F374E05_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10075));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10076));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10077));
		// if (!isHmdPresent)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10078));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10079));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRManager_get_isHmdPresent_m098F56E4E9C2ECAC87EAB61C7680F0FBD2A2C445(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10079));
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10080));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0015;
		}
	}
	{
		// return 0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10081));
		V_1 = (0.0f);
		goto IL_001d;
	}

IL_0015:
	{
		// return OVRPlugin.batteryTemperature;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10082));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10083));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		float L_2;
		L_2 = OVRPlugin_get_batteryTemperature_m4316A3EEA5599A957148DF73FEC745244D251F6F(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10083));
		V_1 = L_2;
		goto IL_001d;
	}

IL_001d:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10084));
		float L_3 = V_1;
		return L_3;
	}
}
// System.Int32 OVRManager::get_batteryStatus()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRManager_get_batteryStatus_m2635DB26851BCF82E01EAF7CE1380148B576731E (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_batteryStatus_m2635DB26851BCF82E01EAF7CE1380148B576731E_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_batteryStatus_m2635DB26851BCF82E01EAF7CE1380148B576731E_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10085));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10086));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10087));
		// if (!isHmdPresent)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10088));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10089));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRManager_get_isHmdPresent_m098F56E4E9C2ECAC87EAB61C7680F0FBD2A2C445(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10089));
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10090));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0011;
		}
	}
	{
		// return -1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10091));
		V_1 = (-1);
		goto IL_0019;
	}

IL_0011:
	{
		// return (int)OVRPlugin.batteryStatus;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10092));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10093));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		int32_t L_2;
		L_2 = OVRPlugin_get_batteryStatus_m59B52C68609A52F12E97B5412509C78C47A64426(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10093));
		V_1 = L_2;
		goto IL_0019;
	}

IL_0019:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10094));
		int32_t L_3 = V_1;
		return L_3;
	}
}
// System.Single OVRManager::get_volumeLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float OVRManager_get_volumeLevel_mBB5AC2A247DA26358425288C17CFF8E1998575B1 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_volumeLevel_mBB5AC2A247DA26358425288C17CFF8E1998575B1_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	float V_1 = 0.0f;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_volumeLevel_mBB5AC2A247DA26358425288C17CFF8E1998575B1_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10095));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10096));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10097));
		// if (!isHmdPresent)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10098));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10099));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRManager_get_isHmdPresent_m098F56E4E9C2ECAC87EAB61C7680F0FBD2A2C445(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10099));
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10100));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0015;
		}
	}
	{
		// return 0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10101));
		V_1 = (0.0f);
		goto IL_001d;
	}

IL_0015:
	{
		// return OVRPlugin.systemVolume;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10102));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10103));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		float L_2;
		L_2 = OVRPlugin_get_systemVolume_mE1D94CF0D3609D2F1A4FAE3D31CF170FF464F864(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10103));
		V_1 = L_2;
		goto IL_001d;
	}

IL_001d:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10104));
		float L_3 = V_1;
		return L_3;
	}
}
// OVRManager/ProcessorPerformanceLevel OVRManager::get_suggestedCpuPerfLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRManager_get_suggestedCpuPerfLevel_m243AB9A106880E1768C273A81EE0B4AEA453A307 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_suggestedCpuPerfLevel_m243AB9A106880E1768C273A81EE0B4AEA453A307_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ProcessorPerformanceLevel_t16F33568B865A567B76E19FA8235C180225C0A46_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_suggestedCpuPerfLevel_m243AB9A106880E1768C273A81EE0B4AEA453A307_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10105));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10106));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10107));
		// if (!isHmdPresent)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10108));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10109));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRManager_get_isHmdPresent_m098F56E4E9C2ECAC87EAB61C7680F0FBD2A2C445(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10109));
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10110));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0011;
		}
	}
	{
		// return ProcessorPerformanceLevel.PowerSavings;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10111));
		V_1 = 0;
		goto IL_0019;
	}

IL_0011:
	{
		// return (ProcessorPerformanceLevel)OVRPlugin.suggestedCpuPerfLevel;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10112));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10113));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		int32_t L_2;
		L_2 = OVRPlugin_get_suggestedCpuPerfLevel_m9499E63FC5C08EF4D1F38C494088FD3ADFAAFF9D(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10113));
		V_1 = L_2;
		goto IL_0019;
	}

IL_0019:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10114));
		int32_t L_3 = V_1;
		return L_3;
	}
}
// System.Void OVRManager::set_suggestedCpuPerfLevel(OVRManager/ProcessorPerformanceLevel)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_suggestedCpuPerfLevel_m8ADF8B1F94FB15461A329C77483D57C31E28E765 (int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_suggestedCpuPerfLevel_m8ADF8B1F94FB15461A329C77483D57C31E28E765_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_suggestedCpuPerfLevel_m8ADF8B1F94FB15461A329C77483D57C31E28E765_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10115));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10116));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10117));
		// if (!isHmdPresent)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10118));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10119));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRManager_get_isHmdPresent_m098F56E4E9C2ECAC87EAB61C7680F0FBD2A2C445(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10119));
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10120));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_000f;
		}
	}
	{
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10121));
		goto IL_0016;
	}

IL_000f:
	{
		// OVRPlugin.suggestedCpuPerfLevel = (OVRPlugin.ProcessorPerformanceLevel)value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10122));
		int32_t L_2 = ___0_value;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10123));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		OVRPlugin_set_suggestedCpuPerfLevel_m0CA3B9722D6D34AD41A978A5A0B5D1C966D237A8(L_2, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10123));
	}

IL_0016:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10124));
		return;
	}
}
// OVRManager/ProcessorPerformanceLevel OVRManager::get_suggestedGpuPerfLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRManager_get_suggestedGpuPerfLevel_mA6653F19E71E42A263E69FD2C4F4CB4B0DB5DF47 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_suggestedGpuPerfLevel_mA6653F19E71E42A263E69FD2C4F4CB4B0DB5DF47_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ProcessorPerformanceLevel_t16F33568B865A567B76E19FA8235C180225C0A46_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_suggestedGpuPerfLevel_mA6653F19E71E42A263E69FD2C4F4CB4B0DB5DF47_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10125));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10126));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10127));
		// if (!isHmdPresent)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10128));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10129));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRManager_get_isHmdPresent_m098F56E4E9C2ECAC87EAB61C7680F0FBD2A2C445(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10129));
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10130));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0011;
		}
	}
	{
		// return ProcessorPerformanceLevel.PowerSavings;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10131));
		V_1 = 0;
		goto IL_0019;
	}

IL_0011:
	{
		// return (ProcessorPerformanceLevel)OVRPlugin.suggestedGpuPerfLevel;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10132));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10133));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		int32_t L_2;
		L_2 = OVRPlugin_get_suggestedGpuPerfLevel_mE702E2D9C76882032DED8E00516B587180288EE0(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10133));
		V_1 = L_2;
		goto IL_0019;
	}

IL_0019:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10134));
		int32_t L_3 = V_1;
		return L_3;
	}
}
// System.Void OVRManager::set_suggestedGpuPerfLevel(OVRManager/ProcessorPerformanceLevel)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_suggestedGpuPerfLevel_mF73FCC236503028B36D67F2553228E0ED7432662 (int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_suggestedGpuPerfLevel_mF73FCC236503028B36D67F2553228E0ED7432662_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_suggestedGpuPerfLevel_mF73FCC236503028B36D67F2553228E0ED7432662_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10135));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10136));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10137));
		// if (!isHmdPresent)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10138));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10139));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRManager_get_isHmdPresent_m098F56E4E9C2ECAC87EAB61C7680F0FBD2A2C445(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10139));
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10140));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_000f;
		}
	}
	{
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10141));
		goto IL_0016;
	}

IL_000f:
	{
		// OVRPlugin.suggestedGpuPerfLevel = (OVRPlugin.ProcessorPerformanceLevel)value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10142));
		int32_t L_2 = ___0_value;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10143));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		OVRPlugin_set_suggestedGpuPerfLevel_mF464D8BB311C080501ED0608C34295F8A4796BD3(L_2, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10143));
	}

IL_0016:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10144));
		return;
	}
}
// System.Int32 OVRManager::get_cpuLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRManager_get_cpuLevel_m989D92F71D3A4ACC406B8B85D9DD315661D7E542 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_cpuLevel_m989D92F71D3A4ACC406B8B85D9DD315661D7E542_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_cpuLevel_m989D92F71D3A4ACC406B8B85D9DD315661D7E542_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10145));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10146));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10147));
		// if (!isHmdPresent)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10148));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10149));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRManager_get_isHmdPresent_m098F56E4E9C2ECAC87EAB61C7680F0FBD2A2C445(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10149));
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10150));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0011;
		}
	}
	{
		// return 2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10151));
		V_1 = 2;
		goto IL_0019;
	}

IL_0011:
	{
		// return OVRPlugin.cpuLevel;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10152));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10153));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		int32_t L_2;
		L_2 = OVRPlugin_get_cpuLevel_m3FCC053F18121BBAC4C60F22BE26FC4493528DDA(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10153));
		V_1 = L_2;
		goto IL_0019;
	}

IL_0019:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10154));
		int32_t L_3 = V_1;
		return L_3;
	}
}
// System.Void OVRManager::set_cpuLevel(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_cpuLevel_mA5EC637A6AE162348E0592894D798911F2DF8420 (int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_cpuLevel_mA5EC637A6AE162348E0592894D798911F2DF8420_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_cpuLevel_mA5EC637A6AE162348E0592894D798911F2DF8420_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10155));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10156));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10157));
		// if (!isHmdPresent)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10158));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10159));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRManager_get_isHmdPresent_m098F56E4E9C2ECAC87EAB61C7680F0FBD2A2C445(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10159));
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10160));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_000f;
		}
	}
	{
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10161));
		goto IL_0016;
	}

IL_000f:
	{
		// OVRPlugin.cpuLevel = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10162));
		int32_t L_2 = ___0_value;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10163));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		OVRPlugin_set_cpuLevel_m6F7A4BAF88E9ABD0749E01645A8360A153195314(L_2, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10163));
	}

IL_0016:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10164));
		return;
	}
}
// System.Int32 OVRManager::get_gpuLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRManager_get_gpuLevel_mF6DD3FBD45FC1A6D4C5E38CFF2454B71F2D36E06 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_gpuLevel_mF6DD3FBD45FC1A6D4C5E38CFF2454B71F2D36E06_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_gpuLevel_mF6DD3FBD45FC1A6D4C5E38CFF2454B71F2D36E06_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10165));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10166));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10167));
		// if (!isHmdPresent)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10168));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10169));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRManager_get_isHmdPresent_m098F56E4E9C2ECAC87EAB61C7680F0FBD2A2C445(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10169));
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10170));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0011;
		}
	}
	{
		// return 2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10171));
		V_1 = 2;
		goto IL_0019;
	}

IL_0011:
	{
		// return OVRPlugin.gpuLevel;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10172));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10173));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		int32_t L_2;
		L_2 = OVRPlugin_get_gpuLevel_m84965A56CFF04CF1487A64D2D3943A4A3C7D0DFE(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10173));
		V_1 = L_2;
		goto IL_0019;
	}

IL_0019:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10174));
		int32_t L_3 = V_1;
		return L_3;
	}
}
// System.Void OVRManager::set_gpuLevel(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_gpuLevel_mB46AE04D1CC806405EEA2EBDC69D0A2301F5D89D (int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_gpuLevel_mB46AE04D1CC806405EEA2EBDC69D0A2301F5D89D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_gpuLevel_mB46AE04D1CC806405EEA2EBDC69D0A2301F5D89D_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10175));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10176));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10177));
		// if (!isHmdPresent)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10178));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10179));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRManager_get_isHmdPresent_m098F56E4E9C2ECAC87EAB61C7680F0FBD2A2C445(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10179));
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10180));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_000f;
		}
	}
	{
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10181));
		goto IL_0016;
	}

IL_000f:
	{
		// OVRPlugin.gpuLevel = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10182));
		int32_t L_2 = ___0_value;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10183));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		OVRPlugin_set_gpuLevel_m90EF3A1F0124C0ABE559550DCEDD13DBEE34599D(L_2, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10183));
	}

IL_0016:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10184));
		return;
	}
}
// System.Boolean OVRManager::get_isPowerSavingActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_get_isPowerSavingActive_mA12EADC12279FA3B9AA781D8490A5E6BE742FCA2 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_isPowerSavingActive_mA12EADC12279FA3B9AA781D8490A5E6BE742FCA2_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_isPowerSavingActive_mA12EADC12279FA3B9AA781D8490A5E6BE742FCA2_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10185));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10186));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10187));
		// if (!isHmdPresent)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10188));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10189));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRManager_get_isHmdPresent_m098F56E4E9C2ECAC87EAB61C7680F0FBD2A2C445(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10189));
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10190));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0011;
		}
	}
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10191));
		V_1 = (bool)0;
		goto IL_0019;
	}

IL_0011:
	{
		// return OVRPlugin.powerSaving;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10192));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10193));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = OVRPlugin_get_powerSaving_mDBF4706807A5A4108C653C75BD9F46AE029D349B(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10193));
		V_1 = L_2;
		goto IL_0019;
	}

IL_0019:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10194));
		bool L_3 = V_1;
		return L_3;
	}
}
// OVRManager/EyeTextureFormat OVRManager::get_eyeTextureFormat()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRManager_get_eyeTextureFormat_mB0841EE941F0A85BC73E3C54B7958A6240946F3B (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&EyeTextureFormat_t251B953539CD5C68C64478A89DE9259545E6D665_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_eyeTextureFormat_mB0841EE941F0A85BC73E3C54B7958A6240946F3B_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_eyeTextureFormat_mB0841EE941F0A85BC73E3C54B7958A6240946F3B_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10195));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10196));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10197));
		// return (OVRManager.EyeTextureFormat)OVRPlugin.GetDesiredEyeTextureFormat();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10198));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10199));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		int32_t L_0;
		L_0 = OVRPlugin_GetDesiredEyeTextureFormat_m7C94FE67F60CB7B0A4AAAF2D8E3B0A0F1CCC4FEF(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10199));
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10200));
		int32_t L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::set_eyeTextureFormat(OVRManager/EyeTextureFormat)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_eyeTextureFormat_m0B690B20957C9EB17E648899080E4EBBBA87CCED (int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_eyeTextureFormat_m0B690B20957C9EB17E648899080E4EBBBA87CCED_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_eyeTextureFormat_m0B690B20957C9EB17E648899080E4EBBBA87CCED_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10201));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10202));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10203));
		// OVRPlugin.SetDesiredEyeTextureFormat((OVRPlugin.EyeTextureFormat)value);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10204));
		int32_t L_0 = ___0_value;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10205));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_1;
		L_1 = OVRPlugin_SetDesiredEyeTextureFormat_m397C4AB18923A2C1B6A3425B42A7064EB6EAB2D9(L_0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10205));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10206));
		return;
	}
}
// System.Boolean OVRManager::get_eyeTrackedFoveatedRenderingSupported()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_get_eyeTrackedFoveatedRenderingSupported_mDA31E46BA6B2DACE4DE3691200DD98F5E6BBAB9A (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_eyeTrackedFoveatedRenderingSupported_mDA31E46BA6B2DACE4DE3691200DD98F5E6BBAB9A_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_eyeTrackedFoveatedRenderingSupported_mDA31E46BA6B2DACE4DE3691200DD98F5E6BBAB9A_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10207));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10208));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10209));
		// return OVRPlugin.eyeTrackedFoveatedRenderingSupported;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10210));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10211));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRPlugin_get_eyeTrackedFoveatedRenderingSupported_mA1383C85B7A1E0C0995777E55769811E78646C27(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10211));
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10212));
		bool L_1 = V_0;
		return L_1;
	}
}
// System.Boolean OVRManager::get_eyeTrackedFoveatedRenderingEnabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_get_eyeTrackedFoveatedRenderingEnabled_m67565B9D927FB91847CF8290678D81B57040273A (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_eyeTrackedFoveatedRenderingEnabled_m67565B9D927FB91847CF8290678D81B57040273A_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_eyeTrackedFoveatedRenderingEnabled_m67565B9D927FB91847CF8290678D81B57040273A_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10213));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10214));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10215));
		// return OVRPlugin.eyeTrackedFoveatedRenderingEnabled;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10216));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10217));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRPlugin_get_eyeTrackedFoveatedRenderingEnabled_m2529D472675C5BB4923708C39FC6F0602B63F059(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10217));
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10218));
		bool L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::set_eyeTrackedFoveatedRenderingEnabled(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_eyeTrackedFoveatedRenderingEnabled_m5E0F71B6638527B600B45DD21F185E1E9C56B659 (bool ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_eyeTrackedFoveatedRenderingEnabled_m5E0F71B6638527B600B45DD21F185E1E9C56B659_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_eyeTrackedFoveatedRenderingEnabled_m5E0F71B6638527B600B45DD21F185E1E9C56B659_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10219));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10220));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10221));
		// if (OVRPermissionsRequester.IsPermissionGranted(OVRPermissionsRequester.Permission.EyeTracking))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10222));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10223));
		bool L_0;
		L_0 = OVRPermissionsRequester_IsPermissionGranted_m0F333D018C92051B8846EE686B5418BA728CF3D0(2, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10223));
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10224));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0014;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10225));
		// OVRPlugin.eyeTrackedFoveatedRenderingEnabled = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10226));
		bool L_2 = ___0_value;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10227));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		OVRPlugin_set_eyeTrackedFoveatedRenderingEnabled_m81E06C57428DBB6F3EC3348FAA2077DB9F2CC1DA(L_2, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10227));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10228));
	}

IL_0014:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10229));
		return;
	}
}
// OVRManager/FoveatedRenderingLevel OVRManager::get_foveatedRenderingLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRManager_get_foveatedRenderingLevel_mC0439F24303091C23FB87FFCF3ECA01A8C07F60D (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&FoveatedRenderingLevel_t84DD37663055C483C8D66F0CF3F0ECAC87E458C8_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_foveatedRenderingLevel_mC0439F24303091C23FB87FFCF3ECA01A8C07F60D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_foveatedRenderingLevel_mC0439F24303091C23FB87FFCF3ECA01A8C07F60D_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10230));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10231));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10232));
		// return (FoveatedRenderingLevel)OVRPlugin.foveatedRenderingLevel;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10233));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10234));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		int32_t L_0;
		L_0 = OVRPlugin_get_foveatedRenderingLevel_m8B8134F1AE0303260244A9470036283CCEEBC2DB(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10234));
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10235));
		int32_t L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::set_foveatedRenderingLevel(OVRManager/FoveatedRenderingLevel)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_foveatedRenderingLevel_m595F382F5C8D157A7A85C1F3DB50C105D00F6D93 (int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_foveatedRenderingLevel_m595F382F5C8D157A7A85C1F3DB50C105D00F6D93_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_foveatedRenderingLevel_m595F382F5C8D157A7A85C1F3DB50C105D00F6D93_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10236));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10237));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10238));
		// OVRPlugin.foveatedRenderingLevel = (OVRPlugin.FoveatedRenderingLevel)value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10239));
		int32_t L_0 = ___0_value;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10240));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		OVRPlugin_set_foveatedRenderingLevel_m8330487C9D755477E59CE553A086D94A071C0C54(L_0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10240));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10241));
		return;
	}
}
// System.Boolean OVRManager::get_fixedFoveatedRenderingSupported()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_get_fixedFoveatedRenderingSupported_m39647A33AEFE5A6129DE3290038E3F4D9F9BC6C1 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_fixedFoveatedRenderingSupported_m39647A33AEFE5A6129DE3290038E3F4D9F9BC6C1_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_fixedFoveatedRenderingSupported_m39647A33AEFE5A6129DE3290038E3F4D9F9BC6C1_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10242));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10243));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10244));
		// return OVRPlugin.fixedFoveatedRenderingSupported;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10245));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10246));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRPlugin_get_fixedFoveatedRenderingSupported_mAA2ED8AD8AEF2EDAE1234213993594EEBDBD491D(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10246));
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10247));
		bool L_1 = V_0;
		return L_1;
	}
}
// OVRManager/FixedFoveatedRenderingLevel OVRManager::get_fixedFoveatedRenderingLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRManager_get_fixedFoveatedRenderingLevel_m50C462362955957310B24040F150D573CD565EAB (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&FixedFoveatedRenderingLevel_t4CF79AA5048B4967FA6084F4B7CE7B8CF42E56F6_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_fixedFoveatedRenderingLevel_m50C462362955957310B24040F150D573CD565EAB_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_fixedFoveatedRenderingLevel_m50C462362955957310B24040F150D573CD565EAB_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10248));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10249));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10250));
		// return (FixedFoveatedRenderingLevel)OVRPlugin.fixedFoveatedRenderingLevel;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10251));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10252));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		int32_t L_0;
		L_0 = OVRPlugin_get_fixedFoveatedRenderingLevel_mB47E89ECEE55C187A2A6BAD2ED96C6C562E7F3F8(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10252));
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10253));
		int32_t L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::set_fixedFoveatedRenderingLevel(OVRManager/FixedFoveatedRenderingLevel)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_fixedFoveatedRenderingLevel_m8903AC90BC000FD46ED4E26673BAB531BA615929 (int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_fixedFoveatedRenderingLevel_m8903AC90BC000FD46ED4E26673BAB531BA615929_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_fixedFoveatedRenderingLevel_m8903AC90BC000FD46ED4E26673BAB531BA615929_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10254));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10255));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10256));
		// OVRPlugin.fixedFoveatedRenderingLevel = (OVRPlugin.FixedFoveatedRenderingLevel)value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10257));
		int32_t L_0 = ___0_value;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10258));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		OVRPlugin_set_fixedFoveatedRenderingLevel_m7621A311282BD1D71AB6EB9BE3F2C65D96DFFC5F(L_0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10258));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10259));
		return;
	}
}
// System.Boolean OVRManager::get_useDynamicFoveatedRendering()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_get_useDynamicFoveatedRendering_m18349DF2686AD7CD1FA5A01783CED4AECBDB896A (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_useDynamicFoveatedRendering_m18349DF2686AD7CD1FA5A01783CED4AECBDB896A_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_useDynamicFoveatedRendering_m18349DF2686AD7CD1FA5A01783CED4AECBDB896A_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10260));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10261));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10262));
		// return OVRPlugin.useDynamicFoveatedRendering;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10263));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10264));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRPlugin_get_useDynamicFoveatedRendering_m75BB7EE36C28644F81D010752E987C5B4E41F095(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10264));
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10265));
		bool L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::set_useDynamicFoveatedRendering(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_useDynamicFoveatedRendering_m3CAE5328B0CDF0A53F88BC404741540F223559A1 (bool ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_useDynamicFoveatedRendering_m3CAE5328B0CDF0A53F88BC404741540F223559A1_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_useDynamicFoveatedRendering_m3CAE5328B0CDF0A53F88BC404741540F223559A1_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10266));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10267));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10268));
		// OVRPlugin.useDynamicFoveatedRendering = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10269));
		bool L_0 = ___0_value;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10270));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		OVRPlugin_set_useDynamicFoveatedRendering_m949D0217B4460D9F15BE4E5F9F8201AA952DC4C9(L_0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10270));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10271));
		return;
	}
}
// System.Boolean OVRManager::get_useDynamicFixedFoveatedRendering()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_get_useDynamicFixedFoveatedRendering_m57B77674E15DB93717951E23515E8C28D13871D5 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_useDynamicFixedFoveatedRendering_m57B77674E15DB93717951E23515E8C28D13871D5_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_useDynamicFixedFoveatedRendering_m57B77674E15DB93717951E23515E8C28D13871D5_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10272));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10273));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10274));
		// return OVRPlugin.useDynamicFixedFoveatedRendering;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10275));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10276));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRPlugin_get_useDynamicFixedFoveatedRendering_m5BC239BD83D054F496B9FD8ED4AF3BA234BCBE06(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10276));
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10277));
		bool L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::set_useDynamicFixedFoveatedRendering(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_useDynamicFixedFoveatedRendering_m2BBB38EA8596D5006096F25E2EDE0465713D9CEA (bool ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_useDynamicFixedFoveatedRendering_m2BBB38EA8596D5006096F25E2EDE0465713D9CEA_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_useDynamicFixedFoveatedRendering_m2BBB38EA8596D5006096F25E2EDE0465713D9CEA_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10278));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10279));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10280));
		// OVRPlugin.useDynamicFixedFoveatedRendering = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10281));
		bool L_0 = ___0_value;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10282));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		OVRPlugin_set_useDynamicFixedFoveatedRendering_m0AA5406E21978CDD460C239831981EF6A21DCC09(L_0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10282));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10283));
		return;
	}
}
// System.Boolean OVRManager::get_tiledMultiResSupported()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_get_tiledMultiResSupported_mD4174BEC4D5F947320A84A7E19453D3CBFF7B507 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_tiledMultiResSupported_mD4174BEC4D5F947320A84A7E19453D3CBFF7B507_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_tiledMultiResSupported_mD4174BEC4D5F947320A84A7E19453D3CBFF7B507_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10284));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10285));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10286));
		// return OVRPlugin.tiledMultiResSupported;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10287));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10288));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRPlugin_get_tiledMultiResSupported_m96D9AD06A6D11CA28400DA480D72487566598F21(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10288));
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10289));
		bool L_1 = V_0;
		return L_1;
	}
}
// OVRManager/TiledMultiResLevel OVRManager::get_tiledMultiResLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRManager_get_tiledMultiResLevel_m50854DFB8ECD18C7E7C3D387F319F36CB1E7161A (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_tiledMultiResLevel_m50854DFB8ECD18C7E7C3D387F319F36CB1E7161A_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&TiledMultiResLevel_t80DF4E7EB905CF5FF7529E88959C1C86B91E65E0_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_tiledMultiResLevel_m50854DFB8ECD18C7E7C3D387F319F36CB1E7161A_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10290));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10291));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10292));
		// return (TiledMultiResLevel)OVRPlugin.tiledMultiResLevel;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10293));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10294));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		int32_t L_0;
		L_0 = OVRPlugin_get_tiledMultiResLevel_m2B30DD960F78E38A3AE9E4D71EE0B8ABEBC49E3D(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10294));
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10295));
		int32_t L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::set_tiledMultiResLevel(OVRManager/TiledMultiResLevel)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_tiledMultiResLevel_mA2B8AA96F86CE73B3976A4D56D22740E5AB39EFA (int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_tiledMultiResLevel_mA2B8AA96F86CE73B3976A4D56D22740E5AB39EFA_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_tiledMultiResLevel_mA2B8AA96F86CE73B3976A4D56D22740E5AB39EFA_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10296));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10297));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10298));
		// OVRPlugin.tiledMultiResLevel = (OVRPlugin.TiledMultiResLevel)value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10299));
		int32_t L_0 = ___0_value;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10300));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		OVRPlugin_set_tiledMultiResLevel_mF23599F1A1CE3E784EDB4D2224805E991FBEA65E(L_0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10300));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10301));
		return;
	}
}
// System.Boolean OVRManager::get_gpuUtilSupported()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_get_gpuUtilSupported_m8DD9BD0B0A2FB610F7A9B7394B5FA06106A87845 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_gpuUtilSupported_m8DD9BD0B0A2FB610F7A9B7394B5FA06106A87845_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_gpuUtilSupported_m8DD9BD0B0A2FB610F7A9B7394B5FA06106A87845_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10302));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10303));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10304));
		// return OVRPlugin.gpuUtilSupported;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10305));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10306));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRPlugin_get_gpuUtilSupported_m1D267F4837B77A2294C4697796433D213E316863(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10306));
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10307));
		bool L_1 = V_0;
		return L_1;
	}
}
// System.Single OVRManager::get_gpuUtilLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float OVRManager_get_gpuUtilLevel_m0ACF6D4407F663F5BC99C8496118665EDEC29FFF (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_gpuUtilLevel_m0ACF6D4407F663F5BC99C8496118665EDEC29FFF_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral9850DCBE605BE40A6552ED957189897CB7458FCB);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	float V_1 = 0.0f;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_gpuUtilLevel_m0ACF6D4407F663F5BC99C8496118665EDEC29FFF_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10308));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10309));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10310));
		// if (!OVRPlugin.gpuUtilSupported)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10311));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10312));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRPlugin_get_gpuUtilSupported_m1D267F4837B77A2294C4697796433D213E316863(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10312));
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10313));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_001a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10314));
		// Debug.LogWarning("GPU Util is not supported");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10315));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10316));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_LogWarning_m33EF1B897E0C7C6FF538989610BFAFFEF4628CA9(_stringLiteral9850DCBE605BE40A6552ED957189897CB7458FCB, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10316));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10317));
	}

IL_001a:
	{
		// return OVRPlugin.gpuUtilLevel;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10318));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10319));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		float L_2;
		L_2 = OVRPlugin_get_gpuUtilLevel_m12DED52CD5A80E85355D1847ADDFFDD9A2F333F9(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10319));
		V_1 = L_2;
		goto IL_0022;
	}

IL_0022:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10320));
		float L_3 = V_1;
		return L_3;
	}
}
// OVRManager/SystemHeadsetType OVRManager::get_systemHeadsetType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRManager_get_systemHeadsetType_mCF5CFA237F93EC8DE90C8F9241846C505C7388B1 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_systemHeadsetType_mCF5CFA237F93EC8DE90C8F9241846C505C7388B1_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&SystemHeadsetType_t94DE1BD46794DAB8066568DC0C1A901262286C7D_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_systemHeadsetType_mCF5CFA237F93EC8DE90C8F9241846C505C7388B1_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10321));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10322));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10323));
		// return (SystemHeadsetType)OVRPlugin.GetSystemHeadsetType();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10324));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10325));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		int32_t L_0;
		L_0 = OVRPlugin_GetSystemHeadsetType_m78DFDBECE24A926CF89B9A8D93931C78A3824B01(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10325));
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10326));
		int32_t L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::SetColorScaleAndOffset(UnityEngine.Vector4,UnityEngine.Vector4,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_SetColorScaleAndOffset_m3756CA99B3CF9E00D72A00EC70DBEA8CCF4CA03E (Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3 ___0_colorScale, Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3 ___1_colorOffset, bool ___2_applyToAllLayers, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_SetColorScaleAndOffset_m3756CA99B3CF9E00D72A00EC70DBEA8CCF4CA03E_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_colorScale), (&___1_colorOffset), (&___2_applyToAllLayers));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_SetColorScaleAndOffset_m3756CA99B3CF9E00D72A00EC70DBEA8CCF4CA03E_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10327));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10328));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10329));
		// OVRPlugin.SetColorScaleAndOffset(colorScale, colorOffset, applyToAllLayers);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10330));
		Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3 L_0 = ___0_colorScale;
		Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3 L_1 = ___1_colorOffset;
		bool L_2 = ___2_applyToAllLayers;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10331));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_3;
		L_3 = OVRPlugin_SetColorScaleAndOffset_m23BE07937AE6D262C0264959EDA7050DC48B22F7(L_0, L_1, L_2, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10331));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10332));
		return;
	}
}
// System.Void OVRManager::SetOpenVRLocalPose(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_SetOpenVRLocalPose_m249ED4C08F44B43E368E9F1B235430493041CBF5 (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___0_leftPos, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___1_rightPos, Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 ___2_leftRot, Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 ___3_rightRot, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_SetOpenVRLocalPose_m249ED4C08F44B43E368E9F1B235430493041CBF5_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_leftPos), (&___1_rightPos), (&___2_leftRot), (&___3_rightRot));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_SetOpenVRLocalPose_m249ED4C08F44B43E368E9F1B235430493041CBF5_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10333));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10334));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10335));
		// if (loadedXRDevice == XRDevice.OpenVR)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10336));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___loadedXRDevice_85;
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)2))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10337));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0017;
		}
	}
	{
		// OVRInput.SetOpenVRLocalPose(leftPos, rightPos, leftRot, rightRot);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10338));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_2 = ___0_leftPos;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_3 = ___1_rightPos;
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_4 = ___2_leftRot;
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_5 = ___3_rightRot;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10339));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		OVRInput_SetOpenVRLocalPose_m27E4294B7780884FF0BC1A8605403289A12C8894(L_2, L_3, L_4, L_5, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10339));
	}

IL_0017:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10340));
		return;
	}
}
// OVRPose OVRManager::GetOpenVRControllerOffset(UnityEngine.XR.XRNode)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR OVRPose_t8054769FD4517C10D2ECD2C14C823723D675EEFB OVRManager_GetOpenVRControllerOffset_mCA3A47777AA4F15B22B35DF6732091990E8CC9B4 (int32_t ___0_hand, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_GetOpenVRControllerOffset_mCA3A47777AA4F15B22B35DF6732091990E8CC9B4_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPose_t8054769FD4517C10D2ECD2C14C823723D675EEFB_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	OVRPose_t8054769FD4517C10D2ECD2C14C823723D675EEFB V_0;
	memset((&V_0), 0, sizeof(V_0));
	bool V_1 = false;
	int32_t V_2 = 0;
	bool V_3 = false;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_4;
	memset((&V_4), 0, sizeof(V_4));
	OVRPose_t8054769FD4517C10D2ECD2C14C823723D675EEFB V_5;
	memset((&V_5), 0, sizeof(V_5));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_hand));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_2), (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_GetOpenVRControllerOffset_mCA3A47777AA4F15B22B35DF6732091990E8CC9B4_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10341));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10342));
	int32_t G_B4_0 = 0;
	int32_t G_B8_0 = 0;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 G_B12_0;
	memset((&G_B12_0), 0, sizeof(G_B12_0));
	OVRPose_t8054769FD4517C10D2ECD2C14C823723D675EEFB* G_B14_0 = NULL;
	OVRPose_t8054769FD4517C10D2ECD2C14C823723D675EEFB* G_B13_0 = NULL;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 G_B15_0;
	memset((&G_B15_0), 0, sizeof(G_B15_0));
	OVRPose_t8054769FD4517C10D2ECD2C14C823723D675EEFB* G_B15_1 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10343));
		// OVRPose poseOffset = OVRPose.identity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10344));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10345));
		OVRPose_t8054769FD4517C10D2ECD2C14C823723D675EEFB L_0;
		L_0 = OVRPose_get_identity_m80A35AA376851112A6104A67226582D63EB0739B(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10345));
		V_0 = L_0;
		// if ((hand == Node.LeftHand || hand == Node.RightHand) && loadedXRDevice == XRDevice.OpenVR)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10346));
		int32_t L_1 = ___0_hand;
		if ((((int32_t)L_1) == ((int32_t)4)))
		{
			goto IL_000f;
		}
	}
	{
		int32_t L_2 = ___0_hand;
		if ((!(((uint32_t)L_2) == ((uint32_t)5))))
		{
			goto IL_0019;
		}
	}

IL_000f:
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_3 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___loadedXRDevice_85;
		G_B4_0 = ((((int32_t)L_3) == ((int32_t)2))? 1 : 0);
		goto IL_001a;
	}

IL_0019:
	{
		G_B4_0 = 0;
	}

IL_001a:
	{
		V_1 = (bool)G_B4_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10347));
		bool L_4 = V_1;
		if (!L_4)
		{
			goto IL_008d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10348));
		// int index = (hand == Node.LeftHand) ? 0 : 1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10349));
		int32_t L_5 = ___0_hand;
		if ((((int32_t)L_5) == ((int32_t)4)))
		{
			goto IL_0026;
		}
	}
	{
		G_B8_0 = 1;
		goto IL_0027;
	}

IL_0026:
	{
		G_B8_0 = 0;
	}

IL_0027:
	{
		V_2 = G_B8_0;
		// if (OVRInput.openVRControllerDetails[index].controllerType == OVRInput.OpenVRController.OculusTouch)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10350));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		OpenVRControllerDetailsU5BU5D_tDFFC12C99B909699F2C5AF4B57B9821FEAE93FB4* L_6 = ((OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_StaticFields*)il2cpp_codegen_static_fields_for(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var))->___openVRControllerDetails_17;
		int32_t L_7 = V_2;
		NullCheck(L_6);
		uint64_t L_8 = ((L_6)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_7)))->___controllerType_1;
		V_3 = (bool)((((int64_t)L_8) == ((int64_t)((int64_t)1)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10351));
		bool L_9 = V_3;
		if (!L_9)
		{
			goto IL_008c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10352));
		// Vector3 offsetOrientation = (hand == Node.LeftHand) ? OpenVRTouchRotationOffsetEulerLeft : OpenVRTouchRotationOffsetEulerRight;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10353));
		int32_t L_10 = ___0_hand;
		if ((((int32_t)L_10) == ((int32_t)4)))
		{
			goto IL_004c;
		}
	}
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_11 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___OpenVRTouchRotationOffsetEulerRight_87;
		G_B12_0 = L_11;
		goto IL_0051;
	}

IL_004c:
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_12 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___OpenVRTouchRotationOffsetEulerLeft_86;
		G_B12_0 = L_12;
	}

IL_0051:
	{
		V_4 = G_B12_0;
		// poseOffset.orientation = Quaternion.Euler(offsetOrientation.x, offsetOrientation.y, offsetOrientation.z);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10354));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_13 = V_4;
		float L_14 = L_13.___x_2;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_15 = V_4;
		float L_16 = L_15.___y_3;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_17 = V_4;
		float L_18 = L_17.___z_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10355));
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_19;
		L_19 = Quaternion_Euler_m9262AB29E3E9CE94EF71051F38A28E82AEC73F90_inline(L_14, L_16, L_18, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10355));
		(&V_0)->___orientation_1 = L_19;
		// poseOffset.position = (hand == Node.LeftHand) ? OpenVRTouchPositionOffsetLeft : OpenVRTouchPositionOffsetRight;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10356));
		int32_t L_20 = ___0_hand;
		G_B13_0 = (&V_0);
		if ((((int32_t)L_20) == ((int32_t)4)))
		{
			G_B14_0 = (&V_0);
			goto IL_0081;
		}
	}
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_21 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___OpenVRTouchPositionOffsetRight_89;
		G_B15_0 = L_21;
		G_B15_1 = G_B13_0;
		goto IL_0086;
	}

IL_0081:
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_22 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___OpenVRTouchPositionOffsetLeft_88;
		G_B15_0 = L_22;
		G_B15_1 = G_B14_0;
	}

IL_0086:
	{
		G_B15_1->___position_0 = G_B15_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10357));
	}

IL_008c:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10358));
	}

IL_008d:
	{
		// return poseOffset;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10359));
		OVRPose_t8054769FD4517C10D2ECD2C14C823723D675EEFB L_23 = V_0;
		V_5 = L_23;
		goto IL_0092;
	}

IL_0092:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10360));
		OVRPose_t8054769FD4517C10D2ECD2C14C823723D675EEFB L_24 = V_5;
		return L_24;
	}
}
// System.Void OVRManager::SetSpaceWarp(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_SetSpaceWarp_m389627B35A017F0C4F16A1225EA730EA54E0BB99 (bool ___0_enabled, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_SetSpaceWarp_m389627B35A017F0C4F16A1225EA730EA54E0BB99_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* V_0 = NULL;
	bool V_1 = false;
	bool V_2 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_enabled));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_SetSpaceWarp_m389627B35A017F0C4F16A1225EA730EA54E0BB99_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10361));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10362));
	int32_t G_B9_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10363));
		// Camera mainCamera = FindMainCamera();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10364));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10365));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_0;
		L_0 = OVRManager_FindMainCamera_mCCD7BE229B2DA34FFCB009A527BBE8F40F57EB49(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10365));
		V_0 = L_0;
		// if (enabled)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10366));
		bool L_1 = ___0_enabled;
		V_1 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10367));
		bool L_2 = V_1;
		if (!L_2)
		{
			goto IL_0075;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10368));
		// m_CachedDepthTextureMode = mainCamera.depthTextureMode;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10369));
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_3 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10370));
		NullCheck(L_3);
		int32_t L_4;
		L_4 = Camera_get_depthTextureMode_m998CDEBC055FE2A910F3B650585ADE3E2BB141EE(L_3, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10370));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___m_CachedDepthTextureMode_92 = L_4;
		// mainCamera.depthTextureMode |= (DepthTextureMode.MotionVectors | DepthTextureMode.Depth);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10371));
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_5 = V_0;
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_6 = L_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10372));
		NullCheck(L_6);
		int32_t L_7;
		L_7 = Camera_get_depthTextureMode_m998CDEBC055FE2A910F3B650585ADE3E2BB141EE(L_6, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10372));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10373));
		NullCheck(L_6);
		Camera_set_depthTextureMode_mE722389E4DF8B3DF7F6100DB142E4DBAF698F6BF(L_6, ((int32_t)((int32_t)L_7|5)), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10373));
		// if (mainCamera.transform.parent == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10374));
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_8 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10375));
		NullCheck(L_8);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_9;
		L_9 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_8, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10375));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10376));
		NullCheck(L_9);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_10;
		L_10 = Transform_get_parent_m65354E28A4C94EC00EBCF03532F7B0718380791E(L_9, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10376));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10377));
		il2cpp_codegen_runtime_class_init_inline(Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		bool L_11;
		L_11 = Object_op_Equality_mB6120F782D83091EF56A198FCEBCF066DB4A9605(L_10, (Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C*)NULL, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10377));
		V_2 = L_11;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10378));
		bool L_12 = V_2;
		if (!L_12)
		{
			goto IL_0060;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10379));
		// m_AppSpaceTransform.position = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10380));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_13 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___m_AppSpaceTransform_91;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10381));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_14;
		L_14 = Vector3_get_zero_m0C1249C3F25B1C70EAD3CC8B31259975A457AE39_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10381));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10382));
		NullCheck(L_13);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_13, L_14, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10382));
		// m_AppSpaceTransform.rotation = Quaternion.identity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10383));
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_15 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___m_AppSpaceTransform_91;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10384));
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_16;
		L_16 = Quaternion_get_identity_m7E701AE095ED10FD5EA0B50ABCFDE2EEFF2173A5_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10384));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10385));
		NullCheck(L_15);
		Transform_set_rotation_m61340DE74726CF0F9946743A727C4D444397331D(L_15, L_16, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10385));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10386));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10387));
		goto IL_0072;
	}

IL_0060:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10388));
		// m_AppSpaceTransform = mainCamera.transform.parent;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10389));
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_17 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10390));
		NullCheck(L_17);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_18;
		L_18 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_17, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10390));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10391));
		NullCheck(L_18);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_19;
		L_19 = Transform_get_parent_m65354E28A4C94EC00EBCF03532F7B0718380791E(L_18, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10391));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___m_AppSpaceTransform_91 = L_19;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___m_AppSpaceTransform_91), (void*)L_19);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10392));
	}

IL_0072:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10393));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10394));
		goto IL_0089;
	}

IL_0075:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10395));
		// mainCamera.depthTextureMode = m_CachedDepthTextureMode;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10396));
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_20 = V_0;
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_21 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___m_CachedDepthTextureMode_92;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10397));
		NullCheck(L_20);
		Camera_set_depthTextureMode_mE722389E4DF8B3DF7F6100DB142E4DBAF698F6BF(L_20, L_21, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10397));
		// m_AppSpaceTransform = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10398));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___m_AppSpaceTransform_91 = (Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1*)NULL;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___m_AppSpaceTransform_91), (void*)(Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1*)NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10399));
	}

IL_0089:
	{
		// OculusXRPlugin.SetSpaceWarp(enabled ? OVRPlugin.Bool.True : OVRPlugin.Bool.False);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10400));
		bool L_22 = ___0_enabled;
		if (L_22)
		{
			goto IL_008f;
		}
	}
	{
		G_B9_0 = 0;
		goto IL_0090;
	}

IL_008f:
	{
		G_B9_0 = 1;
	}

IL_0090:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10401));
		OculusXRPlugin_SetSpaceWarp_m591EA7747C0C944877CE8350AEA763560E46E7F1(G_B9_0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10401));
		// m_SpaceWarpEnabled = enabled;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10402));
		bool L_23 = ___0_enabled;
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___m_SpaceWarpEnabled_90 = L_23;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10403));
		return;
	}
}
// System.Boolean OVRManager::GetSpaceWarp()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_GetSpaceWarp_m2A01D15434181512E30B0CD641115D51B3E080C6 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_GetSpaceWarp_m2A01D15434181512E30B0CD641115D51B3E080C6_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_GetSpaceWarp_m2A01D15434181512E30B0CD641115D51B3E080C6_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10404));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10405));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10406));
		// return m_SpaceWarpEnabled;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10407));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___m_SpaceWarpEnabled_90;
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10408));
		bool L_1 = V_0;
		return L_1;
	}
}
// OVRManager/TrackingOrigin OVRManager::get_trackingOriginType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t OVRManager_get_trackingOriginType_m352B753617F98DC58AD3F8E4324E23C7CF3A47E0 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_trackingOriginType_m352B753617F98DC58AD3F8E4324E23C7CF3A47E0_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&TrackingOrigin_t70DDF38D879461EA2FCA43C81B5560A1558FFF8B_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_trackingOriginType_m352B753617F98DC58AD3F8E4324E23C7CF3A47E0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10409));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10410));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10411));
		// if (!isHmdPresent)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10412));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10413));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRManager_get_isHmdPresent_m098F56E4E9C2ECAC87EAB61C7680F0FBD2A2C445(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10413));
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10414));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0016;
		}
	}
	{
		// return _trackingOriginType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10415));
		int32_t L_2 = __this->____trackingOriginType_94;
		V_1 = L_2;
		goto IL_001e;
	}

IL_0016:
	{
		// return (OVRManager.TrackingOrigin)OVRPlugin.GetTrackingOriginType();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10416));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10417));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		int32_t L_3;
		L_3 = OVRPlugin_GetTrackingOriginType_m2EDAA913509E615DD626803932B8CE16955F961A(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10417));
		V_1 = L_3;
		goto IL_001e;
	}

IL_001e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10418));
		int32_t L_4 = V_1;
		return L_4;
	}
}
// System.Void OVRManager::set_trackingOriginType(OVRManager/TrackingOrigin)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_trackingOriginType_mDDB79B878E8BF7FD66AD925A4EB0DAE77980F0F3 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_trackingOriginType_mDDB79B878E8BF7FD66AD925A4EB0DAE77980F0F3_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&TrackingOrigin_t727E8CAE2E705B4954BFB419FD60EF30D544FA37_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_trackingOriginType_mDDB79B878E8BF7FD66AD925A4EB0DAE77980F0F3_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10419));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10420));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10421));
		// if (!isHmdPresent)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10422));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10423));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRManager_get_isHmdPresent_m098F56E4E9C2ECAC87EAB61C7680F0FBD2A2C445(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10423));
		V_1 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10424));
		bool L_1 = V_1;
		if (!L_1)
		{
			goto IL_000f;
		}
	}
	{
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10425));
		goto IL_0024;
	}

IL_000f:
	{
		// OVRPlugin.TrackingOrigin newOrigin = (OVRPlugin.TrackingOrigin)value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10426));
		int32_t L_2 = ___0_value;
		V_0 = L_2;
		// if (OVRPlugin.SetTrackingOriginType(newOrigin))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10427));
		int32_t L_3 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10428));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_4;
		L_4 = OVRPlugin_SetTrackingOriginType_mC03CEE60AF8A00DE01E5071C8CCBE8C366ED2105(L_3, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10428));
		V_2 = L_4;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10429));
		bool L_5 = V_2;
		if (!L_5)
		{
			goto IL_0024;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10430));
		// _trackingOriginType = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10431));
		int32_t L_6 = ___0_value;
		__this->____trackingOriginType_94 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10432));
	}

IL_0024:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10433));
		return;
	}
}
// System.Boolean OVRManager::get_isSupportedPlatform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_get_isSupportedPlatform_m6AE0B37666BB1660CCFC7F9EAD30E550C5D7FBFA (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_isSupportedPlatform_m6AE0B37666BB1660CCFC7F9EAD30E550C5D7FBFA_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_isSupportedPlatform_m6AE0B37666BB1660CCFC7F9EAD30E550C5D7FBFA_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10434));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10435));
	{
		// public bool isSupportedPlatform { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10436));
		bool L_0 = __this->___U3CisSupportedPlatformU3Ek__BackingField_102;
		return L_0;
	}
}
// System.Void OVRManager::set_isSupportedPlatform(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_isSupportedPlatform_mE8A33FC72544A424CC63ACAF84F71CEC1EC9CE6F (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, bool ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_isSupportedPlatform_mE8A33FC72544A424CC63ACAF84F71CEC1EC9CE6F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_isSupportedPlatform_mE8A33FC72544A424CC63ACAF84F71CEC1EC9CE6F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10437));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10438));
	{
		// public bool isSupportedPlatform { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10439));
		bool L_0 = ___0_value;
		__this->___U3CisSupportedPlatformU3Ek__BackingField_102 = L_0;
		return;
	}
}
// System.Boolean OVRManager::get_isUserPresent()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_get_isUserPresent_m1E7754523C4912B5EFADE6950DC9D7AA5072699D (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_isUserPresent_m1E7754523C4912B5EFADE6950DC9D7AA5072699D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_isUserPresent_m1E7754523C4912B5EFADE6950DC9D7AA5072699D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10440));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10441));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10442));
		// if (!_isUserPresentCached)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10443));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____isUserPresentCached_103;
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10444));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_001f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10445));
		// _isUserPresentCached = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10446));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____isUserPresentCached_103 = (bool)1;
		// _isUserPresent = OVRPlugin.userPresent;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10447));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10448));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = OVRPlugin_get_userPresent_mDC6C3FFE8897342A888E529C7BEAF368413C8151(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10448));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____isUserPresent_104 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10449));
	}

IL_001f:
	{
		// return _isUserPresent;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10450));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_3 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____isUserPresent_104;
		V_1 = L_3;
		goto IL_0027;
	}

IL_0027:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10451));
		bool L_4 = V_1;
		return L_4;
	}
}
// System.Void OVRManager::set_isUserPresent(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_set_isUserPresent_mAC629CEC482B5627A507D4FB93DE81ADA0366703 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, bool ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_isUserPresent_mAC629CEC482B5627A507D4FB93DE81ADA0366703_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_isUserPresent_mAC629CEC482B5627A507D4FB93DE81ADA0366703_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10452));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10453));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10454));
		// _isUserPresentCached = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10455));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____isUserPresentCached_103 = (bool)1;
		// _isUserPresent = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10456));
		bool L_0 = ___0_value;
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____isUserPresent_104 = L_0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10457));
		return;
	}
}
// System.Version OVRManager::get_utilitiesVersion()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* OVRManager_get_utilitiesVersion_mA14867182039A0B84E83EC82DFDD6DC4D7E79582 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_utilitiesVersion_mA14867182039A0B84E83EC82DFDD6DC4D7E79582_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* V_0 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_utilitiesVersion_mA14867182039A0B84E83EC82DFDD6DC4D7E79582_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10458));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10459));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10460));
		// get { return OVRPlugin.wrapperVersion; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10461));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* L_0 = ((OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_StaticFields*)il2cpp_codegen_static_fields_for(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var))->___wrapperVersion_1;
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		// get { return OVRPlugin.wrapperVersion; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10462));
		Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* L_1 = V_0;
		return L_1;
	}
}
// System.Version OVRManager::get_pluginVersion()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* OVRManager_get_pluginVersion_m533197D0A28BF0A6E16E911DC1124C9C65D4D980 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_pluginVersion_m533197D0A28BF0A6E16E911DC1124C9C65D4D980_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* V_0 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_pluginVersion_m533197D0A28BF0A6E16E911DC1124C9C65D4D980_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10463));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10464));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10465));
		// get { return OVRPlugin.version; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10466));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10467));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* L_0;
		L_0 = OVRPlugin_get_version_mF6424FE1E91DF97DE08CD5C7AE1FBC60873A354E(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10467));
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		// get { return OVRPlugin.version; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10468));
		Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* L_1 = V_0;
		return L_1;
	}
}
// System.Version OVRManager::get_sdkVersion()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* OVRManager_get_sdkVersion_m18413A4E8DECFD0862E7F5A496491B07566CB786 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_sdkVersion_m18413A4E8DECFD0862E7F5A496491B07566CB786_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* V_0 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_sdkVersion_m18413A4E8DECFD0862E7F5A496491B07566CB786_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10469));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10470));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10471));
		// get { return OVRPlugin.nativeSDKVersion; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10472));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10473));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* L_0;
		L_0 = OVRPlugin_get_nativeSDKVersion_mBE25B31B01647B580765EA355C508A235EB07E63(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10473));
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		// get { return OVRPlugin.nativeSDKVersion; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10474));
		Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* L_1 = V_0;
		return L_1;
	}
}
// System.Boolean OVRManager::MixedRealityEnabledFromCmd()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_MixedRealityEnabledFromCmd_m787D2EDFB851604BAB34C6BF6DB63E939C5EAF19 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_MixedRealityEnabledFromCmd_m787D2EDFB851604BAB34C6BF6DB63E939C5EAF19_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralBE272FFA63D1FAD6231FBC13B50A1C7B811409E1);
		s_Il2CppMethodInitialized = true;
	}
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* V_0 = NULL;
	int32_t V_1 = 0;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_MixedRealityEnabledFromCmd_m787D2EDFB851604BAB34C6BF6DB63E939C5EAF19_RuntimeMethod_var, NULL, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10475));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10476));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10477));
		// var args = System.Environment.GetCommandLineArgs();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10478));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10479));
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_0;
		L_0 = Environment_GetCommandLineArgs_mD29CFA1CD3C84F9BD91152E70302E908114A831D(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10479));
		V_0 = L_0;
		// for (int i = 0; i < args.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10480));
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10481));
		goto IL_002b;
	}

IL_000b:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10482));
		// if (args[i].ToLower() == "-mixedreality")
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10483));
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_1 = V_0;
		int32_t L_2 = V_1;
		NullCheck(L_1);
		int32_t L_3 = L_2;
		String_t* L_4 = (L_1)->GetAt(static_cast<il2cpp_array_size_t>(L_3));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10484));
		NullCheck(L_4);
		String_t* L_5;
		L_5 = String_ToLower_m6191ABA3DC514ED47C10BDA23FD0DDCEAE7ACFBD(L_4, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10484));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10485));
		bool L_6;
		L_6 = String_op_Equality_m030E1B219352228970A076136E455C4E568C02C1(L_5, _stringLiteralBE272FFA63D1FAD6231FBC13B50A1C7B811409E1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10485));
		V_2 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10486));
		bool L_7 = V_2;
		if (!L_7)
		{
			goto IL_0026;
		}
	}
	{
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10487));
		V_3 = (bool)1;
		goto IL_003b;
	}

IL_0026:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10488));
		// for (int i = 0; i < args.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10489));
		int32_t L_8 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add(L_8, 1));
	}

IL_002b:
	{
		// for (int i = 0; i < args.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10490));
		int32_t L_9 = V_1;
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_10 = V_0;
		NullCheck(L_10);
		V_4 = (bool)((((int32_t)L_9) < ((int32_t)((int32_t)(((RuntimeArray*)L_10)->max_length))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10491));
		bool L_11 = V_4;
		if (L_11)
		{
			goto IL_000b;
		}
	}
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10492));
		V_3 = (bool)0;
		goto IL_003b;
	}

IL_003b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10493));
		bool L_12 = V_3;
		return L_12;
	}
}
// System.Boolean OVRManager::UseDirectCompositionFromCmd()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_UseDirectCompositionFromCmd_m9E607F41C058A2B0EA0B100A41AAE1BC340ABAB6 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_UseDirectCompositionFromCmd_m9E607F41C058A2B0EA0B100A41AAE1BC340ABAB6_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral961EF7AEB27DE3B713816701CD90839814BE303D);
		s_Il2CppMethodInitialized = true;
	}
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* V_0 = NULL;
	int32_t V_1 = 0;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_UseDirectCompositionFromCmd_m9E607F41C058A2B0EA0B100A41AAE1BC340ABAB6_RuntimeMethod_var, NULL, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10494));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10495));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10496));
		// var args = System.Environment.GetCommandLineArgs();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10497));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10498));
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_0;
		L_0 = Environment_GetCommandLineArgs_mD29CFA1CD3C84F9BD91152E70302E908114A831D(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10498));
		V_0 = L_0;
		// for (int i = 0; i < args.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10499));
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10500));
		goto IL_002b;
	}

IL_000b:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10501));
		// if (args[i].ToLower() == "-directcomposition")
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10502));
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_1 = V_0;
		int32_t L_2 = V_1;
		NullCheck(L_1);
		int32_t L_3 = L_2;
		String_t* L_4 = (L_1)->GetAt(static_cast<il2cpp_array_size_t>(L_3));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10503));
		NullCheck(L_4);
		String_t* L_5;
		L_5 = String_ToLower_m6191ABA3DC514ED47C10BDA23FD0DDCEAE7ACFBD(L_4, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10503));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10504));
		bool L_6;
		L_6 = String_op_Equality_m030E1B219352228970A076136E455C4E568C02C1(L_5, _stringLiteral961EF7AEB27DE3B713816701CD90839814BE303D, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10504));
		V_2 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10505));
		bool L_7 = V_2;
		if (!L_7)
		{
			goto IL_0026;
		}
	}
	{
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10506));
		V_3 = (bool)1;
		goto IL_003b;
	}

IL_0026:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10507));
		// for (int i = 0; i < args.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10508));
		int32_t L_8 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add(L_8, 1));
	}

IL_002b:
	{
		// for (int i = 0; i < args.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10509));
		int32_t L_9 = V_1;
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_10 = V_0;
		NullCheck(L_10);
		V_4 = (bool)((((int32_t)L_9) < ((int32_t)((int32_t)(((RuntimeArray*)L_10)->max_length))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10510));
		bool L_11 = V_4;
		if (L_11)
		{
			goto IL_000b;
		}
	}
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10511));
		V_3 = (bool)0;
		goto IL_003b;
	}

IL_003b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10512));
		bool L_12 = V_3;
		return L_12;
	}
}
// System.Boolean OVRManager::UseExternalCompositionFromCmd()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_UseExternalCompositionFromCmd_mF210F9E9E6B124AC97E68BB0883D6B7DEBC83FFC (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_UseExternalCompositionFromCmd_mF210F9E9E6B124AC97E68BB0883D6B7DEBC83FFC_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral2499E045B1B3619FF6FB77C788E0D2E8134BC96D);
		s_Il2CppMethodInitialized = true;
	}
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* V_0 = NULL;
	int32_t V_1 = 0;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_UseExternalCompositionFromCmd_mF210F9E9E6B124AC97E68BB0883D6B7DEBC83FFC_RuntimeMethod_var, NULL, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10513));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10514));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10515));
		// var args = System.Environment.GetCommandLineArgs();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10516));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10517));
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_0;
		L_0 = Environment_GetCommandLineArgs_mD29CFA1CD3C84F9BD91152E70302E908114A831D(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10517));
		V_0 = L_0;
		// for (int i = 0; i < args.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10518));
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10519));
		goto IL_002b;
	}

IL_000b:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10520));
		// if (args[i].ToLower() == "-externalcomposition")
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10521));
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_1 = V_0;
		int32_t L_2 = V_1;
		NullCheck(L_1);
		int32_t L_3 = L_2;
		String_t* L_4 = (L_1)->GetAt(static_cast<il2cpp_array_size_t>(L_3));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10522));
		NullCheck(L_4);
		String_t* L_5;
		L_5 = String_ToLower_m6191ABA3DC514ED47C10BDA23FD0DDCEAE7ACFBD(L_4, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10522));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10523));
		bool L_6;
		L_6 = String_op_Equality_m030E1B219352228970A076136E455C4E568C02C1(L_5, _stringLiteral2499E045B1B3619FF6FB77C788E0D2E8134BC96D, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10523));
		V_2 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10524));
		bool L_7 = V_2;
		if (!L_7)
		{
			goto IL_0026;
		}
	}
	{
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10525));
		V_3 = (bool)1;
		goto IL_003b;
	}

IL_0026:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10526));
		// for (int i = 0; i < args.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10527));
		int32_t L_8 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add(L_8, 1));
	}

IL_002b:
	{
		// for (int i = 0; i < args.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10528));
		int32_t L_9 = V_1;
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_10 = V_0;
		NullCheck(L_10);
		V_4 = (bool)((((int32_t)L_9) < ((int32_t)((int32_t)(((RuntimeArray*)L_10)->max_length))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10529));
		bool L_11 = V_4;
		if (L_11)
		{
			goto IL_000b;
		}
	}
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10530));
		V_3 = (bool)0;
		goto IL_003b;
	}

IL_003b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10531));
		bool L_12 = V_3;
		return L_12;
	}
}
// System.Boolean OVRManager::CreateMixedRealityCaptureConfigurationFileFromCmd()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_CreateMixedRealityCaptureConfigurationFileFromCmd_m41504DC04CEF4A9D01DD0A02BC5958AB36AE6D28 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_CreateMixedRealityCaptureConfigurationFileFromCmd_m41504DC04CEF4A9D01DD0A02BC5958AB36AE6D28_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralB7FC51A7DFB1613CA1A1E0106AB71FB1B70EAFB8);
		s_Il2CppMethodInitialized = true;
	}
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* V_0 = NULL;
	int32_t V_1 = 0;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_CreateMixedRealityCaptureConfigurationFileFromCmd_m41504DC04CEF4A9D01DD0A02BC5958AB36AE6D28_RuntimeMethod_var, NULL, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10532));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10533));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10534));
		// var args = System.Environment.GetCommandLineArgs();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10535));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10536));
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_0;
		L_0 = Environment_GetCommandLineArgs_mD29CFA1CD3C84F9BD91152E70302E908114A831D(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10536));
		V_0 = L_0;
		// for (int i = 0; i < args.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10537));
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10538));
		goto IL_002b;
	}

IL_000b:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10539));
		// if (args[i].ToLower() == "-create_mrc_config")
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10540));
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_1 = V_0;
		int32_t L_2 = V_1;
		NullCheck(L_1);
		int32_t L_3 = L_2;
		String_t* L_4 = (L_1)->GetAt(static_cast<il2cpp_array_size_t>(L_3));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10541));
		NullCheck(L_4);
		String_t* L_5;
		L_5 = String_ToLower_m6191ABA3DC514ED47C10BDA23FD0DDCEAE7ACFBD(L_4, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10541));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10542));
		bool L_6;
		L_6 = String_op_Equality_m030E1B219352228970A076136E455C4E568C02C1(L_5, _stringLiteralB7FC51A7DFB1613CA1A1E0106AB71FB1B70EAFB8, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10542));
		V_2 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10543));
		bool L_7 = V_2;
		if (!L_7)
		{
			goto IL_0026;
		}
	}
	{
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10544));
		V_3 = (bool)1;
		goto IL_003b;
	}

IL_0026:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10545));
		// for (int i = 0; i < args.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10546));
		int32_t L_8 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add(L_8, 1));
	}

IL_002b:
	{
		// for (int i = 0; i < args.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10547));
		int32_t L_9 = V_1;
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_10 = V_0;
		NullCheck(L_10);
		V_4 = (bool)((((int32_t)L_9) < ((int32_t)((int32_t)(((RuntimeArray*)L_10)->max_length))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10548));
		bool L_11 = V_4;
		if (L_11)
		{
			goto IL_000b;
		}
	}
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10549));
		V_3 = (bool)0;
		goto IL_003b;
	}

IL_003b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10550));
		bool L_12 = V_3;
		return L_12;
	}
}
// System.Boolean OVRManager::LoadMixedRealityCaptureConfigurationFileFromCmd()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_LoadMixedRealityCaptureConfigurationFileFromCmd_m855C9154778F7C85531A28C62437FC541F4A767B (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_LoadMixedRealityCaptureConfigurationFileFromCmd_m855C9154778F7C85531A28C62437FC541F4A767B_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral18C7C7FB21DC692A41C00EE08CF64D467B91D63B);
		s_Il2CppMethodInitialized = true;
	}
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* V_0 = NULL;
	int32_t V_1 = 0;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_LoadMixedRealityCaptureConfigurationFileFromCmd_m855C9154778F7C85531A28C62437FC541F4A767B_RuntimeMethod_var, NULL, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10551));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10552));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10553));
		// var args = System.Environment.GetCommandLineArgs();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10554));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10555));
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_0;
		L_0 = Environment_GetCommandLineArgs_mD29CFA1CD3C84F9BD91152E70302E908114A831D(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10555));
		V_0 = L_0;
		// for (int i = 0; i < args.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10556));
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10557));
		goto IL_002b;
	}

IL_000b:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10558));
		// if (args[i].ToLower() == "-load_mrc_config")
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10559));
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_1 = V_0;
		int32_t L_2 = V_1;
		NullCheck(L_1);
		int32_t L_3 = L_2;
		String_t* L_4 = (L_1)->GetAt(static_cast<il2cpp_array_size_t>(L_3));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10560));
		NullCheck(L_4);
		String_t* L_5;
		L_5 = String_ToLower_m6191ABA3DC514ED47C10BDA23FD0DDCEAE7ACFBD(L_4, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10560));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10561));
		bool L_6;
		L_6 = String_op_Equality_m030E1B219352228970A076136E455C4E568C02C1(L_5, _stringLiteral18C7C7FB21DC692A41C00EE08CF64D467B91D63B, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10561));
		V_2 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10562));
		bool L_7 = V_2;
		if (!L_7)
		{
			goto IL_0026;
		}
	}
	{
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10563));
		V_3 = (bool)1;
		goto IL_003b;
	}

IL_0026:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10564));
		// for (int i = 0; i < args.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10565));
		int32_t L_8 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add(L_8, 1));
	}

IL_002b:
	{
		// for (int i = 0; i < args.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10566));
		int32_t L_9 = V_1;
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_10 = V_0;
		NullCheck(L_10);
		V_4 = (bool)((((int32_t)L_9) < ((int32_t)((int32_t)(((RuntimeArray*)L_10)->max_length))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10567));
		bool L_11 = V_4;
		if (L_11)
		{
			goto IL_000b;
		}
	}
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10568));
		V_3 = (bool)0;
		goto IL_003b;
	}

IL_003b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10569));
		bool L_12 = V_3;
		return L_12;
	}
}
// System.Boolean OVRManager::IsUnityAlphaOrBetaVersion()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_IsUnityAlphaOrBetaVersion_m3281FEF5765FFD207B8BDBB627CC6EDDF18688E0 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_IsUnityAlphaOrBetaVersion_m3281FEF5765FFD207B8BDBB627CC6EDDF18688E0_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&String_t_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	String_t* V_0 = NULL;
	int32_t V_1 = 0;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_IsUnityAlphaOrBetaVersion_m3281FEF5765FFD207B8BDBB627CC6EDDF18688E0_RuntimeMethod_var, NULL, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10570));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10571));
	int32_t G_B6_0 = 0;
	int32_t G_B11_0 = 0;
	int32_t G_B13_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10572));
		// string ver = Application.unityVersion;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10573));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10574));
		String_t* L_0;
		L_0 = Application_get_unityVersion_m27BB3207901305BD239E1C3A74035E15CF3E5D21(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10574));
		V_0 = L_0;
		// int pos = ver.Length - 1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10575));
		String_t* L_1 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10576));
		NullCheck(L_1);
		int32_t L_2;
		L_2 = String_get_Length_m42625D67623FA5CC7A44D47425CE86FB946542D2_inline(L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10576));
		V_1 = ((int32_t)il2cpp_codegen_subtract(L_2, 1));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10577));
		goto IL_0018;
	}

IL_0012:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10578));
		// --pos;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10579));
		int32_t L_3 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_subtract(L_3, 1));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10580));
	}

IL_0018:
	{
		// while (pos >= 0 && ver[pos] >= '0' && ver[pos] <= '9')
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10581));
		int32_t L_4 = V_1;
		if ((((int32_t)L_4) < ((int32_t)0)))
		{
			goto IL_0037;
		}
	}
	{
		String_t* L_5 = V_0;
		int32_t L_6 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10582));
		NullCheck(L_5);
		Il2CppChar L_7;
		L_7 = String_get_Chars_mC49DF0CD2D3BE7BE97B3AD9C995BE3094F8E36D3(L_5, L_6, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10582));
		if ((((int32_t)L_7) < ((int32_t)((int32_t)48))))
		{
			goto IL_0037;
		}
	}
	{
		String_t* L_8 = V_0;
		int32_t L_9 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10583));
		NullCheck(L_8);
		Il2CppChar L_10;
		L_10 = String_get_Chars_mC49DF0CD2D3BE7BE97B3AD9C995BE3094F8E36D3(L_8, L_9, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10583));
		G_B6_0 = ((((int32_t)((((int32_t)L_10) > ((int32_t)((int32_t)57)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_0038;
	}

IL_0037:
	{
		G_B6_0 = 0;
	}

IL_0038:
	{
		V_2 = (bool)G_B6_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10584));
		bool L_11 = V_2;
		if (L_11)
		{
			goto IL_0012;
		}
	}
	{
		// if (pos >= 0 && (ver[pos] == 'a' || ver[pos] == 'b'))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10585));
		int32_t L_12 = V_1;
		if ((((int32_t)L_12) < ((int32_t)0)))
		{
			goto IL_005b;
		}
	}
	{
		String_t* L_13 = V_0;
		int32_t L_14 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10586));
		NullCheck(L_13);
		Il2CppChar L_15;
		L_15 = String_get_Chars_mC49DF0CD2D3BE7BE97B3AD9C995BE3094F8E36D3(L_13, L_14, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10586));
		if ((((int32_t)L_15) == ((int32_t)((int32_t)97))))
		{
			goto IL_0058;
		}
	}
	{
		String_t* L_16 = V_0;
		int32_t L_17 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10587));
		NullCheck(L_16);
		Il2CppChar L_18;
		L_18 = String_get_Chars_mC49DF0CD2D3BE7BE97B3AD9C995BE3094F8E36D3(L_16, L_17, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10587));
		G_B11_0 = ((((int32_t)L_18) == ((int32_t)((int32_t)98)))? 1 : 0);
		goto IL_0059;
	}

IL_0058:
	{
		G_B11_0 = 1;
	}

IL_0059:
	{
		G_B13_0 = G_B11_0;
		goto IL_005c;
	}

IL_005b:
	{
		G_B13_0 = 0;
	}

IL_005c:
	{
		V_3 = (bool)G_B13_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10588));
		bool L_19 = V_3;
		if (!L_19)
		{
			goto IL_0065;
		}
	}
	{
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10589));
		V_4 = (bool)1;
		goto IL_006a;
	}

IL_0065:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10590));
		V_4 = (bool)0;
		goto IL_006a;
	}

IL_006a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10591));
		bool L_20 = V_4;
		return L_20;
	}
}
// System.Void OVRManager::InitOVRManager()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_InitOVRManager_m70F462CB3521560EDE92D4C54EF0FAD199386053 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ColorSpace_t7351D379D27098BE44BB70202C671C9B8A08CF7B_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Component_GetComponent_TisOVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86_mF0B4099235709D379979102F6053FD6042D8A77C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Enumerable_Select_TisSingle_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_TisString_t_m3D07AA7226DDD2E4D23FF4442D7A928D78DA1B17_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Enumerable_ToArray_TisString_t_m3B23EE2DD15B2996E7D2ECA6E74696DA892AA194_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Func_2_t5ACB813DEA6873041E3CE5A28AE88A73E01E6EF8_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GameObject_AddComponent_TisOVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86_m9801277350485D9C445EC7E0035EFCF0579BC30E_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_InitOVRManager_m70F462CB3521560EDE92D4C54EF0FAD199386053_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&RuntimePlatform_t9A8AAF204603076FCAAECCCC05DA386AEE7BF66E_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&SystemHeadsetType_t94DE1BD46794DAB8066568DC0C1A901262286C7D_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&SystemHeadsetType_t94DE1BD46794DAB8066568DC0C1A901262286C7D_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&U3CU3Ec_U3CInitOVRManagerU3Eb__397_0_mA9C542074579D3180287A9E735E5FC689726D533_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&U3CU3Ec_t428B95F22B12C42F05233DE02507635B55BBBF98_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&UInt64_t8F12534CC8FC4B5860F2A2CD1EE79D322E7A41AF_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&XrApi_t93353E1C02725FC81E579B450694FDA6B04C2A34_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&XrApi_t93353E1C02725FC81E579B450694FDA6B04C2A34_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral15DF2734ECF23DFF69DE8832DEC083E2B599CFD2);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral2D7A8563F8863399BEE53651854D779097538730);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral6503A75D629CFD74F546E668BB2CBDE428F3F005);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral73CCF7683B641F8EA9A657A16C33A801DA0B08E4);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral758733BDBED83CBFF4F635AC26CA92AAE477F75D);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral81CAC178337D7DB2DE46BA16AA1C0CBA34FA4277);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralCA22BF385D12932E2D82C1C109AF5394C879FEA3);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralD51A5F81179392C785765556663B36E28DBF8E5F);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralEB4165285C60D41020FC1659B2ABB1D5BF5252BE);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralF3E84B722399601AD7E281754E917478AA9AD48D);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralF7BFD261E6576752064F5F2D59002F160C5DCA7B);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	int32_t V_1 = 0;
	bool V_2 = false;
	int32_t V_3 = 0;
	int32_t V_4 = 0;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	bool V_10 = false;
	OVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86* V_11 = NULL;
	bool V_12 = false;
	bool V_13 = false;
	bool V_14 = false;
	bool V_15 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_11));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_InitOVRManager_m70F462CB3521560EDE92D4C54EF0FAD199386053_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10592));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10593));
	Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* G_B4_0 = NULL;
	int32_t G_B4_1 = 0;
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* G_B4_2 = NULL;
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* G_B4_3 = NULL;
	Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* G_B3_0 = NULL;
	int32_t G_B3_1 = 0;
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* G_B3_2 = NULL;
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* G_B3_3 = NULL;
	String_t* G_B5_0 = NULL;
	int32_t G_B5_1 = 0;
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* G_B5_2 = NULL;
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* G_B5_3 = NULL;
	Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* G_B7_0 = NULL;
	int32_t G_B7_1 = 0;
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* G_B7_2 = NULL;
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* G_B7_3 = NULL;
	Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* G_B6_0 = NULL;
	int32_t G_B6_1 = 0;
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* G_B6_2 = NULL;
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* G_B6_3 = NULL;
	String_t* G_B8_0 = NULL;
	int32_t G_B8_1 = 0;
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* G_B8_2 = NULL;
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* G_B8_3 = NULL;
	Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* G_B10_0 = NULL;
	int32_t G_B10_1 = 0;
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* G_B10_2 = NULL;
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* G_B10_3 = NULL;
	Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* G_B9_0 = NULL;
	int32_t G_B9_1 = 0;
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* G_B9_2 = NULL;
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* G_B9_3 = NULL;
	String_t* G_B11_0 = NULL;
	int32_t G_B11_1 = 0;
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* G_B11_2 = NULL;
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* G_B11_3 = NULL;
	int32_t G_B21_0 = 0;
	Func_2_t5ACB813DEA6873041E3CE5A28AE88A73E01E6EF8* G_B28_0 = NULL;
	SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* G_B28_1 = NULL;
	String_t* G_B28_2 = NULL;
	int32_t G_B28_3 = 0;
	ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* G_B28_4 = NULL;
	ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* G_B28_5 = NULL;
	String_t* G_B28_6 = NULL;
	Func_2_t5ACB813DEA6873041E3CE5A28AE88A73E01E6EF8* G_B27_0 = NULL;
	SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* G_B27_1 = NULL;
	String_t* G_B27_2 = NULL;
	int32_t G_B27_3 = 0;
	ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* G_B27_4 = NULL;
	ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* G_B27_5 = NULL;
	String_t* G_B27_6 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10594));
		// if (instance != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10595));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10596));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* L_0;
		L_0 = OVRManager_get_instance_m642500A467C7D7B5B1C2763F2BA90C52BBF5381C_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10596));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10597));
		il2cpp_codegen_runtime_class_init_inline(Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		bool L_1;
		L_1 = Object_op_Inequality_mD0BE578448EAA61948F25C32F8DD55AB1F778602(L_0, (Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C*)NULL, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10597));
		V_2 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10598));
		bool L_2 = V_2;
		if (!L_2)
		{
			goto IL_0025;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10599));
		// enabled = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10600));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10601));
		Behaviour_set_enabled_mF1DCFE60EB09E0529FE9476CA804A3AA2D72B16A(__this, (bool)0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10601));
		// DestroyImmediate(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10602));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10603));
		il2cpp_codegen_runtime_class_init_inline(Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		Object_DestroyImmediate_m6336EBC83591A5DB64EC70C92132824C6E258705(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10603));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10604));
		goto IL_0304;
	}

IL_0025:
	{
		// instance = this;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10605));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10606));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRManager_set_instance_m268BE0B7206FEB81BA8B8EB5221AB2BA10E91E0E_inline(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10606));
		// runtimeSettings = OVRRuntimeSettings.GetRuntimeSettings();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10607));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10608));
		OVRRuntimeSettings_tC85E84DCFBF4DB2D4C3311CA39C96DEE89220EE1* L_3;
		L_3 = OVRRuntimeSettings_GetRuntimeSettings_m357C35DCF6941F52EDB4FD95F9FEBC78DDFE62AB(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10608));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10609));
		OVRManager_set_runtimeSettings_m66D09D518E906F1A50738B3BFA760EE8B117C469_inline(L_3, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10609));
		// Debug.Log("Unity v" + Application.unityVersion + ", " +
		//           "Oculus Utilities v" + OVRPlugin.wrapperVersion + ", " +
		//           "OVRPlugin v" + OVRPlugin.version + ", " +
		//           "SDK v" + OVRPlugin.nativeSDKVersion + ".");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10610));
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_4 = (StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248*)(StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248*)SZArrayNew(StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248_il2cpp_TypeInfo_var, (uint32_t)((int32_t)9));
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_5 = L_4;
		NullCheck(L_5);
		ArrayElementTypeCheck (L_5, _stringLiteralEB4165285C60D41020FC1659B2ABB1D5BF5252BE);
		(L_5)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteralEB4165285C60D41020FC1659B2ABB1D5BF5252BE);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_6 = L_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10611));
		String_t* L_7;
		L_7 = Application_get_unityVersion_m27BB3207901305BD239E1C3A74035E15CF3E5D21(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10611));
		NullCheck(L_6);
		ArrayElementTypeCheck (L_6, L_7);
		(L_6)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_7);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_8 = L_6;
		NullCheck(L_8);
		ArrayElementTypeCheck (L_8, _stringLiteralD51A5F81179392C785765556663B36E28DBF8E5F);
		(L_8)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralD51A5F81179392C785765556663B36E28DBF8E5F);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_9 = L_8;
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* L_10 = ((OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_StaticFields*)il2cpp_codegen_static_fields_for(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var))->___wrapperVersion_1;
		Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* L_11 = L_10;
		G_B3_0 = L_11;
		G_B3_1 = 3;
		G_B3_2 = L_9;
		G_B3_3 = L_9;
		if (L_11)
		{
			G_B4_0 = L_11;
			G_B4_1 = 3;
			G_B4_2 = L_9;
			G_B4_3 = L_9;
			goto IL_0064;
		}
	}
	{
		G_B5_0 = ((String_t*)(NULL));
		G_B5_1 = G_B3_1;
		G_B5_2 = G_B3_2;
		G_B5_3 = G_B3_3;
		goto IL_0069;
	}

IL_0064:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10612));
		NullCheck(G_B4_0);
		String_t* L_12;
		L_12 = VirtualFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, G_B4_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10612));
		G_B5_0 = L_12;
		G_B5_1 = G_B4_1;
		G_B5_2 = G_B4_2;
		G_B5_3 = G_B4_3;
	}

IL_0069:
	{
		NullCheck(G_B5_2);
		ArrayElementTypeCheck (G_B5_2, G_B5_0);
		(G_B5_2)->SetAt(static_cast<il2cpp_array_size_t>(G_B5_1), (String_t*)G_B5_0);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_13 = G_B5_3;
		NullCheck(L_13);
		ArrayElementTypeCheck (L_13, _stringLiteral15DF2734ECF23DFF69DE8832DEC083E2B599CFD2);
		(L_13)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral15DF2734ECF23DFF69DE8832DEC083E2B599CFD2);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_14 = L_13;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10613));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* L_15;
		L_15 = OVRPlugin_get_version_mF6424FE1E91DF97DE08CD5C7AE1FBC60873A354E(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10613));
		Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* L_16 = L_15;
		G_B6_0 = L_16;
		G_B6_1 = 5;
		G_B6_2 = L_14;
		G_B6_3 = L_14;
		if (L_16)
		{
			G_B7_0 = L_16;
			G_B7_1 = 5;
			G_B7_2 = L_14;
			G_B7_3 = L_14;
			goto IL_0080;
		}
	}
	{
		G_B8_0 = ((String_t*)(NULL));
		G_B8_1 = G_B6_1;
		G_B8_2 = G_B6_2;
		G_B8_3 = G_B6_3;
		goto IL_0085;
	}

IL_0080:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10614));
		NullCheck(G_B7_0);
		String_t* L_17;
		L_17 = VirtualFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, G_B7_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10614));
		G_B8_0 = L_17;
		G_B8_1 = G_B7_1;
		G_B8_2 = G_B7_2;
		G_B8_3 = G_B7_3;
	}

IL_0085:
	{
		NullCheck(G_B8_2);
		ArrayElementTypeCheck (G_B8_2, G_B8_0);
		(G_B8_2)->SetAt(static_cast<il2cpp_array_size_t>(G_B8_1), (String_t*)G_B8_0);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_18 = G_B8_3;
		NullCheck(L_18);
		ArrayElementTypeCheck (L_18, _stringLiteral6503A75D629CFD74F546E668BB2CBDE428F3F005);
		(L_18)->SetAt(static_cast<il2cpp_array_size_t>(6), (String_t*)_stringLiteral6503A75D629CFD74F546E668BB2CBDE428F3F005);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_19 = L_18;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10615));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* L_20;
		L_20 = OVRPlugin_get_nativeSDKVersion_mBE25B31B01647B580765EA355C508A235EB07E63(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10615));
		Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* L_21 = L_20;
		G_B9_0 = L_21;
		G_B9_1 = 7;
		G_B9_2 = L_19;
		G_B9_3 = L_19;
		if (L_21)
		{
			G_B10_0 = L_21;
			G_B10_1 = 7;
			G_B10_2 = L_19;
			G_B10_3 = L_19;
			goto IL_009c;
		}
	}
	{
		G_B11_0 = ((String_t*)(NULL));
		G_B11_1 = G_B9_1;
		G_B11_2 = G_B9_2;
		G_B11_3 = G_B9_3;
		goto IL_00a1;
	}

IL_009c:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10616));
		NullCheck(G_B10_0);
		String_t* L_22;
		L_22 = VirtualFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, G_B10_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10616));
		G_B11_0 = L_22;
		G_B11_1 = G_B10_1;
		G_B11_2 = G_B10_2;
		G_B11_3 = G_B10_3;
	}

IL_00a1:
	{
		NullCheck(G_B11_2);
		ArrayElementTypeCheck (G_B11_2, G_B11_0);
		(G_B11_2)->SetAt(static_cast<il2cpp_array_size_t>(G_B11_1), (String_t*)G_B11_0);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_23 = G_B11_3;
		NullCheck(L_23);
		ArrayElementTypeCheck (L_23, _stringLiteralF3E84B722399601AD7E281754E917478AA9AD48D);
		(L_23)->SetAt(static_cast<il2cpp_array_size_t>(8), (String_t*)_stringLiteralF3E84B722399601AD7E281754E917478AA9AD48D);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10617));
		String_t* L_24;
		L_24 = String_Concat_m647EBF831F54B6DF7D5AFA5FD012CF4EE7571B6A(L_23, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10617));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10618));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_Log_m87A9A3C761FF5C43ED8A53B16190A53D08F818BB(L_24, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10618));
		// Debug.LogFormat("SystemHeadset {0}, API {1}", systemHeadsetType.ToString(), xrApi.ToString());
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10619));
		ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* L_25 = (ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918*)(ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918*)SZArrayNew(ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918_il2cpp_TypeInfo_var, (uint32_t)2);
		ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* L_26 = L_25;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10620));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_27;
		L_27 = OVRManager_get_systemHeadsetType_mCF5CFA237F93EC8DE90C8F9241846C505C7388B1(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10620));
		V_3 = L_27;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10621));
		Il2CppFakeBox<int32_t> L_28(SystemHeadsetType_t94DE1BD46794DAB8066568DC0C1A901262286C7D_il2cpp_TypeInfo_var, (&V_3));
		String_t* L_29;
		L_29 = Enum_ToString_m946B0B83C4470457D0FF555D862022C72BB55741((Enum_t2A1A94B24E3B776EEF4E5E485E290BB9D4D072E2*)(&L_28), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10621));
		NullCheck(L_26);
		ArrayElementTypeCheck (L_26, L_29);
		(L_26)->SetAt(static_cast<il2cpp_array_size_t>(0), (RuntimeObject*)L_29);
		ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* L_30 = L_26;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10622));
		int32_t L_31;
		L_31 = OVRManager_get_xrApi_m727D2444A42B1D7E2D1EF3C3ECC493FDDA647712(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10622));
		V_4 = L_31;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10623));
		Il2CppFakeBox<int32_t> L_32(XrApi_t93353E1C02725FC81E579B450694FDA6B04C2A34_il2cpp_TypeInfo_var, (&V_4));
		String_t* L_33;
		L_33 = Enum_ToString_m946B0B83C4470457D0FF555D862022C72BB55741((Enum_t2A1A94B24E3B776EEF4E5E485E290BB9D4D072E2*)(&L_32), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10623));
		NullCheck(L_30);
		ArrayElementTypeCheck (L_30, L_33);
		(L_30)->SetAt(static_cast<il2cpp_array_size_t>(1), (RuntimeObject*)L_33);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10624));
		Debug_LogFormat_mD555556327B42AA3482D077EFAEB16B0AFDF72C7(_stringLiteral81CAC178337D7DB2DE46BA16AA1C0CBA34FA4277, L_30, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10624));
		// if (xrApi == XrApi.OpenXR)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10625));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10626));
		int32_t L_34;
		L_34 = OVRManager_get_xrApi_m727D2444A42B1D7E2D1EF3C3ECC493FDDA647712(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10626));
		V_5 = (bool)((((int32_t)L_34) == ((int32_t)3))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10627));
		bool L_35 = V_5;
		if (!L_35)
		{
			goto IL_0132;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10628));
		// Debug.LogFormat("OpenXR instance 0x{0:X} session 0x{1:X}", xrInstance, xrSession);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10629));
		ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* L_36 = (ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918*)(ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918*)SZArrayNew(ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918_il2cpp_TypeInfo_var, (uint32_t)2);
		ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* L_37 = L_36;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10630));
		uint64_t L_38;
		L_38 = OVRManager_get_xrInstance_m337F7A5B861DC2EA9D7FCB585ED53B1BE4D21547(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10630));
		uint64_t L_39 = L_38;
		RuntimeObject* L_40 = Box(UInt64_t8F12534CC8FC4B5860F2A2CD1EE79D322E7A41AF_il2cpp_TypeInfo_var, &L_39);
		NullCheck(L_37);
		ArrayElementTypeCheck (L_37, L_40);
		(L_37)->SetAt(static_cast<il2cpp_array_size_t>(0), (RuntimeObject*)L_40);
		ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* L_41 = L_37;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10631));
		uint64_t L_42;
		L_42 = OVRManager_get_xrSession_mF16F24B7F737FC50D705676638DD85179ABB9679(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10631));
		uint64_t L_43 = L_42;
		RuntimeObject* L_44 = Box(UInt64_t8F12534CC8FC4B5860F2A2CD1EE79D322E7A41AF_il2cpp_TypeInfo_var, &L_43);
		NullCheck(L_41);
		ArrayElementTypeCheck (L_41, L_44);
		(L_41)->SetAt(static_cast<il2cpp_array_size_t>(1), (RuntimeObject*)L_44);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10632));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_LogFormat_mD555556327B42AA3482D077EFAEB16B0AFDF72C7(_stringLiteral2D7A8563F8863399BEE53651854D779097538730, L_41, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10632));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10633));
	}

IL_0132:
	{
		// if (IsUnityAlphaOrBetaVersion())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10634));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10635));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_45;
		L_45 = OVRManager_IsUnityAlphaOrBetaVersion_m3281FEF5765FFD207B8BDBB627CC6EDDF18688E0(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10635));
		V_6 = L_45;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10636));
		bool L_46 = V_6;
		if (!L_46)
		{
			goto IL_014a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10637));
		// Debug.LogWarning(UnityAlphaOrBetaVersionWarningMessage);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10638));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		String_t* L_47 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___UnityAlphaOrBetaVersionWarningMessage_112;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10639));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_LogWarning_m33EF1B897E0C7C6FF538989610BFAFFEF4628CA9(L_47, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10639));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10640));
	}

IL_014a:
	{
		// RuntimePlatform currPlatform = Application.platform;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10641));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10642));
		int32_t L_48;
		L_48 = Application_get_platform_m59EF7D6155D18891B24767F83F388160B1FF2138(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10642));
		V_0 = L_48;
		// if (currPlatform == RuntimePlatform.Android ||
		//     // currPlatform == RuntimePlatform.LinuxPlayer ||
		//     currPlatform == RuntimePlatform.OSXEditor ||
		//     currPlatform == RuntimePlatform.OSXPlayer ||
		//     currPlatform == RuntimePlatform.WindowsEditor ||
		//     currPlatform == RuntimePlatform.WindowsPlayer)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10643));
		int32_t L_49 = V_0;
		if ((((int32_t)L_49) == ((int32_t)((int32_t)11))))
		{
			goto IL_0166;
		}
	}
	{
		int32_t L_50 = V_0;
		if (!L_50)
		{
			goto IL_0166;
		}
	}
	{
		int32_t L_51 = V_0;
		if ((((int32_t)L_51) == ((int32_t)1)))
		{
			goto IL_0166;
		}
	}
	{
		int32_t L_52 = V_0;
		if ((((int32_t)L_52) == ((int32_t)7)))
		{
			goto IL_0166;
		}
	}
	{
		int32_t L_53 = V_0;
		G_B21_0 = ((((int32_t)L_53) == ((int32_t)2))? 1 : 0);
		goto IL_0167;
	}

IL_0166:
	{
		G_B21_0 = 1;
	}

IL_0167:
	{
		V_7 = (bool)G_B21_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10644));
		bool L_54 = V_7;
		if (!L_54)
		{
			goto IL_0179;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10645));
		// isSupportedPlatform = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10646));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10647));
		OVRManager_set_isSupportedPlatform_mE8A33FC72544A424CC63ACAF84F71CEC1EC9CE6F_inline(__this, (bool)1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10647));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10648));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10649));
		goto IL_0183;
	}

IL_0179:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10650));
		// isSupportedPlatform = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10651));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10652));
		OVRManager_set_isSupportedPlatform_mE8A33FC72544A424CC63ACAF84F71CEC1EC9CE6F_inline(__this, (bool)0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10652));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10653));
	}

IL_0183:
	{
		// if (!isSupportedPlatform)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10654));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10655));
		bool L_55;
		L_55 = OVRManager_get_isSupportedPlatform_m6AE0B37666BB1660CCFC7F9EAD30E550C5D7FBFA_inline(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10655));
		V_8 = (bool)((((int32_t)L_55) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10656));
		bool L_56 = V_8;
		if (!L_56)
		{
			goto IL_01a3;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10657));
		// Debug.LogWarning("This platform is unsupported");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10658));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10659));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_LogWarning_m33EF1B897E0C7C6FF538989610BFAFFEF4628CA9(_stringLiteral73CCF7683B641F8EA9A657A16C33A801DA0B08E4, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10659));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10660));
		goto IL_0304;
	}

IL_01a3:
	{
		// chromatic = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10661));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10662));
		OVRManager_set_chromatic_mC1109A775529EF48476D51176DEC780678AAE0EF(__this, (bool)0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10662));
		// enableMixedReality = false;     // we should never start the standalone game in MxR mode, unless the command-line parameter is provided
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10663));
		__this->___enableMixedReality_51 = (bool)0;
		// StaticInitializeMixedRealityCapture(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10664));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10665));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRManager_StaticInitializeMixedRealityCapture_mECD5892929515DFF005276CD46C2B270F0F7A533(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10665));
		// Initialize();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10666));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10667));
		OVRManager_Initialize_m339CEB2C05C31DCDA1C4390EE2635DC90D538821(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10667));
		// InitPermissionRequest();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10668));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10669));
		OVRManager_InitPermissionRequest_m119AB6ECF8AC0DF7B5165493E5F285A734ABCEB5(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10669));
		// Debug.LogFormat("Current display frequency {0}, available frequencies [{1}]",
		//     display.displayFrequency, string.Join(", ", display.displayFrequenciesAvailable.Select(f => f.ToString()).ToArray()));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10670));
		ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* L_57 = (ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918*)(ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918*)SZArrayNew(ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918_il2cpp_TypeInfo_var, (uint32_t)2);
		ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* L_58 = L_57;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10671));
		OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27* L_59;
		L_59 = OVRManager_get_display_m1D17D6867547AC786E00A4CF60B863275AC1AF3D_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10671));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10672));
		NullCheck(L_59);
		float L_60;
		L_60 = OVRDisplay_get_displayFrequency_mEBAAEE931893607AEA59FEF00916CCEC79C8DF6B(L_59, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10672));
		float L_61 = L_60;
		RuntimeObject* L_62 = Box(Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_il2cpp_TypeInfo_var, &L_61);
		NullCheck(L_58);
		ArrayElementTypeCheck (L_58, L_62);
		(L_58)->SetAt(static_cast<il2cpp_array_size_t>(0), (RuntimeObject*)L_62);
		ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* L_63 = L_58;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10673));
		OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27* L_64;
		L_64 = OVRManager_get_display_m1D17D6867547AC786E00A4CF60B863275AC1AF3D_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10673));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10674));
		NullCheck(L_64);
		SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* L_65;
		L_65 = OVRDisplay_get_displayFrequenciesAvailable_mB0AD342C0A7F312A4F7215CA5DC4D8244CF9F9AE(L_64, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10674));
		il2cpp_codegen_runtime_class_init_inline(U3CU3Ec_t428B95F22B12C42F05233DE02507635B55BBBF98_il2cpp_TypeInfo_var);
		Func_2_t5ACB813DEA6873041E3CE5A28AE88A73E01E6EF8* L_66 = ((U3CU3Ec_t428B95F22B12C42F05233DE02507635B55BBBF98_StaticFields*)il2cpp_codegen_static_fields_for(U3CU3Ec_t428B95F22B12C42F05233DE02507635B55BBBF98_il2cpp_TypeInfo_var))->___U3CU3E9__397_0_1;
		Func_2_t5ACB813DEA6873041E3CE5A28AE88A73E01E6EF8* L_67 = L_66;
		G_B27_0 = L_67;
		G_B27_1 = L_65;
		G_B27_2 = _stringLiteral758733BDBED83CBFF4F635AC26CA92AAE477F75D;
		G_B27_3 = 1;
		G_B27_4 = L_63;
		G_B27_5 = L_63;
		G_B27_6 = _stringLiteralCA22BF385D12932E2D82C1C109AF5394C879FEA3;
		if (L_67)
		{
			G_B28_0 = L_67;
			G_B28_1 = L_65;
			G_B28_2 = _stringLiteral758733BDBED83CBFF4F635AC26CA92AAE477F75D;
			G_B28_3 = 1;
			G_B28_4 = L_63;
			G_B28_5 = L_63;
			G_B28_6 = _stringLiteralCA22BF385D12932E2D82C1C109AF5394C879FEA3;
			goto IL_0214;
		}
	}
	{
		il2cpp_codegen_runtime_class_init_inline(U3CU3Ec_t428B95F22B12C42F05233DE02507635B55BBBF98_il2cpp_TypeInfo_var);
		U3CU3Ec_t428B95F22B12C42F05233DE02507635B55BBBF98* L_68 = ((U3CU3Ec_t428B95F22B12C42F05233DE02507635B55BBBF98_StaticFields*)il2cpp_codegen_static_fields_for(U3CU3Ec_t428B95F22B12C42F05233DE02507635B55BBBF98_il2cpp_TypeInfo_var))->___U3CU3E9_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10675));
		Func_2_t5ACB813DEA6873041E3CE5A28AE88A73E01E6EF8* L_69 = (Func_2_t5ACB813DEA6873041E3CE5A28AE88A73E01E6EF8*)il2cpp_codegen_object_new(Func_2_t5ACB813DEA6873041E3CE5A28AE88A73E01E6EF8_il2cpp_TypeInfo_var);
		NullCheck(L_69);
		Func_2__ctor_mE82649E276996E9D5EACA7C8F5B15E20B28BE28D(L_69, L_68, (intptr_t)((void*)U3CU3Ec_U3CInitOVRManagerU3Eb__397_0_mA9C542074579D3180287A9E735E5FC689726D533_RuntimeMethod_var), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10675));
		Func_2_t5ACB813DEA6873041E3CE5A28AE88A73E01E6EF8* L_70 = L_69;
		((U3CU3Ec_t428B95F22B12C42F05233DE02507635B55BBBF98_StaticFields*)il2cpp_codegen_static_fields_for(U3CU3Ec_t428B95F22B12C42F05233DE02507635B55BBBF98_il2cpp_TypeInfo_var))->___U3CU3E9__397_0_1 = L_70;
		Il2CppCodeGenWriteBarrier((void**)(&((U3CU3Ec_t428B95F22B12C42F05233DE02507635B55BBBF98_StaticFields*)il2cpp_codegen_static_fields_for(U3CU3Ec_t428B95F22B12C42F05233DE02507635B55BBBF98_il2cpp_TypeInfo_var))->___U3CU3E9__397_0_1), (void*)L_70);
		G_B28_0 = L_70;
		G_B28_1 = G_B27_1;
		G_B28_2 = G_B27_2;
		G_B28_3 = G_B27_3;
		G_B28_4 = G_B27_4;
		G_B28_5 = G_B27_5;
		G_B28_6 = G_B27_6;
	}

IL_0214:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10676));
		RuntimeObject* L_71;
		L_71 = Enumerable_Select_TisSingle_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_TisString_t_m3D07AA7226DDD2E4D23FF4442D7A928D78DA1B17((RuntimeObject*)G_B28_1, G_B28_0, Enumerable_Select_TisSingle_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_TisString_t_m3D07AA7226DDD2E4D23FF4442D7A928D78DA1B17_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10676));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10677));
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_72;
		L_72 = Enumerable_ToArray_TisString_t_m3B23EE2DD15B2996E7D2ECA6E74696DA892AA194(L_71, Enumerable_ToArray_TisString_t_m3B23EE2DD15B2996E7D2ECA6E74696DA892AA194_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10677));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10678));
		String_t* L_73;
		L_73 = String_Join_m557B6B554B87C1742FA0B128500073B421ED0BFD(G_B28_2, L_72, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10678));
		NullCheck(G_B28_4);
		ArrayElementTypeCheck (G_B28_4, L_73);
		(G_B28_4)->SetAt(static_cast<il2cpp_array_size_t>(G_B28_3), (RuntimeObject*)L_73);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10679));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_LogFormat_mD555556327B42AA3482D077EFAEB16B0AFDF72C7(G_B28_6, G_B28_5, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10679));
		// if (resetTrackerOnLoad)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10680));
		bool L_74 = __this->___resetTrackerOnLoad_98;
		V_9 = L_74;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10681));
		bool L_75 = V_9;
		if (!L_75)
		{
			goto IL_0241;
		}
	}
	{
		// display.RecenterPose();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10682));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10683));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27* L_76;
		L_76 = OVRManager_get_display_m1D17D6867547AC786E00A4CF60B863275AC1AF3D_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10683));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10684));
		NullCheck(L_76);
		OVRDisplay_RecenterPose_m5D4F83D11B52934020DD34569B60A8E0D2E0FD82(L_76, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10684));
	}

IL_0241:
	{
		// if (Debug.isDebugBuild)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10685));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10686));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		bool L_77;
		L_77 = Debug_get_isDebugBuild_m9277C4A9591F7E1D8B76340B4CAE5EA33D63AF01(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10686));
		V_10 = L_77;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10687));
		bool L_78 = V_10;
		if (!L_78)
		{
			goto IL_02a5;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10688));
		// if (GetComponent<OVRSystemPerfMetrics.OVRSystemPerfMetricsTcpServer>() == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10689));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10690));
		OVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86* L_79;
		L_79 = Component_GetComponent_TisOVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86_mF0B4099235709D379979102F6053FD6042D8A77C(__this, Component_GetComponent_TisOVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86_mF0B4099235709D379979102F6053FD6042D8A77C_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10690));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10691));
		il2cpp_codegen_runtime_class_init_inline(Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		bool L_80;
		L_80 = Object_op_Equality_mB6120F782D83091EF56A198FCEBCF066DB4A9605(L_79, (Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C*)NULL, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10691));
		V_12 = L_80;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10692));
		bool L_81 = V_12;
		if (!L_81)
		{
			goto IL_026d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10693));
		// gameObject.AddComponent<OVRSystemPerfMetrics.OVRSystemPerfMetricsTcpServer>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10694));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10695));
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_82;
		L_82 = Component_get_gameObject_m57AEFBB14DB39EC476F740BA000E170355DE691B(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10695));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10696));
		NullCheck(L_82);
		OVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86* L_83;
		L_83 = GameObject_AddComponent_TisOVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86_m9801277350485D9C445EC7E0035EFCF0579BC30E(L_82, GameObject_AddComponent_TisOVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86_m9801277350485D9C445EC7E0035EFCF0579BC30E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10696));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10697));
	}

IL_026d:
	{
		// OVRSystemPerfMetrics.OVRSystemPerfMetricsTcpServer perfTcpServer = GetComponent<OVRSystemPerfMetrics.OVRSystemPerfMetricsTcpServer>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10698));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10699));
		OVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86* L_84;
		L_84 = Component_GetComponent_TisOVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86_mF0B4099235709D379979102F6053FD6042D8A77C(__this, Component_GetComponent_TisOVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86_mF0B4099235709D379979102F6053FD6042D8A77C_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10699));
		V_11 = L_84;
		// perfTcpServer.listeningPort = profilerTcpPort;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10700));
		OVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86* L_85 = V_11;
		int32_t L_86 = __this->___profilerTcpPort_49;
		NullCheck(L_85);
		L_85->___listeningPort_6 = L_86;
		// if (!perfTcpServer.enabled)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10701));
		OVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86* L_87 = V_11;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10702));
		NullCheck(L_87);
		bool L_88;
		L_88 = Behaviour_get_enabled_mAAC9F15E9EBF552217A5AE2681589CC0BFA300C1(L_87, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10702));
		V_13 = (bool)((((int32_t)L_88) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10703));
		bool L_89 = V_13;
		if (!L_89)
		{
			goto IL_029d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10704));
		// perfTcpServer.enabled = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10705));
		OVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86* L_90 = V_11;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10706));
		NullCheck(L_90);
		Behaviour_set_enabled_mF1DCFE60EB09E0529FE9476CA804A3AA2D72B16A(L_90, (bool)1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10706));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10707));
	}

IL_029d:
	{
		// OVRPlugin.SetDeveloperMode(OVRPlugin.Bool.True);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10708));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10709));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_91;
		L_91 = OVRPlugin_SetDeveloperMode_m666BA62AB965FE5E7E2857C29F619EE186CC8155(1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10709));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10710));
	}

IL_02a5:
	{
		// OVRManager.ColorSpace clientColorSpace = runtimeSettings.colorSpace;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10711));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10712));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRRuntimeSettings_tC85E84DCFBF4DB2D4C3311CA39C96DEE89220EE1* L_92;
		L_92 = OVRManager_get_runtimeSettings_m6DFAF39BFB4B75B251235D43B02696D70BFA897A_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10712));
		NullCheck(L_92);
		int32_t L_93 = L_92->___colorSpace_4;
		V_1 = L_93;
		// colorGamut = clientColorSpace;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10713));
		int32_t L_94 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10714));
		OVRManager_set_colorGamut_m12885C55A4AF562CF4DA969CE3DFE90B2905509F(__this, L_94, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10714));
		// if (isInsightPassthroughEnabled)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10715));
		bool L_95 = __this->___isInsightPassthroughEnabled_79;
		V_14 = L_95;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10716));
		bool L_96 = V_14;
		if (!L_96)
		{
			goto IL_02cc;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10717));
		// InitializeInsightPassthrough();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10718));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10719));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_97;
		L_97 = OVRManager_InitializeInsightPassthrough_m016E6C16576A1E4F6B7871E7FDE7D2671119F67E(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10719));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10720));
	}

IL_02cc:
	{
		// if (!OVRPlugin.localDimmingSupported)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10721));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10722));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_98;
		L_98 = OVRPlugin_get_localDimmingSupported_m33C94209109E4B84E3F531A9005747FF38D6D75C(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10722));
		V_15 = (bool)((((int32_t)L_98) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10723));
		bool L_99 = V_15;
		if (!L_99)
		{
			goto IL_02f0;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10724));
		// Debug.LogWarning("Local Dimming feature is not supported");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10725));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10726));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_LogWarning_m33EF1B897E0C7C6FF538989610BFAFFEF4628CA9(_stringLiteralF7BFD261E6576752064F5F2D59002F160C5DCA7B, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10726));
		// _localDimming = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10727));
		__this->____localDimming_93 = (bool)0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10728));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10729));
		goto IL_02fe;
	}

IL_02f0:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10730));
		// OVRPlugin.localDimming = _localDimming;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10731));
		bool L_100 = __this->____localDimming_93;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10732));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		OVRPlugin_set_localDimming_mB802F316C5988ACA499BA45E7B9D6590570025AB(L_100, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10732));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10733));
	}

IL_02fe:
	{
		// OVRManagerinitialized = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10734));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___OVRManagerinitialized_113 = (bool)1;
	}

IL_0304:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10735));
		return;
	}
}
// System.Void OVRManager::InitPermissionRequest()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_InitPermissionRequest_m119AB6ECF8AC0DF7B5165493E5F285A734ABCEB5 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&HashSet_1_Add_m4DBD371950A207F1A5A02780C893698D95AE38CA_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&HashSet_1__ctor_mBF244C9F5A32AFAC08C7E26F547F642E66B3A293_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&HashSet_1_t8CCE4B1A7C21C55C1F50A4850C846D17B4943076_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&HashSet_1_t8CCE4B1A7C21C55C1F50A4850C846D17B4943076_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_InitPermissionRequest_m119AB6ECF8AC0DF7B5165493E5F285A734ABCEB5_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	HashSet_1_t8CCE4B1A7C21C55C1F50A4850C846D17B4943076* V_0 = NULL;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_InitPermissionRequest_m119AB6ECF8AC0DF7B5165493E5F285A734ABCEB5_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10736));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10737));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10738));
		// var permissions = new HashSet<OVRPermissionsRequester.Permission>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10739));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10740));
		HashSet_1_t8CCE4B1A7C21C55C1F50A4850C846D17B4943076* L_0 = (HashSet_1_t8CCE4B1A7C21C55C1F50A4850C846D17B4943076*)il2cpp_codegen_object_new(HashSet_1_t8CCE4B1A7C21C55C1F50A4850C846D17B4943076_il2cpp_TypeInfo_var);
		NullCheck(L_0);
		HashSet_1__ctor_mBF244C9F5A32AFAC08C7E26F547F642E66B3A293(L_0, HashSet_1__ctor_mBF244C9F5A32AFAC08C7E26F547F642E66B3A293_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10740));
		V_0 = L_0;
		// if (requestBodyTrackingPermissionOnStartup)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10741));
		bool L_1 = __this->___requestBodyTrackingPermissionOnStartup_80;
		V_1 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10742));
		bool L_2 = V_1;
		if (!L_2)
		{
			goto IL_001b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10743));
		// permissions.Add(OVRPermissionsRequester.Permission.BodyTracking);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10744));
		HashSet_1_t8CCE4B1A7C21C55C1F50A4850C846D17B4943076* L_3 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10745));
		NullCheck(L_3);
		bool L_4;
		L_4 = HashSet_1_Add_m4DBD371950A207F1A5A02780C893698D95AE38CA(L_3, 1, HashSet_1_Add_m4DBD371950A207F1A5A02780C893698D95AE38CA_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10745));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10746));
	}

IL_001b:
	{
		// if (requestFaceTrackingPermissionOnStartup)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10747));
		bool L_5 = __this->___requestFaceTrackingPermissionOnStartup_81;
		V_2 = L_5;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10748));
		bool L_6 = V_2;
		if (!L_6)
		{
			goto IL_002f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10749));
		// permissions.Add(OVRPermissionsRequester.Permission.FaceTracking);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10750));
		HashSet_1_t8CCE4B1A7C21C55C1F50A4850C846D17B4943076* L_7 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10751));
		NullCheck(L_7);
		bool L_8;
		L_8 = HashSet_1_Add_m4DBD371950A207F1A5A02780C893698D95AE38CA(L_7, 0, HashSet_1_Add_m4DBD371950A207F1A5A02780C893698D95AE38CA_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10751));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10752));
	}

IL_002f:
	{
		// if (requestEyeTrackingPermissionOnStartup)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10753));
		bool L_9 = __this->___requestEyeTrackingPermissionOnStartup_82;
		V_3 = L_9;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10754));
		bool L_10 = V_3;
		if (!L_10)
		{
			goto IL_0043;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10755));
		// permissions.Add(OVRPermissionsRequester.Permission.EyeTracking);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10756));
		HashSet_1_t8CCE4B1A7C21C55C1F50A4850C846D17B4943076* L_11 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10757));
		NullCheck(L_11);
		bool L_12;
		L_12 = HashSet_1_Add_m4DBD371950A207F1A5A02780C893698D95AE38CA(L_11, 2, HashSet_1_Add_m4DBD371950A207F1A5A02780C893698D95AE38CA_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10757));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10758));
	}

IL_0043:
	{
		// OVRPermissionsRequester.Request(permissions);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10759));
		HashSet_1_t8CCE4B1A7C21C55C1F50A4850C846D17B4943076* L_13 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10760));
		OVRPermissionsRequester_Request_mE24346F59325F8846898FF68A44ABE4295695906(L_13, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10760));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10761));
		return;
	}
}
// System.Void OVRManager::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_Awake_mA05D8839D3601DAB90A8782566C092B01B462F9C (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_Awake_mA05D8839D3601DAB90A8782566C092B01B462F9C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_Awake_mA05D8839D3601DAB90A8782566C092B01B462F9C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10762));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10763));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10764));
		// if (OVRPlugin.initialized)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10765));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10766));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRPlugin_get_initialized_m7D7AAEEED41ED4B5798882B6038CF169E2BF0443(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10766));
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10767));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0011;
		}
	}
	{
		// InitOVRManager();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10768));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10769));
		OVRManager_InitOVRManager_m70F462CB3521560EDE92D4C54EF0FAD199386053(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10769));
	}

IL_0011:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10770));
		return;
	}
}
// System.Void OVRManager::SetCurrentXRDevice()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_SetCurrentXRDevice_m28B26EC00E7F673A3AF5DEE7D732EDFA987E427F (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_SetCurrentXRDevice_m28B26EC00E7F673A3AF5DEE7D732EDFA987E427F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&String_t_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&XRDisplaySubsystemDescriptor_t72DD88EE9094488AE723A495F48884BA4EA8311A_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&XRDisplaySubsystem_t4B00B0BF1894A039ACFA8DDC2C2EB9301118C1F1_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	XRDisplaySubsystem_t4B00B0BF1894A039ACFA8DDC2C2EB9301118C1F1* V_0 = NULL;
	XRDisplaySubsystemDescriptor_t72DD88EE9094488AE723A495F48884BA4EA8311A* V_1 = NULL;
	bool V_2 = false;
	bool V_3 = false;
	String_t* V_4 = NULL;
	bool V_5 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_SetCurrentXRDevice_m28B26EC00E7F673A3AF5DEE7D732EDFA987E427F_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10771));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10772));
	int32_t G_B6_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10773));
		// XRDisplaySubsystem currentDisplaySubsystem = GetCurrentDisplaySubsystem();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10774));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10775));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		XRDisplaySubsystem_t4B00B0BF1894A039ACFA8DDC2C2EB9301118C1F1* L_0;
		L_0 = OVRManager_GetCurrentDisplaySubsystem_m9DF732778B060759D2E11E04E49A39A43451CAA8(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10775));
		V_0 = L_0;
		// XRDisplaySubsystemDescriptor currentDisplaySubsystemDescriptor = GetCurrentDisplaySubsystemDescriptor();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10776));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10777));
		XRDisplaySubsystemDescriptor_t72DD88EE9094488AE723A495F48884BA4EA8311A* L_1;
		L_1 = OVRManager_GetCurrentDisplaySubsystemDescriptor_m774D6D4F85D85E72BCF228C576EAAF55E3CD978E(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10777));
		V_1 = L_1;
		// if (OVRPlugin.initialized)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10778));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10779));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = OVRPlugin_get_initialized_m7D7AAEEED41ED4B5798882B6038CF169E2BF0443(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10779));
		V_2 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10780));
		bool L_3 = V_2;
		if (!L_3)
		{
			goto IL_0020;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10781));
		// loadedXRDevice = XRDevice.Oculus;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10782));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___loadedXRDevice_85 = 1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10783));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10784));
		goto IL_0067;
	}

IL_0020:
	{
		// else if (currentDisplaySubsystem != null && currentDisplaySubsystemDescriptor != null && currentDisplaySubsystem.running)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10785));
		XRDisplaySubsystem_t4B00B0BF1894A039ACFA8DDC2C2EB9301118C1F1* L_4 = V_0;
		if (!L_4)
		{
			goto IL_002e;
		}
	}
	{
		XRDisplaySubsystemDescriptor_t72DD88EE9094488AE723A495F48884BA4EA8311A* L_5 = V_1;
		if (!L_5)
		{
			goto IL_002e;
		}
	}
	{
		XRDisplaySubsystem_t4B00B0BF1894A039ACFA8DDC2C2EB9301118C1F1* L_6 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10786));
		NullCheck(L_6);
		bool L_7;
		L_7 = IntegratedSubsystem_get_running_m18AA0D7AD1CB593DC9EE5F3DC79643717509D6E8(L_6, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10786));
		G_B6_0 = ((int32_t)(L_7));
		goto IL_002f;
	}

IL_002e:
	{
		G_B6_0 = 0;
	}

IL_002f:
	{
		V_3 = (bool)G_B6_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10787));
		bool L_8 = V_3;
		if (!L_8)
		{
			goto IL_005f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10788));
		// string loadedXRDeviceName = currentDisplaySubsystemDescriptor.id;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10789));
		XRDisplaySubsystemDescriptor_t72DD88EE9094488AE723A495F48884BA4EA8311A* L_9 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10790));
		NullCheck(L_9);
		String_t* L_10;
		L_10 = IntegratedSubsystemDescriptor_get_id_m89DBA940C79ED7EFE1137E3EC4A5A53BF7052F15(L_9, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10790));
		V_4 = L_10;
		// if (loadedXRDeviceName == OPENVR_UNITY_NAME_STR)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10791));
		String_t* L_11 = V_4;
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		String_t* L_12 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___OPENVR_UNITY_NAME_STR_84;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10792));
		bool L_13;
		L_13 = String_op_Equality_m030E1B219352228970A076136E455C4E568C02C1(L_11, L_12, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10792));
		V_5 = L_13;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10793));
		bool L_14 = V_5;
		if (!L_14)
		{
			goto IL_0056;
		}
	}
	{
		// loadedXRDevice = XRDevice.OpenVR;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10794));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___loadedXRDevice_85 = 2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10795));
		goto IL_005c;
	}

IL_0056:
	{
		// loadedXRDevice = XRDevice.Unknown;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10796));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___loadedXRDevice_85 = 0;
	}

IL_005c:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10797));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10798));
		goto IL_0067;
	}

IL_005f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10799));
		// loadedXRDevice = XRDevice.Unknown;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10800));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___loadedXRDevice_85 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10801));
	}

IL_0067:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10802));
		return;
	}
}
// UnityEngine.XR.XRDisplaySubsystem OVRManager::GetCurrentDisplaySubsystem()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR XRDisplaySubsystem_t4B00B0BF1894A039ACFA8DDC2C2EB9301118C1F1* OVRManager_GetCurrentDisplaySubsystem_m9DF732778B060759D2E11E04E49A39A43451CAA8 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1__ctor_mBE7647ECE0B8ABB952EDC379472F9E541D41D6DF_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Count_mE580FBE05EB71FB41AAE62A9AD4C5A7594C8D27C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Item_m1C04F2A2E6107833BE00F3C7EAE72DAF048AC643_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_tA7666C6690CE2AEE97571615AD3AFCE2BB020597_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_GetCurrentDisplaySubsystem_m9DF732778B060759D2E11E04E49A39A43451CAA8_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&SubsystemManager_GetInstances_TisXRDisplaySubsystem_t4B00B0BF1894A039ACFA8DDC2C2EB9301118C1F1_mCDFAF63EF2A2778CA3677E75360BC7961FCB3370_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&SubsystemManager_t9A7261E4D0B53B996F04B8707D8E1C33AB65E824_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&XRDisplaySubsystem_t4B00B0BF1894A039ACFA8DDC2C2EB9301118C1F1_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	XRDisplaySubsystem_t4B00B0BF1894A039ACFA8DDC2C2EB9301118C1F1* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_GetCurrentDisplaySubsystem_m9DF732778B060759D2E11E04E49A39A43451CAA8_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10803));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10804));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10805));
		// if (s_displaySubsystems == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10806));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		List_1_tA7666C6690CE2AEE97571615AD3AFCE2BB020597* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___s_displaySubsystems_114;
		V_0 = (bool)((((RuntimeObject*)(List_1_tA7666C6690CE2AEE97571615AD3AFCE2BB020597*)L_0) == ((RuntimeObject*)(RuntimeObject*)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10807));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0017;
		}
	}
	{
		// s_displaySubsystems = new List<XRDisplaySubsystem>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10808));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10809));
		List_1_tA7666C6690CE2AEE97571615AD3AFCE2BB020597* L_2 = (List_1_tA7666C6690CE2AEE97571615AD3AFCE2BB020597*)il2cpp_codegen_object_new(List_1_tA7666C6690CE2AEE97571615AD3AFCE2BB020597_il2cpp_TypeInfo_var);
		NullCheck(L_2);
		List_1__ctor_mBE7647ECE0B8ABB952EDC379472F9E541D41D6DF(L_2, List_1__ctor_mBE7647ECE0B8ABB952EDC379472F9E541D41D6DF_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10809));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___s_displaySubsystems_114 = L_2;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___s_displaySubsystems_114), (void*)L_2);
	}

IL_0017:
	{
		// SubsystemManager.GetInstances(s_displaySubsystems);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10810));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		List_1_tA7666C6690CE2AEE97571615AD3AFCE2BB020597* L_3 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___s_displaySubsystems_114;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10811));
		il2cpp_codegen_runtime_class_init_inline(SubsystemManager_t9A7261E4D0B53B996F04B8707D8E1C33AB65E824_il2cpp_TypeInfo_var);
		SubsystemManager_GetInstances_TisXRDisplaySubsystem_t4B00B0BF1894A039ACFA8DDC2C2EB9301118C1F1_mCDFAF63EF2A2778CA3677E75360BC7961FCB3370(L_3, SubsystemManager_GetInstances_TisXRDisplaySubsystem_t4B00B0BF1894A039ACFA8DDC2C2EB9301118C1F1_mCDFAF63EF2A2778CA3677E75360BC7961FCB3370_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10811));
		// if (s_displaySubsystems.Count > 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10812));
		List_1_tA7666C6690CE2AEE97571615AD3AFCE2BB020597* L_4 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___s_displaySubsystems_114;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10813));
		NullCheck(L_4);
		int32_t L_5;
		L_5 = List_1_get_Count_mE580FBE05EB71FB41AAE62A9AD4C5A7594C8D27C_inline(L_4, List_1_get_Count_mE580FBE05EB71FB41AAE62A9AD4C5A7594C8D27C_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10813));
		V_1 = (bool)((((int32_t)L_5) > ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10814));
		bool L_6 = V_1;
		if (!L_6)
		{
			goto IL_0041;
		}
	}
	{
		// return s_displaySubsystems[0];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10815));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		List_1_tA7666C6690CE2AEE97571615AD3AFCE2BB020597* L_7 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___s_displaySubsystems_114;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10816));
		NullCheck(L_7);
		XRDisplaySubsystem_t4B00B0BF1894A039ACFA8DDC2C2EB9301118C1F1* L_8;
		L_8 = List_1_get_Item_m1C04F2A2E6107833BE00F3C7EAE72DAF048AC643(L_7, 0, List_1_get_Item_m1C04F2A2E6107833BE00F3C7EAE72DAF048AC643_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10816));
		V_2 = L_8;
		goto IL_0045;
	}

IL_0041:
	{
		// return null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10817));
		V_2 = (XRDisplaySubsystem_t4B00B0BF1894A039ACFA8DDC2C2EB9301118C1F1*)NULL;
		goto IL_0045;
	}

IL_0045:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10818));
		XRDisplaySubsystem_t4B00B0BF1894A039ACFA8DDC2C2EB9301118C1F1* L_9 = V_2;
		return L_9;
	}
}
// UnityEngine.XR.XRDisplaySubsystemDescriptor OVRManager::GetCurrentDisplaySubsystemDescriptor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR XRDisplaySubsystemDescriptor_t72DD88EE9094488AE723A495F48884BA4EA8311A* OVRManager_GetCurrentDisplaySubsystemDescriptor_m774D6D4F85D85E72BCF228C576EAAF55E3CD978E (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1__ctor_m3E15C72C5BBB246B014CD4F0B141BD78A648B773_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Count_mDFAC96AD60DE7FED9378059AEE6864673962A7B8_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Item_mBE983C6BF89F37B1D3390A1F3CF1B689D080701E_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_tC3F021D09EFA4F3516555517B5E0D39308C9C1B4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_GetCurrentDisplaySubsystemDescriptor_m774D6D4F85D85E72BCF228C576EAAF55E3CD978E_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&SubsystemManager_GetSubsystemDescriptors_TisXRDisplaySubsystemDescriptor_t72DD88EE9094488AE723A495F48884BA4EA8311A_mE88F154272DC98DD50249B29599ABD64EA6DDC55_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&SubsystemManager_t9A7261E4D0B53B996F04B8707D8E1C33AB65E824_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&XRDisplaySubsystemDescriptor_t72DD88EE9094488AE723A495F48884BA4EA8311A_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	XRDisplaySubsystemDescriptor_t72DD88EE9094488AE723A495F48884BA4EA8311A* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_GetCurrentDisplaySubsystemDescriptor_m774D6D4F85D85E72BCF228C576EAAF55E3CD978E_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10819));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10820));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10821));
		// if (s_displaySubsystemDescriptors == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10822));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		List_1_tC3F021D09EFA4F3516555517B5E0D39308C9C1B4* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___s_displaySubsystemDescriptors_115;
		V_0 = (bool)((((RuntimeObject*)(List_1_tC3F021D09EFA4F3516555517B5E0D39308C9C1B4*)L_0) == ((RuntimeObject*)(RuntimeObject*)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10823));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0017;
		}
	}
	{
		// s_displaySubsystemDescriptors = new List<XRDisplaySubsystemDescriptor>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10824));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10825));
		List_1_tC3F021D09EFA4F3516555517B5E0D39308C9C1B4* L_2 = (List_1_tC3F021D09EFA4F3516555517B5E0D39308C9C1B4*)il2cpp_codegen_object_new(List_1_tC3F021D09EFA4F3516555517B5E0D39308C9C1B4_il2cpp_TypeInfo_var);
		NullCheck(L_2);
		List_1__ctor_m3E15C72C5BBB246B014CD4F0B141BD78A648B773(L_2, List_1__ctor_m3E15C72C5BBB246B014CD4F0B141BD78A648B773_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10825));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___s_displaySubsystemDescriptors_115 = L_2;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___s_displaySubsystemDescriptors_115), (void*)L_2);
	}

IL_0017:
	{
		// SubsystemManager.GetSubsystemDescriptors(s_displaySubsystemDescriptors);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10826));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		List_1_tC3F021D09EFA4F3516555517B5E0D39308C9C1B4* L_3 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___s_displaySubsystemDescriptors_115;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10827));
		il2cpp_codegen_runtime_class_init_inline(SubsystemManager_t9A7261E4D0B53B996F04B8707D8E1C33AB65E824_il2cpp_TypeInfo_var);
		SubsystemManager_GetSubsystemDescriptors_TisXRDisplaySubsystemDescriptor_t72DD88EE9094488AE723A495F48884BA4EA8311A_mE88F154272DC98DD50249B29599ABD64EA6DDC55(L_3, SubsystemManager_GetSubsystemDescriptors_TisXRDisplaySubsystemDescriptor_t72DD88EE9094488AE723A495F48884BA4EA8311A_mE88F154272DC98DD50249B29599ABD64EA6DDC55_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10827));
		// if (s_displaySubsystemDescriptors.Count > 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10828));
		List_1_tC3F021D09EFA4F3516555517B5E0D39308C9C1B4* L_4 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___s_displaySubsystemDescriptors_115;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10829));
		NullCheck(L_4);
		int32_t L_5;
		L_5 = List_1_get_Count_mDFAC96AD60DE7FED9378059AEE6864673962A7B8_inline(L_4, List_1_get_Count_mDFAC96AD60DE7FED9378059AEE6864673962A7B8_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10829));
		V_1 = (bool)((((int32_t)L_5) > ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10830));
		bool L_6 = V_1;
		if (!L_6)
		{
			goto IL_0041;
		}
	}
	{
		// return s_displaySubsystemDescriptors[0];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10831));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		List_1_tC3F021D09EFA4F3516555517B5E0D39308C9C1B4* L_7 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___s_displaySubsystemDescriptors_115;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10832));
		NullCheck(L_7);
		XRDisplaySubsystemDescriptor_t72DD88EE9094488AE723A495F48884BA4EA8311A* L_8;
		L_8 = List_1_get_Item_mBE983C6BF89F37B1D3390A1F3CF1B689D080701E(L_7, 0, List_1_get_Item_mBE983C6BF89F37B1D3390A1F3CF1B689D080701E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10832));
		V_2 = L_8;
		goto IL_0045;
	}

IL_0041:
	{
		// return null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10833));
		V_2 = (XRDisplaySubsystemDescriptor_t72DD88EE9094488AE723A495F48884BA4EA8311A*)NULL;
		goto IL_0045;
	}

IL_0045:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10834));
		XRDisplaySubsystemDescriptor_t72DD88EE9094488AE723A495F48884BA4EA8311A* L_9 = V_2;
		return L_9;
	}
}
// UnityEngine.XR.XRInputSubsystem OVRManager::GetCurrentInputSubsystem()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR XRInputSubsystem_tFECE6683FCAEBF05BAD05E5D612690095D8BAD34* OVRManager_GetCurrentInputSubsystem_m6343BBB6BBB22C59B70C2502CCFF5D0073B7272D (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1__ctor_mC249FC827BC3BE999A938F8B5BD884F8AA0CB7FA_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Count_mF8DDB0BDC273D655115D5E62307ADF657EC28DE5_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Item_m69C3B0FCDB85116A8F7AB368DC33EBCC27556F0E_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_t90832B88D7207769654164CC28440CF594CC397D_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_GetCurrentInputSubsystem_m6343BBB6BBB22C59B70C2502CCFF5D0073B7272D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&SubsystemManager_GetInstances_TisXRInputSubsystem_tFECE6683FCAEBF05BAD05E5D612690095D8BAD34_mE4E3C5739928E93E572D92105A4D3BAC7FC877AF_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&SubsystemManager_t9A7261E4D0B53B996F04B8707D8E1C33AB65E824_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&XRInputSubsystem_tFECE6683FCAEBF05BAD05E5D612690095D8BAD34_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	XRInputSubsystem_tFECE6683FCAEBF05BAD05E5D612690095D8BAD34* V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_GetCurrentInputSubsystem_m6343BBB6BBB22C59B70C2502CCFF5D0073B7272D_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10835));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10836));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10837));
		// if (s_inputSubsystems == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10838));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		List_1_t90832B88D7207769654164CC28440CF594CC397D* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___s_inputSubsystems_116;
		V_0 = (bool)((((RuntimeObject*)(List_1_t90832B88D7207769654164CC28440CF594CC397D*)L_0) == ((RuntimeObject*)(RuntimeObject*)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10839));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0017;
		}
	}
	{
		// s_inputSubsystems = new List<XRInputSubsystem>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10840));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10841));
		List_1_t90832B88D7207769654164CC28440CF594CC397D* L_2 = (List_1_t90832B88D7207769654164CC28440CF594CC397D*)il2cpp_codegen_object_new(List_1_t90832B88D7207769654164CC28440CF594CC397D_il2cpp_TypeInfo_var);
		NullCheck(L_2);
		List_1__ctor_mC249FC827BC3BE999A938F8B5BD884F8AA0CB7FA(L_2, List_1__ctor_mC249FC827BC3BE999A938F8B5BD884F8AA0CB7FA_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10841));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___s_inputSubsystems_116 = L_2;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___s_inputSubsystems_116), (void*)L_2);
	}

IL_0017:
	{
		// SubsystemManager.GetInstances(s_inputSubsystems);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10842));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		List_1_t90832B88D7207769654164CC28440CF594CC397D* L_3 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___s_inputSubsystems_116;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10843));
		il2cpp_codegen_runtime_class_init_inline(SubsystemManager_t9A7261E4D0B53B996F04B8707D8E1C33AB65E824_il2cpp_TypeInfo_var);
		SubsystemManager_GetInstances_TisXRInputSubsystem_tFECE6683FCAEBF05BAD05E5D612690095D8BAD34_mE4E3C5739928E93E572D92105A4D3BAC7FC877AF(L_3, SubsystemManager_GetInstances_TisXRInputSubsystem_tFECE6683FCAEBF05BAD05E5D612690095D8BAD34_mE4E3C5739928E93E572D92105A4D3BAC7FC877AF_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10843));
		// if (s_inputSubsystems.Count > 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10844));
		List_1_t90832B88D7207769654164CC28440CF594CC397D* L_4 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___s_inputSubsystems_116;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10845));
		NullCheck(L_4);
		int32_t L_5;
		L_5 = List_1_get_Count_mF8DDB0BDC273D655115D5E62307ADF657EC28DE5_inline(L_4, List_1_get_Count_mF8DDB0BDC273D655115D5E62307ADF657EC28DE5_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10845));
		V_1 = (bool)((((int32_t)L_5) > ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10846));
		bool L_6 = V_1;
		if (!L_6)
		{
			goto IL_0041;
		}
	}
	{
		// return s_inputSubsystems[0];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10847));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		List_1_t90832B88D7207769654164CC28440CF594CC397D* L_7 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___s_inputSubsystems_116;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10848));
		NullCheck(L_7);
		XRInputSubsystem_tFECE6683FCAEBF05BAD05E5D612690095D8BAD34* L_8;
		L_8 = List_1_get_Item_m69C3B0FCDB85116A8F7AB368DC33EBCC27556F0E(L_7, 0, List_1_get_Item_m69C3B0FCDB85116A8F7AB368DC33EBCC27556F0E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10848));
		V_2 = L_8;
		goto IL_0045;
	}

IL_0041:
	{
		// return null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10849));
		V_2 = (XRInputSubsystem_tFECE6683FCAEBF05BAD05E5D612690095D8BAD34*)NULL;
		goto IL_0045;
	}

IL_0045:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10850));
		XRInputSubsystem_tFECE6683FCAEBF05BAD05E5D612690095D8BAD34* L_9 = V_2;
		return L_9;
	}
}
// System.Void OVRManager::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_Initialize_m339CEB2C05C31DCDA1C4390EE2635DC90D538821 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRBoundary_t56DFE91F758A740A34575D748FEC61959A106DAE_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_Initialize_m339CEB2C05C31DCDA1C4390EE2635DC90D538821_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRTracker_t5E60EE08D82308F2F8206AD43AE8CC4925938154_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_Initialize_m339CEB2C05C31DCDA1C4390EE2635DC90D538821_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10851));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10852));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10853));
		// if (display == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10854));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10855));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27* L_0;
		L_0 = OVRManager_get_display_m1D17D6867547AC786E00A4CF60B863275AC1AF3D_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10855));
		V_0 = (bool)((((RuntimeObject*)(OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27*)L_0) == ((RuntimeObject*)(RuntimeObject*)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10856));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0018;
		}
	}
	{
		// display = new OVRDisplay();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10857));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10858));
		OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27* L_2 = (OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27*)il2cpp_codegen_object_new(OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27_il2cpp_TypeInfo_var);
		NullCheck(L_2);
		OVRDisplay__ctor_mA1BC0C77506E1D916592E8566C868F7D0E937A67(L_2, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10858));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10859));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRManager_set_display_mAD68A004132C01084A443254AC164FD31BCDFE6B_inline(L_2, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10859));
	}

IL_0018:
	{
		// if (tracker == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10860));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10861));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRTracker_t5E60EE08D82308F2F8206AD43AE8CC4925938154* L_3;
		L_3 = OVRManager_get_tracker_mA945BED7BDB670E0F82A7EAD0A401651C8605259_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10861));
		V_1 = (bool)((((RuntimeObject*)(OVRTracker_t5E60EE08D82308F2F8206AD43AE8CC4925938154*)L_3) == ((RuntimeObject*)(RuntimeObject*)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10862));
		bool L_4 = V_1;
		if (!L_4)
		{
			goto IL_002f;
		}
	}
	{
		// tracker = new OVRTracker();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10863));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10864));
		OVRTracker_t5E60EE08D82308F2F8206AD43AE8CC4925938154* L_5 = (OVRTracker_t5E60EE08D82308F2F8206AD43AE8CC4925938154*)il2cpp_codegen_object_new(OVRTracker_t5E60EE08D82308F2F8206AD43AE8CC4925938154_il2cpp_TypeInfo_var);
		NullCheck(L_5);
		OVRTracker__ctor_m283EF4D30717FA44ECFD8C6D31C15E31DBA3D2CD(L_5, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10864));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10865));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRManager_set_tracker_m50D4C4C76BA97D4775D75620D4CC033398E72433_inline(L_5, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10865));
	}

IL_002f:
	{
		// if (boundary == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10866));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10867));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRBoundary_t56DFE91F758A740A34575D748FEC61959A106DAE* L_6;
		L_6 = OVRManager_get_boundary_m7495B93002198ABB5346F3F696712133AF7EA943_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10867));
		V_2 = (bool)((((RuntimeObject*)(OVRBoundary_t56DFE91F758A740A34575D748FEC61959A106DAE*)L_6) == ((RuntimeObject*)(RuntimeObject*)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10868));
		bool L_7 = V_2;
		if (!L_7)
		{
			goto IL_0046;
		}
	}
	{
		// boundary = new OVRBoundary();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10869));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10870));
		OVRBoundary_t56DFE91F758A740A34575D748FEC61959A106DAE* L_8 = (OVRBoundary_t56DFE91F758A740A34575D748FEC61959A106DAE*)il2cpp_codegen_object_new(OVRBoundary_t56DFE91F758A740A34575D748FEC61959A106DAE_il2cpp_TypeInfo_var);
		NullCheck(L_8);
		OVRBoundary__ctor_m31595FDCF7D3AC48703766DB883781D480F6092D(L_8, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10870));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10871));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRManager_set_boundary_mCEFC4DA00ED1094A5758AC15FF744BDC4B6091E4_inline(L_8, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10871));
	}

IL_0046:
	{
		// SetCurrentXRDevice();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10872));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10873));
		OVRManager_SetCurrentXRDevice_m28B26EC00E7F673A3AF5DEE7D732EDFA987E427F(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10873));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10874));
		return;
	}
}
// System.Void OVRManager::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_Update_mD885028FB6C03BA477FAE5757EB706ACB632CAB7 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Exception_t_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_Update_mD885028FB6C03BA477FAE5757EB706ACB632CAB7_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRNodeStateProperties_tE41A5F7393D4FB967D6062A0A2DBE4F3A24350BC_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&String_t_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&XRDisplaySubsystemDescriptor_t72DD88EE9094488AE723A495F48884BA4EA8311A_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&XRDisplaySubsystem_t4B00B0BF1894A039ACFA8DDC2C2EB9301118C1F1_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral09EA119D22C0C9448E5735ECDFECFC827AB7BC38);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral22E64C5C2E5C9469358FAC77CC2150EA7E71C3D0);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral422CE50B3F71A8EB315B423F59FF11B9D0313D22);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral588B8CAF579C3071462D21957C92A405CE7A5FA1);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral5AC0D3D4D36181576B50E4AA23AD0D9503DC7809);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral6093CF95875C05DE3109742296262213D3EFB135);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral65BA6F36CA5545B7E629658C538A01881A452707);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral6E963C65411215C46408D382E76B9FBD74276531);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral70F9E42282D72751016572E0F4C30E3E87FCCF57);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralAADC3A78399958DFAAF766820038D6E8008F9C7D);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralADD1C97D3AF13B5CFC64D65FE92330FEF6E91BCF);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralB69C3A590722A5F2BAB48472AE0E01A6C5110047);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralBD94399E0619C965CABF2407718DB5777B461E55);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralDA480199DC2D7E93700F1B1FE80DED08B369ABB3);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralF9FB922D7C6D288D060882C7F364C5B6CEADFFA8);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralFB17F2D69628DC0AD22BCE013F94B0B54F610326);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	String_t* V_1 = NULL;
	String_t* V_2 = NULL;
	bool V_3 = false;
	XRDisplaySubsystem_t4B00B0BF1894A039ACFA8DDC2C2EB9301118C1F1* V_4 = NULL;
	XRDisplaySubsystemDescriptor_t72DD88EE9094488AE723A495F48884BA4EA8311A* V_5 = NULL;
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	bool V_10 = false;
	int32_t V_11 = 0;
	bool V_12 = false;
	bool V_13 = false;
	bool V_14 = false;
	bool V_15 = false;
	bool V_16 = false;
	Exception_t* V_17 = NULL;
	bool V_18 = false;
	bool V_19 = false;
	Exception_t* V_20 = NULL;
	bool V_21 = false;
	bool V_22 = false;
	Exception_t* V_23 = NULL;
	bool V_24 = false;
	bool V_25 = false;
	Exception_t* V_26 = NULL;
	bool V_27 = false;
	bool V_28 = false;
	Exception_t* V_29 = NULL;
	bool V_30 = false;
	bool V_31 = false;
	Exception_t* V_32 = NULL;
	bool V_33 = false;
	bool V_34 = false;
	Exception_t* V_35 = NULL;
	bool V_36 = false;
	bool V_37 = false;
	Exception_t* V_38 = NULL;
	bool V_39 = false;
	bool V_40 = false;
	bool V_41 = false;
	Exception_t* V_42 = NULL;
	bool V_43 = false;
	bool V_44 = false;
	bool V_45 = false;
	Exception_t* V_46 = NULL;
	bool V_47 = false;
	bool V_48 = false;
	Exception_t* V_49 = NULL;
	bool V_50 = false;
	bool V_51 = false;
	Exception_t* V_52 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_4), (&V_5), (&V_17), (&V_20), (&V_23), (&V_26), (&V_29), (&V_32), (&V_35), (&V_38), (&V_42), (&V_46), (&V_49), (&V_52));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_Update_mD885028FB6C03BA477FAE5757EB706ACB632CAB7_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10875));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10876));
	il2cpp::utils::ExceptionSupportStack<RuntimeObject*, 1> __active_exceptions;
	int32_t G_B5_0 = 0;
	int32_t G_B13_0 = 0;
	int32_t G_B20_0 = 0;
	int32_t G_B31_0 = 0;
	Exception_t* G_B38_0 = NULL;
	String_t* G_B38_1 = NULL;
	Exception_t* G_B37_0 = NULL;
	String_t* G_B37_1 = NULL;
	String_t* G_B39_0 = NULL;
	String_t* G_B39_1 = NULL;
	int32_t G_B44_0 = 0;
	Exception_t* G_B51_0 = NULL;
	String_t* G_B51_1 = NULL;
	Exception_t* G_B50_0 = NULL;
	String_t* G_B50_1 = NULL;
	String_t* G_B52_0 = NULL;
	String_t* G_B52_1 = NULL;
	int32_t G_B57_0 = 0;
	Exception_t* G_B64_0 = NULL;
	String_t* G_B64_1 = NULL;
	Exception_t* G_B63_0 = NULL;
	String_t* G_B63_1 = NULL;
	String_t* G_B65_0 = NULL;
	String_t* G_B65_1 = NULL;
	int32_t G_B70_0 = 0;
	Exception_t* G_B77_0 = NULL;
	String_t* G_B77_1 = NULL;
	Exception_t* G_B76_0 = NULL;
	String_t* G_B76_1 = NULL;
	String_t* G_B78_0 = NULL;
	String_t* G_B78_1 = NULL;
	int32_t G_B83_0 = 0;
	Exception_t* G_B90_0 = NULL;
	String_t* G_B90_1 = NULL;
	Exception_t* G_B89_0 = NULL;
	String_t* G_B89_1 = NULL;
	String_t* G_B91_0 = NULL;
	String_t* G_B91_1 = NULL;
	int32_t G_B96_0 = 0;
	Exception_t* G_B103_0 = NULL;
	String_t* G_B103_1 = NULL;
	Exception_t* G_B102_0 = NULL;
	String_t* G_B102_1 = NULL;
	String_t* G_B104_0 = NULL;
	String_t* G_B104_1 = NULL;
	int32_t G_B109_0 = 0;
	Exception_t* G_B116_0 = NULL;
	String_t* G_B116_1 = NULL;
	Exception_t* G_B115_0 = NULL;
	String_t* G_B115_1 = NULL;
	String_t* G_B117_0 = NULL;
	String_t* G_B117_1 = NULL;
	Exception_t* G_B126_0 = NULL;
	String_t* G_B126_1 = NULL;
	Exception_t* G_B125_0 = NULL;
	String_t* G_B125_1 = NULL;
	String_t* G_B127_0 = NULL;
	String_t* G_B127_1 = NULL;
	Exception_t* G_B138_0 = NULL;
	String_t* G_B138_1 = NULL;
	Exception_t* G_B137_0 = NULL;
	String_t* G_B137_1 = NULL;
	String_t* G_B139_0 = NULL;
	String_t* G_B139_1 = NULL;
	Exception_t* G_B150_0 = NULL;
	String_t* G_B150_1 = NULL;
	Exception_t* G_B149_0 = NULL;
	String_t* G_B149_1 = NULL;
	String_t* G_B151_0 = NULL;
	String_t* G_B151_1 = NULL;
	int32_t G_B156_0 = 0;
	Exception_t* G_B163_0 = NULL;
	String_t* G_B163_1 = NULL;
	Exception_t* G_B162_0 = NULL;
	String_t* G_B162_1 = NULL;
	String_t* G_B164_0 = NULL;
	String_t* G_B164_1 = NULL;
	int32_t G_B169_0 = 0;
	Exception_t* G_B176_0 = NULL;
	String_t* G_B176_1 = NULL;
	Exception_t* G_B175_0 = NULL;
	String_t* G_B175_1 = NULL;
	String_t* G_B177_0 = NULL;
	String_t* G_B177_1 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10877));
		// if (!OVRManagerinitialized)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10878));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___OVRManagerinitialized_113;
		V_3 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10879));
		bool L_1 = V_3;
		if (!L_1)
		{
			goto IL_0042;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10880));
		// XRDisplaySubsystem currentDisplaySubsystem = GetCurrentDisplaySubsystem();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10881));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10882));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		XRDisplaySubsystem_t4B00B0BF1894A039ACFA8DDC2C2EB9301118C1F1* L_2;
		L_2 = OVRManager_GetCurrentDisplaySubsystem_m9DF732778B060759D2E11E04E49A39A43451CAA8(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10882));
		V_4 = L_2;
		// XRDisplaySubsystemDescriptor currentDisplaySubsystemDescriptor = GetCurrentDisplaySubsystemDescriptor();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10883));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10884));
		XRDisplaySubsystemDescriptor_t72DD88EE9094488AE723A495F48884BA4EA8311A* L_3;
		L_3 = OVRManager_GetCurrentDisplaySubsystemDescriptor_m774D6D4F85D85E72BCF228C576EAAF55E3CD978E(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10884));
		V_5 = L_3;
		// if (currentDisplaySubsystem == null || currentDisplaySubsystemDescriptor == null || !OVRPlugin.initialized)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10885));
		XRDisplaySubsystem_t4B00B0BF1894A039ACFA8DDC2C2EB9301118C1F1* L_4 = V_4;
		if (!L_4)
		{
			goto IL_002e;
		}
	}
	{
		XRDisplaySubsystemDescriptor_t72DD88EE9094488AE723A495F48884BA4EA8311A* L_5 = V_5;
		if (!L_5)
		{
			goto IL_002e;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10886));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_6;
		L_6 = OVRPlugin_get_initialized_m7D7AAEEED41ED4B5798882B6038CF169E2BF0443(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10886));
		G_B5_0 = ((((int32_t)L_6) == ((int32_t)0))? 1 : 0);
		goto IL_002f;
	}

IL_002e:
	{
		G_B5_0 = 1;
	}

IL_002f:
	{
		V_6 = (bool)G_B5_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10887));
		bool L_7 = V_6;
		if (!L_7)
		{
			goto IL_003a;
		}
	}
	{
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10888));
		goto IL_0776;
	}

IL_003a:
	{
		// InitOVRManager();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10889));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10890));
		OVRManager_InitOVRManager_m70F462CB3521560EDE92D4C54EF0FAD199386053(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10890));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10891));
	}

IL_0042:
	{
		// SetCurrentXRDevice();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10892));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10893));
		OVRManager_SetCurrentXRDevice_m28B26EC00E7F673A3AF5DEE7D732EDFA987E427F(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10893));
		// if (OVRPlugin.shouldQuit)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10894));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10895));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_8;
		L_8 = OVRPlugin_get_shouldQuit_mBA5C91B74C034F11AB43669726D8DC8D775668E5(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10895));
		V_7 = L_8;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10896));
		bool L_9 = V_7;
		if (!L_9)
		{
			goto IL_0078;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10897));
		// Debug.Log("[OVRManager] OVRPlugin.shouldQuit detected");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10898));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10899));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_Log_m87A9A3C761FF5C43ED8A53B16190A53D08F818BB(_stringLiteral5AC0D3D4D36181576B50E4AA23AD0D9503DC7809, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10899));
		// StaticShutdownMixedRealityCapture(instance);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10900));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10901));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* L_10;
		L_10 = OVRManager_get_instance_m642500A467C7D7B5B1C2763F2BA90C52BBF5381C_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10901));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10902));
		OVRManager_StaticShutdownMixedRealityCapture_mA2C3B9797235B17834EA372AB99D1024EB81F0F7(L_10, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10902));
		// ShutdownInsightPassthrough();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10903));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10904));
		OVRManager_ShutdownInsightPassthrough_mBBB77D5EB2CE95920737C34F1A0A5E6C14A6E576(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10904));
		// Application.Quit();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10905));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10906));
		Application_Quit_mE304382DB9A6455C2A474C8F364C7387F37E9281(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10906));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10907));
	}

IL_0078:
	{
		// if (AllowRecenter && OVRPlugin.shouldRecenter)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10908));
		bool L_11 = __this->___AllowRecenter_99;
		if (!L_11)
		{
			goto IL_0087;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10909));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_12;
		L_12 = OVRPlugin_get_shouldRecenter_m82A62121BEF853ED4A8BF5AFB87DCFB1F7B1F5AB(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10909));
		G_B13_0 = ((int32_t)(L_12));
		goto IL_0088;
	}

IL_0087:
	{
		G_B13_0 = 0;
	}

IL_0088:
	{
		V_8 = (bool)G_B13_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10910));
		bool L_13 = V_8;
		if (!L_13)
		{
			goto IL_009b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10911));
		// OVRManager.display.RecenterPose();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10912));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10913));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27* L_14;
		L_14 = OVRManager_get_display_m1D17D6867547AC786E00A4CF60B863275AC1AF3D_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10913));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10914));
		NullCheck(L_14);
		OVRDisplay_RecenterPose_m5D4F83D11B52934020DD34569B60A8E0D2E0FD82(L_14, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10914));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10915));
	}

IL_009b:
	{
		// if (trackingOriginType != _trackingOriginType)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10916));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10917));
		int32_t L_15;
		L_15 = OVRManager_get_trackingOriginType_m352B753617F98DC58AD3F8E4324E23C7CF3A47E0(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10917));
		int32_t L_16 = __this->____trackingOriginType_94;
		V_9 = (bool)((((int32_t)((((int32_t)L_15) == ((int32_t)L_16))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10918));
		bool L_17 = V_9;
		if (!L_17)
		{
			goto IL_00bf;
		}
	}
	{
		// trackingOriginType = _trackingOriginType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10919));
		int32_t L_18 = __this->____trackingOriginType_94;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10920));
		OVRManager_set_trackingOriginType_mDDB79B878E8BF7FD66AD925A4EB0DAE77980F0F3(__this, L_18, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10920));
	}

IL_00bf:
	{
		// tracker.isEnabled = usePositionTracking;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10921));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10922));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRTracker_t5E60EE08D82308F2F8206AD43AE8CC4925938154* L_19;
		L_19 = OVRManager_get_tracker_mA945BED7BDB670E0F82A7EAD0A401651C8605259_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10922));
		bool L_20 = __this->___usePositionTracking_95;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10923));
		NullCheck(L_19);
		OVRTracker_set_isEnabled_m34B6A72018F2C6362EF2CD79DEF6CB52C746E79B(L_19, L_20, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10923));
		// OVRPlugin.rotation = useRotationTracking;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10924));
		bool L_21 = __this->___useRotationTracking_96;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10925));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		OVRPlugin_set_rotation_m920187095C1DC0E97287249A8AA27D0CB5E80A7C(L_21, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10925));
		// OVRPlugin.useIPDInPositionTracking = useIPDInPositionTracking;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10926));
		bool L_22 = __this->___useIPDInPositionTracking_97;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10927));
		OVRPlugin_set_useIPDInPositionTracking_m8C4F941E9A7273575ACC10F250E07665DFB5D6FF(L_22, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10927));
		// isHmdPresent = OVRNodeStateProperties.IsHmdPresent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10928));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10929));
		il2cpp_codegen_runtime_class_init_inline(OVRNodeStateProperties_tE41A5F7393D4FB967D6062A0A2DBE4F3A24350BC_il2cpp_TypeInfo_var);
		bool L_23;
		L_23 = OVRNodeStateProperties_IsHmdPresent_m007E7C0AA8B7D85019F2238007C8F5F28DB3547D(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10929));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10930));
		OVRManager_set_isHmdPresent_m4879663A8AA591EE662CEF9F18686D6B89789B7E(L_23, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10930));
		// if (useRecommendedMSAALevel && QualitySettings.antiAliasing != display.recommendedMSAALevel)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10931));
		bool L_24 = __this->___useRecommendedMSAALevel_42;
		if (!L_24)
		{
			goto IL_0111;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10932));
		int32_t L_25;
		L_25 = QualitySettings_get_antiAliasing_m71FB82E1C9D9923D313430621C898008D967F516(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10932));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10933));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27* L_26;
		L_26 = OVRManager_get_display_m1D17D6867547AC786E00A4CF60B863275AC1AF3D_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10933));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10934));
		NullCheck(L_26);
		int32_t L_27;
		L_27 = OVRDisplay_get_recommendedMSAALevel_mF7498063717D350637404B308FD185AC7F753FEA(L_26, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10934));
		G_B20_0 = ((((int32_t)((((int32_t)L_25) == ((int32_t)L_27))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_0112;
	}

IL_0111:
	{
		G_B20_0 = 0;
	}

IL_0112:
	{
		V_10 = (bool)G_B20_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10935));
		bool L_28 = V_10;
		if (!L_28)
		{
			goto IL_017a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10936));
		// Debug.Log("The current MSAA level is " + QualitySettings.antiAliasing +
		//           ", but the recommended MSAA level is " + display.recommendedMSAALevel +
		//           ". Switching to the recommended level.");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10937));
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_29 = (StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248*)(StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248*)SZArrayNew(StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248_il2cpp_TypeInfo_var, (uint32_t)5);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_30 = L_29;
		NullCheck(L_30);
		ArrayElementTypeCheck (L_30, _stringLiteralAADC3A78399958DFAAF766820038D6E8008F9C7D);
		(L_30)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteralAADC3A78399958DFAAF766820038D6E8008F9C7D);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_31 = L_30;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10938));
		int32_t L_32;
		L_32 = QualitySettings_get_antiAliasing_m71FB82E1C9D9923D313430621C898008D967F516(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10938));
		V_11 = L_32;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10939));
		String_t* L_33;
		L_33 = Int32_ToString_m030E01C24E294D6762FB0B6F37CB541581F55CA5((&V_11), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10939));
		NullCheck(L_31);
		ArrayElementTypeCheck (L_31, L_33);
		(L_31)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_33);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_34 = L_31;
		NullCheck(L_34);
		ArrayElementTypeCheck (L_34, _stringLiteral22E64C5C2E5C9469358FAC77CC2150EA7E71C3D0);
		(L_34)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteral22E64C5C2E5C9469358FAC77CC2150EA7E71C3D0);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_35 = L_34;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10940));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27* L_36;
		L_36 = OVRManager_get_display_m1D17D6867547AC786E00A4CF60B863275AC1AF3D_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10940));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10941));
		NullCheck(L_36);
		int32_t L_37;
		L_37 = OVRDisplay_get_recommendedMSAALevel_mF7498063717D350637404B308FD185AC7F753FEA(L_36, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10941));
		V_11 = L_37;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10942));
		String_t* L_38;
		L_38 = Int32_ToString_m030E01C24E294D6762FB0B6F37CB541581F55CA5((&V_11), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10942));
		NullCheck(L_35);
		ArrayElementTypeCheck (L_35, L_38);
		(L_35)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_38);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_39 = L_35;
		NullCheck(L_39);
		ArrayElementTypeCheck (L_39, _stringLiteral6093CF95875C05DE3109742296262213D3EFB135);
		(L_39)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral6093CF95875C05DE3109742296262213D3EFB135);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10943));
		String_t* L_40;
		L_40 = String_Concat_m647EBF831F54B6DF7D5AFA5FD012CF4EE7571B6A(L_39, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10943));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10944));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_Log_m87A9A3C761FF5C43ED8A53B16190A53D08F818BB(L_40, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10944));
		// QualitySettings.antiAliasing = display.recommendedMSAALevel;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10945));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10946));
		OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27* L_41;
		L_41 = OVRManager_get_display_m1D17D6867547AC786E00A4CF60B863275AC1AF3D_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10946));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10947));
		NullCheck(L_41);
		int32_t L_42;
		L_42 = OVRDisplay_get_recommendedMSAALevel_mF7498063717D350637404B308FD185AC7F753FEA(L_41, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10947));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10948));
		QualitySettings_set_antiAliasing_mBC4220AF5820137CFEBB38155D4CCD12822E2C7E(L_42, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10948));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10949));
	}

IL_017a:
	{
		// if (monoscopic != _monoscopic)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10950));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10951));
		bool L_43;
		L_43 = OVRManager_get_monoscopic_m0DE754F28B483E52474ECA234A1E3DD1D2BA7218(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10951));
		bool L_44 = __this->____monoscopic_43;
		V_12 = (bool)((((int32_t)((((int32_t)L_43) == ((int32_t)L_44))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10952));
		bool L_45 = V_12;
		if (!L_45)
		{
			goto IL_01a0;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10953));
		// monoscopic = _monoscopic;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10954));
		bool L_46 = __this->____monoscopic_43;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10955));
		OVRManager_set_monoscopic_m1EAAB3C2A3CDB7D72B1700D635AAA6C2AE41893D(__this, L_46, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10955));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10956));
	}

IL_01a0:
	{
		// if (headPoseRelativeOffsetRotation != _headPoseRelativeOffsetRotation)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10957));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10958));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_47;
		L_47 = OVRManager_get_headPoseRelativeOffsetRotation_m24093D9748A541A44618C282B5858BD49C83F3C9(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10958));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_48 = __this->____headPoseRelativeOffsetRotation_47;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10959));
		bool L_49;
		L_49 = Vector3_op_Inequality_m9F170CDFBF1E490E559DA5D06D6547501A402BBF_inline(L_47, L_48, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10959));
		V_13 = L_49;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10960));
		bool L_50 = V_13;
		if (!L_50)
		{
			goto IL_01c6;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10961));
		// headPoseRelativeOffsetRotation = _headPoseRelativeOffsetRotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10962));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_51 = __this->____headPoseRelativeOffsetRotation_47;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10963));
		OVRManager_set_headPoseRelativeOffsetRotation_m607DFB21F99CE3107ECA6BD9E1C0A2B6AC4242FC(__this, L_51, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10963));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10964));
	}

IL_01c6:
	{
		// if (headPoseRelativeOffsetTranslation != _headPoseRelativeOffsetTranslation)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10965));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10966));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_52;
		L_52 = OVRManager_get_headPoseRelativeOffsetTranslation_m699900022730F69357C46494506381ED7647BC0C(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10966));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_53 = __this->____headPoseRelativeOffsetTranslation_48;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10967));
		bool L_54;
		L_54 = Vector3_op_Inequality_m9F170CDFBF1E490E559DA5D06D6547501A402BBF_inline(L_52, L_53, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10967));
		V_14 = L_54;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10968));
		bool L_55 = V_14;
		if (!L_55)
		{
			goto IL_01ec;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10969));
		// headPoseRelativeOffsetTranslation = _headPoseRelativeOffsetTranslation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10970));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_56 = __this->____headPoseRelativeOffsetTranslation_48;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10971));
		OVRManager_set_headPoseRelativeOffsetTranslation_m8B70891033EA3A0A28D9C1986E7B5D58016CCBA6(__this, L_56, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10971));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10972));
	}

IL_01ec:
	{
		// if (_wasHmdPresent && !isHmdPresent)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10973));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_57 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____wasHmdPresent_37;
		if (!L_57)
		{
			goto IL_01fd;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10974));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_58;
		L_58 = OVRManager_get_isHmdPresent_m098F56E4E9C2ECAC87EAB61C7680F0FBD2A2C445(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10974));
		G_B31_0 = ((((int32_t)L_58) == ((int32_t)0))? 1 : 0);
		goto IL_01fe;
	}

IL_01fd:
	{
		G_B31_0 = 0;
	}

IL_01fe:
	{
		V_15 = (bool)G_B31_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10975));
		bool L_59 = V_15;
		if (!L_59)
		{
			goto IL_0252;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10976));
	}
	try
	{// begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10977));
			// Debug.Log("[OVRManager] HMDLost event");
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10978));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10979));
			il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
			Debug_Log_m87A9A3C761FF5C43ED8A53B16190A53D08F818BB(_stringLiteralF9FB922D7C6D288D060882C7F364C5B6CEADFFA8, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10979));
			// if (HMDLost != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10980));
			il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
			Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_60 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___HMDLost_13;
			V_16 = (bool)((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_60) <= ((RuntimeObject*)(RuntimeObject*)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10981));
			bool L_61 = V_16;
			if (!L_61)
			{
				goto IL_022a_1;
			}
		}
		{
			// HMDLost();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10982));
			il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
			Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_62 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___HMDLost_13;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10983));
			NullCheck(L_62);
			Action_Invoke_m7126A54DACA72B845424072887B5F3A51FC3808E_inline(L_62, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10983));
		}

IL_022a_1:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10984));
			goto IL_0251;
		}
	}// end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		if(il2cpp_codegen_class_is_assignable_from (((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Exception_t_il2cpp_TypeInfo_var)), il2cpp_codegen_object_class(e.ex)))
		{
			IL2CPP_PUSH_ACTIVE_EXCEPTION(e.ex);
			goto CATCH_022d;
		}
		throw e;
	}

CATCH_022d:
	{// begin catch(System.Exception)
		STORE_TRY_ID(methodExecutionContext, -1);
		{
			// catch (Exception e)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10985));
			V_17 = ((Exception_t*)IL2CPP_GET_ACTIVE_EXCEPTION(Exception_t*));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10986));
			// Debug.LogError("Caught Exception: " + e);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10987));
			Exception_t* L_63 = V_17;
			Exception_t* L_64 = L_63;
			G_B37_0 = L_64;
			G_B37_1 = ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAF2769F4E48FE7AA8276CF918D2F6D4BB73DC8C3));
			if (L_64)
			{
				G_B38_0 = L_64;
				G_B38_1 = ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAF2769F4E48FE7AA8276CF918D2F6D4BB73DC8C3));
				goto IL_023e;
			}
		}
		{
			G_B39_0 = ((String_t*)(NULL));
			G_B39_1 = G_B37_1;
			goto IL_0243;
		}

IL_023e:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10988));
			NullCheck(G_B38_0);
			String_t* L_65;
			L_65 = VirtualFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, G_B38_0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10988));
			G_B39_0 = L_65;
			G_B39_1 = G_B38_1;
		}

IL_0243:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10989));
			String_t* L_66;
			L_66 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(G_B39_1, G_B39_0, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10989));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10990));
			il2cpp_codegen_runtime_class_init_inline(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var)));
			Debug_LogError_mB00B2B4468EF3CAF041B038D840820FB84C924B2(L_66, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10990));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10991));
			IL2CPP_POP_ACTIVE_EXCEPTION();
			goto IL_0251;
		}
	}// end catch (depth: 1)

IL_0251:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10992));
	}

IL_0252:
	{
		// if (!_wasHmdPresent && isHmdPresent)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10993));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_67 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____wasHmdPresent_37;
		if (L_67)
		{
			goto IL_0260;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10994));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_68;
		L_68 = OVRManager_get_isHmdPresent_m098F56E4E9C2ECAC87EAB61C7680F0FBD2A2C445(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10994));
		G_B44_0 = ((int32_t)(L_68));
		goto IL_0261;
	}

IL_0260:
	{
		G_B44_0 = 0;
	}

IL_0261:
	{
		V_18 = (bool)G_B44_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10995));
		bool L_69 = V_18;
		if (!L_69)
		{
			goto IL_02b5;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10996));
	}
	try
	{// begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 1);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10997));
			// Debug.Log("[OVRManager] HMDAcquired event");
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10998));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10999));
			il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
			Debug_Log_m87A9A3C761FF5C43ED8A53B16190A53D08F818BB(_stringLiteral588B8CAF579C3071462D21957C92A405CE7A5FA1, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10999));
			// if (HMDAcquired != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11000));
			il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
			Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_70 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___HMDAcquired_12;
			V_19 = (bool)((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_70) <= ((RuntimeObject*)(RuntimeObject*)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11001));
			bool L_71 = V_19;
			if (!L_71)
			{
				goto IL_028d_1;
			}
		}
		{
			// HMDAcquired();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11002));
			il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
			Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_72 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___HMDAcquired_12;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11003));
			NullCheck(L_72);
			Action_Invoke_m7126A54DACA72B845424072887B5F3A51FC3808E_inline(L_72, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11003));
		}

IL_028d_1:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11004));
			goto IL_02b4;
		}
	}// end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		if(il2cpp_codegen_class_is_assignable_from (((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Exception_t_il2cpp_TypeInfo_var)), il2cpp_codegen_object_class(e.ex)))
		{
			IL2CPP_PUSH_ACTIVE_EXCEPTION(e.ex);
			goto CATCH_0290;
		}
		throw e;
	}

CATCH_0290:
	{// begin catch(System.Exception)
		STORE_TRY_ID(methodExecutionContext, -1);
		{
			// catch (Exception e)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11005));
			V_20 = ((Exception_t*)IL2CPP_GET_ACTIVE_EXCEPTION(Exception_t*));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11006));
			// Debug.LogError("Caught Exception: " + e);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11007));
			Exception_t* L_73 = V_20;
			Exception_t* L_74 = L_73;
			G_B50_0 = L_74;
			G_B50_1 = ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAF2769F4E48FE7AA8276CF918D2F6D4BB73DC8C3));
			if (L_74)
			{
				G_B51_0 = L_74;
				G_B51_1 = ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAF2769F4E48FE7AA8276CF918D2F6D4BB73DC8C3));
				goto IL_02a1;
			}
		}
		{
			G_B52_0 = ((String_t*)(NULL));
			G_B52_1 = G_B50_1;
			goto IL_02a6;
		}

IL_02a1:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11008));
			NullCheck(G_B51_0);
			String_t* L_75;
			L_75 = VirtualFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, G_B51_0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11008));
			G_B52_0 = L_75;
			G_B52_1 = G_B51_1;
		}

IL_02a6:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11009));
			String_t* L_76;
			L_76 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(G_B52_1, G_B52_0, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11009));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11010));
			il2cpp_codegen_runtime_class_init_inline(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var)));
			Debug_LogError_mB00B2B4468EF3CAF041B038D840820FB84C924B2(L_76, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11010));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11011));
			IL2CPP_POP_ACTIVE_EXCEPTION();
			goto IL_02b4;
		}
	}// end catch (depth: 1)

IL_02b4:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11012));
	}

IL_02b5:
	{
		// _wasHmdPresent = isHmdPresent;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11013));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11014));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_77;
		L_77 = OVRManager_get_isHmdPresent_m098F56E4E9C2ECAC87EAB61C7680F0FBD2A2C445(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11014));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____wasHmdPresent_37 = L_77;
		// isUserPresent = OVRPlugin.userPresent;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11015));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11016));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_78;
		L_78 = OVRPlugin_get_userPresent_mDC6C3FFE8897342A888E529C7BEAF368413C8151(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11016));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11017));
		OVRManager_set_isUserPresent_mAC629CEC482B5627A507D4FB93DE81ADA0366703(__this, L_78, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11017));
		// if (_wasUserPresent && !isUserPresent)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11018));
		bool L_79 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____wasUserPresent_105;
		if (!L_79)
		{
			goto IL_02dd;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11019));
		bool L_80;
		L_80 = OVRManager_get_isUserPresent_m1E7754523C4912B5EFADE6950DC9D7AA5072699D(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11019));
		G_B57_0 = ((((int32_t)L_80) == ((int32_t)0))? 1 : 0);
		goto IL_02de;
	}

IL_02dd:
	{
		G_B57_0 = 0;
	}

IL_02de:
	{
		V_21 = (bool)G_B57_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11020));
		bool L_81 = V_21;
		if (!L_81)
		{
			goto IL_0332;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11021));
	}
	try
	{// begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 2);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11022));
			// Debug.Log("[OVRManager] HMDUnmounted event");
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11023));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11024));
			il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
			Debug_Log_m87A9A3C761FF5C43ED8A53B16190A53D08F818BB(_stringLiteral6E963C65411215C46408D382E76B9FBD74276531, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11024));
			// if (HMDUnmounted != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11025));
			il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
			Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_82 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___HMDUnmounted_15;
			V_22 = (bool)((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_82) <= ((RuntimeObject*)(RuntimeObject*)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11026));
			bool L_83 = V_22;
			if (!L_83)
			{
				goto IL_030a_1;
			}
		}
		{
			// HMDUnmounted();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11027));
			il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
			Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_84 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___HMDUnmounted_15;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11028));
			NullCheck(L_84);
			Action_Invoke_m7126A54DACA72B845424072887B5F3A51FC3808E_inline(L_84, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11028));
		}

IL_030a_1:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11029));
			goto IL_0331;
		}
	}// end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		if(il2cpp_codegen_class_is_assignable_from (((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Exception_t_il2cpp_TypeInfo_var)), il2cpp_codegen_object_class(e.ex)))
		{
			IL2CPP_PUSH_ACTIVE_EXCEPTION(e.ex);
			goto CATCH_030d;
		}
		throw e;
	}

CATCH_030d:
	{// begin catch(System.Exception)
		STORE_TRY_ID(methodExecutionContext, -1);
		{
			// catch (Exception e)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11030));
			V_23 = ((Exception_t*)IL2CPP_GET_ACTIVE_EXCEPTION(Exception_t*));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11031));
			// Debug.LogError("Caught Exception: " + e);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11032));
			Exception_t* L_85 = V_23;
			Exception_t* L_86 = L_85;
			G_B63_0 = L_86;
			G_B63_1 = ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAF2769F4E48FE7AA8276CF918D2F6D4BB73DC8C3));
			if (L_86)
			{
				G_B64_0 = L_86;
				G_B64_1 = ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAF2769F4E48FE7AA8276CF918D2F6D4BB73DC8C3));
				goto IL_031e;
			}
		}
		{
			G_B65_0 = ((String_t*)(NULL));
			G_B65_1 = G_B63_1;
			goto IL_0323;
		}

IL_031e:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11033));
			NullCheck(G_B64_0);
			String_t* L_87;
			L_87 = VirtualFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, G_B64_0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11033));
			G_B65_0 = L_87;
			G_B65_1 = G_B64_1;
		}

IL_0323:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11034));
			String_t* L_88;
			L_88 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(G_B65_1, G_B65_0, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11034));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11035));
			il2cpp_codegen_runtime_class_init_inline(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var)));
			Debug_LogError_mB00B2B4468EF3CAF041B038D840820FB84C924B2(L_88, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11035));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11036));
			IL2CPP_POP_ACTIVE_EXCEPTION();
			goto IL_0331;
		}
	}// end catch (depth: 1)

IL_0331:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11037));
	}

IL_0332:
	{
		// if (!_wasUserPresent && isUserPresent)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11038));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_89 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____wasUserPresent_105;
		if (L_89)
		{
			goto IL_0341;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11039));
		bool L_90;
		L_90 = OVRManager_get_isUserPresent_m1E7754523C4912B5EFADE6950DC9D7AA5072699D(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11039));
		G_B70_0 = ((int32_t)(L_90));
		goto IL_0342;
	}

IL_0341:
	{
		G_B70_0 = 0;
	}

IL_0342:
	{
		V_24 = (bool)G_B70_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11040));
		bool L_91 = V_24;
		if (!L_91)
		{
			goto IL_0396;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11041));
	}
	try
	{// begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 3);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11042));
			// Debug.Log("[OVRManager] HMDMounted event");
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11043));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11044));
			il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
			Debug_Log_m87A9A3C761FF5C43ED8A53B16190A53D08F818BB(_stringLiteralDA480199DC2D7E93700F1B1FE80DED08B369ABB3, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11044));
			// if (HMDMounted != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11045));
			il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
			Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_92 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___HMDMounted_14;
			V_25 = (bool)((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_92) <= ((RuntimeObject*)(RuntimeObject*)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11046));
			bool L_93 = V_25;
			if (!L_93)
			{
				goto IL_036e_1;
			}
		}
		{
			// HMDMounted();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11047));
			il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
			Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_94 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___HMDMounted_14;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11048));
			NullCheck(L_94);
			Action_Invoke_m7126A54DACA72B845424072887B5F3A51FC3808E_inline(L_94, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11048));
		}

IL_036e_1:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11049));
			goto IL_0395;
		}
	}// end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		if(il2cpp_codegen_class_is_assignable_from (((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Exception_t_il2cpp_TypeInfo_var)), il2cpp_codegen_object_class(e.ex)))
		{
			IL2CPP_PUSH_ACTIVE_EXCEPTION(e.ex);
			goto CATCH_0371;
		}
		throw e;
	}

CATCH_0371:
	{// begin catch(System.Exception)
		STORE_TRY_ID(methodExecutionContext, -1);
		{
			// catch (Exception e)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11050));
			V_26 = ((Exception_t*)IL2CPP_GET_ACTIVE_EXCEPTION(Exception_t*));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11051));
			// Debug.LogError("Caught Exception: " + e);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11052));
			Exception_t* L_95 = V_26;
			Exception_t* L_96 = L_95;
			G_B76_0 = L_96;
			G_B76_1 = ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAF2769F4E48FE7AA8276CF918D2F6D4BB73DC8C3));
			if (L_96)
			{
				G_B77_0 = L_96;
				G_B77_1 = ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAF2769F4E48FE7AA8276CF918D2F6D4BB73DC8C3));
				goto IL_0382;
			}
		}
		{
			G_B78_0 = ((String_t*)(NULL));
			G_B78_1 = G_B76_1;
			goto IL_0387;
		}

IL_0382:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11053));
			NullCheck(G_B77_0);
			String_t* L_97;
			L_97 = VirtualFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, G_B77_0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11053));
			G_B78_0 = L_97;
			G_B78_1 = G_B77_1;
		}

IL_0387:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11054));
			String_t* L_98;
			L_98 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(G_B78_1, G_B78_0, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11054));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11055));
			il2cpp_codegen_runtime_class_init_inline(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var)));
			Debug_LogError_mB00B2B4468EF3CAF041B038D840820FB84C924B2(L_98, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11055));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11056));
			IL2CPP_POP_ACTIVE_EXCEPTION();
			goto IL_0395;
		}
	}// end catch (depth: 1)

IL_0395:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11057));
	}

IL_0396:
	{
		// _wasUserPresent = isUserPresent;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11058));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11059));
		bool L_99;
		L_99 = OVRManager_get_isUserPresent_m1E7754523C4912B5EFADE6950DC9D7AA5072699D(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11059));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____wasUserPresent_105 = L_99;
		// hasVrFocus = OVRPlugin.hasVrFocus;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11060));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11061));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_100;
		L_100 = OVRPlugin_get_hasVrFocus_m3BE22CA34415F44FD722A0D2547388F0C943900E(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11061));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11062));
		OVRManager_set_hasVrFocus_m85C981DA02ECC6A7829D348FCBC2149040CD5321(L_100, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11062));
		// if (_hadVrFocus && !hasVrFocus)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11063));
		bool L_101 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____hadVrFocus_40;
		if (!L_101)
		{
			goto IL_03bd;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11064));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_102;
		L_102 = OVRManager_get_hasVrFocus_mF029C34D16F6733BC210CAA447C39629FB107D90(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11064));
		G_B83_0 = ((((int32_t)L_102) == ((int32_t)0))? 1 : 0);
		goto IL_03be;
	}

IL_03bd:
	{
		G_B83_0 = 0;
	}

IL_03be:
	{
		V_27 = (bool)G_B83_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11065));
		bool L_103 = V_27;
		if (!L_103)
		{
			goto IL_0412;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11066));
	}
	try
	{// begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 4);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11067));
			// Debug.Log("[OVRManager] VrFocusLost event");
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11068));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11069));
			il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
			Debug_Log_m87A9A3C761FF5C43ED8A53B16190A53D08F818BB(_stringLiteralFB17F2D69628DC0AD22BCE013F94B0B54F610326, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11069));
			// if (VrFocusLost != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11070));
			il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
			Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_104 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___VrFocusLost_17;
			V_28 = (bool)((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_104) <= ((RuntimeObject*)(RuntimeObject*)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11071));
			bool L_105 = V_28;
			if (!L_105)
			{
				goto IL_03ea_1;
			}
		}
		{
			// VrFocusLost();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11072));
			il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
			Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_106 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___VrFocusLost_17;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11073));
			NullCheck(L_106);
			Action_Invoke_m7126A54DACA72B845424072887B5F3A51FC3808E_inline(L_106, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11073));
		}

IL_03ea_1:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11074));
			goto IL_0411;
		}
	}// end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		if(il2cpp_codegen_class_is_assignable_from (((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Exception_t_il2cpp_TypeInfo_var)), il2cpp_codegen_object_class(e.ex)))
		{
			IL2CPP_PUSH_ACTIVE_EXCEPTION(e.ex);
			goto CATCH_03ed;
		}
		throw e;
	}

CATCH_03ed:
	{// begin catch(System.Exception)
		STORE_TRY_ID(methodExecutionContext, -1);
		{
			// catch (Exception e)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11075));
			V_29 = ((Exception_t*)IL2CPP_GET_ACTIVE_EXCEPTION(Exception_t*));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11076));
			// Debug.LogError("Caught Exception: " + e);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11077));
			Exception_t* L_107 = V_29;
			Exception_t* L_108 = L_107;
			G_B89_0 = L_108;
			G_B89_1 = ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAF2769F4E48FE7AA8276CF918D2F6D4BB73DC8C3));
			if (L_108)
			{
				G_B90_0 = L_108;
				G_B90_1 = ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAF2769F4E48FE7AA8276CF918D2F6D4BB73DC8C3));
				goto IL_03fe;
			}
		}
		{
			G_B91_0 = ((String_t*)(NULL));
			G_B91_1 = G_B89_1;
			goto IL_0403;
		}

IL_03fe:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11078));
			NullCheck(G_B90_0);
			String_t* L_109;
			L_109 = VirtualFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, G_B90_0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11078));
			G_B91_0 = L_109;
			G_B91_1 = G_B90_1;
		}

IL_0403:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11079));
			String_t* L_110;
			L_110 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(G_B91_1, G_B91_0, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11079));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11080));
			il2cpp_codegen_runtime_class_init_inline(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var)));
			Debug_LogError_mB00B2B4468EF3CAF041B038D840820FB84C924B2(L_110, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11080));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11081));
			IL2CPP_POP_ACTIVE_EXCEPTION();
			goto IL_0411;
		}
	}// end catch (depth: 1)

IL_0411:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11082));
	}

IL_0412:
	{
		// if (!_hadVrFocus && hasVrFocus)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11083));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_111 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____hadVrFocus_40;
		if (L_111)
		{
			goto IL_0420;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11084));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_112;
		L_112 = OVRManager_get_hasVrFocus_mF029C34D16F6733BC210CAA447C39629FB107D90(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11084));
		G_B96_0 = ((int32_t)(L_112));
		goto IL_0421;
	}

IL_0420:
	{
		G_B96_0 = 0;
	}

IL_0421:
	{
		V_30 = (bool)G_B96_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11085));
		bool L_113 = V_30;
		if (!L_113)
		{
			goto IL_0475;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11086));
	}
	try
	{// begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 5);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11087));
			// Debug.Log("[OVRManager] VrFocusAcquired event");
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11088));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11089));
			il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
			Debug_Log_m87A9A3C761FF5C43ED8A53B16190A53D08F818BB(_stringLiteralADD1C97D3AF13B5CFC64D65FE92330FEF6E91BCF, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11089));
			// if (VrFocusAcquired != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11090));
			il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
			Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_114 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___VrFocusAcquired_16;
			V_31 = (bool)((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_114) <= ((RuntimeObject*)(RuntimeObject*)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11091));
			bool L_115 = V_31;
			if (!L_115)
			{
				goto IL_044d_1;
			}
		}
		{
			// VrFocusAcquired();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11092));
			il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
			Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_116 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___VrFocusAcquired_16;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11093));
			NullCheck(L_116);
			Action_Invoke_m7126A54DACA72B845424072887B5F3A51FC3808E_inline(L_116, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11093));
		}

IL_044d_1:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11094));
			goto IL_0474;
		}
	}// end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		if(il2cpp_codegen_class_is_assignable_from (((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Exception_t_il2cpp_TypeInfo_var)), il2cpp_codegen_object_class(e.ex)))
		{
			IL2CPP_PUSH_ACTIVE_EXCEPTION(e.ex);
			goto CATCH_0450;
		}
		throw e;
	}

CATCH_0450:
	{// begin catch(System.Exception)
		STORE_TRY_ID(methodExecutionContext, -1);
		{
			// catch (Exception e)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11095));
			V_32 = ((Exception_t*)IL2CPP_GET_ACTIVE_EXCEPTION(Exception_t*));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11096));
			// Debug.LogError("Caught Exception: " + e);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11097));
			Exception_t* L_117 = V_32;
			Exception_t* L_118 = L_117;
			G_B102_0 = L_118;
			G_B102_1 = ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAF2769F4E48FE7AA8276CF918D2F6D4BB73DC8C3));
			if (L_118)
			{
				G_B103_0 = L_118;
				G_B103_1 = ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAF2769F4E48FE7AA8276CF918D2F6D4BB73DC8C3));
				goto IL_0461;
			}
		}
		{
			G_B104_0 = ((String_t*)(NULL));
			G_B104_1 = G_B102_1;
			goto IL_0466;
		}

IL_0461:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11098));
			NullCheck(G_B103_0);
			String_t* L_119;
			L_119 = VirtualFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, G_B103_0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11098));
			G_B104_0 = L_119;
			G_B104_1 = G_B103_1;
		}

IL_0466:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11099));
			String_t* L_120;
			L_120 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(G_B104_1, G_B104_0, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11099));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11100));
			il2cpp_codegen_runtime_class_init_inline(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var)));
			Debug_LogError_mB00B2B4468EF3CAF041B038D840820FB84C924B2(L_120, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11100));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11101));
			IL2CPP_POP_ACTIVE_EXCEPTION();
			goto IL_0474;
		}
	}// end catch (depth: 1)

IL_0474:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11102));
	}

IL_0475:
	{
		// _hadVrFocus = hasVrFocus;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11103));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11104));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_121;
		L_121 = OVRManager_get_hasVrFocus_mF029C34D16F6733BC210CAA447C39629FB107D90(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11104));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____hadVrFocus_40 = L_121;
		// bool hasInputFocus = OVRPlugin.hasInputFocus;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11105));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11106));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_122;
		L_122 = OVRPlugin_get_hasInputFocus_m26E031618D6BF901538C11D3A4FF8F82208BEEDD(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11106));
		V_0 = L_122;
		// if (_hadInputFocus && !hasInputFocus)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11107));
		bool L_123 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____hadInputFocus_41;
		if (!L_123)
		{
			goto IL_0492;
		}
	}
	{
		bool L_124 = V_0;
		G_B109_0 = ((((int32_t)L_124) == ((int32_t)0))? 1 : 0);
		goto IL_0493;
	}

IL_0492:
	{
		G_B109_0 = 0;
	}

IL_0493:
	{
		V_33 = (bool)G_B109_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11108));
		bool L_125 = V_33;
		if (!L_125)
		{
			goto IL_04e7;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11109));
	}
	try
	{// begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 6);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11110));
			// Debug.Log("[OVRManager] InputFocusLost event");
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11111));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11112));
			il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
			Debug_Log_m87A9A3C761FF5C43ED8A53B16190A53D08F818BB(_stringLiteralB69C3A590722A5F2BAB48472AE0E01A6C5110047, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11112));
			// if (InputFocusLost != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11113));
			il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
			Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_126 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___InputFocusLost_19;
			V_34 = (bool)((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_126) <= ((RuntimeObject*)(RuntimeObject*)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11114));
			bool L_127 = V_34;
			if (!L_127)
			{
				goto IL_04bf_1;
			}
		}
		{
			// InputFocusLost();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11115));
			il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
			Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_128 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___InputFocusLost_19;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11116));
			NullCheck(L_128);
			Action_Invoke_m7126A54DACA72B845424072887B5F3A51FC3808E_inline(L_128, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11116));
		}

IL_04bf_1:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11117));
			goto IL_04e6;
		}
	}// end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		if(il2cpp_codegen_class_is_assignable_from (((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Exception_t_il2cpp_TypeInfo_var)), il2cpp_codegen_object_class(e.ex)))
		{
			IL2CPP_PUSH_ACTIVE_EXCEPTION(e.ex);
			goto CATCH_04c2;
		}
		throw e;
	}

CATCH_04c2:
	{// begin catch(System.Exception)
		STORE_TRY_ID(methodExecutionContext, -1);
		{
			// catch (Exception e)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11118));
			V_35 = ((Exception_t*)IL2CPP_GET_ACTIVE_EXCEPTION(Exception_t*));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11119));
			// Debug.LogError("Caught Exception: " + e);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11120));
			Exception_t* L_129 = V_35;
			Exception_t* L_130 = L_129;
			G_B115_0 = L_130;
			G_B115_1 = ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAF2769F4E48FE7AA8276CF918D2F6D4BB73DC8C3));
			if (L_130)
			{
				G_B116_0 = L_130;
				G_B116_1 = ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAF2769F4E48FE7AA8276CF918D2F6D4BB73DC8C3));
				goto IL_04d3;
			}
		}
		{
			G_B117_0 = ((String_t*)(NULL));
			G_B117_1 = G_B115_1;
			goto IL_04d8;
		}

IL_04d3:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11121));
			NullCheck(G_B116_0);
			String_t* L_131;
			L_131 = VirtualFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, G_B116_0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11121));
			G_B117_0 = L_131;
			G_B117_1 = G_B116_1;
		}

IL_04d8:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11122));
			String_t* L_132;
			L_132 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(G_B117_1, G_B117_0, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11122));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11123));
			il2cpp_codegen_runtime_class_init_inline(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var)));
			Debug_LogError_mB00B2B4468EF3CAF041B038D840820FB84C924B2(L_132, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11123));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11124));
			IL2CPP_POP_ACTIVE_EXCEPTION();
			goto IL_04e6;
		}
	}// end catch (depth: 1)

IL_04e6:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11125));
	}

IL_04e7:
	{
		// if (!_hadInputFocus && hasInputFocus)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11126));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_133 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____hadInputFocus_41;
		bool L_134 = V_0;
		V_36 = (bool)((int32_t)(((((int32_t)L_133) == ((int32_t)0))? 1 : 0)&(int32_t)L_134));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11127));
		bool L_135 = V_36;
		if (!L_135)
		{
			goto IL_0545;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11128));
	}
	try
	{// begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 7);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11129));
			// Debug.Log("[OVRManager] InputFocusAcquired event");
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11130));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11131));
			il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
			Debug_Log_m87A9A3C761FF5C43ED8A53B16190A53D08F818BB(_stringLiteralBD94399E0619C965CABF2407718DB5777B461E55, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11131));
			// if (InputFocusAcquired != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11132));
			il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
			Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_136 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___InputFocusAcquired_18;
			V_37 = (bool)((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_136) <= ((RuntimeObject*)(RuntimeObject*)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11133));
			bool L_137 = V_37;
			if (!L_137)
			{
				goto IL_051d_1;
			}
		}
		{
			// InputFocusAcquired();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11134));
			il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
			Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_138 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___InputFocusAcquired_18;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11135));
			NullCheck(L_138);
			Action_Invoke_m7126A54DACA72B845424072887B5F3A51FC3808E_inline(L_138, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11135));
		}

IL_051d_1:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11136));
			goto IL_0544;
		}
	}// end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		if(il2cpp_codegen_class_is_assignable_from (((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Exception_t_il2cpp_TypeInfo_var)), il2cpp_codegen_object_class(e.ex)))
		{
			IL2CPP_PUSH_ACTIVE_EXCEPTION(e.ex);
			goto CATCH_0520;
		}
		throw e;
	}

CATCH_0520:
	{// begin catch(System.Exception)
		STORE_TRY_ID(methodExecutionContext, -1);
		{
			// catch (Exception e)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11137));
			V_38 = ((Exception_t*)IL2CPP_GET_ACTIVE_EXCEPTION(Exception_t*));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11138));
			// Debug.LogError("Caught Exception: " + e);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11139));
			Exception_t* L_139 = V_38;
			Exception_t* L_140 = L_139;
			G_B125_0 = L_140;
			G_B125_1 = ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAF2769F4E48FE7AA8276CF918D2F6D4BB73DC8C3));
			if (L_140)
			{
				G_B126_0 = L_140;
				G_B126_1 = ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAF2769F4E48FE7AA8276CF918D2F6D4BB73DC8C3));
				goto IL_0531;
			}
		}
		{
			G_B127_0 = ((String_t*)(NULL));
			G_B127_1 = G_B125_1;
			goto IL_0536;
		}

IL_0531:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11140));
			NullCheck(G_B126_0);
			String_t* L_141;
			L_141 = VirtualFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, G_B126_0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11140));
			G_B127_0 = L_141;
			G_B127_1 = G_B126_1;
		}

IL_0536:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11141));
			String_t* L_142;
			L_142 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(G_B127_1, G_B127_0, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11141));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11142));
			il2cpp_codegen_runtime_class_init_inline(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var)));
			Debug_LogError_mB00B2B4468EF3CAF041B038D840820FB84C924B2(L_142, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11142));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11143));
			IL2CPP_POP_ACTIVE_EXCEPTION();
			goto IL_0544;
		}
	}// end catch (depth: 1)

IL_0544:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11144));
	}

IL_0545:
	{
		// _hadInputFocus = hasInputFocus;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11145));
		bool L_143 = V_0;
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____hadInputFocus_41 = L_143;
		// string audioOutId = OVRPlugin.audioOutId;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11146));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11147));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		String_t* L_144;
		L_144 = OVRPlugin_get_audioOutId_m5D5085CAAC63B5F1C4FB8E2160278EBC7BC7CCDA(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11147));
		V_1 = L_144;
		// if (!prevAudioOutIdIsCached)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11148));
		bool L_145 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___prevAudioOutIdIsCached_106;
		V_39 = (bool)((((int32_t)L_145) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11149));
		bool L_146 = V_39;
		if (!L_146)
		{
			goto IL_056f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11150));
		// prevAudioOutId = audioOutId;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11151));
		String_t* L_147 = V_1;
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___prevAudioOutId_108 = L_147;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___prevAudioOutId_108), (void*)L_147);
		// prevAudioOutIdIsCached = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11152));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___prevAudioOutIdIsCached_106 = (bool)1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11153));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11154));
		goto IL_05d4;
	}

IL_056f:
	{
		// else if (audioOutId != prevAudioOutId)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11155));
		String_t* L_148 = V_1;
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		String_t* L_149 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___prevAudioOutId_108;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11156));
		bool L_150;
		L_150 = String_op_Inequality_m8C940F3CFC42866709D7CA931B3D77B4BE94BCB6(L_148, L_149, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11156));
		V_40 = L_150;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11157));
		bool L_151 = V_40;
		if (!L_151)
		{
			goto IL_05d4;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11158));
	}
	try
	{// begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 8);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11159));
			// Debug.Log("[OVRManager] AudioOutChanged event");
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11160));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11161));
			il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
			Debug_Log_m87A9A3C761FF5C43ED8A53B16190A53D08F818BB(_stringLiteral09EA119D22C0C9448E5735ECDFECFC827AB7BC38, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11161));
			// if (AudioOutChanged != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11162));
			il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
			Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_152 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___AudioOutChanged_20;
			V_41 = (bool)((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_152) <= ((RuntimeObject*)(RuntimeObject*)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11163));
			bool L_153 = V_41;
			if (!L_153)
			{
				goto IL_05a6_1;
			}
		}
		{
			// AudioOutChanged();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11164));
			il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
			Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_154 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___AudioOutChanged_20;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11165));
			NullCheck(L_154);
			Action_Invoke_m7126A54DACA72B845424072887B5F3A51FC3808E_inline(L_154, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11165));
		}

IL_05a6_1:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11166));
			goto IL_05cd;
		}
	}// end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		if(il2cpp_codegen_class_is_assignable_from (((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Exception_t_il2cpp_TypeInfo_var)), il2cpp_codegen_object_class(e.ex)))
		{
			IL2CPP_PUSH_ACTIVE_EXCEPTION(e.ex);
			goto CATCH_05a9;
		}
		throw e;
	}

CATCH_05a9:
	{// begin catch(System.Exception)
		STORE_TRY_ID(methodExecutionContext, -1);
		{
			// catch (Exception e)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11167));
			V_42 = ((Exception_t*)IL2CPP_GET_ACTIVE_EXCEPTION(Exception_t*));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11168));
			// Debug.LogError("Caught Exception: " + e);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11169));
			Exception_t* L_155 = V_42;
			Exception_t* L_156 = L_155;
			G_B137_0 = L_156;
			G_B137_1 = ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAF2769F4E48FE7AA8276CF918D2F6D4BB73DC8C3));
			if (L_156)
			{
				G_B138_0 = L_156;
				G_B138_1 = ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAF2769F4E48FE7AA8276CF918D2F6D4BB73DC8C3));
				goto IL_05ba;
			}
		}
		{
			G_B139_0 = ((String_t*)(NULL));
			G_B139_1 = G_B137_1;
			goto IL_05bf;
		}

IL_05ba:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11170));
			NullCheck(G_B138_0);
			String_t* L_157;
			L_157 = VirtualFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, G_B138_0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11170));
			G_B139_0 = L_157;
			G_B139_1 = G_B138_1;
		}

IL_05bf:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11171));
			String_t* L_158;
			L_158 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(G_B139_1, G_B139_0, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11171));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11172));
			il2cpp_codegen_runtime_class_init_inline(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var)));
			Debug_LogError_mB00B2B4468EF3CAF041B038D840820FB84C924B2(L_158, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11172));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11173));
			IL2CPP_POP_ACTIVE_EXCEPTION();
			goto IL_05cd;
		}
	}// end catch (depth: 1)

IL_05cd:
	{
		// prevAudioOutId = audioOutId;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11174));
		String_t* L_159 = V_1;
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___prevAudioOutId_108 = L_159;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___prevAudioOutId_108), (void*)L_159);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11175));
	}

IL_05d4:
	{
		// string audioInId = OVRPlugin.audioInId;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11176));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11177));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		String_t* L_160;
		L_160 = OVRPlugin_get_audioInId_m69899C3CA94D7DFD3E580D40DE456876775000DE(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11177));
		V_2 = L_160;
		// if (!prevAudioInIdIsCached)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11178));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_161 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___prevAudioInIdIsCached_107;
		V_43 = (bool)((((int32_t)L_161) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11179));
		bool L_162 = V_43;
		if (!L_162)
		{
			goto IL_05f8;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11180));
		// prevAudioInId = audioInId;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11181));
		String_t* L_163 = V_2;
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___prevAudioInId_109 = L_163;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___prevAudioInId_109), (void*)L_163);
		// prevAudioInIdIsCached = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11182));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___prevAudioInIdIsCached_107 = (bool)1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11183));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11184));
		goto IL_065d;
	}

IL_05f8:
	{
		// else if (audioInId != prevAudioInId)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11185));
		String_t* L_164 = V_2;
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		String_t* L_165 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___prevAudioInId_109;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11186));
		bool L_166;
		L_166 = String_op_Inequality_m8C940F3CFC42866709D7CA931B3D77B4BE94BCB6(L_164, L_165, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11186));
		V_44 = L_166;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11187));
		bool L_167 = V_44;
		if (!L_167)
		{
			goto IL_065d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11188));
	}
	try
	{// begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 9);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11189));
			// Debug.Log("[OVRManager] AudioInChanged event");
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11190));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11191));
			il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
			Debug_Log_m87A9A3C761FF5C43ED8A53B16190A53D08F818BB(_stringLiteral422CE50B3F71A8EB315B423F59FF11B9D0313D22, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11191));
			// if (AudioInChanged != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11192));
			il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
			Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_168 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___AudioInChanged_21;
			V_45 = (bool)((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_168) <= ((RuntimeObject*)(RuntimeObject*)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11193));
			bool L_169 = V_45;
			if (!L_169)
			{
				goto IL_062f_1;
			}
		}
		{
			// AudioInChanged();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11194));
			il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
			Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_170 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___AudioInChanged_21;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11195));
			NullCheck(L_170);
			Action_Invoke_m7126A54DACA72B845424072887B5F3A51FC3808E_inline(L_170, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11195));
		}

IL_062f_1:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11196));
			goto IL_0656;
		}
	}// end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		if(il2cpp_codegen_class_is_assignable_from (((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Exception_t_il2cpp_TypeInfo_var)), il2cpp_codegen_object_class(e.ex)))
		{
			IL2CPP_PUSH_ACTIVE_EXCEPTION(e.ex);
			goto CATCH_0632;
		}
		throw e;
	}

CATCH_0632:
	{// begin catch(System.Exception)
		STORE_TRY_ID(methodExecutionContext, -1);
		{
			// catch (Exception e)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11197));
			V_46 = ((Exception_t*)IL2CPP_GET_ACTIVE_EXCEPTION(Exception_t*));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11198));
			// Debug.LogError("Caught Exception: " + e);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11199));
			Exception_t* L_171 = V_46;
			Exception_t* L_172 = L_171;
			G_B149_0 = L_172;
			G_B149_1 = ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAF2769F4E48FE7AA8276CF918D2F6D4BB73DC8C3));
			if (L_172)
			{
				G_B150_0 = L_172;
				G_B150_1 = ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAF2769F4E48FE7AA8276CF918D2F6D4BB73DC8C3));
				goto IL_0643;
			}
		}
		{
			G_B151_0 = ((String_t*)(NULL));
			G_B151_1 = G_B149_1;
			goto IL_0648;
		}

IL_0643:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11200));
			NullCheck(G_B150_0);
			String_t* L_173;
			L_173 = VirtualFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, G_B150_0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11200));
			G_B151_0 = L_173;
			G_B151_1 = G_B150_1;
		}

IL_0648:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11201));
			String_t* L_174;
			L_174 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(G_B151_1, G_B151_0, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11201));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11202));
			il2cpp_codegen_runtime_class_init_inline(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var)));
			Debug_LogError_mB00B2B4468EF3CAF041B038D840820FB84C924B2(L_174, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11202));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11203));
			IL2CPP_POP_ACTIVE_EXCEPTION();
			goto IL_0656;
		}
	}// end catch (depth: 1)

IL_0656:
	{
		// prevAudioInId = audioInId;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11204));
		String_t* L_175 = V_2;
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___prevAudioInId_109 = L_175;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___prevAudioInId_109), (void*)L_175);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11205));
	}

IL_065d:
	{
		// if (wasPositionTracked && !tracker.isPositionTracked)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11206));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_176 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___wasPositionTracked_110;
		if (!L_176)
		{
			goto IL_0673;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11207));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRTracker_t5E60EE08D82308F2F8206AD43AE8CC4925938154* L_177;
		L_177 = OVRManager_get_tracker_mA945BED7BDB670E0F82A7EAD0A401651C8605259_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11207));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11208));
		NullCheck(L_177);
		bool L_178;
		L_178 = OVRTracker_get_isPositionTracked_mE9A6204989140E34AB187178E6A268C9A1F492C0(L_177, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11208));
		G_B156_0 = ((((int32_t)L_178) == ((int32_t)0))? 1 : 0);
		goto IL_0674;
	}

IL_0673:
	{
		G_B156_0 = 0;
	}

IL_0674:
	{
		V_47 = (bool)G_B156_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11209));
		bool L_179 = V_47;
		if (!L_179)
		{
			goto IL_06c8;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11210));
	}
	try
	{// begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 10);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11211));
			// Debug.Log("[OVRManager] TrackingLost event");
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11212));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11213));
			il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
			Debug_Log_m87A9A3C761FF5C43ED8A53B16190A53D08F818BB(_stringLiteral65BA6F36CA5545B7E629658C538A01881A452707, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11213));
			// if (TrackingLost != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11214));
			il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
			Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_180 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___TrackingLost_23;
			V_48 = (bool)((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_180) <= ((RuntimeObject*)(RuntimeObject*)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11215));
			bool L_181 = V_48;
			if (!L_181)
			{
				goto IL_06a0_1;
			}
		}
		{
			// TrackingLost();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11216));
			il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
			Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_182 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___TrackingLost_23;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11217));
			NullCheck(L_182);
			Action_Invoke_m7126A54DACA72B845424072887B5F3A51FC3808E_inline(L_182, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11217));
		}

IL_06a0_1:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11218));
			goto IL_06c7;
		}
	}// end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		if(il2cpp_codegen_class_is_assignable_from (((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Exception_t_il2cpp_TypeInfo_var)), il2cpp_codegen_object_class(e.ex)))
		{
			IL2CPP_PUSH_ACTIVE_EXCEPTION(e.ex);
			goto CATCH_06a3;
		}
		throw e;
	}

CATCH_06a3:
	{// begin catch(System.Exception)
		STORE_TRY_ID(methodExecutionContext, -1);
		{
			// catch (Exception e)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11219));
			V_49 = ((Exception_t*)IL2CPP_GET_ACTIVE_EXCEPTION(Exception_t*));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11220));
			// Debug.LogError("Caught Exception: " + e);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11221));
			Exception_t* L_183 = V_49;
			Exception_t* L_184 = L_183;
			G_B162_0 = L_184;
			G_B162_1 = ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAF2769F4E48FE7AA8276CF918D2F6D4BB73DC8C3));
			if (L_184)
			{
				G_B163_0 = L_184;
				G_B163_1 = ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAF2769F4E48FE7AA8276CF918D2F6D4BB73DC8C3));
				goto IL_06b4;
			}
		}
		{
			G_B164_0 = ((String_t*)(NULL));
			G_B164_1 = G_B162_1;
			goto IL_06b9;
		}

IL_06b4:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11222));
			NullCheck(G_B163_0);
			String_t* L_185;
			L_185 = VirtualFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, G_B163_0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11222));
			G_B164_0 = L_185;
			G_B164_1 = G_B163_1;
		}

IL_06b9:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11223));
			String_t* L_186;
			L_186 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(G_B164_1, G_B164_0, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11223));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11224));
			il2cpp_codegen_runtime_class_init_inline(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var)));
			Debug_LogError_mB00B2B4468EF3CAF041B038D840820FB84C924B2(L_186, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11224));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11225));
			IL2CPP_POP_ACTIVE_EXCEPTION();
			goto IL_06c7;
		}
	}// end catch (depth: 1)

IL_06c7:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11226));
	}

IL_06c8:
	{
		// if (!wasPositionTracked && tracker.isPositionTracked)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11227));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_187 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___wasPositionTracked_110;
		if (L_187)
		{
			goto IL_06db;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11228));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRTracker_t5E60EE08D82308F2F8206AD43AE8CC4925938154* L_188;
		L_188 = OVRManager_get_tracker_mA945BED7BDB670E0F82A7EAD0A401651C8605259_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11228));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11229));
		NullCheck(L_188);
		bool L_189;
		L_189 = OVRTracker_get_isPositionTracked_mE9A6204989140E34AB187178E6A268C9A1F492C0(L_188, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11229));
		G_B169_0 = ((int32_t)(L_189));
		goto IL_06dc;
	}

IL_06db:
	{
		G_B169_0 = 0;
	}

IL_06dc:
	{
		V_50 = (bool)G_B169_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11230));
		bool L_190 = V_50;
		if (!L_190)
		{
			goto IL_0730;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11231));
	}
	try
	{// begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 11);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11232));
			// Debug.Log("[OVRManager] TrackingAcquired event");
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11233));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11234));
			il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
			Debug_Log_m87A9A3C761FF5C43ED8A53B16190A53D08F818BB(_stringLiteral70F9E42282D72751016572E0F4C30E3E87FCCF57, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11234));
			// if (TrackingAcquired != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11235));
			il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
			Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_191 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___TrackingAcquired_22;
			V_51 = (bool)((!(((RuntimeObject*)(Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07*)L_191) <= ((RuntimeObject*)(RuntimeObject*)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11236));
			bool L_192 = V_51;
			if (!L_192)
			{
				goto IL_0708_1;
			}
		}
		{
			// TrackingAcquired();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11237));
			il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
			Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* L_193 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___TrackingAcquired_22;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11238));
			NullCheck(L_193);
			Action_Invoke_m7126A54DACA72B845424072887B5F3A51FC3808E_inline(L_193, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11238));
		}

IL_0708_1:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11239));
			goto IL_072f;
		}
	}// end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		if(il2cpp_codegen_class_is_assignable_from (((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Exception_t_il2cpp_TypeInfo_var)), il2cpp_codegen_object_class(e.ex)))
		{
			IL2CPP_PUSH_ACTIVE_EXCEPTION(e.ex);
			goto CATCH_070b;
		}
		throw e;
	}

CATCH_070b:
	{// begin catch(System.Exception)
		STORE_TRY_ID(methodExecutionContext, -1);
		{
			// catch (Exception e)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11240));
			V_52 = ((Exception_t*)IL2CPP_GET_ACTIVE_EXCEPTION(Exception_t*));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11241));
			// Debug.LogError("Caught Exception: " + e);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11242));
			Exception_t* L_194 = V_52;
			Exception_t* L_195 = L_194;
			G_B175_0 = L_195;
			G_B175_1 = ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAF2769F4E48FE7AA8276CF918D2F6D4BB73DC8C3));
			if (L_195)
			{
				G_B176_0 = L_195;
				G_B176_1 = ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAF2769F4E48FE7AA8276CF918D2F6D4BB73DC8C3));
				goto IL_071c;
			}
		}
		{
			G_B177_0 = ((String_t*)(NULL));
			G_B177_1 = G_B175_1;
			goto IL_0721;
		}

IL_071c:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11243));
			NullCheck(G_B176_0);
			String_t* L_196;
			L_196 = VirtualFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, G_B176_0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11243));
			G_B177_0 = L_196;
			G_B177_1 = G_B176_1;
		}

IL_0721:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11244));
			String_t* L_197;
			L_197 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(G_B177_1, G_B177_0, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11244));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11245));
			il2cpp_codegen_runtime_class_init_inline(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var)));
			Debug_LogError_mB00B2B4468EF3CAF041B038D840820FB84C924B2(L_197, NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11245));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11246));
			IL2CPP_POP_ACTIVE_EXCEPTION();
			goto IL_072f;
		}
	}// end catch (depth: 1)

IL_072f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11247));
	}

IL_0730:
	{
		// wasPositionTracked = tracker.isPositionTracked;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11248));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11249));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRTracker_t5E60EE08D82308F2F8206AD43AE8CC4925938154* L_198;
		L_198 = OVRManager_get_tracker_mA945BED7BDB670E0F82A7EAD0A401651C8605259_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11249));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11250));
		NullCheck(L_198);
		bool L_199;
		L_199 = OVRTracker_get_isPositionTracked_mE9A6204989140E34AB187178E6A268C9A1F492C0(L_198, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11250));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___wasPositionTracked_110 = L_199;
		// display.Update();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11251));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11252));
		OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27* L_200;
		L_200 = OVRManager_get_display_m1D17D6867547AC786E00A4CF60B863275AC1AF3D_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11252));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11253));
		NullCheck(L_200);
		OVRDisplay_Update_m2AAB1947DCA31B18778EC0B5DAD5F5D61C95EAC6(L_200, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11253));
		// OVRInput.Update();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11254));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11255));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		OVRInput_Update_m46BEA0A1B8C6592A25FBA12F61D471770EC72076(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11255));
		// UpdateHMDEvents();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11256));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11257));
		OVRManager_UpdateHMDEvents_m2B05C0DAB70C5325A95E4B7AC01F9CE17CD647B4(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11257));
		// StaticUpdateMixedRealityCapture(this, gameObject, trackingOriginType);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11258));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11259));
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_201;
		L_201 = Component_get_gameObject_m57AEFBB14DB39EC476F740BA000E170355DE691B(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11259));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11260));
		int32_t L_202;
		L_202 = OVRManager_get_trackingOriginType_m352B753617F98DC58AD3F8E4324E23C7CF3A47E0(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11260));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11261));
		OVRManager_StaticUpdateMixedRealityCapture_m68D3A9F860CCE3910D11D4C80FE04E984D863810(__this, L_201, L_202, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11261));
		// UpdateInsightPassthrough(isInsightPassthroughEnabled);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11262));
		bool L_203 = __this->___isInsightPassthroughEnabled_79;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11263));
		OVRManager_UpdateInsightPassthrough_mB261855F40DB798505F3B863C29E7ED598546A4F(L_203, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11263));
	}

IL_0776:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11264));
		return;
	}
}
// System.Void OVRManager::UpdateHMDEvents()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_UpdateHMDEvents_m2B05C0DAB70C5325A95E4B7AC01F9CE17CD647B4 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&DisplayRefreshRateChangedData_t8412C04FE31982A8D071487EC6E25215EEEFD5AE_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&EventType_t51A504495C404B904AFBCF27C6268D87802C12E1_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRDeserialize_ByteArrayToStructure_TisDisplayRefreshRateChangedData_t8412C04FE31982A8D071487EC6E25215EEEFD5AE_mC8D55BBFFFFF997ED1224E48615618B2DA4E21AD_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRDeserialize_ByteArrayToStructure_TisSceneCaptureCompleteData_t309B8671164A38CEA71FDAC002DB145FFAECA033_mE2D9B1669B28BA064E53A833B1B3E35844DDD783_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRDeserialize_ByteArrayToStructure_TisSpaceEraseCompleteData_t29938D1C6E218C23257DF9F75C64AD57B1786AC3_mF47A0B55259937E10C4A967BCE2AE71377F6E3C3_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRDeserialize_ByteArrayToStructure_TisSpaceListSaveResultData_tCFC8B45EABB98F65FE80A9D7659D7E898383970D_m01BA59E421B63F6D1EC9103E6591F209FD67B541_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRDeserialize_ByteArrayToStructure_TisSpaceQueryCompleteData_tF177ABA884999611B5EC3DC2944FCE143E9F749F_mE1A49ABB1A9E3E72C77E37D97432AE54F4407732_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRDeserialize_ByteArrayToStructure_TisSpaceQueryResultsData_tED5DAE5E8BDB324E88D3A492B94ECEACA6BA907A_m50F3066158A963BA10DF164DF2CA6E5B57375951_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRDeserialize_ByteArrayToStructure_TisSpaceSaveCompleteData_t86F76FAD997B29F8C01EECC13D8BC18477D398F4_mB0692BA462E26A86BCFA96B6876BA6C11118B48B_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRDeserialize_ByteArrayToStructure_TisSpaceSetComponentStatusCompleteData_tEB0171988C9E109E4F9C41A77D6738DB9D0CE58E_mC25C743F5A37DACFA5EDEFC9F70D6773281581AD_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRDeserialize_ByteArrayToStructure_TisSpaceShareResultData_t1BE431DF2FC60FBBB1F6BA5ECFB140117CFF044F_m6FD88F86C774971F10124906FDEB4709734D471C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRDeserialize_ByteArrayToStructure_TisSpatialAnchorCreateCompleteData_t8A1C0554B63901CBACE1DC0CAB8103C1487A0A5C_m90A95D5AA1BE04AA0D0D165AFAC92821D5F38522_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_UpdateHMDEvents_m2B05C0DAB70C5325A95E4B7AC01F9CE17CD647B4_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&SceneCaptureCompleteData_t309B8671164A38CEA71FDAC002DB145FFAECA033_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&SpaceEraseCompleteData_t29938D1C6E218C23257DF9F75C64AD57B1786AC3_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&SpaceListSaveResultData_tCFC8B45EABB98F65FE80A9D7659D7E898383970D_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&SpaceQueryCompleteData_tF177ABA884999611B5EC3DC2944FCE143E9F749F_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&SpaceQueryResultsData_tED5DAE5E8BDB324E88D3A492B94ECEACA6BA907A_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&SpaceSaveCompleteData_t86F76FAD997B29F8C01EECC13D8BC18477D398F4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&SpaceSetComponentStatusCompleteData_tEB0171988C9E109E4F9C41A77D6738DB9D0CE58E_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&SpaceShareResultData_t1BE431DF2FC60FBBB1F6BA5ECFB140117CFF044F_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&SpatialAnchorCreateCompleteData_t8A1C0554B63901CBACE1DC0CAB8103C1487A0A5C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	int32_t V_1 = 0;
	bool V_2 = false;
	DisplayRefreshRateChangedData_t8412C04FE31982A8D071487EC6E25215EEEFD5AE V_3;
	memset((&V_3), 0, sizeof(V_3));
	bool V_4 = false;
	SpatialAnchorCreateCompleteData_t8A1C0554B63901CBACE1DC0CAB8103C1487A0A5C V_5;
	memset((&V_5), 0, sizeof(V_5));
	bool V_6 = false;
	SpaceSetComponentStatusCompleteData_tEB0171988C9E109E4F9C41A77D6738DB9D0CE58E V_7;
	memset((&V_7), 0, sizeof(V_7));
	bool V_8 = false;
	SpaceQueryResultsData_tED5DAE5E8BDB324E88D3A492B94ECEACA6BA907A V_9;
	memset((&V_9), 0, sizeof(V_9));
	bool V_10 = false;
	SpaceQueryCompleteData_tF177ABA884999611B5EC3DC2944FCE143E9F749F V_11;
	memset((&V_11), 0, sizeof(V_11));
	bool V_12 = false;
	SpaceSaveCompleteData_t86F76FAD997B29F8C01EECC13D8BC18477D398F4 V_13;
	memset((&V_13), 0, sizeof(V_13));
	bool V_14 = false;
	SpaceEraseCompleteData_t29938D1C6E218C23257DF9F75C64AD57B1786AC3 V_15;
	memset((&V_15), 0, sizeof(V_15));
	bool V_16 = false;
	SpaceShareResultData_t1BE431DF2FC60FBBB1F6BA5ECFB140117CFF044F V_17;
	memset((&V_17), 0, sizeof(V_17));
	bool V_18 = false;
	SpaceListSaveResultData_tCFC8B45EABB98F65FE80A9D7659D7E898383970D V_19;
	memset((&V_19), 0, sizeof(V_19));
	bool V_20 = false;
	SceneCaptureCompleteData_t309B8671164A38CEA71FDAC002DB145FFAECA033 V_21;
	memset((&V_21), 0, sizeof(V_21));
	bool V_22 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_3), (&V_5), (&V_7), (&V_9), (&V_11), (&V_13), (&V_15), (&V_17), (&V_19), (&V_21));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_UpdateHMDEvents_m2B05C0DAB70C5325A95E4B7AC01F9CE17CD647B4_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11265));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 11266));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11267));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11268));
		goto IL_0339;
	}

IL_0006:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11269));
		// switch(eventDataBuffer.EventType)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11270));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_0 = (&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___eventDataBuffer_111)->___EventType_0;
		V_1 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11271));
		int32_t L_1 = V_1;
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11272));
		int32_t L_2 = V_0;
		if ((((int32_t)L_2) == ((int32_t)1)))
		{
			goto IL_0056;
		}
	}
	{
		goto IL_001a;
	}

IL_001a:
	{
		int32_t L_3 = V_0;
		switch (((int32_t)il2cpp_codegen_subtract((int32_t)L_3, ((int32_t)49))))
		{
			case 0:
			{
				goto IL_0090;
			}
			case 1:
			{
				goto IL_00e8;
			}
			case 2:
			{
				goto IL_0151;
			}
			case 3:
			{
				goto IL_0189;
			}
			case 4:
			{
				goto IL_01ce;
			}
			case 5:
			{
				goto IL_0226;
			}
			case 6:
			{
				goto IL_0336;
			}
			case 7:
			{
				goto IL_0279;
			}
			case 8:
			{
				goto IL_02b8;
			}
		}
	}
	{
		goto IL_0049;
	}

IL_0049:
	{
		int32_t L_4 = V_0;
		if ((((int32_t)L_4) == ((int32_t)((int32_t)100))))
		{
			goto IL_02f4;
		}
	}
	{
		goto IL_0336;
	}

IL_0056:
	{
		// if (DisplayRefreshRateChanged != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11273));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132* L_5 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___DisplayRefreshRateChanged_24;
		V_2 = (bool)((!(((RuntimeObject*)(Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132*)L_5) <= ((RuntimeObject*)(RuntimeObject*)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11274));
		bool L_6 = V_2;
		if (!L_6)
		{
			goto IL_008b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11275));
		// var data = OVRDeserialize.ByteArrayToStructure<OVRDeserialize.DisplayRefreshRateChangedData>(eventDataBuffer.EventData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11276));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_7 = (&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___eventDataBuffer_111)->___EventData_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11277));
		DisplayRefreshRateChangedData_t8412C04FE31982A8D071487EC6E25215EEEFD5AE L_8;
		L_8 = OVRDeserialize_ByteArrayToStructure_TisDisplayRefreshRateChangedData_t8412C04FE31982A8D071487EC6E25215EEEFD5AE_mC8D55BBFFFFF997ED1224E48615618B2DA4E21AD(L_7, OVRDeserialize_ByteArrayToStructure_TisDisplayRefreshRateChangedData_t8412C04FE31982A8D071487EC6E25215EEEFD5AE_mC8D55BBFFFFF997ED1224E48615618B2DA4E21AD_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11277));
		V_3 = L_8;
		// DisplayRefreshRateChanged(data.FromRefreshRate, data.ToRefreshRate);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11278));
		Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132* L_9 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___DisplayRefreshRateChanged_24;
		DisplayRefreshRateChangedData_t8412C04FE31982A8D071487EC6E25215EEEFD5AE L_10 = V_3;
		float L_11 = L_10.___FromRefreshRate_0;
		DisplayRefreshRateChangedData_t8412C04FE31982A8D071487EC6E25215EEEFD5AE L_12 = V_3;
		float L_13 = L_12.___ToRefreshRate_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11279));
		NullCheck(L_9);
		Action_2_Invoke_m50A62593A87E11ED31B47FE46E633AB3B9A7666C_inline(L_9, L_11, L_13, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11279));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11280));
	}

IL_008b:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11281));
		goto IL_0338;
	}

IL_0090:
	{
		// if (SpatialAnchorCreateComplete != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11282));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_4_t540B344FD589096100128D9A1B39946413ED9AAE* L_14 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpatialAnchorCreateComplete_25;
		V_4 = (bool)((!(((RuntimeObject*)(Action_4_t540B344FD589096100128D9A1B39946413ED9AAE*)L_14) <= ((RuntimeObject*)(RuntimeObject*)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11283));
		bool L_15 = V_4;
		if (!L_15)
		{
			goto IL_00e3;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11284));
		// var data =
		//     OVRDeserialize.ByteArrayToStructure<OVRDeserialize.SpatialAnchorCreateCompleteData>(
		//         eventDataBuffer.EventData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11285));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_16 = (&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___eventDataBuffer_111)->___EventData_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11286));
		SpatialAnchorCreateCompleteData_t8A1C0554B63901CBACE1DC0CAB8103C1487A0A5C L_17;
		L_17 = OVRDeserialize_ByteArrayToStructure_TisSpatialAnchorCreateCompleteData_t8A1C0554B63901CBACE1DC0CAB8103C1487A0A5C_m90A95D5AA1BE04AA0D0D165AFAC92821D5F38522(L_16, OVRDeserialize_ByteArrayToStructure_TisSpatialAnchorCreateCompleteData_t8A1C0554B63901CBACE1DC0CAB8103C1487A0A5C_m90A95D5AA1BE04AA0D0D165AFAC92821D5F38522_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11286));
		V_5 = L_17;
		// SpatialAnchorCreateComplete(data.RequestId, data.Result >= 0, data.Space, data.Uuid);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11287));
		Action_4_t540B344FD589096100128D9A1B39946413ED9AAE* L_18 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpatialAnchorCreateComplete_25;
		SpatialAnchorCreateCompleteData_t8A1C0554B63901CBACE1DC0CAB8103C1487A0A5C L_19 = V_5;
		uint64_t L_20 = L_19.___RequestId_0;
		SpatialAnchorCreateCompleteData_t8A1C0554B63901CBACE1DC0CAB8103C1487A0A5C L_21 = V_5;
		int32_t L_22 = L_21.___Result_1;
		SpatialAnchorCreateCompleteData_t8A1C0554B63901CBACE1DC0CAB8103C1487A0A5C L_23 = V_5;
		uint64_t L_24 = L_23.___Space_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11288));
		OVRSpace_tDA5A6DB241624CD5712AC4A71E565BA171985B4D L_25;
		L_25 = OVRSpace_op_Implicit_m5668C0D0B94EFD6CE95FC8C92A7E4418B8C0EFB6(L_24, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11288));
		SpatialAnchorCreateCompleteData_t8A1C0554B63901CBACE1DC0CAB8103C1487A0A5C L_26 = V_5;
		Guid_t L_27 = L_26.___Uuid_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11289));
		NullCheck(L_18);
		Action_4_Invoke_mF83AC81DE351FE293937C4B759B549D9A6B68A70_inline(L_18, L_20, (bool)((((int32_t)((((int32_t)L_22) < ((int32_t)0))? 1 : 0)) == ((int32_t)0))? 1 : 0), L_25, L_27, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11289));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11290));
	}

IL_00e3:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11291));
		goto IL_0338;
	}

IL_00e8:
	{
		// if (SpaceSetComponentStatusComplete != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11292));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_6_tD8B17612932122F2ABF5C8545327C8F527403625* L_28 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceSetComponentStatusComplete_26;
		V_6 = (bool)((!(((RuntimeObject*)(Action_6_tD8B17612932122F2ABF5C8545327C8F527403625*)L_28) <= ((RuntimeObject*)(RuntimeObject*)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11293));
		bool L_29 = V_6;
		if (!L_29)
		{
			goto IL_014c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11294));
		// var data = OVRDeserialize
		//     .ByteArrayToStructure<OVRDeserialize.SpaceSetComponentStatusCompleteData>(eventDataBuffer
		//         .EventData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11295));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_30 = (&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___eventDataBuffer_111)->___EventData_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11296));
		SpaceSetComponentStatusCompleteData_tEB0171988C9E109E4F9C41A77D6738DB9D0CE58E L_31;
		L_31 = OVRDeserialize_ByteArrayToStructure_TisSpaceSetComponentStatusCompleteData_tEB0171988C9E109E4F9C41A77D6738DB9D0CE58E_mC25C743F5A37DACFA5EDEFC9F70D6773281581AD(L_30, OVRDeserialize_ByteArrayToStructure_TisSpaceSetComponentStatusCompleteData_tEB0171988C9E109E4F9C41A77D6738DB9D0CE58E_mC25C743F5A37DACFA5EDEFC9F70D6773281581AD_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11296));
		V_7 = L_31;
		// SpaceSetComponentStatusComplete(data.RequestId, data.Result >= 0, data.Space, data.Uuid, data.ComponentType, data.Enabled != 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11297));
		Action_6_tD8B17612932122F2ABF5C8545327C8F527403625* L_32 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceSetComponentStatusComplete_26;
		SpaceSetComponentStatusCompleteData_tEB0171988C9E109E4F9C41A77D6738DB9D0CE58E L_33 = V_7;
		uint64_t L_34 = L_33.___RequestId_0;
		SpaceSetComponentStatusCompleteData_tEB0171988C9E109E4F9C41A77D6738DB9D0CE58E L_35 = V_7;
		int32_t L_36 = L_35.___Result_1;
		SpaceSetComponentStatusCompleteData_tEB0171988C9E109E4F9C41A77D6738DB9D0CE58E L_37 = V_7;
		uint64_t L_38 = L_37.___Space_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11298));
		OVRSpace_tDA5A6DB241624CD5712AC4A71E565BA171985B4D L_39;
		L_39 = OVRSpace_op_Implicit_m5668C0D0B94EFD6CE95FC8C92A7E4418B8C0EFB6(L_38, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11298));
		SpaceSetComponentStatusCompleteData_tEB0171988C9E109E4F9C41A77D6738DB9D0CE58E L_40 = V_7;
		Guid_t L_41 = L_40.___Uuid_3;
		SpaceSetComponentStatusCompleteData_tEB0171988C9E109E4F9C41A77D6738DB9D0CE58E L_42 = V_7;
		int32_t L_43 = L_42.___ComponentType_4;
		SpaceSetComponentStatusCompleteData_tEB0171988C9E109E4F9C41A77D6738DB9D0CE58E L_44 = V_7;
		int32_t L_45 = L_44.___Enabled_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11299));
		NullCheck(L_32);
		Action_6_Invoke_m25D56069D793A7289F7D60B11D15ED7D15F33780_inline(L_32, L_34, (bool)((((int32_t)((((int32_t)L_36) < ((int32_t)0))? 1 : 0)) == ((int32_t)0))? 1 : 0), L_39, L_41, L_43, (bool)((!(((uint32_t)L_45) <= ((uint32_t)0)))? 1 : 0), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11299));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11300));
	}

IL_014c:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11301));
		goto IL_0338;
	}

IL_0151:
	{
		// if (SpaceQueryResults != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11302));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C* L_46 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceQueryResults_27;
		V_8 = (bool)((!(((RuntimeObject*)(Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C*)L_46) <= ((RuntimeObject*)(RuntimeObject*)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11303));
		bool L_47 = V_8;
		if (!L_47)
		{
			goto IL_0184;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11304));
		// var data =
		//     OVRDeserialize.ByteArrayToStructure<OVRDeserialize.SpaceQueryResultsData>(eventDataBuffer
		//         .EventData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11305));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_48 = (&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___eventDataBuffer_111)->___EventData_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11306));
		SpaceQueryResultsData_tED5DAE5E8BDB324E88D3A492B94ECEACA6BA907A L_49;
		L_49 = OVRDeserialize_ByteArrayToStructure_TisSpaceQueryResultsData_tED5DAE5E8BDB324E88D3A492B94ECEACA6BA907A_m50F3066158A963BA10DF164DF2CA6E5B57375951(L_48, OVRDeserialize_ByteArrayToStructure_TisSpaceQueryResultsData_tED5DAE5E8BDB324E88D3A492B94ECEACA6BA907A_m50F3066158A963BA10DF164DF2CA6E5B57375951_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11306));
		V_9 = L_49;
		// SpaceQueryResults(data.RequestId);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11307));
		Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C* L_50 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceQueryResults_27;
		SpaceQueryResultsData_tED5DAE5E8BDB324E88D3A492B94ECEACA6BA907A L_51 = V_9;
		uint64_t L_52 = L_51.___RequestId_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11308));
		NullCheck(L_50);
		Action_1_Invoke_mD21E1BBC413B52214AE1643F8570EB10B0C004CF_inline(L_50, L_52, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11308));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11309));
	}

IL_0184:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11310));
		goto IL_0338;
	}

IL_0189:
	{
		// if (SpaceQueryComplete != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11311));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_53 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceQueryComplete_28;
		V_10 = (bool)((!(((RuntimeObject*)(Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71*)L_53) <= ((RuntimeObject*)(RuntimeObject*)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11312));
		bool L_54 = V_10;
		if (!L_54)
		{
			goto IL_01c9;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11313));
		// var data =
		//     OVRDeserialize.ByteArrayToStructure<OVRDeserialize.SpaceQueryCompleteData>(eventDataBuffer
		//         .EventData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11314));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_55 = (&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___eventDataBuffer_111)->___EventData_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11315));
		SpaceQueryCompleteData_tF177ABA884999611B5EC3DC2944FCE143E9F749F L_56;
		L_56 = OVRDeserialize_ByteArrayToStructure_TisSpaceQueryCompleteData_tF177ABA884999611B5EC3DC2944FCE143E9F749F_mE1A49ABB1A9E3E72C77E37D97432AE54F4407732(L_55, OVRDeserialize_ByteArrayToStructure_TisSpaceQueryCompleteData_tF177ABA884999611B5EC3DC2944FCE143E9F749F_mE1A49ABB1A9E3E72C77E37D97432AE54F4407732_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11315));
		V_11 = L_56;
		// SpaceQueryComplete(data.RequestId, data.Result >= 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11316));
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_57 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceQueryComplete_28;
		SpaceQueryCompleteData_tF177ABA884999611B5EC3DC2944FCE143E9F749F L_58 = V_11;
		uint64_t L_59 = L_58.___RequestId_0;
		SpaceQueryCompleteData_tF177ABA884999611B5EC3DC2944FCE143E9F749F L_60 = V_11;
		int32_t L_61 = L_60.___Result_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11317));
		NullCheck(L_57);
		Action_2_Invoke_m5C4507B6E0477EDD49165F507099C83A696B6B20_inline(L_57, L_59, (bool)((((int32_t)((((int32_t)L_61) < ((int32_t)0))? 1 : 0)) == ((int32_t)0))? 1 : 0), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11317));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11318));
	}

IL_01c9:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11319));
		goto IL_0338;
	}

IL_01ce:
	{
		// if (SpaceSaveComplete != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11320));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A* L_62 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceSaveComplete_29;
		V_12 = (bool)((!(((RuntimeObject*)(Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A*)L_62) <= ((RuntimeObject*)(RuntimeObject*)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11321));
		bool L_63 = V_12;
		if (!L_63)
		{
			goto IL_0221;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11322));
		// var data =
		//     OVRDeserialize.ByteArrayToStructure<OVRDeserialize.SpaceSaveCompleteData>(eventDataBuffer
		//         .EventData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11323));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_64 = (&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___eventDataBuffer_111)->___EventData_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11324));
		SpaceSaveCompleteData_t86F76FAD997B29F8C01EECC13D8BC18477D398F4 L_65;
		L_65 = OVRDeserialize_ByteArrayToStructure_TisSpaceSaveCompleteData_t86F76FAD997B29F8C01EECC13D8BC18477D398F4_mB0692BA462E26A86BCFA96B6876BA6C11118B48B(L_64, OVRDeserialize_ByteArrayToStructure_TisSpaceSaveCompleteData_t86F76FAD997B29F8C01EECC13D8BC18477D398F4_mB0692BA462E26A86BCFA96B6876BA6C11118B48B_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11324));
		V_13 = L_65;
		// SpaceSaveComplete(data.RequestId, data.Space, data.Result >= 0, data.Uuid);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11325));
		Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A* L_66 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceSaveComplete_29;
		SpaceSaveCompleteData_t86F76FAD997B29F8C01EECC13D8BC18477D398F4 L_67 = V_13;
		uint64_t L_68 = L_67.___RequestId_0;
		SpaceSaveCompleteData_t86F76FAD997B29F8C01EECC13D8BC18477D398F4 L_69 = V_13;
		uint64_t L_70 = L_69.___Space_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11326));
		OVRSpace_tDA5A6DB241624CD5712AC4A71E565BA171985B4D L_71;
		L_71 = OVRSpace_op_Implicit_m5668C0D0B94EFD6CE95FC8C92A7E4418B8C0EFB6(L_70, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11326));
		SpaceSaveCompleteData_t86F76FAD997B29F8C01EECC13D8BC18477D398F4 L_72 = V_13;
		int32_t L_73 = L_72.___Result_2;
		SpaceSaveCompleteData_t86F76FAD997B29F8C01EECC13D8BC18477D398F4 L_74 = V_13;
		Guid_t L_75 = L_74.___Uuid_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11327));
		NullCheck(L_66);
		Action_4_Invoke_mD49299FEC5EDAE647F844D50183E3832DB459D6F_inline(L_66, L_68, L_71, (bool)((((int32_t)((((int32_t)L_73) < ((int32_t)0))? 1 : 0)) == ((int32_t)0))? 1 : 0), L_75, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11327));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11328));
	}

IL_0221:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11329));
		goto IL_0338;
	}

IL_0226:
	{
		// if (SpaceEraseComplete != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11330));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC* L_76 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceEraseComplete_30;
		V_14 = (bool)((!(((RuntimeObject*)(Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC*)L_76) <= ((RuntimeObject*)(RuntimeObject*)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11331));
		bool L_77 = V_14;
		if (!L_77)
		{
			goto IL_0274;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11332));
		// var data =
		//     OVRDeserialize.ByteArrayToStructure<OVRDeserialize.SpaceEraseCompleteData>(eventDataBuffer
		//         .EventData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11333));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_78 = (&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___eventDataBuffer_111)->___EventData_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11334));
		SpaceEraseCompleteData_t29938D1C6E218C23257DF9F75C64AD57B1786AC3 L_79;
		L_79 = OVRDeserialize_ByteArrayToStructure_TisSpaceEraseCompleteData_t29938D1C6E218C23257DF9F75C64AD57B1786AC3_mF47A0B55259937E10C4A967BCE2AE71377F6E3C3(L_78, OVRDeserialize_ByteArrayToStructure_TisSpaceEraseCompleteData_t29938D1C6E218C23257DF9F75C64AD57B1786AC3_mF47A0B55259937E10C4A967BCE2AE71377F6E3C3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11334));
		V_15 = L_79;
		// SpaceEraseComplete(data.RequestId, data.Result >= 0, data.Uuid, data.Location);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11335));
		Action_4_t68CDF52B38375A15FD07A9D61E073DAB9D9C76DC* L_80 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceEraseComplete_30;
		SpaceEraseCompleteData_t29938D1C6E218C23257DF9F75C64AD57B1786AC3 L_81 = V_15;
		uint64_t L_82 = L_81.___RequestId_0;
		SpaceEraseCompleteData_t29938D1C6E218C23257DF9F75C64AD57B1786AC3 L_83 = V_15;
		int32_t L_84 = L_83.___Result_1;
		SpaceEraseCompleteData_t29938D1C6E218C23257DF9F75C64AD57B1786AC3 L_85 = V_15;
		Guid_t L_86 = L_85.___Uuid_2;
		SpaceEraseCompleteData_t29938D1C6E218C23257DF9F75C64AD57B1786AC3 L_87 = V_15;
		int32_t L_88 = L_87.___Location_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11336));
		NullCheck(L_80);
		Action_4_Invoke_mE230342C815050AB281BEBADE54FC805AE60B3F0_inline(L_80, L_82, (bool)((((int32_t)((((int32_t)L_84) < ((int32_t)0))? 1 : 0)) == ((int32_t)0))? 1 : 0), L_86, L_88, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11336));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11337));
	}

IL_0274:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11338));
		goto IL_0338;
	}

IL_0279:
	{
		// if (ShareSpacesComplete != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11339));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_89 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___ShareSpacesComplete_31;
		V_16 = (bool)((!(((RuntimeObject*)(Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9*)L_89) <= ((RuntimeObject*)(RuntimeObject*)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11340));
		bool L_90 = V_16;
		if (!L_90)
		{
			goto IL_02b3;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11341));
		// var data =
		//     OVRDeserialize.ByteArrayToStructure<OVRDeserialize.SpaceShareResultData>(
		//         eventDataBuffer.EventData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11342));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_91 = (&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___eventDataBuffer_111)->___EventData_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11343));
		SpaceShareResultData_t1BE431DF2FC60FBBB1F6BA5ECFB140117CFF044F L_92;
		L_92 = OVRDeserialize_ByteArrayToStructure_TisSpaceShareResultData_t1BE431DF2FC60FBBB1F6BA5ECFB140117CFF044F_m6FD88F86C774971F10124906FDEB4709734D471C(L_91, OVRDeserialize_ByteArrayToStructure_TisSpaceShareResultData_t1BE431DF2FC60FBBB1F6BA5ECFB140117CFF044F_m6FD88F86C774971F10124906FDEB4709734D471C_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11343));
		V_17 = L_92;
		// ShareSpacesComplete(data.RequestId, (OVRSpatialAnchor.OperationResult)data.Result);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11344));
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_93 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___ShareSpacesComplete_31;
		SpaceShareResultData_t1BE431DF2FC60FBBB1F6BA5ECFB140117CFF044F L_94 = V_17;
		uint64_t L_95 = L_94.___RequestId_0;
		SpaceShareResultData_t1BE431DF2FC60FBBB1F6BA5ECFB140117CFF044F L_96 = V_17;
		int32_t L_97 = L_96.___Result_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11345));
		NullCheck(L_93);
		Action_2_Invoke_mF391E368703BF04E5B3933748BB1BD1BFC5799D9_inline(L_93, L_95, L_97, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11345));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11346));
	}

IL_02b3:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11347));
		goto IL_0338;
	}

IL_02b8:
	{
		// if (SpaceListSaveComplete != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11348));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_98 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceListSaveComplete_32;
		V_18 = (bool)((!(((RuntimeObject*)(Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9*)L_98) <= ((RuntimeObject*)(RuntimeObject*)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11349));
		bool L_99 = V_18;
		if (!L_99)
		{
			goto IL_02f2;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11350));
		// var data =
		//     OVRDeserialize.ByteArrayToStructure<OVRDeserialize.SpaceListSaveResultData>(
		//         eventDataBuffer.EventData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11351));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_100 = (&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___eventDataBuffer_111)->___EventData_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11352));
		SpaceListSaveResultData_tCFC8B45EABB98F65FE80A9D7659D7E898383970D L_101;
		L_101 = OVRDeserialize_ByteArrayToStructure_TisSpaceListSaveResultData_tCFC8B45EABB98F65FE80A9D7659D7E898383970D_m01BA59E421B63F6D1EC9103E6591F209FD67B541(L_100, OVRDeserialize_ByteArrayToStructure_TisSpaceListSaveResultData_tCFC8B45EABB98F65FE80A9D7659D7E898383970D_m01BA59E421B63F6D1EC9103E6591F209FD67B541_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11352));
		V_19 = L_101;
		// SpaceListSaveComplete(data.RequestId, (OVRSpatialAnchor.OperationResult)data.Result);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11353));
		Action_2_tD6645913AD5AC5C01955FE6AA6F05A7A1FCA90A9* L_102 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SpaceListSaveComplete_32;
		SpaceListSaveResultData_tCFC8B45EABB98F65FE80A9D7659D7E898383970D L_103 = V_19;
		uint64_t L_104 = L_103.___RequestId_0;
		SpaceListSaveResultData_tCFC8B45EABB98F65FE80A9D7659D7E898383970D L_105 = V_19;
		int32_t L_106 = L_105.___Result_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11354));
		NullCheck(L_102);
		Action_2_Invoke_mF391E368703BF04E5B3933748BB1BD1BFC5799D9_inline(L_102, L_104, L_106, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11354));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11355));
	}

IL_02f2:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11356));
		goto IL_0338;
	}

IL_02f4:
	{
		// if (SceneCaptureComplete != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11357));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_107 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SceneCaptureComplete_33;
		V_20 = (bool)((!(((RuntimeObject*)(Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71*)L_107) <= ((RuntimeObject*)(RuntimeObject*)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11358));
		bool L_108 = V_20;
		if (!L_108)
		{
			goto IL_0334;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11359));
		// var data =
		//     OVRDeserialize.ByteArrayToStructure<OVRDeserialize.SceneCaptureCompleteData>(eventDataBuffer
		//         .EventData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11360));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_109 = (&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___eventDataBuffer_111)->___EventData_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11361));
		SceneCaptureCompleteData_t309B8671164A38CEA71FDAC002DB145FFAECA033 L_110;
		L_110 = OVRDeserialize_ByteArrayToStructure_TisSceneCaptureCompleteData_t309B8671164A38CEA71FDAC002DB145FFAECA033_mE2D9B1669B28BA064E53A833B1B3E35844DDD783(L_109, OVRDeserialize_ByteArrayToStructure_TisSceneCaptureCompleteData_t309B8671164A38CEA71FDAC002DB145FFAECA033_mE2D9B1669B28BA064E53A833B1B3E35844DDD783_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11361));
		V_21 = L_110;
		// SceneCaptureComplete(data.RequestId, data.Result >= 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11362));
		Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* L_111 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___SceneCaptureComplete_33;
		SceneCaptureCompleteData_t309B8671164A38CEA71FDAC002DB145FFAECA033 L_112 = V_21;
		uint64_t L_113 = L_112.___RequestId_0;
		SceneCaptureCompleteData_t309B8671164A38CEA71FDAC002DB145FFAECA033 L_114 = V_21;
		int32_t L_115 = L_114.___Result_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11363));
		NullCheck(L_111);
		Action_2_Invoke_m5C4507B6E0477EDD49165F507099C83A696B6B20_inline(L_111, L_113, (bool)((((int32_t)((((int32_t)L_115) < ((int32_t)0))? 1 : 0)) == ((int32_t)0))? 1 : 0), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11363));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11364));
	}

IL_0334:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11365));
		goto IL_0338;
	}

IL_0336:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11366));
		goto IL_0338;
	}

IL_0338:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11367));
	}

IL_0339:
	{
		// while(OVRPlugin.PollEvent(ref eventDataBuffer))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11368));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11369));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_116;
		L_116 = OVRPlugin_PollEvent_mB91F8F706861047BD2CCD1BDC0AB6374642503E0((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___eventDataBuffer_111), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11369));
		V_22 = L_116;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11370));
		bool L_117 = V_22;
		if (L_117)
		{
			goto IL_0006;
		}
	}
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11371));
		return;
	}
}
// UnityEngine.Camera OVRManager::FindMainCamera()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* OVRManager_FindMainCamera_mCCD7BE229B2DA34FFCB009A527BBE8F40F57EB49 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Comparison_1_t49BE56523BDD8BC22EF3396960546FE16DE7B11A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Component_GetComponentInParent_TisOVRCameraRig_t7FC2BB0D30DED2B7F0C8914AF2B66E9F4CF891A9_m132CAE22DC4B18ACA26D293EE1D3799068ADAA5D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GameObjectU5BU5D_tFF67550DFCE87096D7A3734EA15B75896B2722CF_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GameObject_GetComponent_TisCamera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184_m3B3C11550E48AA36AFF82788636EB163CC51FEE6_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GameObject_t76FEDD663AB33C991A9C9A23129337651094216F_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_Add_m9BE0CD6DB63BFCBCBD5619618748924143F1AFAD_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_Sort_mF0042CBA61BB32CBA4FFE1CD1286329131635B85_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1__ctor_m62FFCB8D441FA0A3D3002703967951B70D8475F1_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Count_mDCDDC4E9E15CD83C00D4CC32F79830261769F65C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Item_m7CEE3A6E144C8D86DE6490620206FAB13432ACF6_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_tD2FA3273746E404D72561E8324608D18B52B533E_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_tD2FA3273746E404D72561E8324608D18B52B533E_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRCameraRig_t7FC2BB0D30DED2B7F0C8914AF2B66E9F4CF891A9_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_FindMainCamera_mCCD7BE229B2DA34FFCB009A527BBE8F40F57EB49_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&U3CU3Ec_U3CFindMainCameraU3Eb__413_0_mB17F87C547891E2EF3D5FB13D630EBE419674A2F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&U3CU3Ec_t428B95F22B12C42F05233DE02507635B55BBBF98_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&WeakReference_1_TryGetTarget_m554CBAC52CB26900F9D0E24648D3482A43AB67B6_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&WeakReference_1__ctor_m12E7503DDFC128E1736C08DF717D975A0B2BB6E7_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&WeakReference_1_t08942AAA5C58B24D75314BD9594E2DE409CB9C93_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral1C74E9B5FE8F0722B82BEB4223EB6429598E8CFC);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral42AA32717042087706ACA1EEC2EB3C2A03C44C34);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral8056EF217D555787C1F04ECE7927A2323D1D2AEA);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralE302AA9BECF9F1CB69CF2A3E5B33E0716BEA97F6);
		s_Il2CppMethodInitialized = true;
	}
	Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* V_0 = NULL;
	Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* V_1 = NULL;
	GameObjectU5BU5D_tFF67550DFCE87096D7A3734EA15B75896B2722CF* V_2 = NULL;
	List_1_tD2FA3273746E404D72561E8324608D18B52B533E* V_3 = NULL;
	bool V_4 = false;
	Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* V_5 = NULL;
	GameObjectU5BU5D_tFF67550DFCE87096D7A3734EA15B75896B2722CF* V_6 = NULL;
	int32_t V_7 = 0;
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* V_8 = NULL;
	Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* V_9 = NULL;
	bool V_10 = false;
	OVRCameraRig_t7FC2BB0D30DED2B7F0C8914AF2B66E9F4CF891A9* V_11 = NULL;
	bool V_12 = false;
	bool V_13 = false;
	bool V_14 = false;
	bool V_15 = false;
	bool V_16 = false;
	bool V_17 = false;
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3), (&V_8), (&V_9), (&V_11));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_FindMainCamera_mCCD7BE229B2DA34FFCB009A527BBE8F40F57EB49_RuntimeMethod_var, NULL, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11372));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 11373));
	int32_t G_B6_0 = 0;
	int32_t G_B12_0 = 0;
	int32_t G_B16_0 = 0;
	Comparison_1_t49BE56523BDD8BC22EF3396960546FE16DE7B11A* G_B29_0 = NULL;
	List_1_tD2FA3273746E404D72561E8324608D18B52B533E* G_B29_1 = NULL;
	Comparison_1_t49BE56523BDD8BC22EF3396960546FE16DE7B11A* G_B28_0 = NULL;
	List_1_tD2FA3273746E404D72561E8324608D18B52B533E* G_B28_1 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11374));
		// if (lastFoundMainCamera != null &&
		//     lastFoundMainCamera.TryGetTarget(out lastCamera) &&
		//     lastCamera != null &&
		//     lastCamera.isActiveAndEnabled &&
		//     lastCamera.CompareTag("MainCamera"))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11375));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		WeakReference_1_t08942AAA5C58B24D75314BD9594E2DE409CB9C93* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___lastFoundMainCamera_119;
		if (!L_0)
		{
			goto IL_0034;
		}
	}
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		WeakReference_1_t08942AAA5C58B24D75314BD9594E2DE409CB9C93* L_1 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___lastFoundMainCamera_119;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11376));
		NullCheck(L_1);
		bool L_2;
		L_2 = WeakReference_1_TryGetTarget_m554CBAC52CB26900F9D0E24648D3482A43AB67B6(L_1, (&V_0), WeakReference_1_TryGetTarget_m554CBAC52CB26900F9D0E24648D3482A43AB67B6_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11376));
		if (!L_2)
		{
			goto IL_0034;
		}
	}
	{
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_3 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11377));
		il2cpp_codegen_runtime_class_init_inline(Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		bool L_4;
		L_4 = Object_op_Inequality_mD0BE578448EAA61948F25C32F8DD55AB1F778602(L_3, (Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C*)NULL, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11377));
		if (!L_4)
		{
			goto IL_0034;
		}
	}
	{
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_5 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11378));
		NullCheck(L_5);
		bool L_6;
		L_6 = Behaviour_get_isActiveAndEnabled_mEB4ECCE9761A7016BC619557CEFEA1A30D3BF28A(L_5, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11378));
		if (!L_6)
		{
			goto IL_0034;
		}
	}
	{
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_7 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11379));
		NullCheck(L_7);
		bool L_8;
		L_8 = Component_CompareTag_mE6F8897E84F12DF12D302FFC4D58204D51096FC5(L_7, _stringLiteralE302AA9BECF9F1CB69CF2A3E5B33E0716BEA97F6, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11379));
		G_B6_0 = ((int32_t)(L_8));
		goto IL_0035;
	}

IL_0034:
	{
		G_B6_0 = 0;
	}

IL_0035:
	{
		V_4 = (bool)G_B6_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11380));
		bool L_9 = V_4;
		if (!L_9)
		{
			goto IL_0044;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11381));
		// return lastCamera;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11382));
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_10 = V_0;
		V_5 = L_10;
		goto IL_01bd;
	}

IL_0044:
	{
		// Camera result = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11383));
		V_1 = (Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184*)NULL;
		// GameObject[] objects = GameObject.FindGameObjectsWithTag("MainCamera");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11384));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11385));
		GameObjectU5BU5D_tFF67550DFCE87096D7A3734EA15B75896B2722CF* L_11;
		L_11 = GameObject_FindGameObjectsWithTag_mB8AA805DA664EF0221BB338446014F662771B4E3(_stringLiteralE302AA9BECF9F1CB69CF2A3E5B33E0716BEA97F6, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11385));
		V_2 = L_11;
		// List<Camera> cameras = new List<Camera>(4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11386));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11387));
		List_1_tD2FA3273746E404D72561E8324608D18B52B533E* L_12 = (List_1_tD2FA3273746E404D72561E8324608D18B52B533E*)il2cpp_codegen_object_new(List_1_tD2FA3273746E404D72561E8324608D18B52B533E_il2cpp_TypeInfo_var);
		NullCheck(L_12);
		List_1__ctor_m62FFCB8D441FA0A3D3002703967951B70D8475F1(L_12, 4, List_1__ctor_m62FFCB8D441FA0A3D3002703967951B70D8475F1_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11387));
		V_3 = L_12;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11388));
		// foreach (GameObject obj in objects)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11389));
		GameObjectU5BU5D_tFF67550DFCE87096D7A3734EA15B75896B2722CF* L_13 = V_2;
		V_6 = L_13;
		V_7 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11390));
		goto IL_00c9;
	}

IL_0061:
	{
		// foreach (GameObject obj in objects)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11391));
		GameObjectU5BU5D_tFF67550DFCE87096D7A3734EA15B75896B2722CF* L_14 = V_6;
		int32_t L_15 = V_7;
		NullCheck(L_14);
		int32_t L_16 = L_15;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_17 = (L_14)->GetAt(static_cast<il2cpp_array_size_t>(L_16));
		V_8 = L_17;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11392));
		// Camera camera = obj.GetComponent<Camera>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11393));
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_18 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11394));
		NullCheck(L_18);
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_19;
		L_19 = GameObject_GetComponent_TisCamera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184_m3B3C11550E48AA36AFF82788636EB163CC51FEE6(L_18, GameObject_GetComponent_TisCamera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184_m3B3C11550E48AA36AFF82788636EB163CC51FEE6_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11394));
		V_9 = L_19;
		// if (camera != null && camera.enabled)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11395));
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_20 = V_9;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11396));
		il2cpp_codegen_runtime_class_init_inline(Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		bool L_21;
		L_21 = Object_op_Inequality_mD0BE578448EAA61948F25C32F8DD55AB1F778602(L_20, (Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C*)NULL, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11396));
		if (!L_21)
		{
			goto IL_0085;
		}
	}
	{
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_22 = V_9;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11397));
		NullCheck(L_22);
		bool L_23;
		L_23 = Behaviour_get_enabled_mAAC9F15E9EBF552217A5AE2681589CC0BFA300C1(L_22, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11397));
		G_B12_0 = ((int32_t)(L_23));
		goto IL_0086;
	}

IL_0085:
	{
		G_B12_0 = 0;
	}

IL_0086:
	{
		V_10 = (bool)G_B12_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11398));
		bool L_24 = V_10;
		if (!L_24)
		{
			goto IL_00c2;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11399));
		// OVRCameraRig cameraRig = camera.GetComponentInParent<OVRCameraRig>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11400));
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_25 = V_9;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11401));
		NullCheck(L_25);
		OVRCameraRig_t7FC2BB0D30DED2B7F0C8914AF2B66E9F4CF891A9* L_26;
		L_26 = Component_GetComponentInParent_TisOVRCameraRig_t7FC2BB0D30DED2B7F0C8914AF2B66E9F4CF891A9_m132CAE22DC4B18ACA26D293EE1D3799068ADAA5D(L_25, Component_GetComponentInParent_TisOVRCameraRig_t7FC2BB0D30DED2B7F0C8914AF2B66E9F4CF891A9_m132CAE22DC4B18ACA26D293EE1D3799068ADAA5D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11401));
		V_11 = L_26;
		// if (cameraRig != null && cameraRig.trackingSpace != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11402));
		OVRCameraRig_t7FC2BB0D30DED2B7F0C8914AF2B66E9F4CF891A9* L_27 = V_11;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11403));
		il2cpp_codegen_runtime_class_init_inline(Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		bool L_28;
		L_28 = Object_op_Inequality_mD0BE578448EAA61948F25C32F8DD55AB1F778602(L_27, (Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C*)NULL, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11403));
		if (!L_28)
		{
			goto IL_00af;
		}
	}
	{
		OVRCameraRig_t7FC2BB0D30DED2B7F0C8914AF2B66E9F4CF891A9* L_29 = V_11;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11404));
		NullCheck(L_29);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_30;
		L_30 = OVRCameraRig_get_trackingSpace_m76339871C7804C1BD14283FBF3D91268D4D87550_inline(L_29, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11404));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11405));
		il2cpp_codegen_runtime_class_init_inline(Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		bool L_31;
		L_31 = Object_op_Inequality_mD0BE578448EAA61948F25C32F8DD55AB1F778602(L_30, (Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C*)NULL, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11405));
		G_B16_0 = ((int32_t)(L_31));
		goto IL_00b0;
	}

IL_00af:
	{
		G_B16_0 = 0;
	}

IL_00b0:
	{
		V_12 = (bool)G_B16_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11406));
		bool L_32 = V_12;
		if (!L_32)
		{
			goto IL_00c1;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11407));
		// cameras.Add(camera);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11408));
		List_1_tD2FA3273746E404D72561E8324608D18B52B533E* L_33 = V_3;
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_34 = V_9;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11409));
		NullCheck(L_33);
		List_1_Add_m9BE0CD6DB63BFCBCBD5619618748924143F1AFAD_inline(L_33, L_34, List_1_Add_m9BE0CD6DB63BFCBCBD5619618748924143F1AFAD_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11409));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11410));
	}

IL_00c1:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11411));
	}

IL_00c2:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11412));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11413));
		int32_t L_35 = V_7;
		V_7 = ((int32_t)il2cpp_codegen_add(L_35, 1));
	}

IL_00c9:
	{
		// foreach (GameObject obj in objects)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11414));
		int32_t L_36 = V_7;
		GameObjectU5BU5D_tFF67550DFCE87096D7A3734EA15B75896B2722CF* L_37 = V_6;
		NullCheck(L_37);
		if ((((int32_t)L_36) < ((int32_t)((int32_t)(((RuntimeArray*)L_37)->max_length)))))
		{
			goto IL_0061;
		}
	}
	{
		// if (cameras.Count == 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11415));
		List_1_tD2FA3273746E404D72561E8324608D18B52B533E* L_38 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11416));
		NullCheck(L_38);
		int32_t L_39;
		L_39 = List_1_get_Count_mDCDDC4E9E15CD83C00D4CC32F79830261769F65C_inline(L_38, List_1_get_Count_mDCDDC4E9E15CD83C00D4CC32F79830261769F65C_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11416));
		V_13 = (bool)((((int32_t)L_39) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11417));
		bool L_40 = V_13;
		if (!L_40)
		{
			goto IL_00ea;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11418));
		// result = Camera.main; // pick one of the cameras which tagged as "MainCamera"
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11419));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11420));
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_41;
		L_41 = Camera_get_main_m52C992F18E05355ABB9EEB64A4BF2215E12762DF(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11420));
		V_1 = L_41;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11421));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11422));
		goto IL_0156;
	}

IL_00ea:
	{
		// else if (cameras.Count == 1)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11423));
		List_1_tD2FA3273746E404D72561E8324608D18B52B533E* L_42 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11424));
		NullCheck(L_42);
		int32_t L_43;
		L_43 = List_1_get_Count_mDCDDC4E9E15CD83C00D4CC32F79830261769F65C_inline(L_42, List_1_get_Count_mDCDDC4E9E15CD83C00D4CC32F79830261769F65C_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11424));
		V_14 = (bool)((((int32_t)L_43) == ((int32_t)1))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11425));
		bool L_44 = V_14;
		if (!L_44)
		{
			goto IL_0105;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11426));
		// result = cameras[0];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11427));
		List_1_tD2FA3273746E404D72561E8324608D18B52B533E* L_45 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11428));
		NullCheck(L_45);
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_46;
		L_46 = List_1_get_Item_m7CEE3A6E144C8D86DE6490620206FAB13432ACF6(L_45, 0, List_1_get_Item_m7CEE3A6E144C8D86DE6490620206FAB13432ACF6_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11428));
		V_1 = L_46;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11429));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11430));
		goto IL_0156;
	}

IL_0105:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11431));
		// if (!multipleMainCameraWarningPresented)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11432));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_47 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___multipleMainCameraWarningPresented_117;
		V_15 = (bool)((((int32_t)L_47) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11433));
		bool L_48 = V_15;
		if (!L_48)
		{
			goto IL_0127;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11434));
		// Debug.LogWarning("Multiple MainCamera found. Assume the real MainCamera is the camera with the least depth");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11435));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11436));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_LogWarning_m33EF1B897E0C7C6FF538989610BFAFFEF4628CA9(_stringLiteral8056EF217D555787C1F04ECE7927A2323D1D2AEA, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11436));
		// multipleMainCameraWarningPresented = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11437));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___multipleMainCameraWarningPresented_117 = (bool)1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11438));
	}

IL_0127:
	{
		// cameras.Sort((Camera c0, Camera c1) => { return c0.depth < c1.depth ? -1 : (c0.depth > c1.depth ? 1 : 0); });
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11439));
		List_1_tD2FA3273746E404D72561E8324608D18B52B533E* L_49 = V_3;
		il2cpp_codegen_runtime_class_init_inline(U3CU3Ec_t428B95F22B12C42F05233DE02507635B55BBBF98_il2cpp_TypeInfo_var);
		Comparison_1_t49BE56523BDD8BC22EF3396960546FE16DE7B11A* L_50 = ((U3CU3Ec_t428B95F22B12C42F05233DE02507635B55BBBF98_StaticFields*)il2cpp_codegen_static_fields_for(U3CU3Ec_t428B95F22B12C42F05233DE02507635B55BBBF98_il2cpp_TypeInfo_var))->___U3CU3E9__413_0_2;
		Comparison_1_t49BE56523BDD8BC22EF3396960546FE16DE7B11A* L_51 = L_50;
		G_B28_0 = L_51;
		G_B28_1 = L_49;
		if (L_51)
		{
			G_B29_0 = L_51;
			G_B29_1 = L_49;
			goto IL_0147;
		}
	}
	{
		il2cpp_codegen_runtime_class_init_inline(U3CU3Ec_t428B95F22B12C42F05233DE02507635B55BBBF98_il2cpp_TypeInfo_var);
		U3CU3Ec_t428B95F22B12C42F05233DE02507635B55BBBF98* L_52 = ((U3CU3Ec_t428B95F22B12C42F05233DE02507635B55BBBF98_StaticFields*)il2cpp_codegen_static_fields_for(U3CU3Ec_t428B95F22B12C42F05233DE02507635B55BBBF98_il2cpp_TypeInfo_var))->___U3CU3E9_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11440));
		Comparison_1_t49BE56523BDD8BC22EF3396960546FE16DE7B11A* L_53 = (Comparison_1_t49BE56523BDD8BC22EF3396960546FE16DE7B11A*)il2cpp_codegen_object_new(Comparison_1_t49BE56523BDD8BC22EF3396960546FE16DE7B11A_il2cpp_TypeInfo_var);
		NullCheck(L_53);
		Comparison_1__ctor_mA05E36D38BB75F9EF78F876803A19445EDF81CD5(L_53, L_52, (intptr_t)((void*)U3CU3Ec_U3CFindMainCameraU3Eb__413_0_mB17F87C547891E2EF3D5FB13D630EBE419674A2F_RuntimeMethod_var), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11440));
		Comparison_1_t49BE56523BDD8BC22EF3396960546FE16DE7B11A* L_54 = L_53;
		((U3CU3Ec_t428B95F22B12C42F05233DE02507635B55BBBF98_StaticFields*)il2cpp_codegen_static_fields_for(U3CU3Ec_t428B95F22B12C42F05233DE02507635B55BBBF98_il2cpp_TypeInfo_var))->___U3CU3E9__413_0_2 = L_54;
		Il2CppCodeGenWriteBarrier((void**)(&((U3CU3Ec_t428B95F22B12C42F05233DE02507635B55BBBF98_StaticFields*)il2cpp_codegen_static_fields_for(U3CU3Ec_t428B95F22B12C42F05233DE02507635B55BBBF98_il2cpp_TypeInfo_var))->___U3CU3E9__413_0_2), (void*)L_54);
		G_B29_0 = L_54;
		G_B29_1 = G_B28_1;
	}

IL_0147:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11441));
		NullCheck(G_B29_1);
		List_1_Sort_mF0042CBA61BB32CBA4FFE1CD1286329131635B85(G_B29_1, G_B29_0, List_1_Sort_mF0042CBA61BB32CBA4FFE1CD1286329131635B85_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11441));
		// result = cameras[0];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11442));
		List_1_tD2FA3273746E404D72561E8324608D18B52B533E* L_55 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11443));
		NullCheck(L_55);
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_56;
		L_56 = List_1_get_Item_m7CEE3A6E144C8D86DE6490620206FAB13432ACF6(L_55, 0, List_1_get_Item_m7CEE3A6E144C8D86DE6490620206FAB13432ACF6_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11443));
		V_1 = L_56;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11444));
	}

IL_0156:
	{
		// if (result != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11445));
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_57 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11446));
		il2cpp_codegen_runtime_class_init_inline(Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		bool L_58;
		L_58 = Object_op_Inequality_mD0BE578448EAA61948F25C32F8DD55AB1F778602(L_57, (Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C*)NULL, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11446));
		V_16 = L_58;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11447));
		bool L_59 = V_16;
		if (!L_59)
		{
			goto IL_018c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11448));
		// Debug.LogFormat("[OVRManager] mainCamera found for MRC: {0}", result.gameObject.name);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11449));
		ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* L_60 = (ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918*)(ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918*)SZArrayNew(ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918_il2cpp_TypeInfo_var, (uint32_t)1);
		ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* L_61 = L_60;
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_62 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11450));
		NullCheck(L_62);
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_63;
		L_63 = Component_get_gameObject_m57AEFBB14DB39EC476F740BA000E170355DE691B(L_62, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11450));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11451));
		NullCheck(L_63);
		String_t* L_64;
		L_64 = Object_get_name_mAC2F6B897CF1303BA4249B4CB55271AFACBB6392(L_63, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11451));
		NullCheck(L_61);
		ArrayElementTypeCheck (L_61, L_64);
		(L_61)->SetAt(static_cast<il2cpp_array_size_t>(0), (RuntimeObject*)L_64);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11452));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_LogFormat_mD555556327B42AA3482D077EFAEB16B0AFDF72C7(_stringLiteral1C74E9B5FE8F0722B82BEB4223EB6429598E8CFC, L_61, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11452));
		// suppressUnableToFindMainCameraMessage = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11453));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___suppressUnableToFindMainCameraMessage_118 = (bool)0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11454));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11455));
		goto IL_01ad;
	}

IL_018c:
	{
		// else if (!suppressUnableToFindMainCameraMessage)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11456));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_65 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___suppressUnableToFindMainCameraMessage_118;
		V_17 = (bool)((((int32_t)L_65) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11457));
		bool L_66 = V_17;
		if (!L_66)
		{
			goto IL_01ad;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11458));
		// Debug.Log("[OVRManager] unable to find a valid camera");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11459));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11460));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_Log_m87A9A3C761FF5C43ED8A53B16190A53D08F818BB(_stringLiteral42AA32717042087706ACA1EEC2EB3C2A03C44C34, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11460));
		// suppressUnableToFindMainCameraMessage = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11461));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___suppressUnableToFindMainCameraMessage_118 = (bool)1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11462));
	}

IL_01ad:
	{
		// lastFoundMainCamera = new WeakReference<Camera>(result);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11463));
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_67 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11464));
		WeakReference_1_t08942AAA5C58B24D75314BD9594E2DE409CB9C93* L_68 = (WeakReference_1_t08942AAA5C58B24D75314BD9594E2DE409CB9C93*)il2cpp_codegen_object_new(WeakReference_1_t08942AAA5C58B24D75314BD9594E2DE409CB9C93_il2cpp_TypeInfo_var);
		NullCheck(L_68);
		WeakReference_1__ctor_m12E7503DDFC128E1736C08DF717D975A0B2BB6E7(L_68, L_67, WeakReference_1__ctor_m12E7503DDFC128E1736C08DF717D975A0B2BB6E7_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11464));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___lastFoundMainCamera_119 = L_68;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___lastFoundMainCamera_119), (void*)L_68);
		// return result;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11465));
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_69 = V_1;
		V_5 = L_69;
		goto IL_01bd;
	}

IL_01bd:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11466));
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_70 = V_5;
		return L_70;
	}
}
// System.Void OVRManager::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OnDisable_m0A146074A2646C9AB36FD309C987545F26593BC2 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Component_GetComponent_TisOVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86_mF0B4099235709D379979102F6053FD6042D8A77C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OnDisable_m0A146074A2646C9AB36FD309C987545F26593BC2_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	OVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86* V_0 = NULL;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OnDisable_m0A146074A2646C9AB36FD309C987545F26593BC2_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11467));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 11468));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11469));
		// OVRSystemPerfMetrics.OVRSystemPerfMetricsTcpServer perfTcpServer = GetComponent<OVRSystemPerfMetrics.OVRSystemPerfMetricsTcpServer>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11470));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11471));
		OVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86* L_0;
		L_0 = Component_GetComponent_TisOVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86_mF0B4099235709D379979102F6053FD6042D8A77C(__this, Component_GetComponent_TisOVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86_mF0B4099235709D379979102F6053FD6042D8A77C_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11471));
		V_0 = L_0;
		// if (perfTcpServer != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11472));
		OVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86* L_1 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11473));
		il2cpp_codegen_runtime_class_init_inline(Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = Object_op_Inequality_mD0BE578448EAA61948F25C32F8DD55AB1F778602(L_1, (Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C*)NULL, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11473));
		V_1 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11474));
		bool L_3 = V_1;
		if (!L_3)
		{
			goto IL_001d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11475));
		// perfTcpServer.enabled = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11476));
		OVRSystemPerfMetricsTcpServer_tD146C2687DE96043EC01031488CFB10442814F86* L_4 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11477));
		NullCheck(L_4);
		Behaviour_set_enabled_mF1DCFE60EB09E0529FE9476CA804A3AA2D72B16A(L_4, (bool)0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11477));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11478));
	}

IL_001d:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11479));
		return;
	}
}
// System.Void OVRManager::LateUpdate()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_LateUpdate_m7566A09FB00BB74D47B200FC0C755AB05AA5D554 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_LateUpdate_m7566A09FB00BB74D47B200FC0C755AB05AA5D554_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_LateUpdate_m7566A09FB00BB74D47B200FC0C755AB05AA5D554_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11480));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 11481));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11482));
		// OVRHaptics.Process();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11483));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11484));
		il2cpp_codegen_runtime_class_init_inline(OVRHaptics_tF114F7435C511E8A1EB402503B9948FF4A29E24C_il2cpp_TypeInfo_var);
		OVRHaptics_Process_m4C06440CFE490FDE9213449D6DF094E68E55C4CB(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11484));
		// if (m_SpaceWarpEnabled && m_AppSpaceTransform != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11485));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___m_SpaceWarpEnabled_90;
		if (!L_0)
		{
			goto IL_001b;
		}
	}
	{
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_1 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___m_AppSpaceTransform_91;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11486));
		il2cpp_codegen_runtime_class_init_inline(Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = Object_op_Inequality_mD0BE578448EAA61948F25C32F8DD55AB1F778602(L_1, (Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C*)NULL, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11486));
		G_B3_0 = ((int32_t)(L_2));
		goto IL_001c;
	}

IL_001b:
	{
		G_B3_0 = 0;
	}

IL_001c:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11487));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_0097;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11488));
		// OculusXRPlugin.SetAppSpacePosition(m_AppSpaceTransform.position.x, m_AppSpaceTransform.position.y, m_AppSpaceTransform.position.z);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11489));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_4 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___m_AppSpaceTransform_91;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11490));
		NullCheck(L_4);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_5;
		L_5 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_4, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11490));
		float L_6 = L_5.___x_2;
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_7 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___m_AppSpaceTransform_91;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11491));
		NullCheck(L_7);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_8;
		L_8 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_7, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11491));
		float L_9 = L_8.___y_3;
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_10 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___m_AppSpaceTransform_91;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11492));
		NullCheck(L_10);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_11;
		L_11 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_10, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11492));
		float L_12 = L_11.___z_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11493));
		OculusXRPlugin_SetAppSpacePosition_m4F081B1A6672C6CE541651F75EA9B955938808F2(L_6, L_9, L_12, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11493));
		// OculusXRPlugin.SetAppSpaceRotation(m_AppSpaceTransform.rotation.x, m_AppSpaceTransform.rotation.y, m_AppSpaceTransform.rotation.z, m_AppSpaceTransform.rotation.w);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11494));
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_13 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___m_AppSpaceTransform_91;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11495));
		NullCheck(L_13);
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_14;
		L_14 = Transform_get_rotation_m32AF40CA0D50C797DA639A696F8EAEC7524C179C(L_13, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11495));
		float L_15 = L_14.___x_0;
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_16 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___m_AppSpaceTransform_91;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11496));
		NullCheck(L_16);
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_17;
		L_17 = Transform_get_rotation_m32AF40CA0D50C797DA639A696F8EAEC7524C179C(L_16, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11496));
		float L_18 = L_17.___y_1;
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_19 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___m_AppSpaceTransform_91;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11497));
		NullCheck(L_19);
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_20;
		L_20 = Transform_get_rotation_m32AF40CA0D50C797DA639A696F8EAEC7524C179C(L_19, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11497));
		float L_21 = L_20.___z_2;
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_22 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___m_AppSpaceTransform_91;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11498));
		NullCheck(L_22);
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_23;
		L_23 = Transform_get_rotation_m32AF40CA0D50C797DA639A696F8EAEC7524C179C(L_22, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11498));
		float L_24 = L_23.___w_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11499));
		OculusXRPlugin_SetAppSpaceRotation_m24E78BBF3BA5775538BA8C0A1A0CE99A9521E2D6(L_15, L_18, L_21, L_24, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11499));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11500));
	}

IL_0097:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11501));
		return;
	}
}
// System.Void OVRManager::FixedUpdate()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_FixedUpdate_m066F982228F4B8A03EC67AADFE2DACCAB028D06D (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_FixedUpdate_m066F982228F4B8A03EC67AADFE2DACCAB028D06D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_FixedUpdate_m066F982228F4B8A03EC67AADFE2DACCAB028D06D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11502));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 11503));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11504));
		// OVRInput.FixedUpdate();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11505));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11506));
		il2cpp_codegen_runtime_class_init_inline(OVRInput_t759D9CC8F14D8539AD78A0375A2306C39D77100A_il2cpp_TypeInfo_var);
		OVRInput_FixedUpdate_m0B2BA5C8485902E1A0EE19A1F7066E671D8ECCB5(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11506));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11507));
		return;
	}
}
// System.Void OVRManager::OnDestroy()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OnDestroy_m2D1ABDF09DFE8617DFE1E7E7E2E4736DE1957CD4 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OnDestroy_m2D1ABDF09DFE8617DFE1E7E7E2E4736DE1957CD4_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral90976408DD45FD6617A1CA11E8C4DBBA408E7456);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OnDestroy_m2D1ABDF09DFE8617DFE1E7E7E2E4736DE1957CD4_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11508));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 11509));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11510));
		// Debug.Log("[OVRManager] OnDestroy");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11511));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11512));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_Log_m87A9A3C761FF5C43ED8A53B16190A53D08F818BB(_stringLiteral90976408DD45FD6617A1CA11E8C4DBBA408E7456, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11512));
		// OVRManagerinitialized = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11513));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___OVRManagerinitialized_113 = (bool)0;
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11514));
		return;
	}
}
// System.Void OVRManager::OnApplicationPause(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OnApplicationPause_m28497314F1581EEC20923FDB0A946FBA5FF9D347 (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, bool ___0_pause, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OnApplicationPause_m28497314F1581EEC20923FDB0A946FBA5FF9D347_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral812FAFBBC880731B5FC0ABD9009768693FE806C9);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralFC6C450D2D3F7D72B53FEA8716C1E1123266F5BD);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_pause));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OnApplicationPause_m28497314F1581EEC20923FDB0A946FBA5FF9D347_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11515));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 11516));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11517));
		// if (pause)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11518));
		bool L_0 = ___0_pause;
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11519));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0015;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11520));
		// Debug.Log("[OVRManager] OnApplicationPause(true)");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11521));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11522));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_Log_m87A9A3C761FF5C43ED8A53B16190A53D08F818BB(_stringLiteral812FAFBBC880731B5FC0ABD9009768693FE806C9, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11522));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11523));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11524));
		goto IL_0022;
	}

IL_0015:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11525));
		// Debug.Log("[OVRManager] OnApplicationPause(false)");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11526));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11527));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_Log_m87A9A3C761FF5C43ED8A53B16190A53D08F818BB(_stringLiteralFC6C450D2D3F7D72B53FEA8716C1E1123266F5BD, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11527));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11528));
	}

IL_0022:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11529));
		return;
	}
}
// System.Void OVRManager::OnApplicationFocus(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OnApplicationFocus_m8D482CEEA83B62B44FFBBF0DBFFF98E1F4E9F33D (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, bool ___0_focus, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OnApplicationFocus_m8D482CEEA83B62B44FFBBF0DBFFF98E1F4E9F33D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral5E48FB0EE174BD6AAFEB32AF96DDA6901B776752);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralB1FDFE26F1AD8C68C7B05A4FFA0D4B3AC3C883AB);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_focus));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OnApplicationFocus_m8D482CEEA83B62B44FFBBF0DBFFF98E1F4E9F33D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11530));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 11531));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11532));
		// if (focus)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11533));
		bool L_0 = ___0_focus;
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11534));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0015;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11535));
		// Debug.Log("[OVRManager] OnApplicationFocus(true)");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11536));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11537));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_Log_m87A9A3C761FF5C43ED8A53B16190A53D08F818BB(_stringLiteral5E48FB0EE174BD6AAFEB32AF96DDA6901B776752, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11537));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11538));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11539));
		goto IL_0022;
	}

IL_0015:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11540));
		// Debug.Log("[OVRManager] OnApplicationFocus(false)");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11541));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11542));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_Log_m87A9A3C761FF5C43ED8A53B16190A53D08F818BB(_stringLiteralB1FDFE26F1AD8C68C7B05A4FFA0D4B3AC3C883AB, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11542));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11543));
	}

IL_0022:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11544));
		return;
	}
}
// System.Void OVRManager::OnApplicationQuit()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_OnApplicationQuit_mFE6276AD538E13AF339753F5CD7C9D4E6623BB0F (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_OnApplicationQuit_mFE6276AD538E13AF339753F5CD7C9D4E6623BB0F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral9A685D6B17E0D2747366B0981B83DF994CA889AB);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_OnApplicationQuit_mFE6276AD538E13AF339753F5CD7C9D4E6623BB0F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11545));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 11546));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11547));
		// Debug.Log("[OVRManager] OnApplicationQuit");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11548));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11549));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_Log_m87A9A3C761FF5C43ED8A53B16190A53D08F818BB(_stringLiteral9A685D6B17E0D2747366B0981B83DF994CA889AB, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11549));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11550));
		return;
	}
}
// System.Void OVRManager::ReturnToLauncher()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_ReturnToLauncher_m64B09A054CC401504D8BE35DADBD86E272959D2B (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_ReturnToLauncher_m64B09A054CC401504D8BE35DADBD86E272959D2B_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_ReturnToLauncher_m64B09A054CC401504D8BE35DADBD86E272959D2B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11551));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 11552));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11553));
		// OVRManager.PlatformUIConfirmQuit();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11554));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11555));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRManager_PlatformUIConfirmQuit_m535F93DC2CAE215773CB4B8A10F47E921086FBC3(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11555));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11556));
		return;
	}
}
// System.Void OVRManager::PlatformUIConfirmQuit()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_PlatformUIConfirmQuit_m535F93DC2CAE215773CB4B8A10F47E921086FBC3 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_PlatformUIConfirmQuit_m535F93DC2CAE215773CB4B8A10F47E921086FBC3_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_PlatformUIConfirmQuit_m535F93DC2CAE215773CB4B8A10F47E921086FBC3_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11557));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 11558));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11559));
		// if (!isHmdPresent)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11560));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11561));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRManager_get_isHmdPresent_m098F56E4E9C2ECAC87EAB61C7680F0FBD2A2C445(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11561));
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11562));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_000f;
		}
	}
	{
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11563));
		goto IL_0016;
	}

IL_000f:
	{
		// OVRPlugin.ShowUI(OVRPlugin.PlatformUI.ConfirmQuit);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11564));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11565));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = OVRPlugin_ShowUI_m92CACED0C9DAE308F644CEB83AE396FC1444AB0A(1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11565));
	}

IL_0016:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11566));
		return;
	}
}
// System.Void OVRManager::StaticInitializeMixedRealityCapture(OVRMixedRealityCaptureConfiguration)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_StaticInitializeMixedRealityCapture_mECD5892929515DFF005276CD46C2B270F0F7A533 (RuntimeObject* ___0_configuration, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Array_Empty_TisRuntimeObject_mFB8A63D602BB6974D31E20300D9EB89C6FE7C278_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&AudioConfiguration_t4C8585EA98B6559B306B6FAD6A68088555394A5D_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&InputVideoBufferType_t21A3A9D97E3B2B70531C438F39748C68E4C7112F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_StaticInitializeMixedRealityCapture_mECD5892929515DFF005276CD46C2B270F0F7A533_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRMixedRealityCaptureConfiguration_t5B5BC56D5A188D91FCB815055D9E9D2393E90926_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ScriptableObject_CreateInstance_TisOVRMixedRealityCaptureSettings_tF6078D6B59F16A0EE3DEE4144FCED347444B9198_mA2CD02C40A4B9D05C1DF3C42710BC05670FFA61E_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral61890C9111848030046E81DB6B67572678ADB6E8);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral748BF62203C02574364580AC54FC5F1ECBBF69B9);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral7D612383984721A96F4EC02A755EEDF86152260F);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralA93EFBE291021F6392FA786CA65FA0EDA009932C);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralEEC9061235D18ABA19D23FEB9715D246FB781D8E);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralF5A3962735819AF9C1D00988DC53C00ED4339C24);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	AudioConfiguration_t4C8585EA98B6559B306B6FAD6A68088555394A5D V_3;
	memset((&V_3), 0, sizeof(V_3));
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_configuration));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_StaticInitializeMixedRealityCapture_mECD5892929515DFF005276CD46C2B270F0F7A533_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11567));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 11568));
	String_t* G_B4_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11569));
		// if (!staticMixedRealityCaptureInitialized)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11570));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___staticMixedRealityCaptureInitialized_120;
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11571));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0133;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11572));
		// staticMrcSettings = ScriptableObject.CreateInstance<OVRMixedRealityCaptureSettings>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11573));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11574));
		OVRMixedRealityCaptureSettings_tF6078D6B59F16A0EE3DEE4144FCED347444B9198* L_2;
		L_2 = ScriptableObject_CreateInstance_TisOVRMixedRealityCaptureSettings_tF6078D6B59F16A0EE3DEE4144FCED347444B9198_mA2CD02C40A4B9D05C1DF3C42710BC05670FFA61E(ScriptableObject_CreateInstance_TisOVRMixedRealityCaptureSettings_tF6078D6B59F16A0EE3DEE4144FCED347444B9198_mA2CD02C40A4B9D05C1DF3C42710BC05670FFA61E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11574));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___staticMrcSettings_122 = L_2;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___staticMrcSettings_122), (void*)L_2);
		// staticMrcSettings.ReadFrom(configuration);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11575));
		OVRMixedRealityCaptureSettings_tF6078D6B59F16A0EE3DEE4144FCED347444B9198* L_3 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___staticMrcSettings_122;
		RuntimeObject* L_4 = ___0_configuration;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11576));
		OVRMixedRealityCaptureConfigurationExtensions_ReadFrom_m585C78AFC92A80FE7A42CFC872B19375759C1E6D(L_3, L_4, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11576));
		// bool mediaInitialized = OVRPlugin.Media.Initialize();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11577));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11578));
		bool L_5;
		L_5 = Media_Initialize_m940C4B3CAFAC0A7B12B461AE9C0F57F65A534772(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11578));
		V_1 = L_5;
		// Debug.Log(mediaInitialized ? "OVRPlugin.Media initialized" : "OVRPlugin.Media not initialized");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11579));
		bool L_6 = V_1;
		if (L_6)
		{
			goto IL_0037;
		}
	}
	{
		G_B4_0 = _stringLiteralF5A3962735819AF9C1D00988DC53C00ED4339C24;
		goto IL_003c;
	}

IL_0037:
	{
		G_B4_0 = _stringLiteral748BF62203C02574364580AC54FC5F1ECBBF69B9;
	}

IL_003c:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11580));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_Log_m87A9A3C761FF5C43ED8A53B16190A53D08F818BB(G_B4_0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11580));
		// if (mediaInitialized)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11581));
		bool L_7 = V_1;
		V_2 = L_7;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11582));
		bool L_8 = V_2;
		if (!L_8)
		{
			goto IL_0124;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11583));
		// var audioConfig = AudioSettings.GetConfiguration();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11584));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11585));
		AudioConfiguration_t4C8585EA98B6559B306B6FAD6A68088555394A5D L_9;
		L_9 = AudioSettings_GetConfiguration_mDA005BAD9577EBBE375F6D6C040D7F110508C910(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11585));
		V_3 = L_9;
		// if (audioConfig.sampleRate > 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11586));
		AudioConfiguration_t4C8585EA98B6559B306B6FAD6A68088555394A5D L_10 = V_3;
		int32_t L_11 = L_10.___sampleRate_2;
		V_4 = (bool)((((int32_t)L_11) > ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11587));
		bool L_12 = V_4;
		if (!L_12)
		{
			goto IL_008d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11588));
		// OVRPlugin.Media.SetMrcAudioSampleRate(audioConfig.sampleRate);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11589));
		AudioConfiguration_t4C8585EA98B6559B306B6FAD6A68088555394A5D L_13 = V_3;
		int32_t L_14 = L_13.___sampleRate_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11590));
		bool L_15;
		L_15 = Media_SetMrcAudioSampleRate_m9534D4DC9CDE248D5D7A5D9A8DAB2580B4D88E44(L_14, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11590));
		// Debug.LogFormat("[MRC] SetMrcAudioSampleRate({0})", audioConfig.sampleRate);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11591));
		ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* L_16 = (ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918*)(ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918*)SZArrayNew(ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918_il2cpp_TypeInfo_var, (uint32_t)1);
		ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* L_17 = L_16;
		AudioConfiguration_t4C8585EA98B6559B306B6FAD6A68088555394A5D L_18 = V_3;
		int32_t L_19 = L_18.___sampleRate_2;
		int32_t L_20 = L_19;
		RuntimeObject* L_21 = Box(Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_il2cpp_TypeInfo_var, &L_20);
		NullCheck(L_17);
		ArrayElementTypeCheck (L_17, L_21);
		(L_17)->SetAt(static_cast<il2cpp_array_size_t>(0), (RuntimeObject*)L_21);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11592));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_LogFormat_mD555556327B42AA3482D077EFAEB16B0AFDF72C7(_stringLiteral7D612383984721A96F4EC02A755EEDF86152260F, L_17, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11592));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11593));
	}

IL_008d:
	{
		// OVRPlugin.Media.SetMrcInputVideoBufferType(OVRPlugin.Media.InputVideoBufferType.TextureHandle);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11594));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11595));
		bool L_22;
		L_22 = Media_SetMrcInputVideoBufferType_mDE256F23EB488EFC24FB4E87EB5FA2220848F4E6(1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11595));
		// Debug.LogFormat("[MRC] Active InputVideoBufferType:{0}", OVRPlugin.Media.GetMrcInputVideoBufferType());
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11596));
		ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* L_23 = (ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918*)(ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918*)SZArrayNew(ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918_il2cpp_TypeInfo_var, (uint32_t)1);
		ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* L_24 = L_23;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11597));
		int32_t L_25;
		L_25 = Media_GetMrcInputVideoBufferType_m84171F6829839074E24610A3F0BC5AD9002DA353(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11597));
		int32_t L_26 = L_25;
		RuntimeObject* L_27 = Box(InputVideoBufferType_t21A3A9D97E3B2B70531C438F39748C68E4C7112F_il2cpp_TypeInfo_var, &L_26);
		NullCheck(L_24);
		ArrayElementTypeCheck (L_24, L_27);
		(L_24)->SetAt(static_cast<il2cpp_array_size_t>(0), (RuntimeObject*)L_27);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11598));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_LogFormat_mD555556327B42AA3482D077EFAEB16B0AFDF72C7(_stringLiteral61890C9111848030046E81DB6B67572678ADB6E8, L_24, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11598));
		// if (configuration.mrcActivationMode == MrcActivationMode.Automatic)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11599));
		RuntimeObject* L_28 = ___0_configuration;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11600));
		NullCheck(L_28);
		int32_t L_29;
		L_29 = InterfaceFuncInvoker0< int32_t >::Invoke(52 /* OVRManager/MrcActivationMode OVRMixedRealityCaptureConfiguration::get_mrcActivationMode() */, OVRMixedRealityCaptureConfiguration_t5B5BC56D5A188D91FCB815055D9E9D2393E90926_il2cpp_TypeInfo_var, L_28);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11600));
		V_5 = (bool)((((int32_t)L_29) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11601));
		bool L_30 = V_5;
		if (!L_30)
		{
			goto IL_00dc;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11602));
		// OVRPlugin.Media.SetMrcActivationMode(OVRPlugin.Media.MrcActivationMode.Automatic);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11603));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11604));
		bool L_31;
		L_31 = Media_SetMrcActivationMode_mE35E5A9E3D238093D464B58DD3CC40BCE5E021B7(0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11604));
		// Debug.LogFormat("[MRC] ActivateMode: Automatic");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11605));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11606));
		ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* L_32;
		L_32 = Array_Empty_TisRuntimeObject_mFB8A63D602BB6974D31E20300D9EB89C6FE7C278_inline(Array_Empty_TisRuntimeObject_mFB8A63D602BB6974D31E20300D9EB89C6FE7C278_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11606));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11607));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_LogFormat_mD555556327B42AA3482D077EFAEB16B0AFDF72C7(_stringLiteralEEC9061235D18ABA19D23FEB9715D246FB781D8E, L_32, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11607));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11608));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11609));
		goto IL_0104;
	}

IL_00dc:
	{
		// else if (configuration.mrcActivationMode == MrcActivationMode.Disabled)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11610));
		RuntimeObject* L_33 = ___0_configuration;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11611));
		NullCheck(L_33);
		int32_t L_34;
		L_34 = InterfaceFuncInvoker0< int32_t >::Invoke(52 /* OVRManager/MrcActivationMode OVRMixedRealityCaptureConfiguration::get_mrcActivationMode() */, OVRMixedRealityCaptureConfiguration_t5B5BC56D5A188D91FCB815055D9E9D2393E90926_il2cpp_TypeInfo_var, L_33);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11611));
		V_6 = (bool)((((int32_t)L_34) == ((int32_t)1))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11612));
		bool L_35 = V_6;
		if (!L_35)
		{
			goto IL_0104;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11613));
		// OVRPlugin.Media.SetMrcActivationMode(OVRPlugin.Media.MrcActivationMode.Disabled);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11614));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11615));
		bool L_36;
		L_36 = Media_SetMrcActivationMode_mE35E5A9E3D238093D464B58DD3CC40BCE5E021B7(1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11615));
		// Debug.LogFormat("[MRC] ActivateMode: Disabled");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11616));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11617));
		ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* L_37;
		L_37 = Array_Empty_TisRuntimeObject_mFB8A63D602BB6974D31E20300D9EB89C6FE7C278_inline(Array_Empty_TisRuntimeObject_mFB8A63D602BB6974D31E20300D9EB89C6FE7C278_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11617));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11618));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_LogFormat_mD555556327B42AA3482D077EFAEB16B0AFDF72C7(_stringLiteralA93EFBE291021F6392FA786CA65FA0EDA009932C, L_37, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11618));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11619));
	}

IL_0104:
	{
		// if (SystemInfo.graphicsDeviceType == GraphicsDeviceType.Vulkan)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11620));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11621));
		int32_t L_38;
		L_38 = SystemInfo_get_graphicsDeviceType_m2D54A0B94D138727041B29B127D8837165686545(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11621));
		V_7 = (bool)((((int32_t)L_38) == ((int32_t)((int32_t)21)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11622));
		bool L_39 = V_7;
		if (!L_39)
		{
			goto IL_0123;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11623));
		// OVRPlugin.Media.SetAvailableQueueIndexVulkan(1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11624));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11625));
		bool L_40;
		L_40 = Media_SetAvailableQueueIndexVulkan_m7B8F350B4D3DD38BC5CA47D1E49690EB53509A22(1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11625));
		// OVRPlugin.Media.SetMrcFrameImageFlipped(true);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11626));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11627));
		bool L_41;
		L_41 = Media_SetMrcFrameImageFlipped_m7017BA5F4AE6A40CFF4D29076F4638E4CEFDA0CE((bool)1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11627));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11628));
	}

IL_0123:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11629));
	}

IL_0124:
	{
		// staticPrevEnableMixedRealityCapture = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11630));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___staticPrevEnableMixedRealityCapture_121 = (bool)0;
		// staticMixedRealityCaptureInitialized = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11631));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___staticMixedRealityCaptureInitialized_120 = (bool)1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11632));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11633));
		goto IL_0141;
	}

IL_0133:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11634));
		// staticMrcSettings.ApplyTo(configuration);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11635));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRMixedRealityCaptureSettings_tF6078D6B59F16A0EE3DEE4144FCED347444B9198* L_42 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___staticMrcSettings_122;
		RuntimeObject* L_43 = ___0_configuration;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11636));
		OVRMixedRealityCaptureConfigurationExtensions_ApplyTo_m14994C97386BAF4C069891F001590BDD520955AF(L_42, L_43, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11636));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11637));
	}

IL_0141:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11638));
		return;
	}
}
// System.Void OVRManager::StaticUpdateMixedRealityCapture(OVRMixedRealityCaptureConfiguration,UnityEngine.GameObject,OVRManager/TrackingOrigin)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_StaticUpdateMixedRealityCapture_m68D3A9F860CCE3910D11D4C80FE04E984D863810 (RuntimeObject* ___0_configuration, GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___1_gameObject, int32_t ___2_trackingOrigin, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_StaticUpdateMixedRealityCapture_m68D3A9F860CCE3910D11D4C80FE04E984D863810_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRMixedRealityCaptureConfiguration_t5B5BC56D5A188D91FCB815055D9E9D2393E90926_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRMixedReality_t41B157DC32D6A1711F387302ED6B67916A0ADBAF_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral079DC68BE14B766AB4C8AFD677260C4674A20D17);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral1B93063888CB397E248C563775874CC5BFE82F70);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral4481EB4F8B6BEF5D863C23DACE5D92E1C6603258);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral7992BFECF5974FADC77C4F7228AB51E602D14069);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralDED689386F73A7C43A44AAE858DB1A6629E49B63);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* V_3 = NULL;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_configuration), (&___1_gameObject), (&___2_trackingOrigin));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_StaticUpdateMixedRealityCapture_m68D3A9F860CCE3910D11D4C80FE04E984D863810_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11639));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 11640));
	RuntimeObject* G_B4_0 = NULL;
	RuntimeObject* G_B3_0 = NULL;
	int32_t G_B5_0 = 0;
	RuntimeObject* G_B5_1 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11641));
		// if (!staticMixedRealityCaptureInitialized)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11642));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___staticMixedRealityCaptureInitialized_120;
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11643));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0013;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11644));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11645));
		goto IL_0101;
	}

IL_0013:
	{
		// configuration.enableMixedReality = OVRPlugin.Media.GetInitialized() && OVRPlugin.Media.IsMrcActivated();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11646));
		RuntimeObject* L_2 = ___0_configuration;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11647));
		bool L_3;
		L_3 = Media_GetInitialized_m0786F11D130FC9598B90C01A542F76A002F4D048(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11647));
		G_B3_0 = L_2;
		if (!L_3)
		{
			G_B4_0 = L_2;
			goto IL_0022;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11648));
		bool L_4;
		L_4 = Media_IsMrcActivated_m789D03726393864E19EE0516C7EA3773CA122844(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11648));
		G_B5_0 = ((int32_t)(L_4));
		G_B5_1 = G_B3_0;
		goto IL_0023;
	}

IL_0022:
	{
		G_B5_0 = 0;
		G_B5_1 = G_B4_0;
	}

IL_0023:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11649));
		NullCheck(G_B5_1);
		InterfaceActionInvoker1< bool >::Invoke(1 /* System.Void OVRMixedRealityCaptureConfiguration::set_enableMixedReality(System.Boolean) */, OVRMixedRealityCaptureConfiguration_t5B5BC56D5A188D91FCB815055D9E9D2393E90926_il2cpp_TypeInfo_var, G_B5_1, (bool)G_B5_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11649));
		// configuration.compositionMethod = CompositionMethod.External;       // force external composition on Android MRC
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11650));
		RuntimeObject* L_5 = ___0_configuration;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11651));
		NullCheck(L_5);
		InterfaceActionInvoker1< int32_t >::Invoke(9 /* System.Void OVRMixedRealityCaptureConfiguration::set_compositionMethod(OVRManager/CompositionMethod) */, OVRMixedRealityCaptureConfiguration_t5B5BC56D5A188D91FCB815055D9E9D2393E90926_il2cpp_TypeInfo_var, L_5, 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11651));
		// if (OVRPlugin.Media.GetInitialized())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11652));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11653));
		bool L_6;
		L_6 = Media_GetInitialized_m0786F11D130FC9598B90C01A542F76A002F4D048(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11653));
		V_1 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11654));
		bool L_7 = V_1;
		if (!L_7)
		{
			goto IL_0042;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11655));
		// OVRPlugin.Media.Update();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11656));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11657));
		bool L_8;
		L_8 = Media_Update_m2059A835F3BE32366432FED120C16EAB71614D8B(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11657));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11658));
	}

IL_0042:
	{
		// if (configuration.enableMixedReality)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11659));
		RuntimeObject* L_9 = ___0_configuration;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11660));
		NullCheck(L_9);
		bool L_10;
		L_10 = InterfaceFuncInvoker0< bool >::Invoke(0 /* System.Boolean OVRMixedRealityCaptureConfiguration::get_enableMixedReality() */, OVRMixedRealityCaptureConfiguration_t5B5BC56D5A188D91FCB815055D9E9D2393E90926_il2cpp_TypeInfo_var, L_9);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11660));
		V_2 = L_10;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11661));
		bool L_11 = V_2;
		if (!L_11)
		{
			goto IL_00d1;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11662));
		// Camera mainCamera = FindMainCamera();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11663));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11664));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_12;
		L_12 = OVRManager_FindMainCamera_mCCD7BE229B2DA34FFCB009A527BBE8F40F57EB49(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11664));
		V_3 = L_12;
		// if (mainCamera != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11665));
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_13 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11666));
		il2cpp_codegen_runtime_class_init_inline(Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		bool L_14;
		L_14 = Object_op_Inequality_mD0BE578448EAA61948F25C32F8DD55AB1F778602(L_13, (Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C*)NULL, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11666));
		V_4 = L_14;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11667));
		bool L_15 = V_4;
		if (!L_15)
		{
			goto IL_00ad;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11668));
		// if (!staticPrevEnableMixedRealityCapture)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11669));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_16 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___staticPrevEnableMixedRealityCapture_121;
		V_5 = (bool)((((int32_t)L_16) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11670));
		bool L_17 = V_5;
		if (!L_17)
		{
			goto IL_009a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11671));
		// OVRPlugin.SendEvent("mixed_reality_capture", "activated");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11672));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11673));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_18;
		L_18 = OVRPlugin_SendEvent_m2724870AAEAEC48E83D56DB0019FEB45B917A70D(_stringLiteral079DC68BE14B766AB4C8AFD677260C4674A20D17, _stringLiteral4481EB4F8B6BEF5D863C23DACE5D92E1C6603258, _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11673));
		// Debug.Log("MixedRealityCapture: activate");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11674));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11675));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_Log_m87A9A3C761FF5C43ED8A53B16190A53D08F818BB(_stringLiteralDED689386F73A7C43A44AAE858DB1A6629E49B63, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11675));
		// staticPrevEnableMixedRealityCapture = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11676));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___staticPrevEnableMixedRealityCapture_121 = (bool)1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11677));
	}

IL_009a:
	{
		// OVRMixedReality.Update(gameObject, mainCamera, configuration, trackingOrigin);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11678));
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_19 = ___1_gameObject;
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_20 = V_3;
		RuntimeObject* L_21 = ___0_configuration;
		int32_t L_22 = ___2_trackingOrigin;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11679));
		il2cpp_codegen_runtime_class_init_inline(OVRMixedReality_t41B157DC32D6A1711F387302ED6B67916A0ADBAF_il2cpp_TypeInfo_var);
		OVRMixedReality_Update_m3D99309363838A6B8BC1BDA6F45ED303760EBD10(L_19, L_20, L_21, L_22, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11679));
		// suppressDisableMixedRealityBecauseOfNoMainCameraWarning = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11680));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___suppressDisableMixedRealityBecauseOfNoMainCameraWarning_123 = (bool)0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11681));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11682));
		goto IL_00ce;
	}

IL_00ad:
	{
		// else if (!suppressDisableMixedRealityBecauseOfNoMainCameraWarning)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11683));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_23 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___suppressDisableMixedRealityBecauseOfNoMainCameraWarning_123;
		V_6 = (bool)((((int32_t)L_23) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11684));
		bool L_24 = V_6;
		if (!L_24)
		{
			goto IL_00ce;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11685));
		// Debug.LogWarning("Main Camera is not set, Mixed Reality disabled");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11686));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11687));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_LogWarning_m33EF1B897E0C7C6FF538989610BFAFFEF4628CA9(_stringLiteral1B93063888CB397E248C563775874CC5BFE82F70, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11687));
		// suppressDisableMixedRealityBecauseOfNoMainCameraWarning = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11688));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___suppressDisableMixedRealityBecauseOfNoMainCameraWarning_123 = (bool)1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11689));
	}

IL_00ce:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11690));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11691));
		goto IL_00f5;
	}

IL_00d1:
	{
		// else if (staticPrevEnableMixedRealityCapture)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11692));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_25 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___staticPrevEnableMixedRealityCapture_121;
		V_7 = L_25;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11693));
		bool L_26 = V_7;
		if (!L_26)
		{
			goto IL_00f5;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11694));
		// Debug.Log("MixedRealityCapture: deactivate");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11695));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11696));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_Log_m87A9A3C761FF5C43ED8A53B16190A53D08F818BB(_stringLiteral7992BFECF5974FADC77C4F7228AB51E602D14069, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11696));
		// staticPrevEnableMixedRealityCapture = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11697));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___staticPrevEnableMixedRealityCapture_121 = (bool)0;
		// OVRMixedReality.Cleanup();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11698));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11699));
		il2cpp_codegen_runtime_class_init_inline(OVRMixedReality_t41B157DC32D6A1711F387302ED6B67916A0ADBAF_il2cpp_TypeInfo_var);
		OVRMixedReality_Cleanup_m312DAB9A4C89085DB090214409B45DEF56B82B62(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11699));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11700));
	}

IL_00f5:
	{
		// staticMrcSettings.ReadFrom(configuration);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11701));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRMixedRealityCaptureSettings_tF6078D6B59F16A0EE3DEE4144FCED347444B9198* L_27 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___staticMrcSettings_122;
		RuntimeObject* L_28 = ___0_configuration;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11702));
		OVRMixedRealityCaptureConfigurationExtensions_ReadFrom_m585C78AFC92A80FE7A42CFC872B19375759C1E6D(L_27, L_28, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11702));
	}

IL_0101:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11703));
		return;
	}
}
// System.Void OVRManager::StaticShutdownMixedRealityCapture(OVRMixedRealityCaptureConfiguration)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_StaticShutdownMixedRealityCapture_mA2C3B9797235B17834EA372AB99D1024EB81F0F7 (RuntimeObject* ___0_configuration, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_StaticShutdownMixedRealityCapture_mA2C3B9797235B17834EA372AB99D1024EB81F0F7_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRMixedReality_t41B157DC32D6A1711F387302ED6B67916A0ADBAF_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_configuration));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_StaticShutdownMixedRealityCapture_mA2C3B9797235B17834EA372AB99D1024EB81F0F7_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11704));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 11705));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11706));
		// if (staticMixedRealityCaptureInitialized)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11707));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___staticMixedRealityCaptureInitialized_120;
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11708));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_003a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11709));
		// ScriptableObject.Destroy(staticMrcSettings);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11710));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRMixedRealityCaptureSettings_tF6078D6B59F16A0EE3DEE4144FCED347444B9198* L_2 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___staticMrcSettings_122;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11711));
		il2cpp_codegen_runtime_class_init_inline(Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		Object_Destroy_mE97D0A766419A81296E8D4E5C23D01D3FE91ACBB(L_2, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11711));
		// staticMrcSettings = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11712));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___staticMrcSettings_122 = (OVRMixedRealityCaptureSettings_tF6078D6B59F16A0EE3DEE4144FCED347444B9198*)NULL;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___staticMrcSettings_122), (void*)(OVRMixedRealityCaptureSettings_tF6078D6B59F16A0EE3DEE4144FCED347444B9198*)NULL);
		// OVRMixedReality.Cleanup();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11713));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11714));
		il2cpp_codegen_runtime_class_init_inline(OVRMixedReality_t41B157DC32D6A1711F387302ED6B67916A0ADBAF_il2cpp_TypeInfo_var);
		OVRMixedReality_Cleanup_m312DAB9A4C89085DB090214409B45DEF56B82B62(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11714));
		// if (OVRPlugin.Media.GetInitialized())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11715));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11716));
		bool L_3;
		L_3 = Media_GetInitialized_m0786F11D130FC9598B90C01A542F76A002F4D048(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11716));
		V_1 = L_3;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11717));
		bool L_4 = V_1;
		if (!L_4)
		{
			goto IL_0033;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11718));
		// OVRPlugin.Media.Shutdown();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11719));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11720));
		bool L_5;
		L_5 = Media_Shutdown_m8ABD858739EAE7E2D18F4CC94898D86DCB222DB9(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11720));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11721));
	}

IL_0033:
	{
		// staticMixedRealityCaptureInitialized = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11722));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___staticMixedRealityCaptureInitialized_120 = (bool)0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11723));
	}

IL_003a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11724));
		return;
	}
}
// System.Boolean OVRManager::PassthroughInitializedOrPending(OVRManager/PassthroughInitializationState)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_PassthroughInitializedOrPending_m7B360381FEDC2014AFB1ABB74E907B62B0D14348 (int32_t ___0_state, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_PassthroughInitializedOrPending_m7B360381FEDC2014AFB1ABB74E907B62B0D14348_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_state));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_PassthroughInitializedOrPending_m7B360381FEDC2014AFB1ABB74E907B62B0D14348_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11725));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 11726));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11727));
		// return state == PassthroughInitializationState.Pending || state == PassthroughInitializationState.Initialized;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11728));
		int32_t L_0 = ___0_state;
		if ((((int32_t)L_0) == ((int32_t)1)))
		{
			goto IL_000b;
		}
	}
	{
		int32_t L_1 = ___0_state;
		G_B3_0 = ((((int32_t)L_1) == ((int32_t)2))? 1 : 0);
		goto IL_000c;
	}

IL_000b:
	{
		G_B3_0 = 1;
	}

IL_000c:
	{
		V_0 = (bool)G_B3_0;
		goto IL_000f;
	}

IL_000f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11729));
		bool L_2 = V_0;
		return L_2;
	}
}
// System.Boolean OVRManager::InitializeInsightPassthrough()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_InitializeInsightPassthrough_m016E6C16576A1E4F6B7871E7FDE7D2671119F67E (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_InitializeInsightPassthrough_m016E6C16576A1E4F6B7871E7FDE7D2671119F67E_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Result_t65718B00CEF7A5D1E84402EA2DDCF5BF3D3E6797_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Result_t65718B00CEF7A5D1E84402EA2DDCF5BF3D3E6797_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralABBA190802F8B84B59F054138988E434665EA0AE);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralF3E84B722399601AD7E281754E917478AA9AD48D);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_InitializeInsightPassthrough_m016E6C16576A1E4F6B7871E7FDE7D2671119F67E_RuntimeMethod_var, NULL, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11730));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 11731));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11732));
		// if (PassthroughInitializedOrPending(_passthroughInitializationState))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11733));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____passthroughInitializationState_124;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11734));
		bool L_1;
		L_1 = OVRManager_PassthroughInitializedOrPending_m7B360381FEDC2014AFB1ABB74E907B62B0D14348(L_0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11734));
		V_2 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11735));
		bool L_2 = V_2;
		if (!L_2)
		{
			goto IL_0013;
		}
	}
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11736));
		V_3 = (bool)0;
		goto IL_0080;
	}

IL_0013:
	{
		// bool passthroughResult = OVRPlugin.InitializeInsightPassthrough();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11737));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11738));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_3;
		L_3 = OVRPlugin_InitializeInsightPassthrough_m533CFC66EFCBCF4C9B69AC938D2E2653724D2304(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11738));
		V_0 = L_3;
		// OVRPlugin.Result result = OVRPlugin.GetInsightPassthroughInitializationState();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11739));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11740));
		int32_t L_4;
		L_4 = OVRPlugin_GetInsightPassthroughInitializationState_m3E668E023B953E8204B732EBCD358FAC7B7660C4(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11740));
		V_1 = L_4;
		// if (result < 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11741));
		int32_t L_5 = V_1;
		V_4 = (bool)((((int32_t)L_5) < ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11742));
		bool L_6 = V_4;
		if (!L_6)
		{
			goto IL_0055;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11743));
		// _passthroughInitializationState = PassthroughInitializationState.Failed;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11744));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____passthroughInitializationState_124 = 3;
		// Debug.LogError("Failed to initialize Insight Passthrough. Passthrough will be unavailable. Error " + result.ToString() + ".");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11745));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11746));
		Il2CppFakeBox<int32_t> L_7(Result_t65718B00CEF7A5D1E84402EA2DDCF5BF3D3E6797_il2cpp_TypeInfo_var, (&V_1));
		String_t* L_8;
		L_8 = Enum_ToString_m946B0B83C4470457D0FF555D862022C72BB55741((Enum_t2A1A94B24E3B776EEF4E5E485E290BB9D4D072E2*)(&L_7), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11746));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11747));
		String_t* L_9;
		L_9 = String_Concat_m8855A6DE10F84DA7F4EC113CADDB59873A25573B(_stringLiteralABBA190802F8B84B59F054138988E434665EA0AE, L_8, _stringLiteralF3E84B722399601AD7E281754E917478AA9AD48D, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11747));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11748));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_LogError_mB00B2B4468EF3CAF041B038D840820FB84C924B2(L_9, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11748));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11749));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11750));
		goto IL_0073;
	}

IL_0055:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11751));
		// if (result == OVRPlugin.Result.Success_Pending)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11752));
		int32_t L_10 = V_1;
		V_5 = (bool)((((int32_t)L_10) == ((int32_t)2))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11753));
		bool L_11 = V_5;
		if (!L_11)
		{
			goto IL_006a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11754));
		// _passthroughInitializationState = PassthroughInitializationState.Pending;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11755));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____passthroughInitializationState_124 = 1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11756));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11757));
		goto IL_0072;
	}

IL_006a:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11758));
		// _passthroughInitializationState = PassthroughInitializationState.Initialized;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11759));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____passthroughInitializationState_124 = 2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11760));
	}

IL_0072:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11761));
	}

IL_0073:
	{
		// return PassthroughInitializedOrPending(_passthroughInitializationState);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11762));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_12 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____passthroughInitializationState_124;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11763));
		bool L_13;
		L_13 = OVRManager_PassthroughInitializedOrPending_m7B360381FEDC2014AFB1ABB74E907B62B0D14348(L_12, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11763));
		V_3 = L_13;
		goto IL_0080;
	}

IL_0080:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11764));
		bool L_14 = V_3;
		return L_14;
	}
}
// System.Void OVRManager::ShutdownInsightPassthrough()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_ShutdownInsightPassthrough_mBBB77D5EB2CE95920737C34F1A0A5E6C14A6E576 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_ShutdownInsightPassthrough_mBBB77D5EB2CE95920737C34F1A0A5E6C14A6E576_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral2EF7DEC74A60941E8EA4D312EA0C3FD9C14303FA);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_ShutdownInsightPassthrough_mBBB77D5EB2CE95920737C34F1A0A5E6C14A6E576_RuntimeMethod_var, NULL, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11765));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 11766));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11767));
		// if (PassthroughInitializedOrPending(_passthroughInitializationState))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11768));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____passthroughInitializationState_124;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11769));
		bool L_1;
		L_1 = OVRManager_PassthroughInitializedOrPending_m7B360381FEDC2014AFB1ABB74E907B62B0D14348(L_0, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11769));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11770));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_004a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11771));
		// if (OVRPlugin.ShutdownInsightPassthrough())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11772));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11773));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_3;
		L_3 = OVRPlugin_ShutdownInsightPassthrough_m8BD5F14E5C47D98E1E78889BEDC2D32DE96C9F96(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11773));
		V_1 = L_3;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11774));
		bool L_4 = V_1;
		if (!L_4)
		{
			goto IL_0023;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11775));
		// _passthroughInitializationState = PassthroughInitializationState.Unspecified;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11776));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____passthroughInitializationState_124 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11777));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11778));
		goto IL_0047;
	}

IL_0023:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11779));
		// bool isInitialized = OVRPlugin.IsInsightPassthroughInitialized();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11780));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11781));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_5;
		L_5 = OVRPlugin_IsInsightPassthroughInitialized_m1637AFD376CCC2D63B5C34475FD012FD7DF3EB36(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11781));
		V_2 = L_5;
		// if (isInitialized)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11782));
		bool L_6 = V_2;
		V_3 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11783));
		bool L_7 = V_3;
		if (!L_7)
		{
			goto IL_003e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11784));
		// Debug.LogError("Failed to shut down passthrough. It may be still in use.");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11785));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11786));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_LogError_mB00B2B4468EF3CAF041B038D840820FB84C924B2(_stringLiteral2EF7DEC74A60941E8EA4D312EA0C3FD9C14303FA, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11786));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11787));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11788));
		goto IL_0046;
	}

IL_003e:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11789));
		// _passthroughInitializationState = PassthroughInitializationState.Unspecified;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11790));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____passthroughInitializationState_124 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11791));
	}

IL_0046:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11792));
	}

IL_0047:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11793));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11794));
		goto IL_0052;
	}

IL_004a:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11795));
		// _passthroughInitializationState = PassthroughInitializationState.Unspecified;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11796));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____passthroughInitializationState_124 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11797));
	}

IL_0052:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11798));
		return;
	}
}
// System.Void OVRManager::UpdateInsightPassthrough(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager_UpdateInsightPassthrough_mB261855F40DB798505F3B863C29E7ED598546A4F (bool ___0_shouldBeEnabled, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_UpdateInsightPassthrough_mB261855F40DB798505F3B863C29E7ED598546A4F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Result_t65718B00CEF7A5D1E84402EA2DDCF5BF3D3E6797_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Result_t65718B00CEF7A5D1E84402EA2DDCF5BF3D3E6797_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralABBA190802F8B84B59F054138988E434665EA0AE);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralF3E84B722399601AD7E281754E917478AA9AD48D);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	int32_t V_4 = 0;
	bool V_5 = false;
	bool V_6 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_shouldBeEnabled));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_UpdateInsightPassthrough_mB261855F40DB798505F3B863C29E7ED598546A4F_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11799));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 11800));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11801));
		// if (shouldBeEnabled != PassthroughInitializedOrPending(_passthroughInitializationState))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11802));
		bool L_0 = ___0_shouldBeEnabled;
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_1 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____passthroughInitializationState_124;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11803));
		bool L_2;
		L_2 = OVRManager_PassthroughInitializedOrPending_m7B360381FEDC2014AFB1ABB74E907B62B0D14348(L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11803));
		V_0 = (bool)((((int32_t)((((int32_t)L_0) == ((int32_t)L_2))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11804));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_003f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11805));
		// if (shouldBeEnabled)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11806));
		bool L_4 = ___0_shouldBeEnabled;
		V_1 = L_4;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11807));
		bool L_5 = V_1;
		if (!L_5)
		{
			goto IL_0034;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11808));
		// if (_passthroughInitializationState != PassthroughInitializationState.Failed)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11809));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_6 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____passthroughInitializationState_124;
		V_2 = (bool)((((int32_t)((((int32_t)L_6) == ((int32_t)3))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11810));
		bool L_7 = V_2;
		if (!L_7)
		{
			goto IL_0031;
		}
	}
	{
		// InitializeInsightPassthrough();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11811));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11812));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		bool L_8;
		L_8 = OVRManager_InitializeInsightPassthrough_m016E6C16576A1E4F6B7871E7FDE7D2671119F67E(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11812));
	}

IL_0031:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11813));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11814));
		goto IL_003c;
	}

IL_0034:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11815));
		// ShutdownInsightPassthrough();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11816));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11817));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRManager_ShutdownInsightPassthrough_mBBB77D5EB2CE95920737C34F1A0A5E6C14A6E576(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11817));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11818));
	}

IL_003c:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11819));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11820));
		goto IL_00a0;
	}

IL_003f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11821));
		// if (_passthroughInitializationState == PassthroughInitializationState.Pending)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11822));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_9 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____passthroughInitializationState_124;
		V_3 = (bool)((((int32_t)L_9) == ((int32_t)1))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11823));
		bool L_10 = V_3;
		if (!L_10)
		{
			goto IL_009f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11824));
		// OVRPlugin.Result result = OVRPlugin.GetInsightPassthroughInitializationState();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11825));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11826));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		int32_t L_11;
		L_11 = OVRPlugin_GetInsightPassthroughInitializationState_m3E668E023B953E8204B732EBCD358FAC7B7660C4(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11826));
		V_4 = L_11;
		// if (result == OVRPlugin.Result.Success)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11827));
		int32_t L_12 = V_4;
		V_5 = (bool)((((int32_t)L_12) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11828));
		bool L_13 = V_5;
		if (!L_13)
		{
			goto IL_0069;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11829));
		// _passthroughInitializationState = PassthroughInitializationState.Initialized;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11830));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____passthroughInitializationState_124 = 2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11831));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11832));
		goto IL_009e;
	}

IL_0069:
	{
		// else if (result < 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11833));
		int32_t L_14 = V_4;
		V_6 = (bool)((((int32_t)L_14) < ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11834));
		bool L_15 = V_6;
		if (!L_15)
		{
			goto IL_009e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11835));
		// _passthroughInitializationState = PassthroughInitializationState.Failed;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11836));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____passthroughInitializationState_124 = 3;
		// Debug.LogError("Failed to initialize Insight Passthrough. Passthrough will be unavailable. Error " + result.ToString() + ".");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11837));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11838));
		Il2CppFakeBox<int32_t> L_16(Result_t65718B00CEF7A5D1E84402EA2DDCF5BF3D3E6797_il2cpp_TypeInfo_var, (&V_4));
		String_t* L_17;
		L_17 = Enum_ToString_m946B0B83C4470457D0FF555D862022C72BB55741((Enum_t2A1A94B24E3B776EEF4E5E485E290BB9D4D072E2*)(&L_16), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11838));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11839));
		String_t* L_18;
		L_18 = String_Concat_m8855A6DE10F84DA7F4EC113CADDB59873A25573B(_stringLiteralABBA190802F8B84B59F054138988E434665EA0AE, L_17, _stringLiteralF3E84B722399601AD7E281754E917478AA9AD48D, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11839));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11840));
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_LogError_mB00B2B4468EF3CAF041B038D840820FB84C924B2(L_18, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11840));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11841));
	}

IL_009e:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11842));
	}

IL_009f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11843));
	}

IL_00a0:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11844));
		return;
	}
}
// System.Boolean OVRManager::IsInsightPassthroughSupported()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_IsInsightPassthroughSupported_m7DF8A3280003DDF6DDEC9D69A23E89332751C72A (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_IsInsightPassthroughSupported_m7DF8A3280003DDF6DDEC9D69A23E89332751C72A_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_IsInsightPassthroughSupported_m7DF8A3280003DDF6DDEC9D69A23E89332751C72A_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11845));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 11846));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11847));
		// return OVRPlugin.IsInsightPassthroughSupported();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11848));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11849));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = OVRPlugin_IsInsightPassthroughSupported_m7AE9F209201C3853A8DBF56F8AD3DAAA13ED8529(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11849));
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11850));
		bool L_1 = V_0;
		return L_1;
	}
}
// OVRManager/PassthroughCapabilities OVRManager::GetPassthroughCapabilities()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR PassthroughCapabilities_t3B338539A7E4125FE79381628715BDC608471F9F* OVRManager_GetPassthroughCapabilities_m843A43C3748FF0EA151020DFEA978B85B11D645B (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_GetPassthroughCapabilities_m843A43C3748FF0EA151020DFEA978B85B11D645B_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&PassthroughCapabilities_t3B338539A7E4125FE79381628715BDC608471F9F_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&PassthroughCapabilities_t3B338539A7E4125FE79381628715BDC608471F9F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&PassthroughCapabilityFlags_t2485F5160C4F7455ECA91216E050E30FF06A8F47_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	PassthroughCapabilities_t3B338539A7E4125FE79381628715BDC608471F9F* V_2 = NULL;
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_GetPassthroughCapabilities_m843A43C3748FF0EA151020DFEA978B85B11D645B_RuntimeMethod_var, NULL, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11851));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 11852));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11853));
		// if (_passthroughCapabilities == null) {
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11854));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		PassthroughCapabilities_t3B338539A7E4125FE79381628715BDC608471F9F* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____passthroughCapabilities_125;
		V_0 = (bool)((((RuntimeObject*)(PassthroughCapabilities_t3B338539A7E4125FE79381628715BDC608471F9F*)L_0) == ((RuntimeObject*)(RuntimeObject*)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11855));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_002b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11856));
		// OVRPlugin.PassthroughCapabilityFlags capabilityFlags = OVRPlugin.GetPassthroughCapabilityFlags();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11857));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11858));
		il2cpp_codegen_runtime_class_init_inline(OVRPlugin_t0BF53CAD10A7503BB132A303469F2E0A639E696B_il2cpp_TypeInfo_var);
		int32_t L_2;
		L_2 = OVRPlugin_GetPassthroughCapabilityFlags_m17CE0E3D6F476E63ECE69CC29FA167DE14C6DD3B(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11858));
		V_1 = L_2;
		// _passthroughCapabilities = new PassthroughCapabilities(
		//     supportsPassthrough: (capabilityFlags & OVRPlugin.PassthroughCapabilityFlags.Passthrough) == OVRPlugin.PassthroughCapabilityFlags.Passthrough,
		//     supportsColorPassthrough: (capabilityFlags & OVRPlugin.PassthroughCapabilityFlags.Color) == OVRPlugin.PassthroughCapabilityFlags.Color
		// );
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11859));
		int32_t L_3 = V_1;
		int32_t L_4 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11860));
		PassthroughCapabilities_t3B338539A7E4125FE79381628715BDC608471F9F* L_5 = (PassthroughCapabilities_t3B338539A7E4125FE79381628715BDC608471F9F*)il2cpp_codegen_object_new(PassthroughCapabilities_t3B338539A7E4125FE79381628715BDC608471F9F_il2cpp_TypeInfo_var);
		NullCheck(L_5);
		PassthroughCapabilities__ctor_mD9AD81E53544D7D85A7E6CAAF8F277721F0B31A3(L_5, (bool)((((int32_t)((int32_t)((int32_t)L_3&1))) == ((int32_t)1))? 1 : 0), (bool)((((int32_t)((int32_t)((int32_t)L_4&2))) == ((int32_t)2))? 1 : 0), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11860));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____passthroughCapabilities_125 = L_5;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____passthroughCapabilities_125), (void*)L_5);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11861));
	}

IL_002b:
	{
		// return _passthroughCapabilities;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11862));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		PassthroughCapabilities_t3B338539A7E4125FE79381628715BDC608471F9F* L_6 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____passthroughCapabilities_125;
		V_2 = L_6;
		goto IL_0033;
	}

IL_0033:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11863));
		PassthroughCapabilities_t3B338539A7E4125FE79381628715BDC608471F9F* L_7 = V_2;
		return L_7;
	}
}
// System.Boolean OVRManager::IsInsightPassthroughInitialized()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_IsInsightPassthroughInitialized_m7752AC4A37C80B772E4E66527F3401A6D31D1A1B (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_IsInsightPassthroughInitialized_m7752AC4A37C80B772E4E66527F3401A6D31D1A1B_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_IsInsightPassthroughInitialized_m7752AC4A37C80B772E4E66527F3401A6D31D1A1B_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11864));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 11865));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11866));
		// return _passthroughInitializationState == PassthroughInitializationState.Initialized;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11867));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____passthroughInitializationState_124;
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)2))? 1 : 0);
		goto IL_000c;
	}

IL_000c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11868));
		bool L_1 = V_0;
		return L_1;
	}
}
// System.Boolean OVRManager::HasInsightPassthroughInitFailed()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_HasInsightPassthroughInitFailed_m1C8BCFB02BFFE5C02B93C37682092AFBB2EE9A11 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_HasInsightPassthroughInitFailed_m1C8BCFB02BFFE5C02B93C37682092AFBB2EE9A11_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_HasInsightPassthroughInitFailed_m1C8BCFB02BFFE5C02B93C37682092AFBB2EE9A11_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11869));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 11870));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11871));
		// return _passthroughInitializationState == PassthroughInitializationState.Failed;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11872));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____passthroughInitializationState_124;
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)3))? 1 : 0);
		goto IL_000c;
	}

IL_000c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11873));
		bool L_1 = V_0;
		return L_1;
	}
}
// System.Boolean OVRManager::IsInsightPassthroughInitPending()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool OVRManager_IsInsightPassthroughInitPending_m395E00ABC60591E79946909FD5674AF052EA6132 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_IsInsightPassthroughInitPending_m395E00ABC60591E79946909FD5674AF052EA6132_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_IsInsightPassthroughInitPending_m395E00ABC60591E79946909FD5674AF052EA6132_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11874));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 11875));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11876));
		// return _passthroughInitializationState == PassthroughInitializationState.Pending;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11877));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		int32_t L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____passthroughInitializationState_124;
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)1))? 1 : 0);
		goto IL_000c;
	}

IL_000c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11878));
		bool L_1 = V_0;
		return L_1;
	}
}
// System.Void OVRManager::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager__ctor_mDC0740CE9C6AE096D5776DE2563D037A9674CEEE (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager__ctor_mDC0740CE9C6AE096D5776DE2563D037A9674CEEE_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager__ctor_mDC0740CE9C6AE096D5776DE2563D037A9674CEEE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11879));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 11880));
	{
		// public bool useRecommendedMSAALevel = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11881));
		__this->___useRecommendedMSAALevel_42 = (bool)1;
		// private bool _monoscopic = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11882));
		__this->____monoscopic_43 = (bool)0;
		// private OVRManager.ColorSpace _colorGamut = OVRManager.ColorSpace.P3;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11883));
		__this->____colorGamut_44 = 7;
		// public float minRenderScale = 0.7f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11884));
		__this->___minRenderScale_45 = (0.699999988f);
		// public float maxRenderScale = 1.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11885));
		__this->___maxRenderScale_46 = (1.0f);
		// public int profilerTcpPort = OVRSystemPerfMetrics.TcpListeningPort;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11886));
		__this->___profilerTcpPort_49 = ((int32_t)32419);
		// public bool expandMixedRealityCapturePropertySheet = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11887));
		__this->___expandMixedRealityCapturePropertySheet_50 = (bool)0;
		// public bool enableMixedReality = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11888));
		__this->___enableMixedReality_51 = (bool)0;
		// public CompositionMethod compositionMethod = CompositionMethod.External;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11889));
		__this->___compositionMethod_52 = 0;
		// public bool dynamicCullingMask = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11890));
		__this->___dynamicCullingMask_55 = (bool)1;
		// public Color externalCompositionBackdropColorRift = Color.green;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11891));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11892));
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_0;
		L_0 = Color_get_green_mEB001F2CD8C68C6BBAEF9101990B779D3AA2A6EF_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11892));
		__this->___externalCompositionBackdropColorRift_56 = L_0;
		// public Color externalCompositionBackdropColorQuest = Color.clear;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11893));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11894));
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_1;
		L_1 = Color_get_clear_m02E023A7D396B973288B3915F6F24FBF7E0DC81D_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11894));
		__this->___externalCompositionBackdropColorQuest_57 = L_1;
		// public CameraDevice capturingCameraDevice = CameraDevice.WebCamera0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11895));
		__this->___capturingCameraDevice_58 = 0;
		// public bool flipCameraFrameHorizontally = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11896));
		__this->___flipCameraFrameHorizontally_59 = (bool)0;
		// public bool flipCameraFrameVertically = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11897));
		__this->___flipCameraFrameVertically_60 = (bool)0;
		// public float handPoseStateLatency = 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11898));
		__this->___handPoseStateLatency_61 = (0.0f);
		// public float sandwichCompositionRenderLatency = 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11899));
		__this->___sandwichCompositionRenderLatency_62 = (0.0f);
		// public int sandwichCompositionBufferedFrames = 8;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11900));
		__this->___sandwichCompositionBufferedFrames_63 = 8;
		// public Color chromaKeyColor = Color.green;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11901));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11902));
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_2;
		L_2 = Color_get_green_mEB001F2CD8C68C6BBAEF9101990B779D3AA2A6EF_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11902));
		__this->___chromaKeyColor_64 = L_2;
		// public float chromaKeySimilarity = 0.60f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11903));
		__this->___chromaKeySimilarity_65 = (0.600000024f);
		// public float chromaKeySmoothRange = 0.03f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11904));
		__this->___chromaKeySmoothRange_66 = (0.0299999993f);
		// public float chromaKeySpillRange = 0.06f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11905));
		__this->___chromaKeySpillRange_67 = (0.0599999987f);
		// public bool useDynamicLighting = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11906));
		__this->___useDynamicLighting_68 = (bool)0;
		// public DepthQuality depthQuality = DepthQuality.Medium;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11907));
		__this->___depthQuality_69 = 1;
		// public float dynamicLightingSmoothFactor = 8.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11908));
		__this->___dynamicLightingSmoothFactor_70 = (8.0f);
		// public float dynamicLightingDepthVariationClampingValue = 0.001f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11909));
		__this->___dynamicLightingDepthVariationClampingValue_71 = (0.00100000005f);
		// public VirtualGreenScreenType virtualGreenScreenType = VirtualGreenScreenType.Off;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11910));
		__this->___virtualGreenScreenType_72 = 0;
		// public float virtualGreenScreenTopY = 10.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11911));
		__this->___virtualGreenScreenTopY_73 = (10.0f);
		// public float virtualGreenScreenBottomY = -10.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11912));
		__this->___virtualGreenScreenBottomY_74 = (-10.0f);
		// public bool virtualGreenScreenApplyDepthCulling = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11913));
		__this->___virtualGreenScreenApplyDepthCulling_75 = (bool)0;
		// public float virtualGreenScreenDepthTolerance = 0.2f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11914));
		__this->___virtualGreenScreenDepthTolerance_76 = (0.200000003f);
		// public InstantiateMrcCameraDelegate instantiateMixedRealityCameraGameObject = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11915));
		__this->___instantiateMixedRealityCameraGameObject_78 = (InstantiateMrcCameraDelegate_t26D39C3003CADD2CBA4E7C5EB75333089B2F03C8*)NULL;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___instantiateMixedRealityCameraGameObject_78), (void*)(InstantiateMrcCameraDelegate_t26D39C3003CADD2CBA4E7C5EB75333089B2F03C8*)NULL);
		// public bool isInsightPassthroughEnabled = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11916));
		__this->___isInsightPassthroughEnabled_79 = (bool)0;
		// private bool _localDimming = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11917));
		__this->____localDimming_93 = (bool)1;
		// private OVRManager.TrackingOrigin _trackingOriginType = OVRManager.TrackingOrigin.EyeLevel;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11918));
		__this->____trackingOriginType_94 = 0;
		// public bool usePositionTracking = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11919));
		__this->___usePositionTracking_95 = (bool)1;
		// public bool useRotationTracking = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11920));
		__this->___useRotationTracking_96 = (bool)1;
		// public bool useIPDInPositionTracking = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11921));
		__this->___useIPDInPositionTracking_97 = (bool)1;
		// public bool resetTrackerOnLoad = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11922));
		__this->___resetTrackerOnLoad_98 = (bool)0;
		// public bool AllowRecenter = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11923));
		__this->___AllowRecenter_99 = (bool)1;
		// public bool LateControllerUpdate = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11924));
		__this->___LateControllerUpdate_100 = (bool)1;
		// public bool LateLatching = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11925));
		__this->___LateLatching_101 = (bool)0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11926));
		MonoBehaviour__ctor_m592DB0105CA0BC97AA1C5F4AD27B12D68A3B7C1E(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11926));
		return;
	}
}
// System.Void OVRManager::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OVRManager__cctor_mF1E19AAD77D4814E8B25D6BC99781E284D145226 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager__cctor_mF1E19AAD77D4814E8B25D6BC99781E284D145226_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&String_t_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral4D4229E0C147BE8C7321C97D16DA6567C7CC7385);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral9F7053AC26B072D564E9CA83016E143B6B83A080);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralA73F4360C56103ED788368C9769D9E67B8857E15);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager__cctor_mF1E19AAD77D4814E8B25D6BC99781E284D145226_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11927));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 11928));
	{
		// private static bool _isHmdPresentCached = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11929));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____isHmdPresentCached_35 = (bool)0;
		// private static bool _isHmdPresent = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11930));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____isHmdPresent_36 = (bool)0;
		// private static bool _wasHmdPresent = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11931));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____wasHmdPresent_37 = (bool)0;
		// private static bool _hasVrFocusCached = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11932));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____hasVrFocusCached_38 = (bool)0;
		// private static bool _hasVrFocus = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11933));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____hasVrFocus_39 = (bool)0;
		// private static bool _hadVrFocus = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11934));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____hadVrFocus_40 = (bool)0;
		// private static bool _hadInputFocus = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11935));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____hadInputFocus_41 = (bool)1;
		// public static string OCULUS_UNITY_NAME_STR = "Oculus";
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11936));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___OCULUS_UNITY_NAME_STR_83 = _stringLiteralA73F4360C56103ED788368C9769D9E67B8857E15;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___OCULUS_UNITY_NAME_STR_83), (void*)_stringLiteralA73F4360C56103ED788368C9769D9E67B8857E15);
		// public static string OPENVR_UNITY_NAME_STR = "OpenVR";
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11937));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___OPENVR_UNITY_NAME_STR_84 = _stringLiteral4D4229E0C147BE8C7321C97D16DA6567C7CC7385;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___OPENVR_UNITY_NAME_STR_84), (void*)_stringLiteral4D4229E0C147BE8C7321C97D16DA6567C7CC7385);
		// private static Vector3 OpenVRTouchRotationOffsetEulerLeft = new Vector3(40.0f, 0.0f, 0.0f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11938));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11939));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_0;
		memset((&L_0), 0, sizeof(L_0));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_0), (40.0f), (0.0f), (0.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11939));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___OpenVRTouchRotationOffsetEulerLeft_86 = L_0;
		// private static Vector3 OpenVRTouchRotationOffsetEulerRight = new Vector3(40.0f, 0.0f, 0.0f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11940));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11941));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_1;
		memset((&L_1), 0, sizeof(L_1));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_1), (40.0f), (0.0f), (0.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11941));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___OpenVRTouchRotationOffsetEulerRight_87 = L_1;
		// private static Vector3 OpenVRTouchPositionOffsetLeft = new Vector3(0.0075f, -0.005f, -0.0525f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11942));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11943));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_2;
		memset((&L_2), 0, sizeof(L_2));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_2), (0.00749999983f), (-0.00499999989f), (-0.0524999984f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11943));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___OpenVRTouchPositionOffsetLeft_88 = L_2;
		// private static Vector3 OpenVRTouchPositionOffsetRight = new Vector3(-0.0075f, -0.005f, -0.0525f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11944));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11945));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_3;
		memset((&L_3), 0, sizeof(L_3));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_3), (-0.00749999983f), (-0.00499999989f), (-0.0524999984f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11945));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___OpenVRTouchPositionOffsetRight_89 = L_3;
		// private static bool _isUserPresentCached = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11946));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____isUserPresentCached_103 = (bool)0;
		// private static bool _isUserPresent = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11947));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____isUserPresent_104 = (bool)0;
		// private static bool _wasUserPresent = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11948));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____wasUserPresent_105 = (bool)0;
		// private static bool prevAudioOutIdIsCached = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11949));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___prevAudioOutIdIsCached_106 = (bool)0;
		// private static bool prevAudioInIdIsCached = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11950));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___prevAudioInIdIsCached_107 = (bool)0;
		// private static string prevAudioOutId = string.Empty;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11951));
		String_t* L_4 = ((String_t_StaticFields*)il2cpp_codegen_static_fields_for(String_t_il2cpp_TypeInfo_var))->___Empty_6;
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___prevAudioOutId_108 = L_4;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___prevAudioOutId_108), (void*)L_4);
		// private static string prevAudioInId = string.Empty;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11952));
		String_t* L_5 = ((String_t_StaticFields*)il2cpp_codegen_static_fields_for(String_t_il2cpp_TypeInfo_var))->___Empty_6;
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___prevAudioInId_109 = L_5;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___prevAudioInId_109), (void*)L_5);
		// private static bool wasPositionTracked = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11953));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___wasPositionTracked_110 = (bool)0;
		// private static OVRPlugin.EventDataBuffer eventDataBuffer = new OVRPlugin.EventDataBuffer();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11954));
		il2cpp_codegen_initobj((&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___eventDataBuffer_111), sizeof(EventDataBuffer_t5836E8ECE1E094863DEDCC92818AEF39C2F646E8));
		// public static string UnityAlphaOrBetaVersionWarningMessage = "WARNING: It's not recommended to use Unity alpha/beta release in Oculus development. Use a stable release if you encounter any issue.";
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11955));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___UnityAlphaOrBetaVersionWarningMessage_112 = _stringLiteral9F7053AC26B072D564E9CA83016E143B6B83A080;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___UnityAlphaOrBetaVersionWarningMessage_112), (void*)_stringLiteral9F7053AC26B072D564E9CA83016E143B6B83A080);
		// public static bool OVRManagerinitialized = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11956));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___OVRManagerinitialized_113 = (bool)0;
		// private static bool multipleMainCameraWarningPresented = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11957));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___multipleMainCameraWarningPresented_117 = (bool)0;
		// private static bool suppressUnableToFindMainCameraMessage = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11958));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___suppressUnableToFindMainCameraMessage_118 = (bool)0;
		// private static WeakReference<Camera> lastFoundMainCamera = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11959));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___lastFoundMainCamera_119 = (WeakReference_1_t08942AAA5C58B24D75314BD9594E2DE409CB9C93*)NULL;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___lastFoundMainCamera_119), (void*)(WeakReference_1_t08942AAA5C58B24D75314BD9594E2DE409CB9C93*)NULL);
		// public static bool staticMixedRealityCaptureInitialized = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11960));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___staticMixedRealityCaptureInitialized_120 = (bool)0;
		// public static bool staticPrevEnableMixedRealityCapture = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11961));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___staticPrevEnableMixedRealityCapture_121 = (bool)0;
		// public static OVRMixedRealityCaptureSettings staticMrcSettings = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11962));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___staticMrcSettings_122 = (OVRMixedRealityCaptureSettings_tF6078D6B59F16A0EE3DEE4144FCED347444B9198*)NULL;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___staticMrcSettings_122), (void*)(OVRMixedRealityCaptureSettings_tF6078D6B59F16A0EE3DEE4144FCED347444B9198*)NULL);
		// private static bool suppressDisableMixedRealityBecauseOfNoMainCameraWarning = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11963));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___suppressDisableMixedRealityBecauseOfNoMainCameraWarning_123 = (bool)0;
		// private static PassthroughInitializationState _passthroughInitializationState = PassthroughInitializationState.Unspecified;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 11964));
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->____passthroughInitializationState_124 = 0;
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Config_set_SampleRateHz_mDCD3C6D84B82FAEE86652D00EB57F6D1C52692B5_inline (int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_set_SampleRateHz_mDCD3C6D84B82FAEE86652D00EB57F6D1C52692B5_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Config_set_SampleRateHz_mDCD3C6D84B82FAEE86652D00EB57F6D1C52692B5_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5733));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5734));
	{
		// public static int SampleRateHz { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5735));
		int32_t L_0 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		((Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_StaticFields*)il2cpp_codegen_static_fields_for(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var))->___U3CSampleRateHzU3Ek__BackingField_0 = L_0;
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Config_set_SampleSizeInBytes_mFD9B00CDEDFDB3C01D5958A9ECEEF22C80651A22_inline (int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_set_SampleSizeInBytes_mFD9B00CDEDFDB3C01D5958A9ECEEF22C80651A22_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Config_set_SampleSizeInBytes_mFD9B00CDEDFDB3C01D5958A9ECEEF22C80651A22_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5739));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5740));
	{
		// public static int SampleSizeInBytes { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5741));
		int32_t L_0 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		((Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_StaticFields*)il2cpp_codegen_static_fields_for(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var))->___U3CSampleSizeInBytesU3Ek__BackingField_1 = L_0;
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Config_set_MinimumSafeSamplesQueued_m08F042C5BB8DCCBEE448EAD12412D3336ABAEFC5_inline (int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_set_MinimumSafeSamplesQueued_m08F042C5BB8DCCBEE448EAD12412D3336ABAEFC5_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Config_set_MinimumSafeSamplesQueued_m08F042C5BB8DCCBEE448EAD12412D3336ABAEFC5_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5745));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5746));
	{
		// public static int MinimumSafeSamplesQueued { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5747));
		int32_t L_0 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		((Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_StaticFields*)il2cpp_codegen_static_fields_for(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var))->___U3CMinimumSafeSamplesQueuedU3Ek__BackingField_2 = L_0;
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Config_set_MinimumBufferSamplesCount_m866A99335F02A0402AEE83DA6BDD06BEB7FEA7A3_inline (int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_set_MinimumBufferSamplesCount_m866A99335F02A0402AEE83DA6BDD06BEB7FEA7A3_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Config_set_MinimumBufferSamplesCount_m866A99335F02A0402AEE83DA6BDD06BEB7FEA7A3_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5751));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5752));
	{
		// public static int MinimumBufferSamplesCount { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5753));
		int32_t L_0 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		((Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_StaticFields*)il2cpp_codegen_static_fields_for(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var))->___U3CMinimumBufferSamplesCountU3Ek__BackingField_3 = L_0;
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Config_set_OptimalBufferSamplesCount_m5B583871BC4784C547969664A7DCC45343792E7F_inline (int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_set_OptimalBufferSamplesCount_m5B583871BC4784C547969664A7DCC45343792E7F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Config_set_OptimalBufferSamplesCount_m5B583871BC4784C547969664A7DCC45343792E7F_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5757));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5758));
	{
		// public static int OptimalBufferSamplesCount { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5759));
		int32_t L_0 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		((Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_StaticFields*)il2cpp_codegen_static_fields_for(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var))->___U3COptimalBufferSamplesCountU3Ek__BackingField_4 = L_0;
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Config_set_MaximumBufferSamplesCount_m9D324EE5E616DCD4DA7F6563973A3B430B6D1C0A_inline (int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_set_MaximumBufferSamplesCount_m9D324EE5E616DCD4DA7F6563973A3B430B6D1C0A_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Config_set_MaximumBufferSamplesCount_m9D324EE5E616DCD4DA7F6563973A3B430B6D1C0A_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5763));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5764));
	{
		// public static int MaximumBufferSamplesCount { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5765));
		int32_t L_0 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		((Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_StaticFields*)il2cpp_codegen_static_fields_for(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var))->___U3CMaximumBufferSamplesCountU3Ek__BackingField_5 = L_0;
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int32_t Config_get_MaximumBufferSamplesCount_mFA9670050A7B57A5778B588CB400DBEB413DE4C0_inline (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_get_MaximumBufferSamplesCount_mFA9670050A7B57A5778B588CB400DBEB413DE4C0_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Config_get_MaximumBufferSamplesCount_mFA9670050A7B57A5778B588CB400DBEB413DE4C0_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5760));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5761));
	{
		// public static int MaximumBufferSamplesCount { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5762));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_0 = ((Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_StaticFields*)il2cpp_codegen_static_fields_for(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var))->___U3CMaximumBufferSamplesCountU3Ek__BackingField_5;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int32_t Config_get_SampleSizeInBytes_m8A59438CA870B1DEDA2DDE836BBF513D4DA6C209_inline (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_get_SampleSizeInBytes_m8A59438CA870B1DEDA2DDE836BBF513D4DA6C209_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Config_get_SampleSizeInBytes_m8A59438CA870B1DEDA2DDE836BBF513D4DA6C209_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5736));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5737));
	{
		// public static int SampleSizeInBytes { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5738));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_0 = ((Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_StaticFields*)il2cpp_codegen_static_fields_for(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var))->___U3CSampleSizeInBytesU3Ek__BackingField_1;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int32_t Config_get_SampleRateHz_m2D1B79A8EC0A19BA0EA97E6B3039D15788BB9F47_inline (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_get_SampleRateHz_m2D1B79A8EC0A19BA0EA97E6B3039D15788BB9F47_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Config_get_SampleRateHz_m2D1B79A8EC0A19BA0EA97E6B3039D15788BB9F47_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5730));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5731));
	{
		// public static int SampleRateHz { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5732));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_0 = ((Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_StaticFields*)il2cpp_codegen_static_fields_for(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var))->___U3CSampleRateHzU3Ek__BackingField_0;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int32_t Config_get_OptimalBufferSamplesCount_mBC971D5C4CF6F34A8A3925DC8103A09E3E8BF4F7_inline (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_get_OptimalBufferSamplesCount_mBC971D5C4CF6F34A8A3925DC8103A09E3E8BF4F7_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Config_get_OptimalBufferSamplesCount_mBC971D5C4CF6F34A8A3925DC8103A09E3E8BF4F7_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5754));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5755));
	{
		// public static int OptimalBufferSamplesCount { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5756));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_0 = ((Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_StaticFields*)il2cpp_codegen_static_fields_for(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var))->___U3COptimalBufferSamplesCountU3Ek__BackingField_4;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int32_t Config_get_MinimumSafeSamplesQueued_m479D3DEBCD5251637DC7FDE141FBECAC70DE5A1C_inline (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_get_MinimumSafeSamplesQueued_m479D3DEBCD5251637DC7FDE141FBECAC70DE5A1C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Config_get_MinimumSafeSamplesQueued_m479D3DEBCD5251637DC7FDE141FBECAC70DE5A1C_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5742));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5743));
	{
		// public static int MinimumSafeSamplesQueued { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5744));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_0 = ((Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_StaticFields*)il2cpp_codegen_static_fields_for(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var))->___U3CMinimumSafeSamplesQueuedU3Ek__BackingField_2;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* ClipPlaybackTracker_get_Clip_m5F7BF9A75928114403808D29DCF2E00243A5D87A_inline (ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ClipPlaybackTracker_get_Clip_m5F7BF9A75928114403808D29DCF2E00243A5D87A_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ClipPlaybackTracker_get_Clip_m5F7BF9A75928114403808D29DCF2E00243A5D87A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6174));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6175));
	{
		// public OVRHapticsClip Clip { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6176));
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_0 = __this->___U3CClipU3Ek__BackingField_1;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int32_t OVRHapticsClip_get_Count_mF6DCD041E169A35A5B208FE92AEE5D47269F107E_inline (OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_get_Count_mF6DCD041E169A35A5B208FE92AEE5D47269F107E_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHapticsClip_get_Count_mF6DCD041E169A35A5B208FE92AEE5D47269F107E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6188));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6189));
	{
		// public int Count { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6190));
		int32_t L_0 = __this->___U3CCountU3Ek__BackingField_0;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int32_t ClipPlaybackTracker_get_ReadCount_m5CB89D120FC361680A8450515CA02357D2879191_inline (ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ClipPlaybackTracker_get_ReadCount_m5CB89D120FC361680A8450515CA02357D2879191_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ClipPlaybackTracker_get_ReadCount_m5CB89D120FC361680A8450515CA02357D2879191_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6168));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6169));
	{
		// public int ReadCount { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6170));
		int32_t L_0 = __this->___U3CReadCountU3Ek__BackingField_0;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* OVRHapticsClip_get_Samples_m433E8160F5A8874E4AC7972406FB0CC146AC74BE_inline (OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_get_Samples_m433E8160F5A8874E4AC7972406FB0CC146AC74BE_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHapticsClip_get_Samples_m433E8160F5A8874E4AC7972406FB0CC146AC74BE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6200));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6201));
	{
		// public byte[] Samples { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6202));
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_0 = __this->___U3CSamplesU3Ek__BackingField_2;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void ClipPlaybackTracker_set_ReadCount_m5BA54F5A69408488A59C5FFA2DE454E199469671_inline (ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ClipPlaybackTracker_set_ReadCount_m5BA54F5A69408488A59C5FFA2DE454E199469671_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ClipPlaybackTracker_set_ReadCount_m5BA54F5A69408488A59C5FFA2DE454E199469671_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6171));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6172));
	{
		// public int ReadCount { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6173));
		int32_t L_0 = ___0_value;
		__this->___U3CReadCountU3Ek__BackingField_0 = L_0;
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int32_t Config_get_MinimumBufferSamplesCount_m27DBFB9FEA1CB7EF08AC8C62B2F7B99CF1B9457C_inline (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_get_MinimumBufferSamplesCount_m27DBFB9FEA1CB7EF08AC8C62B2F7B99CF1B9457C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Config_get_MinimumBufferSamplesCount_m27DBFB9FEA1CB7EF08AC8C62B2F7B99CF1B9457C_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5748));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 5749));
	{
		// public static int MinimumBufferSamplesCount { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 5750));
		il2cpp_codegen_runtime_class_init_inline(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var);
		int32_t L_0 = ((Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_StaticFields*)il2cpp_codegen_static_fields_for(Config_tBB31557219CCC3C5813D03CA13CADC73D7E14EF2_il2cpp_TypeInfo_var))->___U3CMinimumBufferSamplesCountU3Ek__BackingField_3;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int32_t Mathf_Clamp_m4DC36EEFDBE5F07C16249DA568023C5ECCFF0E7B_inline (int32_t ___0_value, int32_t ___1_min, int32_t ___2_max, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Mathf_Clamp_m4DC36EEFDBE5F07C16249DA568023C5ECCFF0E7B_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	int32_t V_2 = 0;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value), (&___1_min), (&___2_max));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Mathf_Clamp_m4DC36EEFDBE5F07C16249DA568023C5ECCFF0E7B_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 10248));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 10249));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 10250));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 10251));
		int32_t L_0 = ___0_value;
		int32_t L_1 = ___1_min;
		V_0 = (bool)((((int32_t)L_0) < ((int32_t)L_1))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 10252));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_000e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 10253));
		int32_t L_3 = ___1_min;
		___0_value = L_3;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 10254));
		goto IL_0019;
	}

IL_000e:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 10255));
		int32_t L_4 = ___0_value;
		int32_t L_5 = ___2_max;
		V_1 = (bool)((((int32_t)L_4) > ((int32_t)L_5))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 10256));
		bool L_6 = V_1;
		if (!L_6)
		{
			goto IL_0019;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 10257));
		int32_t L_7 = ___2_max;
		___0_value = L_7;
	}

IL_0019:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 10258));
		int32_t L_8 = ___0_value;
		V_2 = L_8;
		goto IL_001d;
	}

IL_001d:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 10259));
		int32_t L_9 = V_2;
		return L_9;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void ClipPlaybackTracker_set_Clip_mA7D1F4B5FBE77EFC6F6FD27C4ED45DC65B8CD5ED_inline (ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B* __this, OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ClipPlaybackTracker_set_Clip_mA7D1F4B5FBE77EFC6F6FD27C4ED45DC65B8CD5ED_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ClipPlaybackTracker_tE311D8396BEABBFDE613AAB1A13FE30D1A6FA75B_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ClipPlaybackTracker_set_Clip_mA7D1F4B5FBE77EFC6F6FD27C4ED45DC65B8CD5ED_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6177));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6178));
	{
		// public OVRHapticsClip Clip { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6179));
		OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* L_0 = ___0_value;
		__this->___U3CClipU3Ek__BackingField_1 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CClipU3Ek__BackingField_1), (void*)L_0);
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void OVRHapticsClip_set_Capacity_m0648341A0AFFFE4D146AE0A3EFAC23B70AA739B0_inline (OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_set_Capacity_m0648341A0AFFFE4D146AE0A3EFAC23B70AA739B0_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHapticsClip_set_Capacity_m0648341A0AFFFE4D146AE0A3EFAC23B70AA739B0_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6197));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6198));
	{
		// public int Capacity { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6199));
		int32_t L_0 = ___0_value;
		__this->___U3CCapacityU3Ek__BackingField_1 = L_0;
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int32_t OVRHapticsClip_get_Capacity_mB9F5A181D3C9F8208F229AE0A8734C9E18F22A7C_inline (OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_get_Capacity_mB9F5A181D3C9F8208F229AE0A8734C9E18F22A7C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHapticsClip_get_Capacity_mB9F5A181D3C9F8208F229AE0A8734C9E18F22A7C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6194));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6195));
	{
		// public int Capacity { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6196));
		int32_t L_0 = __this->___U3CCapacityU3Ek__BackingField_1;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void OVRHapticsClip_set_Samples_mE62A59340D856612957FB1381FCACDE676702A70_inline (OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* __this, ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_set_Samples_mE62A59340D856612957FB1381FCACDE676702A70_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHapticsClip_set_Samples_mE62A59340D856612957FB1381FCACDE676702A70_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6203));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6204));
	{
		// public byte[] Samples { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6205));
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_0 = ___0_value;
		__this->___U3CSamplesU3Ek__BackingField_2 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CSamplesU3Ek__BackingField_2), (void*)L_0);
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void OVRHapticsClip_set_Count_m174C326E1966E50541CE7774619B508BC732B810_inline (OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_set_Count_m174C326E1966E50541CE7774619B508BC732B810_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRHapticsClip_t76F18B7843EDB06C61DE1DBA343216CEB5BE2E8C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRHapticsClip_set_Count_m174C326E1966E50541CE7774619B508BC732B810_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6191));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 6192));
	{
		// public int Count { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 6193));
		int32_t L_0 = ___0_value;
		__this->___U3CCountU3Ek__BackingField_0 = L_0;
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR float Mathf_Clamp01_mA7E048DBDA832D399A581BE4D6DED9FA44CE0F14_inline (float ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Mathf_Clamp01_mA7E048DBDA832D399A581BE4D6DED9FA44CE0F14_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	float V_1 = 0.0f;
	bool V_2 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Mathf_Clamp01_mA7E048DBDA832D399A581BE4D6DED9FA44CE0F14_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 10260));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 10261));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 10262));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 10263));
		float L_0 = ___0_value;
		V_0 = (bool)((((float)L_0) < ((float)(0.0f)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 10264));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0015;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 10265));
		V_1 = (0.0f);
		goto IL_002d;
	}

IL_0015:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 10266));
		float L_2 = ___0_value;
		V_2 = (bool)((((float)L_2) > ((float)(1.0f)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 10267));
		bool L_3 = V_2;
		if (!L_3)
		{
			goto IL_0029;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 10268));
		V_1 = (1.0f);
		goto IL_002d;
	}

IL_0029:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 10269));
		float L_4 = ___0_value;
		V_1 = L_4;
		goto IL_002d;
	}

IL_002d:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 10270));
		float L_5 = V_1;
		return L_5;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR float Mathf_Max_mF5379E63D2BBAC76D090748695D833934F8AD051_inline (float ___0_a, float ___1_b, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Mathf_Max_mF5379E63D2BBAC76D090748695D833934F8AD051_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_a), (&___1_b));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Mathf_Max_mF5379E63D2BBAC76D090748695D833934F8AD051_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 10147));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 10148));
	float G_B3_0 = 0.0f;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 10149));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 10150));
		float L_0 = ___0_a;
		float L_1 = ___1_b;
		if ((((float)L_0) > ((float)L_1)))
		{
			goto IL_0008;
		}
	}
	{
		float L_2 = ___1_b;
		G_B3_0 = L_2;
		goto IL_0009;
	}

IL_0008:
	{
		float L_3 = ___0_a;
		G_B3_0 = L_3;
	}

IL_0009:
	{
		V_0 = G_B3_0;
		goto IL_000c;
	}

IL_000c:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 10151));
		float L_4 = V_0;
		return L_4;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Vector3_get_zero_m0C1249C3F25B1C70EAD3CC8B31259975A457AE39_inline (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector3_get_zero_m0C1249C3F25B1C70EAD3CC8B31259975A457AE39_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Vector3_get_zero_m0C1249C3F25B1C70EAD3CC8B31259975A457AE39_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9303));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9304));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9305));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9306));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_0 = ((Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2_StaticFields*)il2cpp_codegen_static_fields_for(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2_il2cpp_TypeInfo_var))->___zeroVector_5;
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9307));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_1 = V_0;
		return L_1;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 Quaternion_get_identity_m7E701AE095ED10FD5EA0B50ABCFDE2EEFF2173A5_inline (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Quaternion_get_identity_m7E701AE095ED10FD5EA0B50ABCFDE2EEFF2173A5_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Quaternion_get_identity_m7E701AE095ED10FD5EA0B50ABCFDE2EEFF2173A5_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9833));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9834));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9835));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9836));
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_0 = ((Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974_StaticFields*)il2cpp_codegen_static_fields_for(Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974_il2cpp_TypeInfo_var))->___identityQuaternion_4;
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9837));
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_1 = V_0;
		return L_1;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 Vector2_get_zero_m32506C40EC2EE7D5D4410BF40D3EE683A3D5F32C_inline (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector2_get_zero_m32506C40EC2EE7D5D4410BF40D3EE683A3D5F32C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Vector2_get_zero_m32506C40EC2EE7D5D4410BF40D3EE683A3D5F32C_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8319));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8320));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8321));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8322));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_0 = ((Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7_StaticFields*)il2cpp_codegen_static_fields_for(Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7_il2cpp_TypeInfo_var))->___zeroVector_2;
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8323));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_1 = V_0;
		return L_1;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7* __this, float ___0_x, float ___1_y, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_x), (&___1_y));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8117));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8118));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8119));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8120));
		float L_0 = ___0_x;
		__this->___x_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8121));
		float L_1 = ___1_y;
		__this->___y_1 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8122));
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR float Vector2_get_sqrMagnitude_mA16336720C14EEF8BA9B55AE33B98C9EE2082BDC_inline (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector2_get_sqrMagnitude_mA16336720C14EEF8BA9B55AE33B98C9EE2082BDC_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Vector2_get_sqrMagnitude_mA16336720C14EEF8BA9B55AE33B98C9EE2082BDC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8220));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8221));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8222));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8223));
		float L_0 = __this->___x_0;
		float L_1 = __this->___x_0;
		float L_2 = __this->___y_1;
		float L_3 = __this->___y_1;
		V_0 = ((float)il2cpp_codegen_add(((float)il2cpp_codegen_multiply(L_0, L_1)), ((float)il2cpp_codegen_multiply(L_2, L_3))));
		goto IL_001f;
	}

IL_001f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8224));
		float L_4 = V_0;
		return L_4;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR float Vector2_get_magnitude_m5C59B4056420AEFDB291AD0914A3F675330A75CE_inline (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Math_tEB65DE7CA8B083C412C969C92981C030865486CE_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector2_get_magnitude_m5C59B4056420AEFDB291AD0914A3F675330A75CE_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Vector2_get_magnitude_m5C59B4056420AEFDB291AD0914A3F675330A75CE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8214));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8215));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8216));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8217));
		float L_0 = __this->___x_0;
		float L_1 = __this->___x_0;
		float L_2 = __this->___y_1;
		float L_3 = __this->___y_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8218));
		il2cpp_codegen_runtime_class_init_inline(Math_tEB65DE7CA8B083C412C969C92981C030865486CE_il2cpp_TypeInfo_var);
		double L_4;
		L_4 = sqrt(((double)((float)il2cpp_codegen_add(((float)il2cpp_codegen_multiply(L_0, L_1)), ((float)il2cpp_codegen_multiply(L_2, L_3))))));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8218));
		V_0 = ((float)L_4);
		goto IL_0026;
	}

IL_0026:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8219));
		float L_5 = V_0;
		return L_5;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 Vector2_op_Multiply_m2D984B613020089BF5165BA4CA10988E2DC771FE_inline (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___0_a, float ___1_d, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector2_op_Multiply_m2D984B613020089BF5165BA4CA10988E2DC771FE_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_a), (&___1_d));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Vector2_op_Multiply_m2D984B613020089BF5165BA4CA10988E2DC771FE_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8276));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8277));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8278));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8279));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_0 = ___0_a;
		float L_1 = L_0.___x_0;
		float L_2 = ___1_d;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_3 = ___0_a;
		float L_4 = L_3.___y_1;
		float L_5 = ___1_d;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8280));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_6;
		memset((&L_6), 0, sizeof(L_6));
		Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline((&L_6), ((float)il2cpp_codegen_multiply(L_1, L_2)), ((float)il2cpp_codegen_multiply(L_4, L_5)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8280));
		V_0 = L_6;
		goto IL_0019;
	}

IL_0019:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8281));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_7 = V_0;
		return L_7;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 Vector2_get_normalized_mF6722883AEFB5027690A778DF8ACC20F0FA65297_inline (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector2_get_normalized_mF6722883AEFB5027690A778DF8ACC20F0FA65297_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 V_0;
	memset((&V_0), 0, sizeof(V_0));
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Vector2_get_normalized_mF6722883AEFB5027690A778DF8ACC20F0FA65297_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8156));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8157));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8158));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8159));
		float L_0 = __this->___x_0;
		float L_1 = __this->___y_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8160));
		Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline((&V_0), L_0, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8160));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8161));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8162));
		Vector2_Normalize_m56DABCAB5967DF37A6B96710477D3660D800C652_inline((&V_0), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8162));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8163));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_2 = V_0;
		V_1 = L_2;
		goto IL_0020;
	}

IL_0020:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8164));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_3 = V_1;
		return L_3;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 Quaternion_Euler_m5BCCC19216CFAD2426F15BC51A30421880D27B73_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___0_euler, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Quaternion_Euler_m5BCCC19216CFAD2426F15BC51A30421880D27B73_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_euler));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Quaternion_Euler_m5BCCC19216CFAD2426F15BC51A30421880D27B73_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9956));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9957));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9958));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9959));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_0 = ___0_euler;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9960));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_1;
		L_1 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_0, (0.0174532924f), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9960));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9961));
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_2;
		L_2 = Quaternion_Internal_FromEulerRad_m66D4475341F53949471E6870FB5C5E4A5E9BA93E(L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9961));
		V_0 = L_2;
		goto IL_0014;
	}

IL_0014:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9962));
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_3 = V_0;
		return L_3;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR bool Vector3_op_Inequality_m9F170CDFBF1E490E559DA5D06D6547501A402BBF_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___0_lhs, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___1_rhs, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector3_op_Inequality_m9F170CDFBF1E490E559DA5D06D6547501A402BBF_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_lhs), (&___1_rhs));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Vector3_op_Inequality_m9F170CDFBF1E490E559DA5D06D6547501A402BBF_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9388));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9389));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9390));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9391));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_0 = ___0_lhs;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_1 = ___1_rhs;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9392));
		bool L_2;
		L_2 = Vector3_op_Equality_mCDCBB8D2EDC3D3BF20F31A25ACB34705D352B479_inline(L_0, L_1, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9392));
		V_0 = (bool)((((int32_t)L_2) == ((int32_t)0))? 1 : 0);
		goto IL_000e;
	}

IL_000e:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9393));
		bool L_3 = V_0;
		return L_3;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 Quaternion_Euler_m9262AB29E3E9CE94EF71051F38A28E82AEC73F90_inline (float ___0_x, float ___1_y, float ___2_z, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Quaternion_Euler_m9262AB29E3E9CE94EF71051F38A28E82AEC73F90_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_x), (&___1_y), (&___2_z));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Quaternion_Euler_m9262AB29E3E9CE94EF71051F38A28E82AEC73F90_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9948));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9949));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9950));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9951));
		float L_0 = ___0_x;
		float L_1 = ___1_y;
		float L_2 = ___2_z;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9952));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_3;
		memset((&L_3), 0, sizeof(L_3));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_3), L_0, L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9952));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9953));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_4;
		L_4 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_3, (0.0174532924f), NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9953));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9954));
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_5;
		L_5 = Quaternion_Internal_FromEulerRad_m66D4475341F53949471E6870FB5C5E4A5E9BA93E(L_4, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9954));
		V_0 = L_5;
		goto IL_001b;
	}

IL_001b:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9955));
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_6 = V_0;
		return L_6;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int32_t String_get_Length_m42625D67623FA5CC7A44D47425CE86FB946542D2_inline (String_t* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&String_get_Length_m42625D67623FA5CC7A44D47425CE86FB946542D2_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, String_get_Length_m42625D67623FA5CC7A44D47425CE86FB946542D2_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		int32_t L_0 = __this->____stringLength_4;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* OVRManager_get_instance_m642500A467C7D7B5B1C2763F2BA90C52BBF5381C_inline (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_instance_m642500A467C7D7B5B1C2763F2BA90C52BBF5381C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_instance_m642500A467C7D7B5B1C2763F2BA90C52BBF5381C_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9531));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9532));
	{
		// public static OVRManager instance { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9533));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___U3CinstanceU3Ek__BackingField_4;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void OVRManager_set_instance_m268BE0B7206FEB81BA8B8EB5221AB2BA10E91E0E_inline (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_instance_m268BE0B7206FEB81BA8B8EB5221AB2BA10E91E0E_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_instance_m268BE0B7206FEB81BA8B8EB5221AB2BA10E91E0E_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9534));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9535));
	{
		// public static OVRManager instance { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9536));
		OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* L_0 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___U3CinstanceU3Ek__BackingField_4 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___U3CinstanceU3Ek__BackingField_4), (void*)L_0);
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void OVRManager_set_runtimeSettings_m66D09D518E906F1A50738B3BFA760EE8B117C469_inline (OVRRuntimeSettings_tC85E84DCFBF4DB2D4C3311CA39C96DEE89220EE1* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_runtimeSettings_m66D09D518E906F1A50738B3BFA760EE8B117C469_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_runtimeSettings_m66D09D518E906F1A50738B3BFA760EE8B117C469_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9558));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9559));
	{
		// public static OVRRuntimeSettings runtimeSettings { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9560));
		OVRRuntimeSettings_tC85E84DCFBF4DB2D4C3311CA39C96DEE89220EE1* L_0 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___U3CruntimeSettingsU3Ek__BackingField_8 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___U3CruntimeSettingsU3Ek__BackingField_8), (void*)L_0);
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void OVRManager_set_isSupportedPlatform_mE8A33FC72544A424CC63ACAF84F71CEC1EC9CE6F_inline (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, bool ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_isSupportedPlatform_mE8A33FC72544A424CC63ACAF84F71CEC1EC9CE6F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_isSupportedPlatform_mE8A33FC72544A424CC63ACAF84F71CEC1EC9CE6F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10437));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10438));
	{
		// public bool isSupportedPlatform { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10439));
		bool L_0 = ___0_value;
		__this->___U3CisSupportedPlatformU3Ek__BackingField_102 = L_0;
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR bool OVRManager_get_isSupportedPlatform_m6AE0B37666BB1660CCFC7F9EAD30E550C5D7FBFA_inline (OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_isSupportedPlatform_m6AE0B37666BB1660CCFC7F9EAD30E550C5D7FBFA_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_isSupportedPlatform_m6AE0B37666BB1660CCFC7F9EAD30E550C5D7FBFA_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10434));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 10435));
	{
		// public bool isSupportedPlatform { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 10436));
		bool L_0 = __this->___U3CisSupportedPlatformU3Ek__BackingField_102;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27* OVRManager_get_display_m1D17D6867547AC786E00A4CF60B863275AC1AF3D_inline (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_display_m1D17D6867547AC786E00A4CF60B863275AC1AF3D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_display_m1D17D6867547AC786E00A4CF60B863275AC1AF3D_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9537));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9538));
	{
		// public static OVRDisplay display { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9539));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___U3CdisplayU3Ek__BackingField_5;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR OVRRuntimeSettings_tC85E84DCFBF4DB2D4C3311CA39C96DEE89220EE1* OVRManager_get_runtimeSettings_m6DFAF39BFB4B75B251235D43B02696D70BFA897A_inline (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_runtimeSettings_m6DFAF39BFB4B75B251235D43B02696D70BFA897A_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_runtimeSettings_m6DFAF39BFB4B75B251235D43B02696D70BFA897A_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9555));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9556));
	{
		// public static OVRRuntimeSettings runtimeSettings { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9557));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRRuntimeSettings_tC85E84DCFBF4DB2D4C3311CA39C96DEE89220EE1* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___U3CruntimeSettingsU3Ek__BackingField_8;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void OVRManager_set_display_mAD68A004132C01084A443254AC164FD31BCDFE6B_inline (OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_display_mAD68A004132C01084A443254AC164FD31BCDFE6B_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_display_mAD68A004132C01084A443254AC164FD31BCDFE6B_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9540));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9541));
	{
		// public static OVRDisplay display { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9542));
		OVRDisplay_t1518043CC531CD088400F80558DF7A849ECA2D27* L_0 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___U3CdisplayU3Ek__BackingField_5 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___U3CdisplayU3Ek__BackingField_5), (void*)L_0);
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR OVRTracker_t5E60EE08D82308F2F8206AD43AE8CC4925938154* OVRManager_get_tracker_mA945BED7BDB670E0F82A7EAD0A401651C8605259_inline (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_tracker_mA945BED7BDB670E0F82A7EAD0A401651C8605259_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_tracker_mA945BED7BDB670E0F82A7EAD0A401651C8605259_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9543));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9544));
	{
		// public static OVRTracker tracker { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9545));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRTracker_t5E60EE08D82308F2F8206AD43AE8CC4925938154* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___U3CtrackerU3Ek__BackingField_6;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void OVRManager_set_tracker_m50D4C4C76BA97D4775D75620D4CC033398E72433_inline (OVRTracker_t5E60EE08D82308F2F8206AD43AE8CC4925938154* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_tracker_m50D4C4C76BA97D4775D75620D4CC033398E72433_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_tracker_m50D4C4C76BA97D4775D75620D4CC033398E72433_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9546));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9547));
	{
		// public static OVRTracker tracker { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9548));
		OVRTracker_t5E60EE08D82308F2F8206AD43AE8CC4925938154* L_0 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___U3CtrackerU3Ek__BackingField_6 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___U3CtrackerU3Ek__BackingField_6), (void*)L_0);
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR OVRBoundary_t56DFE91F758A740A34575D748FEC61959A106DAE* OVRManager_get_boundary_m7495B93002198ABB5346F3F696712133AF7EA943_inline (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_get_boundary_m7495B93002198ABB5346F3F696712133AF7EA943_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_get_boundary_m7495B93002198ABB5346F3F696712133AF7EA943_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9549));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9550));
	{
		// public static OVRBoundary boundary { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9551));
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		OVRBoundary_t56DFE91F758A740A34575D748FEC61959A106DAE* L_0 = ((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___U3CboundaryU3Ek__BackingField_7;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void OVRManager_set_boundary_mCEFC4DA00ED1094A5758AC15FF744BDC4B6091E4_inline (OVRBoundary_t56DFE91F758A740A34575D748FEC61959A106DAE* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_set_boundary_mCEFC4DA00ED1094A5758AC15FF744BDC4B6091E4_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_value));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRManager_set_boundary_mCEFC4DA00ED1094A5758AC15FF744BDC4B6091E4_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9552));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 9553));
	{
		// public static OVRBoundary boundary { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 9554));
		OVRBoundary_t56DFE91F758A740A34575D748FEC61959A106DAE* L_0 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var);
		((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___U3CboundaryU3Ek__BackingField_7 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&((OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_StaticFields*)il2cpp_codegen_static_fields_for(OVRManager_t21429E69CA88C5E9C6EE3AAB75EAFBE6E1B129D4_il2cpp_TypeInfo_var))->___U3CboundaryU3Ek__BackingField_7), (void*)L_0);
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Action_Invoke_m7126A54DACA72B845424072887B5F3A51FC3808E_inline (Action_tD00B0A84D7945E50C2DFFC28EFEE6ED44ED2AD07* __this, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* OVRCameraRig_get_trackingSpace_m76339871C7804C1BD14283FBF3D91268D4D87550_inline (OVRCameraRig_t7FC2BB0D30DED2B7F0C8914AF2B66E9F4CF891A9* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRCameraRig_get_trackingSpace_m76339871C7804C1BD14283FBF3D91268D4D87550_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&OVRCameraRig_t7FC2BB0D30DED2B7F0C8914AF2B66E9F4CF891A9_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OVRCameraRig_get_trackingSpace_m76339871C7804C1BD14283FBF3D91268D4D87550_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 1299));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsOculus_VR + 1300));
	{
		// public Transform trackingSpace { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsOculus_VR + 1301));
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_0 = __this->___U3CtrackingSpaceU3Ek__BackingField_4;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Color_tD001788D726C3A7F1379BEED0260B9591F440C1F Color_get_green_mEB001F2CD8C68C6BBAEF9101990B779D3AA2A6EF_inline (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Color_get_green_mEB001F2CD8C68C6BBAEF9101990B779D3AA2A6EF_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Color_tD001788D726C3A7F1379BEED0260B9591F440C1F_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	Color_tD001788D726C3A7F1379BEED0260B9591F440C1F V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Color_get_green_mEB001F2CD8C68C6BBAEF9101990B779D3AA2A6EF_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9620));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9621));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9622));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9623));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9624));
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_0;
		memset((&L_0), 0, sizeof(L_0));
		Color__ctor_m3786F0D6E510D9CFA544523A955870BD2A514C8C_inline((&L_0), (0.0f), (1.0f), (0.0f), (1.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9624));
		V_0 = L_0;
		goto IL_001d;
	}

IL_001d:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9625));
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_1 = V_0;
		return L_1;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Color_tD001788D726C3A7F1379BEED0260B9591F440C1F Color_get_clear_m02E023A7D396B973288B3915F6F24FBF7E0DC81D_inline (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Color_get_clear_m02E023A7D396B973288B3915F6F24FBF7E0DC81D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Color_tD001788D726C3A7F1379BEED0260B9591F440C1F_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	Color_tD001788D726C3A7F1379BEED0260B9591F440C1F V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Color_get_clear_m02E023A7D396B973288B3915F6F24FBF7E0DC81D_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9668));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9669));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9670));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9671));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9672));
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_0;
		memset((&L_0), 0, sizeof(L_0));
		Color__ctor_m3786F0D6E510D9CFA544523A955870BD2A514C8C_inline((&L_0), (0.0f), (0.0f), (0.0f), (0.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9672));
		V_0 = L_0;
		goto IL_001d;
	}

IL_001d:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9673));
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_1 = V_0;
		return L_1;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* __this, float ___0_x, float ___1_y, float ___2_z, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_x), (&___1_y), (&___2_z));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9089));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9090));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9091));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9092));
		float L_0 = ___0_x;
		__this->___x_2 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9093));
		float L_1 = ___1_y;
		__this->___y_3 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9094));
		float L_2 = ___2_z;
		__this->___z_4 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9095));
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int32_t List_1_get_Count_m4407E4C389F22B8CEC282C15D56516658746C383_gshared_inline (List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Count_m4407E4C389F22B8CEC282C15D56516658746C383_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, List_1_get_Count_m4407E4C389F22B8CEC282C15D56516658746C383_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		int32_t L_0 = (int32_t)__this->____size_2;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void List_1_Clear_m16C1F2C61FED5955F10EB36BC1CB2DF34B128994_gshared_inline (List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_Clear_m16C1F2C61FED5955F10EB36BC1CB2DF34B128994_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, List_1_Clear_m16C1F2C61FED5955F10EB36BC1CB2DF34B128994_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		int32_t L_0 = (int32_t)__this->____version_3;
		__this->____version_3 = ((int32_t)il2cpp_codegen_add(L_0, 1));
		if (!true)
		{
			goto IL_0035;
		}
	}
	{
		int32_t L_1 = (int32_t)__this->____size_2;
		V_0 = L_1;
		__this->____size_2 = 0;
		int32_t L_2 = V_0;
		if ((((int32_t)L_2) <= ((int32_t)0)))
		{
			goto IL_003c;
		}
	}
	{
		ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* L_3 = (ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918*)__this->____items_1;
		int32_t L_4 = V_0;
		Array_Clear_m50BAA3751899858B097D3FF2ED31F284703FE5CB((RuntimeArray*)L_3, 0, L_4, NULL);
		return;
	}

IL_0035:
	{
		__this->____size_2 = 0;
	}

IL_003c:
	{
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void List_1_Add_mEBCF994CC3814631017F46A387B1A192ED6C85C7_gshared_inline (List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D* __this, RuntimeObject* ___0_item, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_Add_mEBCF994CC3814631017F46A387B1A192ED6C85C7_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* V_0 = NULL;
	int32_t V_1 = 0;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, List_1_Add_mEBCF994CC3814631017F46A387B1A192ED6C85C7_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		int32_t L_0 = (int32_t)__this->____version_3;
		__this->____version_3 = ((int32_t)il2cpp_codegen_add(L_0, 1));
		ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* L_1 = (ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918*)__this->____items_1;
		V_0 = L_1;
		int32_t L_2 = (int32_t)__this->____size_2;
		V_1 = L_2;
		int32_t L_3 = V_1;
		ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* L_4 = V_0;
		NullCheck(L_4);
		if ((!(((uint32_t)L_3) < ((uint32_t)((int32_t)(((RuntimeArray*)L_4)->max_length))))))
		{
			goto IL_0034;
		}
	}
	{
		int32_t L_5 = V_1;
		__this->____size_2 = ((int32_t)il2cpp_codegen_add(L_5, 1));
		ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* L_6 = V_0;
		int32_t L_7 = V_1;
		RuntimeObject* L_8 = ___0_item;
		NullCheck(L_6);
		(L_6)->SetAt(static_cast<il2cpp_array_size_t>(L_7), (RuntimeObject*)L_8);
		return;
	}

IL_0034:
	{
		RuntimeObject* L_9 = ___0_item;
		((  void (*) (List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D*, RuntimeObject*, const RuntimeMethod*))il2cpp_codegen_get_method_pointer(il2cpp_rgctx_method(method->klass->rgctx_data, 11)))(__this, L_9, il2cpp_rgctx_method(method->klass->rgctx_data, 11));
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Action_2_Invoke_m50A62593A87E11ED31B47FE46E633AB3B9A7666C_gshared_inline (Action_2_t4195ED8D681728C29103F36BCD591C0F089C9132* __this, float ___0_arg1, float ___1_arg2, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, float, float, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_arg1, ___1_arg2, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Action_4_Invoke_mF83AC81DE351FE293937C4B759B549D9A6B68A70_gshared_inline (Action_4_t540B344FD589096100128D9A1B39946413ED9AAE* __this, uint64_t ___0_arg1, bool ___1_arg2, OVRSpace_tDA5A6DB241624CD5712AC4A71E565BA171985B4D ___2_arg3, Guid_t ___3_arg4, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, uint64_t, bool, OVRSpace_tDA5A6DB241624CD5712AC4A71E565BA171985B4D, Guid_t, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_arg1, ___1_arg2, ___2_arg3, ___3_arg4, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Action_6_Invoke_mFF8F298606B3E177DF933AE1788928F36BC92D0F_gshared_inline (Action_6_t275E8A8CA2AB323A9CF973B1A1BDD4C0D44F4F11* __this, uint64_t ___0_arg1, bool ___1_arg2, OVRSpace_tDA5A6DB241624CD5712AC4A71E565BA171985B4D ___2_arg3, Guid_t ___3_arg4, int32_t ___4_arg5, bool ___5_arg6, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, uint64_t, bool, OVRSpace_tDA5A6DB241624CD5712AC4A71E565BA171985B4D, Guid_t, int32_t, bool, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_arg1, ___1_arg2, ___2_arg3, ___3_arg4, ___4_arg5, ___5_arg6, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Action_1_Invoke_mD21E1BBC413B52214AE1643F8570EB10B0C004CF_gshared_inline (Action_1_t2F07B42BD085A4AC03ECE5676157E93B9A344C1C* __this, uint64_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, uint64_t, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_obj, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Action_2_Invoke_m5C4507B6E0477EDD49165F507099C83A696B6B20_gshared_inline (Action_2_tDBB3CA1E07CF34B6EE70F044CD209FED6BFD1D71* __this, uint64_t ___0_arg1, bool ___1_arg2, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, uint64_t, bool, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_arg1, ___1_arg2, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Action_4_Invoke_mD49299FEC5EDAE647F844D50183E3832DB459D6F_gshared_inline (Action_4_t4EDE5C99870C78676D9C651284E64891D8D4F58A* __this, uint64_t ___0_arg1, OVRSpace_tDA5A6DB241624CD5712AC4A71E565BA171985B4D ___1_arg2, bool ___2_arg3, Guid_t ___3_arg4, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, uint64_t, OVRSpace_tDA5A6DB241624CD5712AC4A71E565BA171985B4D, bool, Guid_t, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_arg1, ___1_arg2, ___2_arg3, ___3_arg4, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Action_4_Invoke_m6132B3D24664DAF3AD9A98C1C0311A8DA081927E_gshared_inline (Action_4_tDB193A5F94ADF5AFFE07E8A99813727D58BD9CBF* __this, uint64_t ___0_arg1, bool ___1_arg2, Guid_t ___2_arg3, int32_t ___3_arg4, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, uint64_t, bool, Guid_t, int32_t, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_arg1, ___1_arg2, ___2_arg3, ___3_arg4, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Action_2_Invoke_m8E9819A2536DE97B15561CFC230E9492FFE345C6_gshared_inline (Action_2_tA06B2B457987AFF44FCC9825F4E5B8AB831D9C5D* __this, uint64_t ___0_arg1, int32_t ___1_arg2, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, uint64_t, int32_t, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_arg1, ___1_arg2, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* Array_Empty_TisRuntimeObject_mFB8A63D602BB6974D31E20300D9EB89C6FE7C278_gshared_inline (const RuntimeMethod* method) 
{
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, method, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		il2cpp_codegen_runtime_class_init_inline(il2cpp_rgctx_data(method->rgctx_data, 0));
		ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* L_0 = ((EmptyArray_1_tDF0DD7256B115243AA6BD5558417387A734240EE_StaticFields*)il2cpp_codegen_static_fields_for(il2cpp_rgctx_data(method->rgctx_data, 0)))->___Value_0;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Vector2_Normalize_m56DABCAB5967DF37A6B96710477D3660D800C652_inline (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector2_Normalize_m56DABCAB5967DF37A6B96710477D3660D800C652_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Vector2_Normalize_m56DABCAB5967DF37A6B96710477D3660D800C652_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8143));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8144));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8145));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8146));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8147));
		float L_0;
		L_0 = Vector2_get_magnitude_m5C59B4056420AEFDB291AD0914A3F675330A75CE_inline(__this, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8147));
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8148));
		float L_1 = V_0;
		V_1 = (bool)((((float)L_1) > ((float)(9.99999975E-06f)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8149));
		bool L_2 = V_1;
		if (!L_2)
		{
			goto IL_0028;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8150));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_3 = (*(Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7*)__this);
		float L_4 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8151));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_5;
		L_5 = Vector2_op_Division_m57A2DCD71E0CE7420851D705D1951F9238902AAB_inline(L_3, L_4, NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8151));
		*(Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7*)__this = L_5;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8152));
		goto IL_0033;
	}

IL_0028:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8153));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8154));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_6;
		L_6 = Vector2_get_zero_m32506C40EC2EE7D5D4410BF40D3EE683A3D5F32C_inline(NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8154));
		*(Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7*)__this = L_6;
	}

IL_0033:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8155));
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___0_a, float ___1_d, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_a), (&___1_d));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9361));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9362));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9363));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9364));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_0 = ___0_a;
		float L_1 = L_0.___x_2;
		float L_2 = ___1_d;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_3 = ___0_a;
		float L_4 = L_3.___y_3;
		float L_5 = ___1_d;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_6 = ___0_a;
		float L_7 = L_6.___z_4;
		float L_8 = ___1_d;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9365));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_9;
		memset((&L_9), 0, sizeof(L_9));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_9), ((float)il2cpp_codegen_multiply(L_1, L_2)), ((float)il2cpp_codegen_multiply(L_4, L_5)), ((float)il2cpp_codegen_multiply(L_7, L_8)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9365));
		V_0 = L_9;
		goto IL_0021;
	}

IL_0021:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9366));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_10 = V_0;
		return L_10;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR bool Vector3_op_Equality_mCDCBB8D2EDC3D3BF20F31A25ACB34705D352B479_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___0_lhs, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___1_rhs, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector3_op_Equality_mCDCBB8D2EDC3D3BF20F31A25ACB34705D352B479_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	float V_1 = 0.0f;
	float V_2 = 0.0f;
	float V_3 = 0.0f;
	bool V_4 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_lhs), (&___1_rhs));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Vector3_op_Equality_mCDCBB8D2EDC3D3BF20F31A25ACB34705D352B479_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9379));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9380));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9381));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9382));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_0 = ___0_lhs;
		float L_1 = L_0.___x_2;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_2 = ___1_rhs;
		float L_3 = L_2.___x_2;
		V_0 = ((float)il2cpp_codegen_subtract(L_1, L_3));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9383));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_4 = ___0_lhs;
		float L_5 = L_4.___y_3;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_6 = ___1_rhs;
		float L_7 = L_6.___y_3;
		V_1 = ((float)il2cpp_codegen_subtract(L_5, L_7));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9384));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_8 = ___0_lhs;
		float L_9 = L_8.___z_4;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_10 = ___1_rhs;
		float L_11 = L_10.___z_4;
		V_2 = ((float)il2cpp_codegen_subtract(L_9, L_11));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9385));
		float L_12 = V_0;
		float L_13 = V_0;
		float L_14 = V_1;
		float L_15 = V_1;
		float L_16 = V_2;
		float L_17 = V_2;
		V_3 = ((float)il2cpp_codegen_add(((float)il2cpp_codegen_add(((float)il2cpp_codegen_multiply(L_12, L_13)), ((float)il2cpp_codegen_multiply(L_14, L_15)))), ((float)il2cpp_codegen_multiply(L_16, L_17))));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9386));
		float L_18 = V_3;
		V_4 = (bool)((((float)L_18) < ((float)(9.99999944E-11f)))? 1 : 0);
		goto IL_0043;
	}

IL_0043:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9387));
		bool L_19 = V_4;
		return L_19;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Color__ctor_m3786F0D6E510D9CFA544523A955870BD2A514C8C_inline (Color_tD001788D726C3A7F1379BEED0260B9591F440C1F* __this, float ___0_r, float ___1_g, float ___2_b, float ___3_a, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Color__ctor_m3786F0D6E510D9CFA544523A955870BD2A514C8C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Color_tD001788D726C3A7F1379BEED0260B9591F440C1F_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_r), (&___1_g), (&___2_b), (&___3_a));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Color__ctor_m3786F0D6E510D9CFA544523A955870BD2A514C8C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9496));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9497));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9498));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9499));
		float L_0 = ___0_r;
		__this->___r_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9500));
		float L_1 = ___1_g;
		__this->___g_1 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9501));
		float L_2 = ___2_b;
		__this->___b_2 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9502));
		float L_3 = ___3_a;
		__this->___a_3 = L_3;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 9503));
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 Vector2_op_Division_m57A2DCD71E0CE7420851D705D1951F9238902AAB_inline (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___0_a, float ___1_d, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector2_op_Division_m57A2DCD71E0CE7420851D705D1951F9238902AAB_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7_0_0_0_var);
		s_Il2CppMethodInitialized = true;
	}
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___0_a), (&___1_d));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Vector2_op_Division_m57A2DCD71E0CE7420851D705D1951F9238902AAB_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8288));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8289));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8290));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8291));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_0 = ___0_a;
		float L_1 = L_0.___x_0;
		float L_2 = ___1_d;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_3 = ___0_a;
		float L_4 = L_3.___y_1;
		float L_5 = ___1_d;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8292));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_6;
		memset((&L_6), 0, sizeof(L_6));
		Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline((&L_6), ((float)(L_1/L_2)), ((float)(L_4/L_5)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8292));
		V_0 = L_6;
		goto IL_0019;
	}

IL_0019:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 8293));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_7 = V_0;
		return L_7;
	}
}
